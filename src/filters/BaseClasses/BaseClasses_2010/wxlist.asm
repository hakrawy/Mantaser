; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Downloads\MediaPoint\src\filters\BaseClasses\wxlist.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_IID_IAMFilterGraphCallback
CONST	SEGMENT
$SG81606 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'x', 00H, 'l', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, 00H, 00H
$SG81607 DB	'p', 00H, 'n', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG81642 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'x', 00H, 'l', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, 00H, 00H
$SG81643 DB	'p', 00H, 'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, 'N'
	DB	00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG81651 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'x', 00H, 'l', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, 00H, 00H
$SG81652 DB	'm', 00H, '_', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H
	DB	't', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H
	ORG $+2
$SG81710 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'x', 00H, 'l', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, 00H, 00H
$SG81711 DB	'p', 00H, 'A', 00H, 'f', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L'
	DB	00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG81723 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'x', 00H, 'l', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, 00H, 00H
$SG81724 DB	'p', 00H, 'B', 00H, 'e', 00H, 'f', 00H, 'o', 00H, 'r', 00H
	DB	'e', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U'
	DB	00H, 'L', 00H, 'L', 00H, 00H, 00H
$SG81745 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'x', 00H, 'l', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, 00H, 00H
$SG81746 DB	'p', 00H, 'B', 00H, 'e', 00H, 'f', 00H, 'o', 00H, 'r', 00H
	DB	'e', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U'
	DB	00H, 'L', 00H, 'L', 00H, 00H, 00H
$SG81758 DB	'.', 00H, '.', 00H, '\', 00H, 'w', 00H, 'x', 00H, 'l', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p'
	DB	00H, 00H, 00H
$SG81759 DB	'p', 00H, 'A', 00H, 'f', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L'
	DB	00H, 'L', 00H, 00H, 00H
CONST	ENDS
;	COMDAT _IID_IAMFilterGraphCallback
CONST	SEGMENT
_IID_IAMFilterGraphCallback DD 056a868fdH
	DW	0ad4H
	DW	011ceH
	DB	0b0H
	DB	0a3H
	DB	00H
	DB	020H
	DB	0afH
	DB	0bH
	DB	0a7H
	DB	070H
CONST	ENDS
PUBLIC	??0CNodeCache@CBaseList@@QAE@H@Z		; CBaseList::CNodeCache::CNodeCache
PUBLIC	??0CBaseList@@QAE@PA_WH@Z			; CBaseList::CBaseList
EXTRN	??1CBaseObject@@QAE@XZ:PROC			; CBaseObject::~CBaseObject
EXTRN	??0CBaseObject@@QAE@PB_W@Z:PROC			; CBaseObject::CBaseObject
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\wxlist.cpp
xdata$x	SEGMENT
__unwindtable$??0CBaseList@@QAE@PA_WH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CBaseList@@QAE@PA_WH@Z$0
__ehfuncinfo$??0CBaseList@@QAE@PA_WH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CBaseList@@QAE@PA_WH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT ??0CBaseList@@QAE@PA_WH@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pName$ = 8						; size = 4
_iItems$ = 12						; size = 4
??0CBaseList@@QAE@PA_WH@Z PROC				; CBaseList::CBaseList, COMDAT
; _this$ = ecx
; Line 90
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CBaseList@@QAE@PA_WH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseObject@@QAE@PB_W@Z		; CBaseObject::CBaseObject
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR _iItems$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CNodeCache@CBaseList@@QAE@H@Z	; CBaseList::CNodeCache::CNodeCache
; Line 91
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CBaseList@@QAE@PA_WH@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseObject@@QAE@XZ			; CBaseObject::~CBaseObject
__ehhandler$??0CBaseList@@QAE@PA_WH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CBaseList@@QAE@PA_WH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CBaseList@@QAE@PA_WH@Z ENDP				; CBaseList::CBaseList
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CNodeCache@CBaseList@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iCacheSize$ = 8					; size = 4
??0CNodeCache@CBaseList@@QAE@H@Z PROC			; CBaseList::CNodeCache::CNodeCache, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxlist.h
; Line 127
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iCacheSize$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CNodeCache@CBaseList@@QAE@H@Z ENDP			; CBaseList::CNodeCache::CNodeCache
_TEXT	ENDS
PUBLIC	??0CBaseList@@QAE@PA_W@Z			; CBaseList::CBaseList
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\wxlist.cpp
xdata$x	SEGMENT
__unwindtable$??0CBaseList@@QAE@PA_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CBaseList@@QAE@PA_W@Z$0
__ehfuncinfo$??0CBaseList@@QAE@PA_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CBaseList@@QAE@PA_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CBaseList@@QAE@PA_W@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pName$ = 8						; size = 4
??0CBaseList@@QAE@PA_W@Z PROC				; CBaseList::CBaseList, COMDAT
; _this$ = ecx
; Line 101
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CBaseList@@QAE@PA_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseObject@@QAE@PB_W@Z		; CBaseObject::CBaseObject
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CNodeCache@CBaseList@@QAE@H@Z	; CBaseList::CNodeCache::CNodeCache
; Line 102
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CBaseList@@QAE@PA_W@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseObject@@QAE@XZ			; CBaseObject::~CBaseObject
__ehhandler$??0CBaseList@@QAE@PA_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CBaseList@@QAE@PA_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CBaseList@@QAE@PA_W@Z ENDP				; CBaseList::CBaseList
PUBLIC	??0CBaseList@@QAE@PADH@Z			; CBaseList::CBaseList
EXTRN	??0CBaseObject@@QAE@PBD@Z:PROC			; CBaseObject::CBaseObject
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CBaseList@@QAE@PADH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CBaseList@@QAE@PADH@Z$0
__ehfuncinfo$??0CBaseList@@QAE@PADH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CBaseList@@QAE@PADH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CBaseList@@QAE@PADH@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pName$ = 8						; size = 4
_iItems$ = 12						; size = 4
??0CBaseList@@QAE@PADH@Z PROC				; CBaseList::CBaseList, COMDAT
; _this$ = ecx
; Line 114
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CBaseList@@QAE@PADH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseObject@@QAE@PBD@Z		; CBaseObject::CBaseObject
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR _iItems$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CNodeCache@CBaseList@@QAE@H@Z	; CBaseList::CNodeCache::CNodeCache
; Line 115
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CBaseList@@QAE@PADH@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseObject@@QAE@XZ			; CBaseObject::~CBaseObject
__ehhandler$??0CBaseList@@QAE@PADH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CBaseList@@QAE@PADH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CBaseList@@QAE@PADH@Z ENDP				; CBaseList::CBaseList
PUBLIC	??0CBaseList@@QAE@PAD@Z				; CBaseList::CBaseList
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CBaseList@@QAE@PAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CBaseList@@QAE@PAD@Z$0
__ehfuncinfo$??0CBaseList@@QAE@PAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CBaseList@@QAE@PAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CBaseList@@QAE@PAD@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pName$ = 8						; size = 4
??0CBaseList@@QAE@PAD@Z PROC				; CBaseList::CBaseList, COMDAT
; _this$ = ecx
; Line 125
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CBaseList@@QAE@PAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseObject@@QAE@PBD@Z		; CBaseObject::CBaseObject
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CNodeCache@CBaseList@@QAE@H@Z	; CBaseList::CNodeCache::CNodeCache
; Line 126
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CBaseList@@QAE@PAD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseObject@@QAE@XZ			; CBaseObject::~CBaseObject
__ehhandler$??0CBaseList@@QAE@PAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CBaseList@@QAE@PAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CBaseList@@QAE@PAD@Z ENDP				; CBaseList::CBaseList
PUBLIC	??1CNodeCache@CBaseList@@QAE@XZ			; CBaseList::CNodeCache::~CNodeCache
PUBLIC	?RemoveAll@CBaseList@@QAEXXZ			; CBaseList::RemoveAll
PUBLIC	??1CBaseList@@QAE@XZ				; CBaseList::~CBaseList
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CBaseList@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CBaseList@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CBaseList@@QAE@XZ$1
__ehfuncinfo$??1CBaseList@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CBaseList@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CBaseList@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CBaseList@@QAE@XZ PROC				; CBaseList::~CBaseList, COMDAT
; _this$ = ecx
; Line 137
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CBaseList@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 140
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAll@CBaseList@@QAEXXZ		; CBaseList::RemoveAll
; Line 142
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1CNodeCache@CBaseList@@QAE@XZ		; CBaseList::CNodeCache::~CNodeCache
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBaseObject@@QAE@XZ			; CBaseObject::~CBaseObject
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CBaseList@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseObject@@QAE@XZ			; CBaseObject::~CBaseObject
__unwindfunclet$??1CBaseList@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1CNodeCache@CBaseList@@QAE@XZ		; CBaseList::CNodeCache::~CNodeCache
__ehhandler$??1CBaseList@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CBaseList@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CBaseList@@QAE@XZ ENDP				; CBaseList::~CBaseList
PUBLIC	??_GCNode@CBaseList@@QAEPAXI@Z			; CBaseList::CNode::`scalar deleting destructor'
PUBLIC	?Next@CNode@CBaseList@@QBEPAV12@XZ		; CBaseList::CNode::Next
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CNodeCache@CBaseList@@QAE@XZ
_TEXT	SEGMENT
tv72 = -24						; size = 4
$T82187 = -20						; size = 4
$T82186 = -16						; size = 4
_pCurrent$75726 = -12					; size = 4
_pNode$ = -8						; size = 4
_this$ = -4						; size = 4
??1CNodeCache@CBaseList@@QAE@XZ PROC			; CBaseList::CNodeCache::~CNodeCache, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxlist.h
; Line 128
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 129
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _pNode$[ebp], ecx
$LN2@CNodeCache:
; Line 130
	cmp	DWORD PTR _pNode$[ebp], 0
	je	SHORT $LN3@CNodeCache
; Line 131
	mov	edx, DWORD PTR _pNode$[ebp]
	mov	DWORD PTR _pCurrent$75726[ebp], edx
; Line 132
	mov	ecx, DWORD PTR _pNode$[ebp]
	call	?Next@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Next
	mov	DWORD PTR _pNode$[ebp], eax
; Line 133
	mov	eax, DWORD PTR _pCurrent$75726[ebp]
	mov	DWORD PTR $T82187[ebp], eax
	mov	ecx, DWORD PTR $T82187[ebp]
	mov	DWORD PTR $T82186[ebp], ecx
	cmp	DWORD PTR $T82186[ebp], 0
	je	SHORT $LN5@CNodeCache
	push	1
	mov	ecx, DWORD PTR $T82186[ebp]
	call	??_GCNode@CBaseList@@QAEPAXI@Z
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN6@CNodeCache
$LN5@CNodeCache:
	mov	DWORD PTR tv72[ebp], 0
$LN6@CNodeCache:
; Line 134
	jmp	SHORT $LN2@CNodeCache
$LN3@CNodeCache:
; Line 135
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CNodeCache@CBaseList@@QAE@XZ ENDP			; CBaseList::CNodeCache::~CNodeCache
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Next@CNode@CBaseList@@QBEPAV12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Next@CNode@CBaseList@@QBEPAV12@XZ PROC			; CBaseList::CNode::Next, COMDAT
; _this$ = ecx
; Line 102
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?Next@CNode@CBaseList@@QBEPAV12@XZ ENDP			; CBaseList::CNode::Next
_TEXT	ENDS
PUBLIC	??1CNode@CBaseList@@QAE@XZ			; CBaseList::CNode::~CNode
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCNode@CBaseList@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCNode@CBaseList@@QAEPAXI@Z PROC			; CBaseList::CNode::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CNode@CBaseList@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCNode@CBaseList@@QAEPAXI@Z ENDP			; CBaseList::CNode::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CNode@CBaseList@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CNode@CBaseList@@QAE@XZ PROC				; CBaseList::CNode::~CNode, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBaseObject@@QAE@XZ			; CBaseObject::~CBaseObject
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CNode@CBaseList@@QAE@XZ ENDP				; CBaseList::CNode::~CNode
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?RemoveAll@CBaseList@@QAEXXZ
_TEXT	SEGMENT
tv72 = -24						; size = 4
$T82200 = -20						; size = 4
$T82199 = -16						; size = 4
_op$81583 = -12						; size = 4
_pn$ = -8						; size = 4
_this$ = -4						; size = 4
?RemoveAll@CBaseList@@QAEXXZ PROC			; CBaseList::RemoveAll, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxlist.cpp
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 158
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _pn$[ebp], ecx
$LN2@RemoveAll:
; Line 159
	cmp	DWORD PTR _pn$[ebp], 0
	je	SHORT $LN1@RemoveAll
; Line 160
	mov	edx, DWORD PTR _pn$[ebp]
	mov	DWORD PTR _op$81583[ebp], edx
; Line 161
	mov	ecx, DWORD PTR _pn$[ebp]
	call	?Next@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Next
	mov	DWORD PTR _pn$[ebp], eax
; Line 162
	mov	eax, DWORD PTR _op$81583[ebp]
	mov	DWORD PTR $T82200[ebp], eax
	mov	ecx, DWORD PTR $T82200[ebp]
	mov	DWORD PTR $T82199[ebp], ecx
	cmp	DWORD PTR $T82199[ebp], 0
	je	SHORT $LN5@RemoveAll
	push	1
	mov	ecx, DWORD PTR $T82199[ebp]
	call	??_GCNode@CBaseList@@QAEPAXI@Z
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN6@RemoveAll
$LN5@RemoveAll:
	mov	DWORD PTR tv72[ebp], 0
$LN6@RemoveAll:
; Line 163
	jmp	SHORT $LN2@RemoveAll
$LN1@RemoveAll:
; Line 167
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 168
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 170
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RemoveAll@CBaseList@@QAEXXZ ENDP			; CBaseList::RemoveAll
_TEXT	ENDS
PUBLIC	?GetHeadPositionI@CBaseList@@QBEPAU__POSITION@@XZ ; CBaseList::GetHeadPositionI
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetHeadPositionI@CBaseList@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHeadPositionI@CBaseList@@QBEPAU__POSITION@@XZ PROC	; CBaseList::GetHeadPositionI, COMDAT
; _this$ = ecx
; Line 185
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 187
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHeadPositionI@CBaseList@@QBEPAU__POSITION@@XZ ENDP	; CBaseList::GetHeadPositionI
_TEXT	ENDS
PUBLIC	?GetTailPositionI@CBaseList@@QBEPAU__POSITION@@XZ ; CBaseList::GetTailPositionI
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTailPositionI@CBaseList@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTailPositionI@CBaseList@@QBEPAU__POSITION@@XZ PROC	; CBaseList::GetTailPositionI, COMDAT
; _this$ = ecx
; Line 192
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 193
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 194
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTailPositionI@CBaseList@@QBEPAU__POSITION@@XZ ENDP	; CBaseList::GetTailPositionI
_TEXT	ENDS
PUBLIC	?GetCountI@CBaseList@@QBEHXZ			; CBaseList::GetCountI
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetCountI@CBaseList@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCountI@CBaseList@@QBEHXZ PROC			; CBaseList::GetCountI, COMDAT
; _this$ = ecx
; Line 207
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
; Line 209
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCountI@CBaseList@@QBEHXZ ENDP			; CBaseList::GetCountI
_TEXT	ENDS
PUBLIC	?GetData@CNode@CBaseList@@QBEPAXXZ		; CBaseList::CNode::GetData
PUBLIC	?GetNextI@CBaseList@@IBEPAXAAPAU__POSITION@@@Z	; CBaseList::GetNextI
EXTRN	?DbgAssert@@YGXPB_W0H@Z:PROC			; DbgAssert
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetNextI@CBaseList@@IBEPAXAAPAU__POSITION@@@Z
_TEXT	SEGMENT
_pn$ = -12						; size = 4
_pObject$ = -8						; size = 4
_this$ = -4						; size = 4
_rp$ = 8						; size = 4
?GetNextI@CBaseList@@IBEPAXAAPAU__POSITION@@@Z PROC	; CBaseList::GetNextI, COMDAT
; _this$ = ecx
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 222
	mov	eax, DWORD PTR _rp$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN2@GetNextI
; Line 223
	xor	eax, eax
	jmp	SHORT $LN3@GetNextI
$LN2@GetNextI:
; Line 232
	mov	ecx, DWORD PTR _rp$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _pn$[ebp], edx
; Line 233
	cmp	DWORD PTR _pn$[ebp], 0
	jne	SHORT $LN1@GetNextI
	push	233					; 000000e9H
	push	OFFSET $SG81606
	push	OFFSET $SG81607
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@GetNextI:
; Line 234
	mov	ecx, DWORD PTR _pn$[ebp]
	call	?Next@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Next
	mov	ecx, DWORD PTR _rp$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 238
	mov	ecx, DWORD PTR _pn$[ebp]
	call	?GetData@CNode@CBaseList@@QBEPAXXZ	; CBaseList::CNode::GetData
	mov	DWORD PTR _pObject$[ebp], eax
; Line 240
	mov	eax, DWORD PTR _pObject$[ebp]
$LN3@GetNextI:
; Line 241
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetNextI@CBaseList@@IBEPAXAAPAU__POSITION@@@Z ENDP	; CBaseList::GetNextI
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetData@CNode@CBaseList@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetData@CNode@CBaseList@@QBEPAXXZ PROC			; CBaseList::CNode::GetData, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxlist.h
; Line 114
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetData@CNode@CBaseList@@QBEPAXXZ ENDP			; CBaseList::CNode::GetData
_TEXT	ENDS
PUBLIC	?GetI@CBaseList@@IBEPAXPAU__POSITION@@@Z	; CBaseList::GetI
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetI@CBaseList@@IBEPAXPAU__POSITION@@@Z
_TEXT	SEGMENT
_pObject$ = -12						; size = 4
_pn$ = -8						; size = 4
_this$ = -4						; size = 4
_p$ = 8							; size = 4
?GetI@CBaseList@@IBEPAXPAU__POSITION@@@Z PROC		; CBaseList::GetI, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxlist.cpp
; Line 253
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 254
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN1@GetI
; Line 255
	xor	eax, eax
	jmp	SHORT $LN2@GetI
$LN1@GetI:
; Line 258
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _pn$[ebp], eax
; Line 259
	mov	ecx, DWORD PTR _pn$[ebp]
	call	?GetData@CNode@CBaseList@@QBEPAXXZ	; CBaseList::CNode::GetData
	mov	DWORD PTR _pObject$[ebp], eax
; Line 261
	mov	eax, DWORD PTR _pObject$[ebp]
$LN2@GetI:
; Line 262
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetI@CBaseList@@IBEPAXPAU__POSITION@@@Z ENDP		; CBaseList::GetI
_TEXT	ENDS
PUBLIC	?Next@CBaseList@@QBEPAU__POSITION@@PAU2@@Z	; CBaseList::Next
PUBLIC	?FindI@CBaseList@@IBEPAU__POSITION@@PAX@Z	; CBaseList::FindI
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?FindI@CBaseList@@IBEPAU__POSITION@@PAX@Z
_TEXT	SEGMENT
_pn$ = -8						; size = 4
_this$ = -4						; size = 4
_pObj$ = 8						; size = 4
?FindI@CBaseList@@IBEPAU__POSITION@@PAX@Z PROC		; CBaseList::FindI, COMDAT
; _this$ = ecx
; Line 270
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 272
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetHeadPositionI@CBaseList@@QBEPAU__POSITION@@XZ ; CBaseList::GetHeadPositionI
	mov	DWORD PTR _pn$[ebp], eax
	jmp	SHORT $LN4@FindI
$LN3@FindI:
	mov	eax, DWORD PTR _pn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Next@CBaseList@@QBEPAU__POSITION@@PAU2@@Z ; CBaseList::Next
	mov	DWORD PTR _pn$[ebp], eax
$LN4@FindI:
	cmp	DWORD PTR _pn$[ebp], 0
	je	SHORT $LN2@FindI
; Line 273
	mov	ecx, DWORD PTR _pn$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetI@CBaseList@@IBEPAXPAU__POSITION@@@Z ; CBaseList::GetI
	cmp	eax, DWORD PTR _pObj$[ebp]
	jne	SHORT $LN1@FindI
; Line 274
	mov	eax, DWORD PTR _pn$[ebp]
	jmp	SHORT $LN5@FindI
$LN1@FindI:
; Line 276
	jmp	SHORT $LN3@FindI
$LN2@FindI:
; Line 277
	xor	eax, eax
$LN5@FindI:
; Line 278
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?FindI@CBaseList@@IBEPAU__POSITION@@PAX@Z ENDP		; CBaseList::FindI
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Next@CBaseList@@QBEPAU__POSITION@@PAU2@@Z
_TEXT	SEGMENT
_pn$ = -8						; size = 4
_this$ = -4						; size = 4
_pos$ = 8						; size = 4
?Next@CBaseList@@QBEPAU__POSITION@@PAU2@@Z PROC		; CBaseList::Next, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxlist.h
; Line 261
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 262
	cmp	DWORD PTR _pos$[ebp], 0
	jne	SHORT $LN1@Next
; Line 263
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	jmp	SHORT $LN2@Next
$LN1@Next:
; Line 265
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _pn$[ebp], ecx
; Line 266
	mov	ecx, DWORD PTR _pn$[ebp]
	call	?Next@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Next
$LN2@Next:
; Line 267
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Next@CBaseList@@QBEPAU__POSITION@@PAU2@@Z ENDP		; CBaseList::Next
_TEXT	ENDS
PUBLIC	?RemoveI@CBaseList@@IAEPAXPAU__POSITION@@@Z	; CBaseList::RemoveI
PUBLIC	?RemoveHeadI@CBaseList@@IAEPAXXZ		; CBaseList::RemoveHeadI
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?RemoveHeadI@CBaseList@@IAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RemoveHeadI@CBaseList@@IAEPAXXZ PROC			; CBaseList::RemoveHeadI, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxlist.cpp
; Line 287
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 295
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveI@CBaseList@@IAEPAXPAU__POSITION@@@Z ; CBaseList::RemoveI
; Line 296
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RemoveHeadI@CBaseList@@IAEPAXXZ ENDP			; CBaseList::RemoveHeadI
_TEXT	ENDS
PUBLIC	?RemoveTailI@CBaseList@@IAEPAXXZ		; CBaseList::RemoveTailI
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?RemoveTailI@CBaseList@@IAEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RemoveTailI@CBaseList@@IAEPAXXZ PROC			; CBaseList::RemoveTailI, COMDAT
; _this$ = ecx
; Line 305
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 313
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveI@CBaseList@@IAEPAXPAU__POSITION@@@Z ; CBaseList::RemoveI
; Line 314
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RemoveTailI@CBaseList@@IAEPAXXZ ENDP			; CBaseList::RemoveTailI
_TEXT	ENDS
PUBLIC	?AddToCache@CNodeCache@CBaseList@@QAEXPAVCNode@2@@Z ; CBaseList::CNodeCache::AddToCache
PUBLIC	?SetPrev@CNode@CBaseList@@QAEXPAV12@@Z		; CBaseList::CNode::SetPrev
PUBLIC	?SetNext@CNode@CBaseList@@QAEXPAV12@@Z		; CBaseList::CNode::SetNext
PUBLIC	?Prev@CNode@CBaseList@@QBEPAV12@XZ		; CBaseList::CNode::Prev
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?RemoveI@CBaseList@@IAEPAXPAU__POSITION@@@Z
_TEXT	SEGMENT
_pObject$ = -16						; size = 4
_pNode$ = -12						; size = 4
_pCurrent$ = -8						; size = 4
_this$ = -4						; size = 4
_pos$ = 8						; size = 4
?RemoveI@CBaseList@@IAEPAXPAU__POSITION@@@Z PROC	; CBaseList::RemoveI, COMDAT
; _this$ = ecx
; Line 327
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 331
	cmp	DWORD PTR _pos$[ebp], 0
	jne	SHORT $LN7@RemoveI
	xor	eax, eax
	jmp	$LN8@RemoveI
$LN7@RemoveI:
; Line 334
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _pCurrent$[ebp], eax
; Line 335
	cmp	DWORD PTR _pCurrent$[ebp], 0
	jne	SHORT $LN6@RemoveI
	push	335					; 0000014fH
	push	OFFSET $SG81642
	push	OFFSET $SG81643
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN6@RemoveI:
; Line 339
	mov	ecx, DWORD PTR _pCurrent$[ebp]
	call	?Prev@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Prev
	mov	DWORD PTR _pNode$[ebp], eax
; Line 340
	cmp	DWORD PTR _pNode$[ebp], 0
	jne	SHORT $LN5@RemoveI
; Line 341
	mov	ecx, DWORD PTR _pCurrent$[ebp]
	call	?Next@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Next
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 342
	jmp	SHORT $LN4@RemoveI
$LN5@RemoveI:
; Line 343
	mov	ecx, DWORD PTR _pCurrent$[ebp]
	call	?Next@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Next
	push	eax
	mov	ecx, DWORD PTR _pNode$[ebp]
	call	?SetNext@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetNext
$LN4@RemoveI:
; Line 348
	mov	ecx, DWORD PTR _pCurrent$[ebp]
	call	?Next@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Next
	mov	DWORD PTR _pNode$[ebp], eax
; Line 349
	cmp	DWORD PTR _pNode$[ebp], 0
	jne	SHORT $LN3@RemoveI
; Line 350
	mov	ecx, DWORD PTR _pCurrent$[ebp]
	call	?Prev@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Prev
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 351
	jmp	SHORT $LN2@RemoveI
$LN3@RemoveI:
; Line 352
	mov	ecx, DWORD PTR _pCurrent$[ebp]
	call	?Prev@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Prev
	push	eax
	mov	ecx, DWORD PTR _pNode$[ebp]
	call	?SetPrev@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetPrev
$LN2@RemoveI:
; Line 357
	mov	ecx, DWORD PTR _pCurrent$[ebp]
	call	?GetData@CNode@CBaseList@@QBEPAXXZ	; CBaseList::CNode::GetData
	mov	DWORD PTR _pObject$[ebp], eax
; Line 372
	mov	eax, DWORD PTR _pCurrent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?AddToCache@CNodeCache@CBaseList@@QAEXPAVCNode@2@@Z ; CBaseList::CNodeCache::AddToCache
; Line 376
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 377
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jge	SHORT $LN1@RemoveI
	push	377					; 00000179H
	push	OFFSET $SG81651
	push	OFFSET $SG81652
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@RemoveI:
; Line 378
	mov	eax, DWORD PTR _pObject$[ebp]
$LN8@RemoveI:
; Line 379
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveI@CBaseList@@IAEPAXPAU__POSITION@@@Z ENDP	; CBaseList::RemoveI
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Prev@CNode@CBaseList@@QBEPAV12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Prev@CNode@CBaseList@@QBEPAV12@XZ PROC			; CBaseList::CNode::Prev, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxlist.h
; Line 98
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?Prev@CNode@CBaseList@@QBEPAV12@XZ ENDP			; CBaseList::CNode::Prev
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetPrev@CNode@CBaseList@@QAEXPAV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
?SetPrev@CNode@CBaseList@@QAEXPAV12@@Z PROC		; CBaseList::CNode::SetPrev, COMDAT
; _this$ = ecx
; Line 106
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetPrev@CNode@CBaseList@@QAEXPAV12@@Z ENDP		; CBaseList::CNode::SetPrev
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetNext@CNode@CBaseList@@QAEXPAV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
?SetNext@CNode@CBaseList@@QAEXPAV12@@Z PROC		; CBaseList::CNode::SetNext, COMDAT
; _this$ = ecx
; Line 110
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetNext@CNode@CBaseList@@QAEXPAV12@@Z ENDP		; CBaseList::CNode::SetNext
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddToCache@CNodeCache@CBaseList@@QAEXPAVCNode@2@@Z
_TEXT	SEGMENT
tv78 = -16						; size = 4
$T82234 = -12						; size = 4
$T82233 = -8						; size = 4
_this$ = -4						; size = 4
_pNode$ = 8						; size = 4
?AddToCache@CNodeCache@CBaseList@@QAEXPAVCNode@2@@Z PROC ; CBaseList::CNodeCache::AddToCache, COMDAT
; _this$ = ecx
; Line 137
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 138
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx]
	jge	SHORT $LN2@AddToCache
; Line 139
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _pNode$[ebp]
	call	?SetNext@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetNext
; Line 140
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pNode$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 141
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 142
	jmp	SHORT $LN3@AddToCache
$LN2@AddToCache:
; Line 143
	mov	ecx, DWORD PTR _pNode$[ebp]
	mov	DWORD PTR $T82234[ebp], ecx
	mov	edx, DWORD PTR $T82234[ebp]
	mov	DWORD PTR $T82233[ebp], edx
	cmp	DWORD PTR $T82233[ebp], 0
	je	SHORT $LN5@AddToCache
	push	1
	mov	ecx, DWORD PTR $T82233[ebp]
	call	??_GCNode@CBaseList@@QAEPAXI@Z
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN3@AddToCache
$LN5@AddToCache:
	mov	DWORD PTR tv78[ebp], 0
$LN3@AddToCache:
; Line 145
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddToCache@CNodeCache@CBaseList@@QAEXPAVCNode@2@@Z ENDP ; CBaseList::CNodeCache::AddToCache
_TEXT	ENDS
PUBLIC	?SetData@CNode@CBaseList@@QAEXPAX@Z		; CBaseList::CNode::SetData
PUBLIC	??0CNode@CBaseList@@QAE@XZ			; CBaseList::CNode::CNode
PUBLIC	?RemoveFromCache@CNodeCache@CBaseList@@QAEPAVCNode@2@XZ ; CBaseList::CNodeCache::RemoveFromCache
PUBLIC	?AddTailI@CBaseList@@IAEPAU__POSITION@@PAX@Z	; CBaseList::AddTailI
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\wxlist.cpp
xdata$x	SEGMENT
__unwindtable$?AddTailI@CBaseList@@IAEPAU__POSITION@@PAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddTailI@CBaseList@@IAEPAU__POSITION@@PAX@Z$0
__ehfuncinfo$?AddTailI@CBaseList@@IAEPAU__POSITION@@PAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddTailI@CBaseList@@IAEPAU__POSITION@@PAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?AddTailI@CBaseList@@IAEPAU__POSITION@@PAX@Z
_TEXT	SEGMENT
tv75 = -32						; size = 4
$T82240 = -28						; size = 4
$T82239 = -24						; size = 4
_pNode$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pObject$ = 8						; size = 4
?AddTailI@CBaseList@@IAEPAU__POSITION@@PAX@Z PROC	; CBaseList::AddTailI, COMDAT
; _this$ = ecx
; Line 388
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddTailI@CBaseList@@IAEPAU__POSITION@@PAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 397
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?RemoveFromCache@CNodeCache@CBaseList@@QAEPAVCNode@2@XZ ; CBaseList::CNodeCache::RemoveFromCache
	mov	DWORD PTR _pNode$[ebp], eax
; Line 398
	cmp	DWORD PTR _pNode$[ebp], 0
	jne	SHORT $LN4@AddTailI
; Line 399
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T82240[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T82240[ebp], 0
	je	SHORT $LN7@AddTailI
	mov	ecx, DWORD PTR $T82240[ebp]
	call	??0CNode@CBaseList@@QAE@XZ		; CBaseList::CNode::CNode
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN8@AddTailI
$LN7@AddTailI:
	mov	DWORD PTR tv75[ebp], 0
$LN8@AddTailI:
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T82239[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T82239[ebp]
	mov	DWORD PTR _pNode$[ebp], ecx
$LN4@AddTailI:
; Line 404
	cmp	DWORD PTR _pNode$[ebp], 0
	jne	SHORT $LN3@AddTailI
; Line 405
	xor	eax, eax
	jmp	SHORT $LN5@AddTailI
$LN3@AddTailI:
; Line 412
	mov	edx, DWORD PTR _pObject$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pNode$[ebp]
	call	?SetData@CNode@CBaseList@@QAEXPAX@Z	; CBaseList::CNode::SetData
; Line 413
	push	0
	mov	ecx, DWORD PTR _pNode$[ebp]
	call	?SetNext@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetNext
; Line 414
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _pNode$[ebp]
	call	?SetPrev@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetPrev
; Line 416
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN2@AddTailI
; Line 417
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pNode$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 418
	jmp	SHORT $LN1@AddTailI
$LN2@AddTailI:
; Line 419
	mov	edx, DWORD PTR _pNode$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?SetNext@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetNext
$LN1@AddTailI:
; Line 427
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pNode$[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 428
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 430
	mov	eax, DWORD PTR _pNode$[ebp]
$LN5@AddTailI:
; Line 431
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddTailI@CBaseList@@IAEPAU__POSITION@@PAX@Z$0:
	mov	eax, DWORD PTR $T82240[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddTailI@CBaseList@@IAEPAU__POSITION@@PAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddTailI@CBaseList@@IAEPAU__POSITION@@PAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddTailI@CBaseList@@IAEPAU__POSITION@@PAX@Z ENDP	; CBaseList::AddTailI
PUBLIC	??_C@_1BE@ENAIAFNG@?$AAL?$AAi?$AAs?$AAt?$AA?5?$AAn?$AAo?$AAd?$AAe?$AA?$AA@ ; `string'
;	COMDAT ??_C@_1BE@ENAIAFNG@?$AAL?$AAi?$AAs?$AAt?$AA?5?$AAn?$AAo?$AAd?$AAe?$AA?$AA@
; File c:\downloads\mediapoint\src\filters\baseclasses\wxlist.h
CONST	SEGMENT
??_C@_1BE@ENAIAFNG@?$AAL?$AAi?$AAs?$AAt?$AA?5?$AAn?$AAo?$AAd?$AAe?$AA?$AA@ DB 'L'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'n', 00H, 'o', 00H
	DB	'd', 00H, 'e', 00H, 00H, 00H			; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CNode@CBaseList@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CNode@CBaseList@@QAE@XZ PROC				; CBaseList::CNode::CNode, COMDAT
; _this$ = ecx
; Line 93
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??_C@_1BE@ENAIAFNG@?$AAL?$AAi?$AAs?$AAt?$AA?5?$AAn?$AAo?$AAd?$AAe?$AA?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseObject@@QAE@PB_W@Z		; CBaseObject::CBaseObject
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CNode@CBaseList@@QAE@XZ ENDP				; CBaseList::CNode::CNode
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetData@CNode@CBaseList@@QAEXPAX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
?SetData@CNode@CBaseList@@QAEXPAX@Z PROC		; CBaseList::CNode::SetData, COMDAT
; _this$ = ecx
; Line 118
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetData@CNode@CBaseList@@QAEXPAX@Z ENDP		; CBaseList::CNode::SetData
_TEXT	ENDS
PUBLIC	??_C@_1BK@LCOEFNMB@?$AAm?$AA_?$AAi?$AAU?$AAs?$AAe?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@FJNDOGMC@?$AAm?$AA_?$AAi?$AAU?$AAs?$AAe?$AAd?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1HC@BKCLPCKI@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@ ; `string'
;	COMDAT ??_C@_1BK@LCOEFNMB@?$AAm?$AA_?$AAi?$AAU?$AAs?$AAe?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@LCOEFNMB@?$AAm?$AA_?$AAi?$AAU?$AAs?$AAe?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'm'
	DB	00H, '_', 00H, 'i', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@FJNDOGMC@?$AAm?$AA_?$AAi?$AAU?$AAs?$AAe?$AAd?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@FJNDOGMC@?$AAm?$AA_?$AAi?$AAU?$AAs?$AAe?$AAd?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'm'
	DB	00H, '_', 00H, 'i', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HC@BKCLPCKI@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@
CONST	SEGMENT
??_C@_1HC@BKCLPCKI@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'D', 00H, 'o', 00H, 'w', 00H, 'n', 00H
	DB	'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'e', 00H, 'd', 00H, 'i', 00H, 'a', 00H, 'P', 00H, 'o', 00H
	DB	'i', 00H, 'n', 00H, 't', 00H, '\', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'B', 00H, 'a', 00H, 's', 00H, 'e'
	DB	00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 'e', 00H
	DB	's', 00H, '\', 00H, 'w', 00H, 'x', 00H, 'l', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, '.', 00H, 'h', 00H, 00H, 00H	; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?RemoveFromCache@CNodeCache@CBaseList@@QAEPAVCNode@2@XZ
_TEXT	SEGMENT
_pNode$ = -8						; size = 4
_this$ = -4						; size = 4
?RemoveFromCache@CNodeCache@CBaseList@@QAEPAVCNode@2@XZ PROC ; CBaseList::CNodeCache::RemoveFromCache, COMDAT
; _this$ = ecx
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _pNode$[ebp], ecx
; Line 149
	cmp	DWORD PTR _pNode$[ebp], 0
	je	SHORT $LN4@RemoveFrom
; Line 150
	mov	ecx, DWORD PTR _pNode$[ebp]
	call	?Next@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Next
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 151
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 152
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jge	SHORT $LN3@RemoveFrom
	push	152					; 00000098H
	push	OFFSET ??_C@_1HC@BKCLPCKI@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@
	push	OFFSET ??_C@_1BK@FJNDOGMC@?$AAm?$AA_?$AAi?$AAU?$AAs?$AAe?$AAd?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN3@RemoveFrom:
; Line 153
	jmp	SHORT $LN2@RemoveFrom
$LN4@RemoveFrom:
; Line 154
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN2@RemoveFrom
	push	154					; 0000009aH
	push	OFFSET ??_C@_1HC@BKCLPCKI@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@
	push	OFFSET ??_C@_1BK@LCOEFNMB@?$AAm?$AA_?$AAi?$AAU?$AAs?$AAe?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@RemoveFrom:
; Line 156
	mov	eax, DWORD PTR _pNode$[ebp]
; Line 157
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RemoveFromCache@CNodeCache@CBaseList@@QAEPAVCNode@2@XZ ENDP ; CBaseList::CNodeCache::RemoveFromCache
_TEXT	ENDS
PUBLIC	?AddHeadI@CBaseList@@IAEPAU__POSITION@@PAX@Z	; CBaseList::AddHeadI
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\wxlist.cpp
xdata$x	SEGMENT
__unwindtable$?AddHeadI@CBaseList@@IAEPAU__POSITION@@PAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddHeadI@CBaseList@@IAEPAU__POSITION@@PAX@Z$0
__ehfuncinfo$?AddHeadI@CBaseList@@IAEPAU__POSITION@@PAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddHeadI@CBaseList@@IAEPAU__POSITION@@PAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?AddHeadI@CBaseList@@IAEPAU__POSITION@@PAX@Z
_TEXT	SEGMENT
tv75 = -32						; size = 4
$T82260 = -28						; size = 4
$T82259 = -24						; size = 4
_pNode$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pObject$ = 8						; size = 4
?AddHeadI@CBaseList@@IAEPAU__POSITION@@PAX@Z PROC	; CBaseList::AddHeadI, COMDAT
; _this$ = ecx
; Line 439
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddHeadI@CBaseList@@IAEPAU__POSITION@@PAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 446
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?RemoveFromCache@CNodeCache@CBaseList@@QAEPAVCNode@2@XZ ; CBaseList::CNodeCache::RemoveFromCache
	mov	DWORD PTR _pNode$[ebp], eax
; Line 447
	cmp	DWORD PTR _pNode$[ebp], 0
	jne	SHORT $LN4@AddHeadI
; Line 448
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T82260[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T82260[ebp], 0
	je	SHORT $LN7@AddHeadI
	mov	ecx, DWORD PTR $T82260[ebp]
	call	??0CNode@CBaseList@@QAE@XZ		; CBaseList::CNode::CNode
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN8@AddHeadI
$LN7@AddHeadI:
	mov	DWORD PTR tv75[ebp], 0
$LN8@AddHeadI:
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T82259[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T82259[ebp]
	mov	DWORD PTR _pNode$[ebp], ecx
$LN4@AddHeadI:
; Line 453
	cmp	DWORD PTR _pNode$[ebp], 0
	jne	SHORT $LN3@AddHeadI
; Line 454
	xor	eax, eax
	jmp	SHORT $LN5@AddHeadI
$LN3@AddHeadI:
; Line 461
	mov	edx, DWORD PTR _pObject$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pNode$[ebp]
	call	?SetData@CNode@CBaseList@@QAEXPAX@Z	; CBaseList::CNode::SetData
; Line 464
	push	0
	mov	ecx, DWORD PTR _pNode$[ebp]
	call	?SetPrev@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetPrev
; Line 465
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _pNode$[ebp]
	call	?SetNext@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetNext
; Line 467
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN2@AddHeadI
; Line 468
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pNode$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 469
	jmp	SHORT $LN1@AddHeadI
$LN2@AddHeadI:
; Line 470
	mov	edx, DWORD PTR _pNode$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?SetPrev@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetPrev
$LN1@AddHeadI:
; Line 472
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pNode$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 474
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 476
	mov	eax, DWORD PTR _pNode$[ebp]
$LN5@AddHeadI:
; Line 477
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddHeadI@CBaseList@@IAEPAU__POSITION@@PAX@Z$0:
	mov	eax, DWORD PTR $T82260[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddHeadI@CBaseList@@IAEPAU__POSITION@@PAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddHeadI@CBaseList@@IAEPAU__POSITION@@PAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddHeadI@CBaseList@@IAEPAU__POSITION@@PAX@Z ENDP	; CBaseList::AddHeadI
PUBLIC	?AddTail@CBaseList@@QAEHPAV1@@Z			; CBaseList::AddTail
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddTail@CBaseList@@QAEHPAV1@@Z
_TEXT	SEGMENT
_pos$ = -12						; size = 4
_this$ = -4						; size = 4
_pList$ = 8						; size = 4
?AddTail@CBaseList@@QAEHPAV1@@Z PROC			; CBaseList::AddTail, COMDAT
; _this$ = ecx
; Line 486
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 492
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?GetHeadPositionI@CBaseList@@QBEPAU__POSITION@@XZ ; CBaseList::GetHeadPositionI
	mov	DWORD PTR _pos$[ebp], eax
$LN3@AddTail:
; Line 494
	cmp	DWORD PTR _pos$[ebp], 0
	je	SHORT $LN2@AddTail
; Line 495
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?GetNextI@CBaseList@@IBEPAXAAPAU__POSITION@@@Z ; CBaseList::GetNextI
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddTailI@CBaseList@@IAEPAU__POSITION@@PAX@Z ; CBaseList::AddTailI
	test	eax, eax
	jne	SHORT $LN1@AddTail
; Line 496
	xor	eax, eax
	jmp	SHORT $LN4@AddTail
$LN1@AddTail:
; Line 498
	jmp	SHORT $LN3@AddTail
$LN2@AddTail:
; Line 499
	mov	eax, 1
$LN4@AddTail:
; Line 500
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@AddTail
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN8@AddTail:
	DD	1
	DD	$LN7@AddTail
$LN7@AddTail:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN6@AddTail
$LN6@AddTail:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
?AddTail@CBaseList@@QAEHPAV1@@Z ENDP			; CBaseList::AddTail
_TEXT	ENDS
PUBLIC	?Prev@CBaseList@@QBEPAU__POSITION@@PAU2@@Z	; CBaseList::Prev
PUBLIC	?AddHead@CBaseList@@QAEHPAV1@@Z			; CBaseList::AddHead
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddHead@CBaseList@@QAEHPAV1@@Z
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_this$ = -4						; size = 4
_pList$ = 8						; size = 4
?AddHead@CBaseList@@QAEHPAV1@@Z PROC			; CBaseList::AddHead, COMDAT
; _this$ = ecx
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 520
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?GetTailPositionI@CBaseList@@QBEPAU__POSITION@@XZ ; CBaseList::GetTailPositionI
	mov	DWORD PTR _pos$[ebp], eax
	jmp	SHORT $LN4@AddHead
$LN3@AddHead:
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?Prev@CBaseList@@QBEPAU__POSITION@@PAU2@@Z ; CBaseList::Prev
	mov	DWORD PTR _pos$[ebp], eax
$LN4@AddHead:
	cmp	DWORD PTR _pos$[ebp], 0
	je	SHORT $LN2@AddHead
; Line 521
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?GetI@CBaseList@@IBEPAXPAU__POSITION@@@Z ; CBaseList::GetI
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddHeadI@CBaseList@@IAEPAU__POSITION@@PAX@Z ; CBaseList::AddHeadI
	test	eax, eax
	jne	SHORT $LN1@AddHead
; Line 522
	xor	eax, eax
	jmp	SHORT $LN5@AddHead
$LN1@AddHead:
; Line 524
	jmp	SHORT $LN3@AddHead
$LN2@AddHead:
; Line 525
	mov	eax, 1
$LN5@AddHead:
; Line 526
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddHead@CBaseList@@QAEHPAV1@@Z ENDP			; CBaseList::AddHead
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Prev@CBaseList@@QBEPAU__POSITION@@PAU2@@Z
_TEXT	SEGMENT
_pn$ = -8						; size = 4
_this$ = -4						; size = 4
_pos$ = 8						; size = 4
?Prev@CBaseList@@QBEPAU__POSITION@@PAU2@@Z PROC		; CBaseList::Prev, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxlist.h
; Line 271
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 272
	cmp	DWORD PTR _pos$[ebp], 0
	jne	SHORT $LN1@Prev
; Line 273
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	jmp	SHORT $LN2@Prev
$LN1@Prev:
; Line 275
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _pn$[ebp], ecx
; Line 276
	mov	ecx, DWORD PTR _pn$[ebp]
	call	?Prev@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Prev
$LN2@Prev:
; Line 277
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Prev@CBaseList@@QBEPAU__POSITION@@PAU2@@Z ENDP		; CBaseList::Prev
_TEXT	ENDS
PUBLIC	?AddAfterI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z ; CBaseList::AddAfterI
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\wxlist.cpp
xdata$x	SEGMENT
__unwindtable$?AddAfterI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddAfterI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z$0
__ehfuncinfo$?AddAfterI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddAfterI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?AddAfterI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z
_TEXT	SEGMENT
tv88 = -40						; size = 4
$T82283 = -36						; size = 4
$T82282 = -32						; size = 4
_pBefore$ = -28						; size = 4
_pNode$ = -24						; size = 4
_pAfter$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pos$ = 8						; size = 4
_pObj$ = 12						; size = 4
?AddAfterI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z PROC	; CBaseList::AddAfterI, COMDAT
; _this$ = ecx
; Line 536
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddAfterI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 537
	cmp	DWORD PTR _pos$[ebp], 0
	jne	SHORT $LN6@AddAfterI
; Line 538
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddHeadI@CBaseList@@IAEPAU__POSITION@@PAX@Z ; CBaseList::AddHeadI
	jmp	$LN7@AddAfterI
$LN6@AddAfterI:
; Line 543
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _pAfter$[ebp], ecx
; Line 544
	cmp	DWORD PTR _pAfter$[ebp], 0
	jne	SHORT $LN5@AddAfterI
	push	544					; 00000220H
	push	OFFSET $SG81710
	push	OFFSET $SG81711
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN5@AddAfterI:
; Line 545
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pAfter$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN4@AddAfterI
; Line 546
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddTailI@CBaseList@@IAEPAU__POSITION@@PAX@Z ; CBaseList::AddTailI
	jmp	$LN7@AddAfterI
$LN4@AddAfterI:
; Line 550
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?RemoveFromCache@CNodeCache@CBaseList@@QAEPAVCNode@2@XZ ; CBaseList::CNodeCache::RemoveFromCache
	mov	DWORD PTR _pNode$[ebp], eax
; Line 551
	cmp	DWORD PTR _pNode$[ebp], 0
	jne	SHORT $LN3@AddAfterI
; Line 552
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T82283[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T82283[ebp], 0
	je	SHORT $LN9@AddAfterI
	mov	ecx, DWORD PTR $T82283[ebp]
	call	??0CNode@CBaseList@@QAE@XZ		; CBaseList::CNode::CNode
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN10@AddAfterI
$LN9@AddAfterI:
	mov	DWORD PTR tv88[ebp], 0
$LN10@AddAfterI:
	mov	edx, DWORD PTR tv88[ebp]
	mov	DWORD PTR $T82282[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T82282[ebp]
	mov	DWORD PTR _pNode$[ebp], eax
$LN3@AddAfterI:
; Line 557
	cmp	DWORD PTR _pNode$[ebp], 0
	jne	SHORT $LN2@AddAfterI
; Line 558
	xor	eax, eax
	jmp	SHORT $LN7@AddAfterI
$LN2@AddAfterI:
; Line 565
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pNode$[ebp]
	call	?SetData@CNode@CBaseList@@QAEXPAX@Z	; CBaseList::CNode::SetData
; Line 570
	mov	ecx, DWORD PTR _pAfter$[ebp]
	call	?Next@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Next
	mov	DWORD PTR _pBefore$[ebp], eax
; Line 571
	cmp	DWORD PTR _pBefore$[ebp], 0
	jne	SHORT $LN1@AddAfterI
	push	571					; 0000023bH
	push	OFFSET $SG81723
	push	OFFSET $SG81724
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@AddAfterI:
; Line 574
	mov	edx, DWORD PTR _pAfter$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pNode$[ebp]
	call	?SetPrev@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetPrev
; Line 575
	mov	eax, DWORD PTR _pBefore$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNode$[ebp]
	call	?SetNext@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetNext
; Line 576
	mov	ecx, DWORD PTR _pNode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBefore$[ebp]
	call	?SetPrev@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetPrev
; Line 577
	mov	edx, DWORD PTR _pNode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pAfter$[ebp]
	call	?SetNext@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetNext
; Line 579
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 581
	mov	eax, DWORD PTR _pNode$[ebp]
$LN7@AddAfterI:
; Line 583
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddAfterI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z$0:
	mov	eax, DWORD PTR $T82283[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddAfterI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddAfterI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddAfterI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z ENDP	; CBaseList::AddAfterI
PUBLIC	?AddAfter@CBaseList@@QAEHPAU__POSITION@@PAV1@@Z	; CBaseList::AddAfter
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddAfter@CBaseList@@QAEHPAU__POSITION@@PAV1@@Z
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_this$ = -4						; size = 4
_p$ = 8							; size = 4
_pList$ = 12						; size = 4
?AddAfter@CBaseList@@QAEHPAU__POSITION@@PAV1@@Z PROC	; CBaseList::AddAfter, COMDAT
; _this$ = ecx
; Line 588
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 590
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?GetHeadPositionI@CBaseList@@QBEPAU__POSITION@@XZ ; CBaseList::GetHeadPositionI
	mov	DWORD PTR _pos$[ebp], eax
	jmp	SHORT $LN4@AddAfter
$LN3@AddAfter:
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?Next@CBaseList@@QBEPAU__POSITION@@PAU2@@Z ; CBaseList::Next
	mov	DWORD PTR _pos$[ebp], eax
$LN4@AddAfter:
	cmp	DWORD PTR _pos$[ebp], 0
	je	SHORT $LN2@AddAfter
; Line 592
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?GetI@CBaseList@@IBEPAXPAU__POSITION@@@Z ; CBaseList::GetI
	push	eax
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddAfterI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z ; CBaseList::AddAfterI
	mov	DWORD PTR _p$[ebp], eax
; Line 593
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN1@AddAfter
	xor	eax, eax
	jmp	SHORT $LN5@AddAfter
$LN1@AddAfter:
; Line 594
	jmp	SHORT $LN3@AddAfter
$LN2@AddAfter:
; Line 595
	mov	eax, 1
$LN5@AddAfter:
; Line 596
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?AddAfter@CBaseList@@QAEHPAU__POSITION@@PAV1@@Z ENDP	; CBaseList::AddAfter
_TEXT	ENDS
PUBLIC	?AddBeforeI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z ; CBaseList::AddBeforeI
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AddBeforeI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddBeforeI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z$0
__ehfuncinfo$?AddBeforeI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddBeforeI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?AddBeforeI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z
_TEXT	SEGMENT
tv88 = -40						; size = 4
$T82298 = -36						; size = 4
$T82297 = -32						; size = 4
_pAfter$ = -28						; size = 4
_pNode$ = -24						; size = 4
_pBefore$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pos$ = 8						; size = 4
_pObj$ = 12						; size = 4
?AddBeforeI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z PROC ; CBaseList::AddBeforeI, COMDAT
; _this$ = ecx
; Line 606
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddBeforeI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 607
	cmp	DWORD PTR _pos$[ebp], 0
	jne	SHORT $LN6@AddBeforeI
; Line 608
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddTailI@CBaseList@@IAEPAU__POSITION@@PAX@Z ; CBaseList::AddTailI
	jmp	$LN7@AddBeforeI
$LN6@AddBeforeI:
; Line 612
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _pBefore$[ebp], ecx
; Line 613
	cmp	DWORD PTR _pBefore$[ebp], 0
	jne	SHORT $LN5@AddBeforeI
	push	613					; 00000265H
	push	OFFSET $SG81745
	push	OFFSET $SG81746
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN5@AddBeforeI:
; Line 614
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pBefore$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jne	SHORT $LN4@AddBeforeI
; Line 615
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddHeadI@CBaseList@@IAEPAU__POSITION@@PAX@Z ; CBaseList::AddHeadI
	jmp	$LN7@AddBeforeI
$LN4@AddBeforeI:
; Line 617
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?RemoveFromCache@CNodeCache@CBaseList@@QAEPAVCNode@2@XZ ; CBaseList::CNodeCache::RemoveFromCache
	mov	DWORD PTR _pNode$[ebp], eax
; Line 618
	cmp	DWORD PTR _pNode$[ebp], 0
	jne	SHORT $LN3@AddBeforeI
; Line 619
	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T82298[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T82298[ebp], 0
	je	SHORT $LN9@AddBeforeI
	mov	ecx, DWORD PTR $T82298[ebp]
	call	??0CNode@CBaseList@@QAE@XZ		; CBaseList::CNode::CNode
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN10@AddBeforeI
$LN9@AddBeforeI:
	mov	DWORD PTR tv88[ebp], 0
$LN10@AddBeforeI:
	mov	edx, DWORD PTR tv88[ebp]
	mov	DWORD PTR $T82297[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T82297[ebp]
	mov	DWORD PTR _pNode$[ebp], eax
$LN3@AddBeforeI:
; Line 624
	cmp	DWORD PTR _pNode$[ebp], 0
	jne	SHORT $LN2@AddBeforeI
; Line 625
	xor	eax, eax
	jmp	SHORT $LN7@AddBeforeI
$LN2@AddBeforeI:
; Line 632
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pNode$[ebp]
	call	?SetData@CNode@CBaseList@@QAEXPAX@Z	; CBaseList::CNode::SetData
; Line 638
	mov	ecx, DWORD PTR _pBefore$[ebp]
	call	?Prev@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Prev
	mov	DWORD PTR _pAfter$[ebp], eax
; Line 639
	cmp	DWORD PTR _pAfter$[ebp], 0
	jne	SHORT $LN1@AddBeforeI
	push	639					; 0000027fH
	push	OFFSET $SG81758
	push	OFFSET $SG81759
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@AddBeforeI:
; Line 642
	mov	edx, DWORD PTR _pAfter$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pNode$[ebp]
	call	?SetPrev@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetPrev
; Line 643
	mov	eax, DWORD PTR _pBefore$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNode$[ebp]
	call	?SetNext@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetNext
; Line 644
	mov	ecx, DWORD PTR _pNode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pBefore$[ebp]
	call	?SetPrev@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetPrev
; Line 645
	mov	edx, DWORD PTR _pNode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pAfter$[ebp]
	call	?SetNext@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetNext
; Line 647
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 649
	mov	eax, DWORD PTR _pNode$[ebp]
$LN7@AddBeforeI:
; Line 651
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddBeforeI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z$0:
	mov	eax, DWORD PTR $T82298[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddBeforeI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddBeforeI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddBeforeI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z ENDP ; CBaseList::AddBeforeI
PUBLIC	?AddBefore@CBaseList@@QAEHPAU__POSITION@@PAV1@@Z ; CBaseList::AddBefore
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddBefore@CBaseList@@QAEHPAU__POSITION@@PAV1@@Z
_TEXT	SEGMENT
_pos$ = -8						; size = 4
_this$ = -4						; size = 4
_p$ = 8							; size = 4
_pList$ = 12						; size = 4
?AddBefore@CBaseList@@QAEHPAU__POSITION@@PAV1@@Z PROC	; CBaseList::AddBefore, COMDAT
; _this$ = ecx
; Line 656
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 658
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?GetTailPositionI@CBaseList@@QBEPAU__POSITION@@XZ ; CBaseList::GetTailPositionI
	mov	DWORD PTR _pos$[ebp], eax
	jmp	SHORT $LN4@AddBefore
$LN3@AddBefore:
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?Prev@CBaseList@@QBEPAU__POSITION@@PAU2@@Z ; CBaseList::Prev
	mov	DWORD PTR _pos$[ebp], eax
$LN4@AddBefore:
	cmp	DWORD PTR _pos$[ebp], 0
	je	SHORT $LN2@AddBefore
; Line 660
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?GetI@CBaseList@@IBEPAXPAU__POSITION@@@Z ; CBaseList::GetI
	push	eax
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddBeforeI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z ; CBaseList::AddBeforeI
	mov	DWORD PTR _p$[ebp], eax
; Line 661
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN1@AddBefore
	xor	eax, eax
	jmp	SHORT $LN5@AddBefore
$LN1@AddBefore:
; Line 662
	jmp	SHORT $LN3@AddBefore
$LN2@AddBefore:
; Line 663
	mov	eax, 1
$LN5@AddBefore:
; Line 664
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?AddBefore@CBaseList@@QAEHPAU__POSITION@@PAV1@@Z ENDP	; CBaseList::AddBefore
_TEXT	ENDS
PUBLIC	?MoveToTail@CBaseList@@QAEHPAU__POSITION@@PAV1@@Z ; CBaseList::MoveToTail
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?MoveToTail@CBaseList@@QAEHPAU__POSITION@@PAV1@@Z
_TEXT	SEGMENT
_cMove$ = -12						; size = 4
_p$ = -8						; size = 4
_this$ = -4						; size = 4
_pos$ = 8						; size = 4
_pList$ = 12						; size = 4
?MoveToTail@CBaseList@@QAEHPAU__POSITION@@PAV1@@Z PROC	; CBaseList::MoveToTail, COMDAT
; _this$ = ecx
; Line 686
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 698
	cmp	DWORD PTR _pos$[ebp], 0
	jne	SHORT $LN8@MoveToTail
	mov	eax, 1
	jmp	$LN9@MoveToTail
$LN8@MoveToTail:
; Line 702
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 703
	mov	DWORD PTR _cMove$[ebp], 0
$LN7@MoveToTail:
; Line 704
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN6@MoveToTail
; Line 705
	mov	ecx, DWORD PTR _p$[ebp]
	call	?Prev@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Prev
	mov	DWORD PTR _p$[ebp], eax
; Line 706
	mov	ecx, DWORD PTR _cMove$[ebp]
	add	ecx, 1
	mov	DWORD PTR _cMove$[ebp], ecx
; Line 707
	jmp	SHORT $LN7@MoveToTail
$LN6@MoveToTail:
; Line 711
	mov	edx, DWORD PTR _pList$[ebp]
	cmp	DWORD PTR [edx+8], 0
	je	SHORT $LN5@MoveToTail
; Line 712
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pList$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	call	?SetNext@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetNext
$LN5@MoveToTail:
; Line 713
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN4@MoveToTail
; Line 714
	mov	ecx, DWORD PTR _pList$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?SetPrev@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetPrev
$LN4@MoveToTail:
; Line 718
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _p$[ebp], ecx
; Line 720
	mov	edx, DWORD PTR _pList$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN3@MoveToTail
; Line 721
	mov	eax, DWORD PTR _pList$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
$LN3@MoveToTail:
; Line 722
	mov	ecx, DWORD PTR _p$[ebp]
	call	?Next@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Next
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 723
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN2@MoveToTail
; Line 724
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
$LN2@MoveToTail:
; Line 725
	mov	ecx, DWORD PTR _pList$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 729
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@MoveToTail
; Line 730
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?SetPrev@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetPrev
$LN1@MoveToTail:
; Line 731
	push	0
	mov	ecx, DWORD PTR _p$[ebp]
	call	?SetNext@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetNext
; Line 735
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	sub	eax, DWORD PTR _cMove$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 736
	mov	edx, DWORD PTR _pList$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, DWORD PTR _cMove$[ebp]
	mov	ecx, DWORD PTR _pList$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 738
	mov	eax, 1
$LN9@MoveToTail:
; Line 740
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?MoveToTail@CBaseList@@QAEHPAU__POSITION@@PAV1@@Z ENDP	; CBaseList::MoveToTail
_TEXT	ENDS
PUBLIC	?MoveToHead@CBaseList@@QAEHPAU__POSITION@@PAV1@@Z ; CBaseList::MoveToHead
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?MoveToHead@CBaseList@@QAEHPAU__POSITION@@PAV1@@Z
_TEXT	SEGMENT
_cMove$ = -12						; size = 4
_p$ = -8						; size = 4
_this$ = -4						; size = 4
_pos$ = 8						; size = 4
_pList$ = 12						; size = 4
?MoveToHead@CBaseList@@QAEHPAU__POSITION@@PAV1@@Z PROC	; CBaseList::MoveToHead, COMDAT
; _this$ = ecx
; Line 760
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 764
	cmp	DWORD PTR _pos$[ebp], 0
	jne	SHORT $LN8@MoveToHead
	mov	eax, 1
	jmp	$LN9@MoveToHead
$LN8@MoveToHead:
; Line 767
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 768
	mov	DWORD PTR _cMove$[ebp], 0
$LN7@MoveToHead:
; Line 769
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN6@MoveToHead
; Line 770
	mov	ecx, DWORD PTR _p$[ebp]
	call	?Next@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Next
	mov	DWORD PTR _p$[ebp], eax
; Line 771
	mov	ecx, DWORD PTR _cMove$[ebp]
	add	ecx, 1
	mov	DWORD PTR _cMove$[ebp], ecx
; Line 772
	jmp	SHORT $LN7@MoveToHead
$LN6@MoveToHead:
; Line 776
	mov	edx, DWORD PTR _pList$[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	SHORT $LN5@MoveToHead
; Line 777
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _pList$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	call	?SetPrev@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetPrev
$LN5@MoveToHead:
; Line 778
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN4@MoveToHead
; Line 779
	mov	ecx, DWORD PTR _pList$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	?SetNext@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetNext
$LN4@MoveToHead:
; Line 783
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _p$[ebp], ecx
; Line 786
	mov	edx, DWORD PTR _pList$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN3@MoveToHead
; Line 787
	mov	eax, DWORD PTR _pList$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
$LN3@MoveToHead:
; Line 789
	mov	ecx, DWORD PTR _p$[ebp]
	call	?Prev@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Prev
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 790
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN2@MoveToHead
; Line 791
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN2@MoveToHead:
; Line 792
	mov	ecx, DWORD PTR _pList$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 796
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@MoveToHead
; Line 797
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+8]
	call	?SetNext@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetNext
$LN1@MoveToHead:
; Line 798
	push	0
	mov	ecx, DWORD PTR _p$[ebp]
	call	?SetPrev@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetPrev
; Line 802
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	sub	eax, DWORD PTR _cMove$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 803
	mov	edx, DWORD PTR _pList$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, DWORD PTR _cMove$[ebp]
	mov	ecx, DWORD PTR _pList$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 805
	mov	eax, 1
$LN9@MoveToHead:
; Line 807
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?MoveToHead@CBaseList@@QAEHPAU__POSITION@@PAV1@@Z ENDP	; CBaseList::MoveToHead
_TEXT	ENDS
PUBLIC	?Reverse@CBaseList@@QAEXXZ			; CBaseList::Reverse
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Reverse@CBaseList@@QAEXXZ
_TEXT	SEGMENT
_q$81814 = -12						; size = 4
_p$ = -8						; size = 4
_this$ = -4						; size = 4
?Reverse@CBaseList@@QAEXXZ PROC				; CBaseList::Reverse, COMDAT
; _this$ = ecx
; Line 814
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 836
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _p$[ebp], ecx
$LN2@Reverse:
; Line 837
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN1@Reverse
; Line 839
	mov	ecx, DWORD PTR _p$[ebp]
	call	?Next@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Next
	mov	DWORD PTR _q$81814[ebp], eax
; Line 840
	mov	ecx, DWORD PTR _p$[ebp]
	call	?Prev@CNode@CBaseList@@QBEPAV12@XZ	; CBaseList::CNode::Prev
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	call	?SetNext@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetNext
; Line 841
	mov	edx, DWORD PTR _q$81814[ebp]
	push	edx
	mov	ecx, DWORD PTR _p$[ebp]
	call	?SetPrev@CNode@CBaseList@@QAEXPAV12@@Z	; CBaseList::CNode::SetPrev
; Line 842
	mov	eax, DWORD PTR _q$81814[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 843
	jmp	SHORT $LN2@Reverse
$LN1@Reverse:
; Line 845
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _p$[ebp], edx
; Line 846
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+4], edx
; Line 847
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 885
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Reverse@CBaseList@@QAEXXZ ENDP				; CBaseList::Reverse
_TEXT	ENDS
END
