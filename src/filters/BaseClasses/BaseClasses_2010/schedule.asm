; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Downloads\MediaPoint\src\filters\BaseClasses\schedule.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_IID_IAMFilterGraphCallback
CONST	SEGMENT
$SG81559 DB	'C', 00H, 'A', 00H, 'M', 00H, 'S', 00H, 'c', 00H, 'h', 00H
	DB	'e', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, 00H, 00H
$SG81574 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'c', 00H, 'h', 00H
	DB	'e', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81575 DB	'm', 00H, '_', 00H, 'd', 00H, 'w', 00H, 'A', 00H, 'd', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'u'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H
	ORG $+2
$SG81581 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'c', 00H, 'h', 00H
	DB	'e', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81582 DB	'm', 00H, '_', 00H, 'd', 00H, 'w', 00H, 'A', 00H, 'd', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'u'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H
	ORG $+2
$SG81599 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'c', 00H, 'h', 00H
	DB	'e', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81600 DB	't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, '1', 00H, ' ', 00H
	DB	'<', 00H, ' ', 00H, 'M', 00H, 'A', 00H, 'X', 00H, '_', 00H, 'T'
	DB	00H, 'I', 00H, 'M', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG81628 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'c', 00H, 'h', 00H
	DB	'e', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+4
$SG81629 DB	'p', 00H, '_', 00H, 'n', 00H, '-', 00H, '>', 00H, 'm', 00H
	DB	'_', 00H, 'd', 00H, 'w', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'i'
	DB	00H, 's', 00H, 'e', 00H, 'C', 00H, 'o', 00H, 'o', 00H, 'k', 00H
	DB	'i', 00H, 'e', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, 'd'
	DB	00H, 'w', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'i', 00H, 's', 00H
	DB	'e', 00H, 'C', 00H, 'o', 00H, 'o', 00H, 'k', 00H, 'i', 00H, 'e'
	DB	00H, 00H, 00H
$SG81636 DB	'C', 00H, 'A', 00H, 'M', 00H, 'S', 00H, 'c', 00H, 'h', 00H
	DB	'e', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, ':', 00H, ':'
	DB	00H, 'A', 00H, 'd', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'e', 00H
	DB	'(', 00H, ' ', 00H, '%', 00H, 'l', 00H, 'u', 00H, ' ', 00H, 'm'
	DB	00H, 's', 00H, ' ', 00H, ')', 00H, 00H, 00H
$SG81643 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'c', 00H, 'h', 00H
	DB	'e', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81644 DB	'p', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'i', 00H, 's', 00H
	DB	'e', 00H, '-', 00H, '>', 00H, 'm', 00H, '_', 00H, 'd', 00H, 'w'
	DB	00H, 'A', 00H, 'd', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'e', 00H
	DB	'C', 00H, 'o', 00H, 'o', 00H, 'k', 00H, 'i', 00H, 'e', 00H, 00H
	DB	00H
$SG81648 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'c', 00H, 'h', 00H
	DB	'e', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81649 DB	'p', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'i', 00H, 's', 00H
	DB	'e', 00H, '-', 00H, '>', 00H, 'm', 00H, '_', 00H, 'h', 00H, 'N'
	DB	00H, 'o', 00H, 't', 00H, 'i', 00H, 'f', 00H, 'y', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, 'I', 00H, 'N', 00H, 'V', 00H, 'A'
	DB	00H, 'L', 00H, 'I', 00H, 'D', 00H, '_', 00H, 'H', 00H, 'A', 00H
	DB	'N', 00H, 'D', 00H, 'L', 00H, 'E', 00H, '_', 00H, 'V', 00H, 'A'
	DB	00H, 'L', 00H, 'U', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG81653 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'c', 00H, 'h', 00H
	DB	'e', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81654 DB	'p', 00H, 'A', 00H, 'd', 00H, 'v', 00H, 'i', 00H, 's', 00H
	DB	'e', 00H, '-', 00H, '>', 00H, 'm', 00H, '_', 00H, 'b', 00H, 'P'
	DB	00H, 'e', 00H, 'r', 00H, 'i', 00H, 'o', 00H, 'd', 00H, 'i', 00H
	DB	'c', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'F', 00H, 'A'
	DB	00H, 'L', 00H, 'S', 00H, 'E', 00H, 00H, 00H
$SG81656 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'c', 00H, 'h', 00H
	DB	'e', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81657 DB	'S', 00H, 'e', 00H, 't', 00H, 'E', 00H, 'v', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, '(', 00H, 'p', 00H, 'A', 00H, 'd', 00H, 'v'
	DB	00H, 'i', 00H, 's', 00H, 'e', 00H, '-', 00H, '>', 00H, 'm', 00H
	DB	'_', 00H, 'h', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'i', 00H, 'f'
	DB	00H, 'y', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG81658 DB	'C', 00H, 'A', 00H, 'M', 00H, 'S', 00H, 'c', 00H, 'h', 00H
	DB	'e', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, ':', 00H, ':'
	DB	00H, 'A', 00H, 'd', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'e', 00H
	DB	'(', 00H, ')', 00H, ' ', 00H, 'N', 00H, 'e', 00H, 'x', 00H, 't'
	DB	00H, ' ', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'a', 00H, 'm', 00H, 'p', 00H, ':', 00H, ' '
	DB	00H, '%', 00H, 'l', 00H, 'u', 00H, ' ', 00H, 'm', 00H, 's', 00H
	DB	',', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'a'
	DB	00H, 'd', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'e', 00H, ' ', 00H
	DB	'%', 00H, 'l', 00H, 'u', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG81666 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'c', 00H, 'h', 00H
	DB	'e', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81667 DB	'p', 00H, 'P', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'e', 00H
	DB	't', 00H, '-', 00H, '>', 00H, 'm', 00H, '_', 00H, 'r', 00H, 't'
	DB	00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'T', 00H
	DB	'i', 00H, 'm', 00H, 'e', 00H, ' ', 00H, '>', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'p', 00H
	DB	'P', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'e', 00H, 't', 00H, '-'
	DB	00H, '>', 00H, 'm', 00H, '_', 00H, 'r', 00H, 't', 00H, 'E', 00H
	DB	'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'T', 00H, 'i', 00H, 'm'
	DB	00H, 'e', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'M', 00H, 'A', 00H
	DB	'X', 00H, '_', 00H, 'T', 00H, 'I', 00H, 'M', 00H, 'E', 00H, 00H
	DB	00H
	ORG $+2
$SG81669 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'c', 00H, 'h', 00H
	DB	'e', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81670 DB	'C', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'C', 00H, 'h', 00H
	DB	'e', 00H, 'c', 00H, 'k', 00H, 'I', 00H, 'n', 00H, '(', 00H, '&'
	DB	00H, 'm', 00H, '_', 00H, 'S', 00H, 'e', 00H, 'r', 00H, 'i', 00H
	DB	'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ')', 00H, 00H
	DB	00H
$SG81678 DB	'A', 00H, 'd', 00H, 'd', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'a', 00H, 'd', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'e', 00H, ' '
	DB	00H, '%', 00H, 'l', 00H, 'u', 00H, ',', 00H, ' ', 00H, 'f', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'r', 00H, 'e'
	DB	00H, 'a', 00H, 'd', 00H, ' ', 00H, '0', 00H, 'x', 00H, '%', 00H
	DB	'0', 00H, '2', 00H, 'X', 00H, ',', 00H, ' ', 00H, 's', 00H, 'c'
	DB	00H, 'h', 00H, 'e', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 't', 00H, ' ', 00H, '%', 00H, 'l'
	DB	00H, 'u', 00H, 00H, 00H
$SG81694 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 'c', 00H, 'h', 00H
	DB	'e', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+4
$SG81695 DB	'p', 00H, 'P', 00H, 'a', 00H, 'c', 00H, 'k', 00H, 'e', 00H
	DB	't', 00H, '-', 00H, '>', 00H, 'm', 00H, '_', 00H, 'r', 00H, 't'
	DB	00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'T', 00H
	DB	'i', 00H, 'm', 00H, 'e', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'M'
	DB	00H, 'A', 00H, 'X', 00H, '_', 00H, 'T', 00H, 'I', 00H, 'M', 00H
	DB	'E', 00H, 00H, 00H
	ORG $+4
$SG81701 DB	'P', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'o', 00H, 'd', 00H
	DB	'i', 00H, 'c', 00H, ' ', 00H, 'a', 00H, 'd', 00H, 'v', 00H, 'i'
	DB	00H, 's', 00H, 'e', 00H, ' ', 00H, '%', 00H, 'l', 00H, 'u', 00H
	DB	',', 00H, ' ', 00H, 's', 00H, 'h', 00H, 'u', 00H, 'n', 00H, 't'
	DB	00H, 'e', 00H, 'd', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H
	DB	'%', 00H, 'l', 00H, 'u', 00H, 00H, 00H
$SG81706 DB	'C', 00H, 'A', 00H, 'M', 00H, 'S', 00H, 'c', 00H, 'h', 00H
	DB	'e', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, ':', 00H, ':'
	DB	00H, 'D', 00H, 'u', 00H, 'm', 00H, 'p', 00H, 'L', 00H, 'i', 00H
	DB	'n', 00H, 'k', 00H, 'e', 00H, 'd', 00H, 'L', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, '(', 00H, ')', 00H, ' ', 00H, 't', 00H, 'h', 00H
	DB	'i', 00H, 's', 00H, ' ', 00H, '=', 00H, ' ', 00H, '0', 00H, 'x'
	DB	00H, '%', 00H, 'p', 00H, 00H, 00H
	ORG $+4
$SG81711 DB	'A', 00H, 'd', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'e', 00H
	DB	' ', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, '#'
	DB	00H, ' ', 00H, '%', 00H, 'l', 00H, 'u', 00H, ',', 00H, ' ', 00H
	DB	'C', 00H, 'o', 00H, 'o', 00H, 'k', 00H, 'i', 00H, 'e', 00H, ' '
	DB	00H, '%', 00H, 'd', 00H, ',', 00H, ' ', 00H, ' ', 00H, 'R', 00H
	DB	'e', 00H, 'f', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, ' '
	DB	00H, '%', 00H, 'l', 00H, 'u', 00H, 00H, 00H
CONST	ENDS
;	COMDAT _IID_IAMFilterGraphCallback
CONST	SEGMENT
_IID_IAMFilterGraphCallback DD 056a868fdH
	DW	0ad4H
	DW	011ceH
	DB	0b0H
	DB	0a3H
	DB	00H
	DB	020H
	DB	0afH
	DB	0bH
	DB	0a7H
	DB	070H
CONST	ENDS
PUBLIC	??0CAdvisePacket@CAMSchedule@@QAE@PAV01@_J@Z	; CAMSchedule::CAdvisePacket::CAdvisePacket
PUBLIC	??_7CAMSchedule@@6B@				; CAMSchedule::`vftable'
PUBLIC	??0CAMSchedule@@QAE@PAX@Z			; CAMSchedule::CAMSchedule
PUBLIC	??_R4CAMSchedule@@6B@				; CAMSchedule::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCAMSchedule@@@8				; CAMSchedule `RTTI Type Descriptor'
PUBLIC	??_R3CAMSchedule@@8				; CAMSchedule::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAMSchedule@@8				; CAMSchedule::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CAMSchedule@@8			; CAMSchedule::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EN@CBaseObject@@8			; CBaseObject::`RTTI Base Class Descriptor at (8,-1,0,77)'
PUBLIC	??_R0?AVCBaseObject@@@8				; CBaseObject `RTTI Type Descriptor'
PUBLIC	??_R3CBaseObject@@8				; CBaseObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseObject@@8				; CBaseObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseObject@@8			; CBaseObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??1CBaseObject@@QAE@XZ:PROC			; CBaseObject::~CBaseObject
EXTRN	??0CCritSec@@QAE@XZ:PROC			; CCritSec::CCritSec
EXTRN	??0CBaseObject@@QAE@PB_W@Z:PROC			; CBaseObject::CBaseObject
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECAMSchedule@@UAEPAXI@Z:PROC			; CAMSchedule::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@CBaseObject@@8
; File c:\downloads\mediapoint\src\filters\baseclasses\schedule.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseObject@@8 DD FLAT:??_R0?AVCBaseObject@@@8 ; CBaseObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseObject@@8
rdata$r	SEGMENT
??_R2CBaseObject@@8 DD FLAT:??_R1A@?0A@EA@CBaseObject@@8 ; CBaseObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CBaseObject@@8
rdata$r	SEGMENT
??_R3CBaseObject@@8 DD 00H				; CBaseObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseObject@@@8
_DATA	SEGMENT
??_R0?AVCBaseObject@@@8 DD FLAT:??_7type_info@@6B@	; CBaseObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseObject@@', 00H
_DATA	ENDS
;	COMDAT ??_R17?0A@EN@CBaseObject@@8
rdata$r	SEGMENT
??_R17?0A@EN@CBaseObject@@8 DD FLAT:??_R0?AVCBaseObject@@@8 ; CBaseObject::`RTTI Base Class Descriptor at (8,-1,0,77)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	04dH
	DD	FLAT:??_R3CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CAMSchedule@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAMSchedule@@8 DD FLAT:??_R0?AVCAMSchedule@@@8 ; CAMSchedule::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAMSchedule@@8
rdata$r	ENDS
;	COMDAT ??_R2CAMSchedule@@8
rdata$r	SEGMENT
??_R2CAMSchedule@@8 DD FLAT:??_R1A@?0A@EA@CAMSchedule@@8 ; CAMSchedule::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EN@CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CAMSchedule@@8
rdata$r	SEGMENT
??_R3CAMSchedule@@8 DD 00H				; CAMSchedule::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CAMSchedule@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAMSchedule@@@8
_DATA	SEGMENT
??_R0?AVCAMSchedule@@@8 DD FLAT:??_7type_info@@6B@	; CAMSchedule `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAMSchedule@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CAMSchedule@@6B@
rdata$r	SEGMENT
??_R4CAMSchedule@@6B@ DD 00H				; CAMSchedule::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCAMSchedule@@@8
	DD	FLAT:??_R3CAMSchedule@@8
rdata$r	ENDS
;	COMDAT ??_7CAMSchedule@@6B@
CONST	SEGMENT
??_7CAMSchedule@@6B@ DD FLAT:??_R4CAMSchedule@@6B@	; CAMSchedule::`vftable'
	DD	FLAT:??_ECAMSchedule@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CAMSchedule@@QAE@PAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CAMSchedule@@QAE@PAX@Z$0
__ehfuncinfo$??0CAMSchedule@@QAE@PAX@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CAMSchedule@@QAE@PAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT ??0CAMSchedule@@QAE@PAX@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ev$ = 8						; size = 4
??0CAMSchedule@@QAE@PAX@Z PROC				; CAMSchedule::CAMSchedule, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CAMSchedule@@QAE@PAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET $SG81559
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CBaseObject@@QAE@PB_W@Z		; CBaseObject::CBaseObject
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CAMSchedule@@6B@
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0CAdvisePacket@CAMSchedule@@QAE@PAV01@_J@Z ; CAMSchedule::CAdvisePacket::CAdvisePacket
	push	2147483647				; 7fffffffH
	push	-1
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0CAdvisePacket@CAMSchedule@@QAE@PAV01@_J@Z ; CAMSchedule::CAdvisePacket::CAdvisePacket
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+80], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??0CCritSec@@QAE@XZ			; CCritSec::CCritSec
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _ev$[ebp]
	mov	DWORD PTR [ecx+124], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+128], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+132], 0
; Line 27
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+52], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 28
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CAMSchedule@@QAE@PAX@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CBaseObject@@QAE@XZ			; CBaseObject::~CBaseObject
__ehhandler$??0CAMSchedule@@QAE@PAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CAMSchedule@@QAE@PAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CAMSchedule@@QAE@PAX@Z ENDP				; CAMSchedule::CAMSchedule
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CAdvisePacket@CAMSchedule@@QAE@PAV01@_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_next$ = 8						; size = 4
_time$ = 12						; size = 8
??0CAdvisePacket@CAMSchedule@@QAE@PAV01@_J@Z PROC	; CAMSchedule::CAdvisePacket::CAdvisePacket, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\dsschedule.h
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _next$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _time$[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR _time$[ebp+4]
	mov	DWORD PTR [edx+12], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0CAdvisePacket@CAMSchedule@@QAE@PAV01@_J@Z ENDP	; CAMSchedule::CAdvisePacket::CAdvisePacket
_TEXT	ENDS
PUBLIC	??1CAMSchedule@@UAE@XZ				; CAMSchedule::~CAMSchedule
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCAMSchedule@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCAMSchedule@@UAEPAXI@Z PROC				; CAMSchedule::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CAMSchedule@@UAE@XZ			; CAMSchedule::~CAMSchedule
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCAMSchedule@@UAEPAXI@Z ENDP				; CAMSchedule::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?DeleteNext@CAdvisePacket@CAMSchedule@@QAEXXZ	; CAMSchedule::CAdvisePacket::DeleteNext
PUBLIC	?IsZ@CAdvisePacket@CAMSchedule@@QBEHXZ		; CAMSchedule::CAdvisePacket::IsZ
PUBLIC	?DumpLinkedList@CAMSchedule@@QAEXXZ		; CAMSchedule::DumpLinkedList
EXTRN	??1CCritSec@@QAE@XZ:PROC			; CCritSec::~CCritSec
EXTRN	?Unlock@CCritSec@@QAEXXZ:PROC			; CCritSec::Unlock
EXTRN	?DbgAssert@@YGXPB_W0H@Z:PROC			; DbgAssert
EXTRN	?Lock@CCritSec@@QAEXXZ:PROC			; CCritSec::Lock
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\schedule.cpp
xdata$x	SEGMENT
__unwindtable$??1CAMSchedule@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CAMSchedule@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CAMSchedule@@UAE@XZ$1
__ehfuncinfo$??1CAMSchedule@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CAMSchedule@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CAMSchedule@@UAE@XZ
_TEXT	SEGMENT
$T82040 = -28						; size = 4
_p_next$81571 = -24					; size = 4
_p$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CAMSchedule@@UAE@XZ PROC				; CAMSchedule::~CAMSchedule, COMDAT
; _this$ = ecx
; Line 31
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CAMSchedule@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CAMSchedule@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 32
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Lock@CCritSec@@QAEXXZ			; CCritSec::Lock
; Line 35
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	mov	DWORD PTR _p$[ebp], edx
$LN7@CAMSchedul:
; Line 36
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN6@CAMSchedul
; Line 38
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p_next$81571[ebp], ecx
; Line 39
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR $T82040[ebp], edx
	mov	eax, DWORD PTR $T82040[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 40
	mov	ecx, DWORD PTR _p_next$81571[ebp]
	mov	DWORD PTR _p$[ebp], ecx
; Line 41
	jmp	SHORT $LN7@CAMSchedul
$LN6@CAMSchedul:
; Line 43
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+84], 0
	je	SHORT $LN5@CAMSchedul
	push	43					; 0000002bH
	push	OFFSET $SG81574
	push	OFFSET $SG81575
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN5@CAMSchedul:
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	jbe	SHORT $LN4@CAMSchedul
; Line 47
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DumpLinkedList@CAMSchedule@@QAEXXZ	; CAMSchedule::DumpLinkedList
$LN3@CAMSchedul:
; Line 48
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+16]
	call	?IsZ@CAdvisePacket@CAMSchedule@@QBEHXZ	; CAMSchedule::CAdvisePacket::IsZ
	test	eax, eax
	jne	SHORT $LN4@CAMSchedul
; Line 50
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?DeleteNext@CAdvisePacket@CAMSchedule@@QAEXXZ ; CAMSchedule::CAdvisePacket::DeleteNext
; Line 51
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], eax
; Line 52
	jmp	SHORT $LN3@CAMSchedul
$LN4@CAMSchedul:
; Line 58
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+84], 0
	je	SHORT $LN1@CAMSchedul
	push	58					; 0000003aH
	push	OFFSET $SG81581
	push	OFFSET $SG81582
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@CAMSchedul:
; Line 60
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Unlock@CCritSec@@QAEXXZ		; CCritSec::Unlock
; Line 61
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CBaseObject@@QAE@XZ			; CBaseObject::~CBaseObject
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CAMSchedule@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CBaseObject@@QAE@XZ			; CBaseObject::~CBaseObject
__unwindfunclet$??1CAMSchedule@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	jmp	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
__ehhandler$??1CAMSchedule@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CAMSchedule@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CAMSchedule@@UAE@XZ ENDP				; CAMSchedule::~CAMSchedule
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsZ@CAdvisePacket@CAMSchedule@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsZ@CAdvisePacket@CAMSchedule@@QBEHXZ PROC		; CAMSchedule::CAdvisePacket::IsZ, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\dsschedule.h
; Line 63
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	sete	cl
	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?IsZ@CAdvisePacket@CAMSchedule@@QBEHXZ ENDP		; CAMSchedule::CAdvisePacket::IsZ
_TEXT	ENDS
PUBLIC	?RemoveNext@CAdvisePacket@CAMSchedule@@QAEPAV12@XZ ; CAMSchedule::CAdvisePacket::RemoveNext
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DeleteNext@CAdvisePacket@CAMSchedule@@QAEXXZ
_TEXT	SEGMENT
$T82053 = -8						; size = 4
_this$ = -4						; size = 4
?DeleteNext@CAdvisePacket@CAMSchedule@@QAEXXZ PROC	; CAMSchedule::CAdvisePacket::DeleteNext, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 75
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveNext@CAdvisePacket@CAMSchedule@@QAEPAV12@XZ ; CAMSchedule::CAdvisePacket::RemoveNext
	mov	DWORD PTR $T82053[ebp], eax
	mov	eax, DWORD PTR $T82053[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 76
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DeleteNext@CAdvisePacket@CAMSchedule@@QAEXXZ ENDP	; CAMSchedule::CAdvisePacket::DeleteNext
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?RemoveNext@CAdvisePacket@CAMSchedule@@QAEPAV12@XZ
_TEXT	SEGMENT
_new_next$ = -12					; size = 4
_next$ = -8						; size = 4
_this$ = -4						; size = 4
?RemoveNext@CAdvisePacket@CAMSchedule@@QAEPAV12@XZ PROC	; CAMSchedule::CAdvisePacket::RemoveNext, COMDAT
; _this$ = ecx
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _next$[ebp], ecx
; Line 68
	mov	edx, DWORD PTR _next$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _new_next$[ebp], eax
; Line 69
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _new_next$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 70
	mov	eax, DWORD PTR _next$[ebp]
; Line 71
	mov	esp, ebp
	pop	ebp
	ret	0
?RemoveNext@CAdvisePacket@CAMSchedule@@QAEPAV12@XZ ENDP	; CAMSchedule::CAdvisePacket::RemoveNext
_TEXT	ENDS
PUBLIC	?GetAdviseCount@CAMSchedule@@QAEKXZ		; CAMSchedule::GetAdviseCount
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetAdviseCount@CAMSchedule@@QAEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetAdviseCount@CAMSchedule@@QAEKXZ PROC		; CAMSchedule::GetAdviseCount, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\schedule.cpp
; Line 66
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+84]
; Line 69
	mov	esp, ebp
	pop	ebp
	ret	0
?GetAdviseCount@CAMSchedule@@QAEKXZ ENDP		; CAMSchedule::GetAdviseCount
_TEXT	ENDS
PUBLIC	??1CAutoLock@@QAE@XZ				; CAutoLock::~CAutoLock
PUBLIC	??0CAutoLock@@QAE@PAVCCritSec@@@Z		; CAutoLock::CAutoLock
PUBLIC	?GetNextAdviseTime@CAMSchedule@@QAE_JXZ		; CAMSchedule::GetNextAdviseTime
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetNextAdviseTime@CAMSchedule@@QAE_JXZ
_TEXT	SEGMENT
$T82060 = -24						; size = 8
_lck$ = -12						; size = 4
_this$ = -4						; size = 4
?GetNextAdviseTime@CAMSchedule@@QAE_JXZ PROC		; CAMSchedule::GetNextAdviseTime, COMDAT
; _this$ = ecx
; Line 72
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	push	eax
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
; Line 74
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR $T82060[ebp], eax
	mov	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR $T82060[ebp+4], ecx
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82060[ebp]
	mov	edx, DWORD PTR $T82060[ebp+4]
; Line 75
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetNextAdv
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@GetNextAdv:
	DD	1
	DD	$LN5@GetNextAdv
$LN5@GetNextAdv:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN4@GetNextAdv
$LN4@GetNextAdv:
	DB	108					; 0000006cH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?GetNextAdviseTime@CAMSchedule@@QAE_JXZ ENDP		; CAMSchedule::GetNextAdviseTime
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CAutoLock@@QAE@PAVCCritSec@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_plock$ = 8						; size = 4
??0CAutoLock@@QAE@PAVCCritSec@@@Z PROC			; CAutoLock::CAutoLock, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxutil.h
; Line 94
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _plock$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 97
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?Lock@CCritSec@@QAEXXZ			; CCritSec::Lock
; Line 98
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CAutoLock@@QAE@PAVCCritSec@@@Z ENDP			; CAutoLock::CAutoLock
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CAutoLock@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CAutoLock@@QAE@XZ PROC				; CAutoLock::~CAutoLock, COMDAT
; _this$ = ecx
; Line 100
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Unlock@CCritSec@@QAEXXZ		; CCritSec::Unlock
; Line 102
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CAutoLock@@QAE@XZ ENDP				; CAutoLock::~CAutoLock
_TEXT	ENDS
PUBLIC	?AddAdvisePacket@CAMSchedule@@AAEKPAVCAdvisePacket@1@@Z ; CAMSchedule::AddAdvisePacket
PUBLIC	??0CAdvisePacket@CAMSchedule@@QAE@XZ		; CAMSchedule::CAdvisePacket::CAdvisePacket
PUBLIC	?AddAdvisePacket@CAMSchedule@@QAEKAB_J0PAXH@Z	; CAMSchedule::AddAdvisePacket
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\schedule.cpp
xdata$x	SEGMENT
__unwindtable$?AddAdvisePacket@CAMSchedule@@QAEKAB_J0PAXH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AddAdvisePacket@CAMSchedule@@QAEKAB_J0PAXH@Z$0
__ehfuncinfo$?AddAdvisePacket@CAMSchedule@@QAEKAB_J0PAXH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AddAdvisePacket@CAMSchedule@@QAEKAB_J0PAXH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?AddAdvisePacket@CAMSchedule@@QAEKAB_J0PAXH@Z
_TEXT	SEGMENT
tv84 = -40						; size = 4
tv130 = -36						; size = 4
$T82073 = -32						; size = 4
$T82072 = -28						; size = 4
_p$ = -24						; size = 4
_Result$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_time1$ = 8						; size = 4
_time2$ = 12						; size = 4
_h$ = 16						; size = 4
_periodic$ = 20						; size = 4
?AddAdvisePacket@CAMSchedule@@QAEKAB_J0PAXH@Z PROC	; CAMSchedule::AddAdvisePacket, COMDAT
; _this$ = ecx
; Line 82
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddAdvisePacket@CAMSchedule@@QAEKAB_J0PAXH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 85
	mov	eax, DWORD PTR _time1$[ebp]
	mov	DWORD PTR tv130[ebp], eax
	mov	ecx, DWORD PTR tv130[ebp]
	cmp	DWORD PTR [ecx+4], 2147483647		; 7fffffffH
	jl	SHORT $LN5@AddAdviseP
	jg	SHORT $LN11@AddAdviseP
	mov	edx, DWORD PTR tv130[ebp]
	cmp	DWORD PTR [edx], -1
	jb	SHORT $LN5@AddAdviseP
$LN11@AddAdviseP:
	push	85					; 00000055H
	push	OFFSET $SG81599
	push	OFFSET $SG81600
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN5@AddAdviseP:
; Line 89
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Lock@CCritSec@@QAEXXZ			; CCritSec::Lock
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+128], 0
	je	SHORT $LN4@AddAdviseP
; Line 93
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	mov	DWORD PTR _p$[ebp], edx
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+128], edx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+132], ecx
; Line 97
	jmp	SHORT $LN3@AddAdviseP
$LN4@AddAdviseP:
; Line 99
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T82073[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T82073[ebp], 0
	je	SHORT $LN8@AddAdviseP
	mov	ecx, DWORD PTR $T82073[ebp]
	call	??0CAdvisePacket@CAMSchedule@@QAE@XZ	; CAMSchedule::CAdvisePacket::CAdvisePacket
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN9@AddAdviseP
$LN8@AddAdviseP:
	mov	DWORD PTR tv84[ebp], 0
$LN9@AddAdviseP:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR $T82072[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T82072[ebp]
	mov	DWORD PTR _p$[ebp], ecx
$LN3@AddAdviseP:
; Line 101
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@AddAdviseP
; Line 103
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _time1$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+12], eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _time2$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+16], eax
	mov	edx, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+20], edx
; Line 104
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _h$[ebp]
	mov	DWORD PTR [eax+24], ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _periodic$[ebp]
	mov	DWORD PTR [edx+28], eax
; Line 105
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddAdvisePacket@CAMSchedule@@AAEKPAVCAdvisePacket@1@@Z ; CAMSchedule::AddAdvisePacket
	mov	DWORD PTR _Result$[ebp], eax
	jmp	SHORT $LN1@AddAdviseP
$LN2@AddAdviseP:
; Line 107
	mov	DWORD PTR _Result$[ebp], 0
$LN1@AddAdviseP:
; Line 109
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Unlock@CCritSec@@QAEXXZ		; CCritSec::Unlock
; Line 111
	mov	eax, DWORD PTR _Result$[ebp]
; Line 112
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AddAdvisePacket@CAMSchedule@@QAEKAB_J0PAXH@Z$0:
	mov	eax, DWORD PTR $T82073[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?AddAdvisePacket@CAMSchedule@@QAEKAB_J0PAXH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddAdvisePacket@CAMSchedule@@QAEKAB_J0PAXH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddAdvisePacket@CAMSchedule@@QAEKAB_J0PAXH@Z ENDP	; CAMSchedule::AddAdvisePacket
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CAdvisePacket@CAMSchedule@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CAdvisePacket@CAMSchedule@@QAE@XZ PROC		; CAMSchedule::CAdvisePacket::CAdvisePacket, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\dsschedule.h
; Line 43
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CAdvisePacket@CAMSchedule@@QAE@XZ ENDP		; CAMSchedule::CAdvisePacket::CAdvisePacket
_TEXT	ENDS
PUBLIC	?Delete@CAMSchedule@@AAEXPAVCAdvisePacket@1@@Z	; CAMSchedule::Delete
PUBLIC	?Next@CAdvisePacket@CAMSchedule@@QBEPAV12@XZ	; CAMSchedule::CAdvisePacket::Next
PUBLIC	?Unadvise@CAMSchedule@@QAEJK@Z			; CAMSchedule::Unadvise
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Unadvise@CAMSchedule@@QAEJK@Z
_TEXT	SEGMENT
_p_n$ = -16						; size = 4
_p_prev$ = -12						; size = 4
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_dwAdviseCookie$ = 8					; size = 4
?Unadvise@CAMSchedule@@QAEJK@Z PROC			; CAMSchedule::Unadvise, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\schedule.cpp
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 116
	mov	DWORD PTR _hr$[ebp], 1
; Line 117
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _p_prev$[ebp], eax
; Line 119
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Lock@CCritSec@@QAEXXZ			; CCritSec::Lock
$LN6@Unadvise:
; Line 120
	mov	ecx, DWORD PTR _p_prev$[ebp]
	call	?Next@CAdvisePacket@CAMSchedule@@QBEPAV12@XZ ; CAMSchedule::CAdvisePacket::Next
	mov	DWORD PTR _p_n$[ebp], eax
	cmp	DWORD PTR _p_n$[ebp], 0
	je	SHORT $LN5@Unadvise
; Line 122
	mov	ecx, DWORD PTR _p_n$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR _dwAdviseCookie$[ebp]
	jne	SHORT $LN4@Unadvise
; Line 124
	mov	ecx, DWORD PTR _p_prev$[ebp]
	call	?RemoveNext@CAdvisePacket@CAMSchedule@@QAEPAV12@XZ ; CAMSchedule::CAdvisePacket::RemoveNext
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Delete@CAMSchedule@@AAEXPAVCAdvisePacket@1@@Z ; CAMSchedule::Delete
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+84], ecx
; Line 126
	mov	DWORD PTR _hr$[ebp], 0
$LN3@Unadvise:
; Line 129
	mov	ecx, DWORD PTR _p_prev$[ebp]
	call	?Next@CAdvisePacket@CAMSchedule@@QBEPAV12@XZ ; CAMSchedule::CAdvisePacket::Next
	mov	DWORD PTR _p_n$[ebp], eax
	cmp	DWORD PTR _p_n$[ebp], 0
	je	SHORT $LN2@Unadvise
; Line 131
	mov	eax, DWORD PTR _p_n$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _dwAdviseCookie$[ebp]
	jne	SHORT $LN1@Unadvise
	push	131					; 00000083H
	push	OFFSET $SG81628
	push	OFFSET $SG81629
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@Unadvise:
; Line 132
	mov	edx, DWORD PTR _p_n$[ebp]
	mov	DWORD PTR _p_prev$[ebp], edx
; Line 133
	jmp	SHORT $LN3@Unadvise
$LN2@Unadvise:
; Line 135
	jmp	SHORT $LN5@Unadvise
$LN4@Unadvise:
; Line 137
	mov	eax, DWORD PTR _p_n$[ebp]
	mov	DWORD PTR _p_prev$[ebp], eax
; Line 138
	jmp	$LN6@Unadvise
$LN5@Unadvise:
; Line 139
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Unlock@CCritSec@@QAEXXZ		; CCritSec::Unlock
; Line 140
	mov	eax, DWORD PTR _hr$[ebp]
; Line 141
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Unadvise@CAMSchedule@@QAEJK@Z ENDP			; CAMSchedule::Unadvise
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Next@CAdvisePacket@CAMSchedule@@QBEPAV12@XZ
_TEXT	SEGMENT
_result$ = -8						; size = 4
_this$ = -4						; size = 4
?Next@CAdvisePacket@CAMSchedule@@QBEPAV12@XZ PROC	; CAMSchedule::CAdvisePacket::Next, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\dsschedule.h
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _result$[ebp], ecx
; Line 81
	mov	ecx, DWORD PTR _result$[ebp]
	call	?IsZ@CAdvisePacket@CAMSchedule@@QBEHXZ	; CAMSchedule::CAdvisePacket::IsZ
	test	eax, eax
	je	SHORT $LN1@Next
	mov	DWORD PTR _result$[ebp], 0
$LN1@Next:
; Line 82
	mov	eax, DWORD PTR _result$[ebp]
; Line 83
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Next@CAdvisePacket@CAMSchedule@@QBEPAV12@XZ ENDP	; CAMSchedule::CAdvisePacket::Next
_TEXT	ENDS
PUBLIC	?ShuntHead@CAMSchedule@@AAEXXZ			; CAMSchedule::ShuntHead
PUBLIC	?Advise@CAMSchedule@@QAE_JAB_J@Z		; CAMSchedule::Advise
EXTRN	__imp__SetEvent@4:PROC
EXTRN	__imp__ReleaseSemaphore@12:PROC
EXTRN	?DbgCheckModuleLevel@@YGHKK@Z:PROC		; DbgCheckModuleLevel
EXTRN	?DbgLogInfo@@YAXKKPB_WZZ:PROC			; DbgLogInfo
EXTRN	__alldiv:PROC
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\schedule.cpp
xdata$x	SEGMENT
__unwindtable$?Advise@CAMSchedule@@QAE_JAB_J@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Advise@CAMSchedule@@QAE_JAB_J@Z$0
__ehfuncinfo$?Advise@CAMSchedule@@QAE_JAB_J@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Advise@CAMSchedule@@QAE_JAB_J@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Advise@CAMSchedule@@QAE_JAB_J@Z
_TEXT	SEGMENT
tv194 = -52						; size = 4
$T82092 = -48						; size = 8
_lck$ = -36						; size = 4
_pAdvise$ = -28						; size = 4
_rtNextTime$ = -24					; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_rtTime$ = 8						; size = 4
?Advise@CAMSchedule@@QAE_JAB_J@Z PROC			; CAMSchedule::Advise, COMDAT
; _this$ = ecx
; Line 144
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Advise@CAMSchedule@@QAE_JAB_J@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	mov	eax, DWORD PTR _rtTime$[ebp]
	push	0
	push	10000					; 00002710H
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	__alldiv
	push	eax
	push	OFFSET $SG81636
	push	2
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 151
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	push	eax
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 154
	push	4
	push	1
	call	?DbgCheckModuleLevel@@YGHKK@Z		; DbgCheckModuleLevel
	test	eax, eax
	je	SHORT $LN8@Advise
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DumpLinkedList@CAMSchedule@@QAEXXZ	; CAMSchedule::DumpLinkedList
$LN8@Advise:
; Line 159
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _pAdvise$[ebp], edx
	mov	eax, DWORD PTR _pAdvise$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _rtNextTime$[ebp], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _rtNextTime$[ebp+4], edx
	mov	eax, DWORD PTR _rtTime$[ebp]
	mov	DWORD PTR tv194[ebp], eax
	mov	ecx, DWORD PTR tv194[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR _rtNextTime$[ebp+4]
	jl	$LN7@Advise
	jg	SHORT $LN13@Advise
	mov	eax, DWORD PTR tv194[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _rtNextTime$[ebp]
	jb	$LN7@Advise
$LN13@Advise:
	mov	ecx, DWORD PTR _pAdvise$[ebp]
	call	?IsZ@CAdvisePacket@CAMSchedule@@QBEHXZ	; CAMSchedule::CAdvisePacket::IsZ
	test	eax, eax
	jne	$LN7@Advise
; Line 161
	mov	edx, DWORD PTR _pAdvise$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN6@Advise
	push	161					; 000000a1H
	push	OFFSET $SG81643
	push	OFFSET $SG81644
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN6@Advise:
; Line 163
	mov	eax, DWORD PTR _pAdvise$[ebp]
	cmp	DWORD PTR [eax+24], -1
	jne	SHORT $LN5@Advise
	push	163					; 000000a3H
	push	OFFSET $SG81648
	push	OFFSET $SG81649
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN5@Advise:
; Line 165
	mov	ecx, DWORD PTR _pAdvise$[ebp]
	cmp	DWORD PTR [ecx+28], 1
	jne	SHORT $LN4@Advise
; Line 167
	mov	esi, esp
	push	0
	push	1
	mov	edx, DWORD PTR _pAdvise$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	DWORD PTR __imp__ReleaseSemaphore@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 168
	mov	ecx, DWORD PTR _pAdvise$[ebp]
	mov	edx, DWORD PTR _pAdvise$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	add	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [ecx+12]
	adc	ecx, DWORD PTR [edx+20]
	mov	edx, DWORD PTR _pAdvise$[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	DWORD PTR [edx+12], ecx
; Line 169
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShuntHead@CAMSchedule@@AAEXXZ		; CAMSchedule::ShuntHead
; Line 171
	jmp	SHORT $LN3@Advise
$LN4@Advise:
; Line 173
	mov	eax, DWORD PTR _pAdvise$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN2@Advise
	push	173					; 000000adH
	push	OFFSET $SG81653
	push	OFFSET $SG81654
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@Advise:
; Line 174
	mov	esi, esp
	mov	ecx, DWORD PTR _pAdvise$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	DWORD PTR __imp__SetEvent@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN1@Advise
	push	174					; 000000aeH
	push	OFFSET $SG81656
	push	OFFSET $SG81657
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@Advise:
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+84], ecx
; Line 176
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?RemoveNext@CAdvisePacket@CAMSchedule@@QAEPAV12@XZ ; CAMSchedule::CAdvisePacket::RemoveNext
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Delete@CAMSchedule@@AAEXPAVCAdvisePacket@1@@Z ; CAMSchedule::Delete
$LN3@Advise:
; Line 179
	jmp	$LN8@Advise
$LN7@Advise:
; Line 183
	mov	eax, DWORD PTR _pAdvise$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	0
	push	10000					; 00002710H
	mov	edx, DWORD PTR _rtNextTime$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _rtNextTime$[ebp]
	push	eax
	call	__alldiv
	push	eax
	push	OFFSET $SG81658
	push	3
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 20					; 00000014H
; Line 185
	mov	ecx, DWORD PTR _rtNextTime$[ebp]
	mov	DWORD PTR $T82092[ebp], ecx
	mov	edx, DWORD PTR _rtNextTime$[ebp+4]
	mov	DWORD PTR $T82092[ebp+4], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82092[ebp]
	mov	edx, DWORD PTR $T82092[ebp+4]
; Line 186
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@Advise
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN17@Advise:
	DD	1
	DD	$LN16@Advise
$LN16@Advise:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN14@Advise
$LN14@Advise:
	DB	108					; 0000006cH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Advise@CAMSchedule@@QAE_JAB_J@Z$0:
	lea	ecx, DWORD PTR _lck$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?Advise@CAMSchedule@@QAE_JAB_J@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Advise@CAMSchedule@@QAE_JAB_J@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Advise@CAMSchedule@@QAE_JAB_J@Z ENDP			; CAMSchedule::Advise
PUBLIC	?InsertAfter@CAdvisePacket@CAMSchedule@@QAEXPAV12@@Z ; CAMSchedule::CAdvisePacket::InsertAfter
EXTRN	__imp__GetCurrentThreadId@0:PROC
EXTRN	?CritCheckIn@@YGHPAVCCritSec@@@Z:PROC		; CritCheckIn
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddAdvisePacket@CAMSchedule@@AAEKPAVCAdvisePacket@1@@Z
_TEXT	SEGMENT
tv169 = -36						; size = 4
tv168 = -32						; size = 4
tv83 = -28						; size = 4
tv146 = -24						; size = 4
tv140 = -20						; size = 4
_Result$ = -16						; size = 4
_p_n$ = -12						; size = 4
_p_prev$ = -8						; size = 4
_this$ = -4						; size = 4
_pPacket$ = 8						; size = 4
?AddAdvisePacket@CAMSchedule@@AAEKPAVCAdvisePacket@1@@Z PROC ; CAMSchedule::AddAdvisePacket, COMDAT
; _this$ = ecx
; Line 191
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 192
	mov	eax, DWORD PTR _pPacket$[ebp]
	mov	DWORD PTR tv140[ebp], eax
	mov	ecx, DWORD PTR tv140[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jl	SHORT $LN7@AddAdviseP@2
	jg	SHORT $LN11@AddAdviseP@2
	mov	edx, DWORD PTR tv140[ebp]
	cmp	DWORD PTR [edx+8], 0
	jb	SHORT $LN7@AddAdviseP@2
$LN11@AddAdviseP@2:
	mov	eax, DWORD PTR _pPacket$[ebp]
	mov	DWORD PTR tv146[ebp], eax
	mov	ecx, DWORD PTR tv146[ebp]
	cmp	DWORD PTR [ecx+12], 2147483647		; 7fffffffH
	jl	SHORT $LN8@AddAdviseP@2
	jg	SHORT $LN7@AddAdviseP@2
	mov	edx, DWORD PTR tv146[ebp]
	cmp	DWORD PTR [edx+8], -1
	jb	SHORT $LN8@AddAdviseP@2
$LN7@AddAdviseP@2:
	push	192					; 000000c0H
	push	OFFSET $SG81666
	push	OFFSET $SG81667
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN8@AddAdviseP@2:
; Line 193
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	push	eax
	call	?CritCheckIn@@YGHPAVCCritSec@@@Z	; CritCheckIn
	test	eax, eax
	jne	SHORT $LN6@AddAdviseP@2
	push	193					; 000000c1H
	push	OFFSET $SG81669
	push	OFFSET $SG81670
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN6@AddAdviseP@2:
; Line 195
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR _p_prev$[ebp], ecx
; Line 198
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	add	eax, 1
	mov	DWORD PTR tv83[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv83[ebp]
	mov	DWORD PTR [ecx+80], edx
	mov	eax, DWORD PTR _pPacket$[ebp]
	mov	ecx, DWORD PTR tv83[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR tv83[ebp]
	mov	DWORD PTR _Result$[ebp], edx
	jmp	SHORT $LN5@AddAdviseP@2
$LN4@AddAdviseP@2:
; Line 200
	mov	eax, DWORD PTR _p_n$[ebp]
	mov	DWORD PTR _p_prev$[ebp], eax
$LN5@AddAdviseP@2:
; Line 202
	mov	ecx, DWORD PTR _p_prev$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _p_n$[ebp], edx
; Line 203
	mov	eax, DWORD PTR _p_n$[ebp]
	mov	ecx, DWORD PTR _pPacket$[ebp]
	mov	DWORD PTR tv168[ebp], eax
	mov	DWORD PTR tv169[ebp], ecx
	mov	edx, DWORD PTR tv168[ebp]
	mov	eax, DWORD PTR tv169[ebp]
	mov	ecx, DWORD PTR [edx+12]
	cmp	ecx, DWORD PTR [eax+12]
	jl	SHORT $LN2@AddAdviseP@2
	jg	SHORT $LN13@AddAdviseP@2
	mov	edx, DWORD PTR tv168[ebp]
	mov	eax, DWORD PTR tv169[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+8]
	jb	SHORT $LN2@AddAdviseP@2
$LN13@AddAdviseP@2:
	jmp	SHORT $LN3@AddAdviseP@2
$LN2@AddAdviseP@2:
; Line 204
	jmp	SHORT $LN4@AddAdviseP@2
$LN3@AddAdviseP@2:
; Line 205
	mov	edx, DWORD PTR _pPacket$[ebp]
	push	edx
	mov	ecx, DWORD PTR _p_prev$[ebp]
	call	?InsertAfter@CAdvisePacket@CAMSchedule@@QAEXPAV12@@Z ; CAMSchedule::CAdvisePacket::InsertAfter
; Line 206
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+84], ecx
; Line 209
	mov	eax, DWORD PTR _pPacket$[ebp]
	push	0
	push	10000					; 00002710H
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	push	edx
	call	__alldiv
	push	edx
	push	eax
	mov	esi, esp
	call	DWORD PTR __imp__GetCurrentThreadId@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _pPacket$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	OFFSET $SG81678
	push	2
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 28					; 0000001cH
; Line 212
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	cmp	DWORD PTR _p_prev$[ebp], edx
	jne	SHORT $LN1@AddAdviseP@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	call	DWORD PTR __imp__SetEvent@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@AddAdviseP@2:
; Line 214
	mov	eax, DWORD PTR _Result$[ebp]
; Line 215
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddAdvisePacket@CAMSchedule@@AAEKPAVCAdvisePacket@1@@Z ENDP ; CAMSchedule::AddAdvisePacket
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?InsertAfter@CAdvisePacket@CAMSchedule@@QAEXPAV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
?InsertAfter@CAdvisePacket@CAMSchedule@@QAEXPAV12@@Z PROC ; CAMSchedule::CAdvisePacket::InsertAfter, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\dsschedule.h
; Line 57
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 58
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 60
	mov	esp, ebp
	pop	ebp
	ret	4
?InsertAfter@CAdvisePacket@CAMSchedule@@QAEXPAV12@@Z ENDP ; CAMSchedule::CAdvisePacket::InsertAfter
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Delete@CAMSchedule@@AAEXPAVCAdvisePacket@1@@Z
_TEXT	SEGMENT
$T82114 = -8						; size = 4
_this$ = -4						; size = 4
_pPacket$ = 8						; size = 4
?Delete@CAMSchedule@@AAEXPAVCAdvisePacket@1@@Z PROC	; CAMSchedule::Delete, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\schedule.cpp
; Line 218
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 219
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 5
	jb	SHORT $LN2@Delete
	mov	ecx, DWORD PTR _pPacket$[ebp]
	mov	DWORD PTR $T82114[ebp], ecx
	mov	edx, DWORD PTR $T82114[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 220
	jmp	SHORT $LN3@Delete
$LN2@Delete:
; Line 222
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Lock@CCritSec@@QAEXXZ			; CCritSec::Lock
; Line 223
	mov	eax, DWORD PTR _pPacket$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	mov	DWORD PTR [eax], edx
; Line 224
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pPacket$[ebp]
	mov	DWORD PTR [eax+128], ecx
; Line 225
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+132]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+132], eax
; Line 226
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Unlock@CCritSec@@QAEXXZ		; CCritSec::Unlock
$LN3@Delete:
; Line 228
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Delete@CAMSchedule@@AAEXPAVCAdvisePacket@1@@Z ENDP	; CAMSchedule::Delete
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ShuntHead@CAMSchedule@@AAEXXZ
_TEXT	SEGMENT
tv138 = -28						; size = 4
tv137 = -24						; size = 4
tv95 = -20						; size = 4
_pPacket$ = -16						; size = 4
_p_n$ = -12						; size = 4
_p_prev$ = -8						; size = 4
_this$ = -4						; size = 4
?ShuntHead@CAMSchedule@@AAEXXZ PROC			; CAMSchedule::ShuntHead, COMDAT
; _this$ = ecx
; Line 233
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 234
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _p_prev$[ebp], eax
; Line 237
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Lock@CCritSec@@QAEXXZ			; CCritSec::Lock
; Line 238
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _pPacket$[ebp], edx
; Line 243
	mov	eax, DWORD PTR _pPacket$[ebp]
	mov	DWORD PTR tv95[ebp], eax
	mov	ecx, DWORD PTR tv95[ebp]
	cmp	DWORD PTR [ecx+12], 2147483647		; 7fffffffH
	jl	SHORT $LN6@ShuntHead
	jg	SHORT $LN9@ShuntHead
	mov	edx, DWORD PTR tv95[ebp]
	cmp	DWORD PTR [edx+8], -1
	jb	SHORT $LN6@ShuntHead
$LN9@ShuntHead:
	push	243					; 000000f3H
	push	OFFSET $SG81694
	push	OFFSET $SG81695
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN6@ShuntHead:
; Line 246
	jmp	SHORT $LN5@ShuntHead
$LN4@ShuntHead:
	mov	eax, DWORD PTR _p_n$[ebp]
	mov	DWORD PTR _p_prev$[ebp], eax
$LN5@ShuntHead:
; Line 248
	mov	ecx, DWORD PTR _p_prev$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _p_n$[ebp], edx
; Line 249
	mov	eax, DWORD PTR _p_n$[ebp]
	mov	ecx, DWORD PTR _pPacket$[ebp]
	mov	DWORD PTR tv137[ebp], eax
	mov	DWORD PTR tv138[ebp], ecx
	mov	edx, DWORD PTR tv137[ebp]
	mov	eax, DWORD PTR tv138[ebp]
	mov	ecx, DWORD PTR [edx+12]
	cmp	ecx, DWORD PTR [eax+12]
	jl	SHORT $LN2@ShuntHead
	jg	SHORT $LN10@ShuntHead
	mov	edx, DWORD PTR tv137[ebp]
	mov	eax, DWORD PTR tv138[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+8]
	jbe	SHORT $LN2@ShuntHead
$LN10@ShuntHead:
	jmp	SHORT $LN3@ShuntHead
$LN2@ShuntHead:
; Line 250
	jmp	SHORT $LN4@ShuntHead
$LN3@ShuntHead:
; Line 252
	mov	edx, DWORD PTR _p_prev$[ebp]
	cmp	edx, DWORD PTR _pPacket$[ebp]
	je	SHORT $LN1@ShuntHead
; Line 254
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pPacket$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+16], edx
; Line 255
	mov	eax, DWORD PTR _p_prev$[ebp]
	mov	ecx, DWORD PTR _pPacket$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _pPacket$[ebp]
	mov	eax, DWORD PTR _p_n$[ebp]
	mov	DWORD PTR [edx], eax
$LN1@ShuntHead:
; Line 259
	mov	ecx, DWORD PTR _pPacket$[ebp]
	push	0
	push	10000					; 00002710H
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	push	eax
	call	__alldiv
	push	edx
	push	eax
	mov	ecx, DWORD PTR _pPacket$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	OFFSET $SG81701
	push	2
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 24					; 00000018H
; Line 261
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Unlock@CCritSec@@QAEXXZ		; CCritSec::Unlock
; Line 262
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ShuntHead@CAMSchedule@@AAEXXZ ENDP			; CAMSchedule::ShuntHead
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DumpLinkedList@CAMSchedule@@QAEXXZ
_TEXT	SEGMENT
_p$81707 = -12						; size = 4
_i$ = -8						; size = 4
_this$ = -4						; size = 4
?DumpLinkedList@CAMSchedule@@QAEXXZ PROC		; CAMSchedule::DumpLinkedList, COMDAT
; _this$ = ecx
; Line 267
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 268
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Lock@CCritSec@@QAEXXZ			; CCritSec::Lock
; Line 269
	mov	DWORD PTR _i$[ebp], 0
; Line 270
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	OFFSET $SG81706
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 272
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR _p$81707[ebp], ecx
; Line 273
	jmp	SHORT $LN3@DumpLinked
$LN2@DumpLinked:
; Line 274
	mov	edx, DWORD PTR _p$81707[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _p$81707[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@DumpLinked:
	cmp	DWORD PTR _p$81707[ebp], 0
	je	SHORT $LN1@DumpLinked
; Line 280
	mov	edx, DWORD PTR _p$81707[ebp]
	push	0
	push	10000					; 00002710H
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	push	ecx
	call	__alldiv
	push	edx
	push	eax
	mov	edx, DWORD PTR _p$81707[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	push	OFFSET $SG81711
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 28					; 0000001cH
; Line 281
	jmp	SHORT $LN2@DumpLinked
$LN1@DumpLinked:
; Line 282
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Unlock@CCritSec@@QAEXXZ		; CCritSec::Unlock
; Line 283
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DumpLinkedList@CAMSchedule@@QAEXXZ ENDP		; CAMSchedule::DumpLinkedList
_TEXT	ENDS
END
