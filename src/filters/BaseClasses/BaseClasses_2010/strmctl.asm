; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Downloads\MediaPoint\src\filters\BaseClasses\strmctl.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_IID_IAMFilterGraphCallback
CONST	SEGMENT
$SG81572 DB	'S', 00H, 't', 00H, 'o', 00H, 'p', 00H, 'A', 00H, 't', 00H
	DB	':', 00H, ' ', 00H, 'C', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e'
	DB	00H, 'l', 00H, ' ', 00H, 's', 00H, 't', 00H, 'o', 00H, 'p', 00H
	DB	00H, 00H
$SG81574 DB	'g', 00H, 'r', 00H, 'a', 00H, 'p', 00H, 'h', 00H, ' ', 00H
	DB	'w', 00H, 'i', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'b', 00H, 'e'
	DB	00H, 'g', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'b', 00H, 'y', 00H
	DB	' ', 00H, 'D', 00H, 'I', 00H, 'S', 00H, 'C', 00H, 'A', 00H, 'R'
	DB	00H, 'D', 00H, 'I', 00H, 'N', 00H, 'G', 00H, 00H, 00H
	ORG $+2
$SG81577 DB	'S', 00H, 't', 00H, 'o', 00H, 'p', 00H, 'A', 00H, 't', 00H
	DB	':', 00H, ' ', 00H, '%', 00H, 'd', 00H, 'm', 00H, 's', 00H, ' '
	DB	00H, 'e', 00H, 'x', 00H, 't', 00H, 'r', 00H, 'a', 00H, '=', 00H
	DB	'%', 00H, 'd', 00H, 00H, 00H
$SG81579 DB	'g', 00H, 'r', 00H, 'a', 00H, 'p', 00H, 'h', 00H, ' ', 00H
	DB	'w', 00H, 'i', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'b', 00H, 'e'
	DB	00H, 'g', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'b', 00H, 'y', 00H
	DB	' ', 00H, 'F', 00H, 'L', 00H, 'O', 00H, 'W', 00H, 'I', 00H, 'N'
	DB	00H, 'G', 00H, 00H, 00H
$SG81581 DB	'S', 00H, 't', 00H, 'o', 00H, 'p', 00H, 'A', 00H, 't', 00H
	DB	':', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 'w', 00H, 00H, 00H
$SG81591 DB	'S', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'A', 00H
	DB	't', 00H, ':', 00H, ' ', 00H, 'C', 00H, 'a', 00H, 'n', 00H, 'c'
	DB	00H, 'e', 00H, 'l', 00H, ' ', 00H, 's', 00H, 't', 00H, 'a', 00H
	DB	'r', 00H, 't', 00H, 00H, 00H
$SG81593 DB	'g', 00H, 'r', 00H, 'a', 00H, 'p', 00H, 'h', 00H, ' ', 00H
	DB	'w', 00H, 'i', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'b', 00H, 'e'
	DB	00H, 'g', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'b', 00H, 'y', 00H
	DB	' ', 00H, 'F', 00H, 'L', 00H, 'O', 00H, 'W', 00H, 'I', 00H, 'N'
	DB	00H, 'G', 00H, 00H, 00H
$SG81596 DB	'S', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'A', 00H
	DB	't', 00H, ':', 00H, ' ', 00H, '%', 00H, 'd', 00H, 'm', 00H, 's'
	DB	00H, 00H, 00H
$SG81598 DB	'g', 00H, 'r', 00H, 'a', 00H, 'p', 00H, 'h', 00H, ' ', 00H
	DB	'w', 00H, 'i', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'b', 00H, 'e'
	DB	00H, 'g', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'b', 00H, 'y', 00H
	DB	' ', 00H, 'D', 00H, 'I', 00H, 'S', 00H, 'C', 00H, 'A', 00H, 'R'
	DB	00H, 'D', 00H, 'I', 00H, 'N', 00H, 'G', 00H, 00H, 00H
	ORG $+2
$SG81600 DB	'S', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 'A', 00H
	DB	't', 00H, ':', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 'w', 00H, 00H
	DB	00H
	ORG $+2
$SG81613 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'm', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81614 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 's', 00H, 't', 00H, 'r', 00H, 'e'
	DB	00H, 'a', 00H, 'm', 00H, ' ', 00H, 's', 00H, 't', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG81622 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'm', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81623 DB	'C', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'C', 00H, 'h', 00H
	DB	'e', 00H, 'c', 00H, 'k', 00H, 'I', 00H, 'n', 00H, '(', 00H, '&'
	DB	00H, 'm', 00H, '_', 00H, 'C', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'S', 00H, 'e', 00H, 'c', 00H, ')', 00H, 00H, 00H
$SG81625 DB	'*', 00H, 's', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'E', 00H, 'C', 00H, '_', 00H, 'S'
	DB	00H, 'T', 00H, 'R', 00H, 'E', 00H, 'A', 00H, 'M', 00H, '_', 00H
	DB	'C', 00H, 'O', 00H, 'N', 00H, 'T', 00H, 'R', 00H, 'O', 00H, 'L'
	DB	00H, '_', 00H, 'S', 00H, 'T', 00H, 'O', 00H, 'P', 00H, 'P', 00H
	DB	'E', 00H, 'D', 00H, ' ', 00H, '(', 00H, '%', 00H, 'd', 00H, ')'
	DB	00H, 00H, 00H
$SG81631 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'm', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81632 DB	'C', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'C', 00H, 'h', 00H
	DB	'e', 00H, 'c', 00H, 'k', 00H, 'I', 00H, 'n', 00H, '(', 00H, '&'
	DB	00H, 'm', 00H, '_', 00H, 'C', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'S', 00H, 'e', 00H, 'c', 00H, ')', 00H, 00H, 00H
$SG81634 DB	'*', 00H, 's', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'E', 00H, 'C', 00H, '_', 00H, 'S'
	DB	00H, 'T', 00H, 'R', 00H, 'E', 00H, 'A', 00H, 'M', 00H, '_', 00H
	DB	'C', 00H, 'O', 00H, 'N', 00H, 'T', 00H, 'R', 00H, 'O', 00H, 'L'
	DB	00H, '_', 00H, 'S', 00H, 'T', 00H, 'A', 00H, 'R', 00H, 'T', 00H
	DB	'E', 00H, 'D', 00H, ' ', 00H, '(', 00H, '%', 00H, 'd', 00H, ')'
	DB	00H, 00H, 00H
$SG81640 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'm', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81641 DB	'C', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'C', 00H, 'h', 00H
	DB	'e', 00H, 'c', 00H, 'k', 00H, 'I', 00H, 'n', 00H, '(', 00H, '&'
	DB	00H, 'm', 00H, '_', 00H, 'C', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'S', 00H, 'e', 00H, 'c', 00H, ')', 00H, 00H, 00H
$SG81646 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'm', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81647 DB	'C', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'C', 00H, 'h', 00H
	DB	'e', 00H, 'c', 00H, 'k', 00H, 'I', 00H, 'n', 00H, '(', 00H, '&'
	DB	00H, 'm', 00H, '_', 00H, 'C', 00H, 'r', 00H, 'i', 00H, 't', 00H
	DB	'S', 00H, 'e', 00H, 'c', 00H, ')', 00H, 00H, 00H
$SG81655 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'm', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81656 DB	'!', 00H, 'm', 00H, '_', 00H, 'b', 00H, 'I', 00H, 's', 00H
	DB	'F', 00H, 'l', 00H, 'u', 00H, 's', 00H, 'h', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG81659 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'm', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81660 DB	'p', 00H, 'S', 00H, 'a', 00H, 'm', 00H, 'p', 00H, 'l', 00H
	DB	'e', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, 'p', 00H, 'S', 00H, 'a', 00H
	DB	'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'o'
	DB	00H, 'p', 00H, 00H, 00H
$SG81691 DB	'%', 00H, 'd', 00H, ' ', 00H, 's', 00H, 'e', 00H, 'n', 00H
	DB	'd', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'a', 00H, 'n'
	DB	00H, ' ', 00H, 'E', 00H, 'X', 00H, 'T', 00H, 'R', 00H, 'A', 00H
	DB	' ', 00H, 'f', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H
	DB	00H
$SG81699 DB	'.', 00H, '.', 00H, '\', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'm', 00H, 'c', 00H, 't', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+6
$SG81700 DB	'(', 00H, '(', 00H, '(', 00H, 'H', 00H, 'R', 00H, 'E', 00H
	DB	'S', 00H, 'U', 00H, 'L', 00H, 'T', 00H, ')', 00H, '(', 00H, 'm'
	DB	00H, '_', 00H, 'p', 00H, 'R', 00H, 'e', 00H, 'f', 00H, 'C', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, '-', 00H, '>', 00H, 'G'
	DB	00H, 'e', 00H, 't', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H
	DB	'(', 00H, '&', 00H, 'r', 00H, 't', 00H, 'N', 00H, 'o', 00H, 'w'
	DB	00H, ')', 00H, ')', 00H, ')', 00H, ' ', 00H, '>', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG81714 DB	'F', 00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'S', 00H, 'T', 00H, 'O'
	DB	00H, 'P', 00H, 'P', 00H, 'E', 00H, 'D', 00H, 00H, 00H
$SG81723 DB	'F', 00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'R', 00H, 'U', 00H, 'N'
	DB	00H, 'N', 00H, 'I', 00H, 'N', 00H, 'G', 00H, 00H, 00H
CONST	ENDS
;	COMDAT _IID_IAMFilterGraphCallback
CONST	SEGMENT
_IID_IAMFilterGraphCallback DD 056a868fdH
	DW	0ad4H
	DW	011ceH
	DB	0b0H
	DB	0a3H
	DB	00H
	DB	020H
	DB	0afH
	DB	0bH
	DB	0a7H
	DB	070H
CONST	ENDS
PUBLIC	??_7CBaseStreamControl@@6B@			; CBaseStreamControl::`vftable'
PUBLIC	??0IAMStreamControl@@QAE@XZ			; IAMStreamControl::IAMStreamControl
PUBLIC	??0CBaseStreamControl@@QAE@XZ			; CBaseStreamControl::CBaseStreamControl
PUBLIC	??_R4CBaseStreamControl@@6B@			; CBaseStreamControl::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBaseStreamControl@@@8			; CBaseStreamControl `RTTI Type Descriptor'
PUBLIC	??_R3CBaseStreamControl@@8			; CBaseStreamControl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseStreamControl@@8			; CBaseStreamControl::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseStreamControl@@8		; CBaseStreamControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IAMStreamControl@@8		; IAMStreamControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIAMStreamControl@@@8			; IAMStreamControl `RTTI Type Descriptor'
PUBLIC	??_R3IAMStreamControl@@8			; IAMStreamControl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IAMStreamControl@@8			; IAMStreamControl::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	?StartAt@CBaseStreamControl@@UAGJPB_JK@Z	; CBaseStreamControl::StartAt
PUBLIC	?StopAt@CBaseStreamControl@@UAGJPB_JHK@Z	; CBaseStreamControl::StopAt
PUBLIC	?GetInfo@CBaseStreamControl@@UAGJPAUAM_STREAM_INFO@@@Z ; CBaseStreamControl::GetInfo
EXTRN	??1CCritSec@@QAE@XZ:PROC			; CCritSec::~CCritSec
EXTRN	??0CAMEvent@@QAE@H@Z:PROC			; CAMEvent::CAMEvent
EXTRN	??0CCritSec@@QAE@XZ:PROC			; CCritSec::CCritSec
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	__purecall:PROC
;	COMDAT ??_R2IUnknown@@8
; File c:\downloads\mediapoint\src\filters\baseclasses\strmctl.cpp
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IAMStreamControl@@8
rdata$r	SEGMENT
??_R2IAMStreamControl@@8 DD FLAT:??_R1A@?0A@EA@IAMStreamControl@@8 ; IAMStreamControl::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IAMStreamControl@@8
rdata$r	SEGMENT
??_R3IAMStreamControl@@8 DD 00H				; IAMStreamControl::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IAMStreamControl@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIAMStreamControl@@@8
_DATA	SEGMENT
??_R0?AUIAMStreamControl@@@8 DD FLAT:??_7type_info@@6B@	; IAMStreamControl `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIAMStreamControl@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IAMStreamControl@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IAMStreamControl@@8 DD FLAT:??_R0?AUIAMStreamControl@@@8 ; IAMStreamControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAMStreamControl@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseStreamControl@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseStreamControl@@8 DD FLAT:??_R0?AVCBaseStreamControl@@@8 ; CBaseStreamControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseStreamControl@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseStreamControl@@8
rdata$r	SEGMENT
??_R2CBaseStreamControl@@8 DD FLAT:??_R1A@?0A@EA@CBaseStreamControl@@8 ; CBaseStreamControl::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IAMStreamControl@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CBaseStreamControl@@8
rdata$r	SEGMENT
??_R3CBaseStreamControl@@8 DD 00H			; CBaseStreamControl::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CBaseStreamControl@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseStreamControl@@@8
_DATA	SEGMENT
??_R0?AVCBaseStreamControl@@@8 DD FLAT:??_7type_info@@6B@ ; CBaseStreamControl `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseStreamControl@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CBaseStreamControl@@6B@
rdata$r	SEGMENT
??_R4CBaseStreamControl@@6B@ DD 00H			; CBaseStreamControl::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBaseStreamControl@@@8
	DD	FLAT:??_R3CBaseStreamControl@@8
rdata$r	ENDS
;	COMDAT ??_7CBaseStreamControl@@6B@
CONST	SEGMENT
??_7CBaseStreamControl@@6B@ DD FLAT:??_R4CBaseStreamControl@@6B@ ; CBaseStreamControl::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?StartAt@CBaseStreamControl@@UAGJPB_JK@Z
	DD	FLAT:?StopAt@CBaseStreamControl@@UAGJPB_JHK@Z
	DD	FLAT:?GetInfo@CBaseStreamControl@@UAGJPAUAM_STREAM_INFO@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CBaseStreamControl@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CBaseStreamControl@@QAE@XZ$0
__ehfuncinfo$??0CBaseStreamControl@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CBaseStreamControl@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT ??0CBaseStreamControl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CBaseStreamControl@@QAE@XZ PROC			; CBaseStreamControl::CBaseStreamControl, COMDAT
; _this$ = ecx
; Line 24
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CBaseStreamControl@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IAMStreamControl@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CBaseStreamControl@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 4096			; 00001000H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 4096			; 00001000H
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], -1
	mov	DWORD PTR [eax+20], 2147483647		; 7fffffffH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], -1
	mov	DWORD PTR [ecx+28], 2147483647		; 7fffffffH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+40], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0CCritSec@@QAE@XZ			; CCritSec::CCritSec
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??0CAMEvent@@QAE@H@Z			; CAMEvent::CAMEvent
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+92], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+100], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CBaseStreamControl@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	jmp	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
__ehhandler$??0CBaseStreamControl@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CBaseStreamControl@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CBaseStreamControl@@QAE@XZ ENDP			; CBaseStreamControl::CBaseStreamControl
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IAMStreamControl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IAMStreamControl@@QAE@XZ PROC			; IAMStreamControl::IAMStreamControl, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IAMStreamControl@@QAE@XZ ENDP			; IAMStreamControl::IAMStreamControl
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	?SetSyncSource@CBaseStreamControl@@QAEXPAUIReferenceClock@@@Z ; CBaseStreamControl::SetSyncSource
PUBLIC	??1CBaseStreamControl@@QAE@XZ			; CBaseStreamControl::~CBaseStreamControl
EXTRN	??1CAMEvent@@QAE@XZ:PROC			; CAMEvent::~CAMEvent
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CBaseStreamControl@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CBaseStreamControl@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CBaseStreamControl@@QAE@XZ$1
__ehfuncinfo$??1CBaseStreamControl@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CBaseStreamControl@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CBaseStreamControl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CBaseStreamControl@@QAE@XZ PROC			; CBaseStreamControl::~CBaseStreamControl, COMDAT
; _this$ = ecx
; Line 27
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CBaseStreamControl@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CBaseStreamControl@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 29
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetSyncSource@CBaseStreamControl@@QAEXPAUIReferenceClock@@@Z ; CBaseStreamControl::SetSyncSource
; Line 31
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??1CAMEvent@@QAE@XZ			; CAMEvent::~CAMEvent
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CBaseStreamControl@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	jmp	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
__unwindfunclet$??1CBaseStreamControl@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	jmp	??1CAMEvent@@QAE@XZ			; CAMEvent::~CAMEvent
__ehhandler$??1CBaseStreamControl@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CBaseStreamControl@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CBaseStreamControl@@QAE@XZ ENDP			; CBaseStreamControl::~CBaseStreamControl
PUBLIC	??1CAutoLock@@QAE@XZ				; CAutoLock::~CAutoLock
PUBLIC	??0CAutoLock@@QAE@PAVCCritSec@@@Z		; CAutoLock::CAutoLock
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\strmctl.h
xdata$x	SEGMENT
__unwindtable$?SetSyncSource@CBaseStreamControl@@QAEXPAUIReferenceClock@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetSyncSource@CBaseStreamControl@@QAEXPAUIReferenceClock@@@Z$0
__ehfuncinfo$?SetSyncSource@CBaseStreamControl@@QAEXPAUIReferenceClock@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetSyncSource@CBaseStreamControl@@QAEXPAUIReferenceClock@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?SetSyncSource@CBaseStreamControl@@QAEXPAUIReferenceClock@@@Z
_TEXT	SEGMENT
_lck$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pRefClock$ = 8						; size = 4
?SetSyncSource@CBaseStreamControl@@QAEXPAUIReferenceClock@@@Z PROC ; CBaseStreamControl::SetSyncSource, COMDAT
; _this$ = ecx
; Line 100
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetSyncSource@CBaseStreamControl@@QAEXPAUIReferenceClock@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 102
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+92], 0
	je	SHORT $LN2@SetSyncSou
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+92]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@SetSyncSou:
; Line 103
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRefClock$[ebp]
	mov	DWORD PTR [edx+92], eax
; Line 104
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+92], 0
	je	SHORT $LN1@SetSyncSou
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+92]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@SetSyncSou:
; Line 105
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@SetSyncSou
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN9@SetSyncSou:
	DD	1
	DD	$LN8@SetSyncSou
$LN8@SetSyncSou:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN6@SetSyncSou
$LN6@SetSyncSou:
	DB	108					; 0000006cH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetSyncSource@CBaseStreamControl@@QAEXPAUIReferenceClock@@@Z$0:
	lea	ecx, DWORD PTR _lck$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?SetSyncSource@CBaseStreamControl@@QAEXPAUIReferenceClock@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetSyncSource@CBaseStreamControl@@QAEXPAUIReferenceClock@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetSyncSource@CBaseStreamControl@@QAEXPAUIReferenceClock@@@Z ENDP ; CBaseStreamControl::SetSyncSource
EXTRN	?Lock@CCritSec@@QAEXXZ:PROC			; CCritSec::Lock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CAutoLock@@QAE@PAVCCritSec@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_plock$ = 8						; size = 4
??0CAutoLock@@QAE@PAVCCritSec@@@Z PROC			; CAutoLock::CAutoLock, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxutil.h
; Line 94
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _plock$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 97
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?Lock@CCritSec@@QAEXXZ			; CCritSec::Lock
; Line 98
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CAutoLock@@QAE@PAVCCritSec@@@Z ENDP			; CAutoLock::CAutoLock
_TEXT	ENDS
EXTRN	?Unlock@CCritSec@@QAEXXZ:PROC			; CCritSec::Unlock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CAutoLock@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CAutoLock@@QAE@XZ PROC				; CAutoLock::~CAutoLock, COMDAT
; _this$ = ecx
; Line 100
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Unlock@CCritSec@@QAEXXZ		; CCritSec::Unlock
; Line 102
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CAutoLock@@QAE@XZ ENDP				; CAutoLock::~CAutoLock
_TEXT	ENDS
PUBLIC	?Set@CAMEvent@@QAEXXZ				; CAMEvent::Set
PUBLIC	?CancelStop@CBaseStreamControl@@AAEXXZ		; CBaseStreamControl::CancelStop
EXTRN	?DbgLogInfo@@YAXKKPB_WZZ:PROC			; DbgLogInfo
EXTRN	__alldiv:PROC
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\strmctl.cpp
xdata$x	SEGMENT
__unwindtable$?StopAt@CBaseStreamControl@@UAGJPB_JHK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StopAt@CBaseStreamControl@@UAGJPB_JHK@Z$0
__ehfuncinfo$?StopAt@CBaseStreamControl@@UAGJPB_JHK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?StopAt@CBaseStreamControl@@UAGJPB_JHK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?StopAt@CBaseStreamControl@@UAGJPB_JHK@Z
_TEXT	SEGMENT
tv185 = -48						; size = 4
tv184 = -44						; size = 4
tv158 = -40						; size = 4
tv152 = -36						; size = 4
$T82093 = -32						; size = 4
$T82092 = -28						; size = 4
_lck$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_ptStop$ = 12						; size = 4
_bSendExtra$ = 16					; size = 4
_dwCookie$ = 20						; size = 4
?StopAt@CBaseStreamControl@@UAGJPB_JHK@Z PROC		; CBaseStreamControl::StopAt, COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?StopAt@CBaseStreamControl@@UAGJPB_JHK@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 36
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 37
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+44], 0
; Line 38
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+48], 0
; Line 39
	cmp	DWORD PTR _ptStop$[ebp], 0
	je	$LN5@StopAt
; Line 41
	mov	eax, DWORD PTR _ptStop$[ebp]
	mov	DWORD PTR tv152[ebp], eax
	mov	ecx, DWORD PTR tv152[ebp]
	cmp	DWORD PTR [ecx], -1
	jne	$LN4@StopAt
	mov	edx, DWORD PTR tv152[ebp]
	cmp	DWORD PTR [edx+4], 2147483647		; 7fffffffH
	jne	SHORT $LN4@StopAt
; Line 43
	push	OFFSET $SG81572
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 44
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CancelStop@CBaseStreamControl@@AAEXXZ	; CBaseStreamControl::CancelStop
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	jne	SHORT $LN3@StopAt
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv158[ebp], ecx
	mov	edx, DWORD PTR tv158[ebp]
	cmp	DWORD PTR [edx+20], 2147483647		; 7fffffffH
	jg	SHORT $LN3@StopAt
	jl	SHORT $LN9@StopAt
	mov	eax, DWORD PTR tv158[ebp]
	cmp	DWORD PTR [eax+16], -1
	jae	SHORT $LN3@StopAt
$LN9@StopAt:
; Line 48
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 4097			; 00001001H
; Line 49
	push	OFFSET $SG81574
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
$LN3@StopAt:
; Line 51
	mov	DWORD PTR $T82092[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82092[ebp]
	jmp	$LN6@StopAt
$LN4@StopAt:
; Line 54
	mov	edx, DWORD PTR _bSendExtra$[ebp]
	push	edx
	mov	eax, DWORD PTR _ptStop$[ebp]
	push	0
	push	10000					; 00002710H
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	__alldiv
	push	eax
	push	OFFSET $SG81577
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 20					; 00000014H
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	jne	SHORT $LN2@StopAt
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _ptStop$[ebp]
	mov	DWORD PTR tv184[ebp], ecx
	mov	DWORD PTR tv185[ebp], edx
	mov	eax, DWORD PTR tv184[ebp]
	mov	ecx, DWORD PTR tv185[ebp]
	mov	edx, DWORD PTR [eax+20]
	cmp	edx, DWORD PTR [ecx+4]
	jl	SHORT $LN2@StopAt
	jg	SHORT $LN10@StopAt
	mov	eax, DWORD PTR tv184[ebp]
	mov	ecx, DWORD PTR tv185[ebp]
	mov	edx, DWORD PTR [eax+16]
	cmp	edx, DWORD PTR [ecx]
	jbe	SHORT $LN2@StopAt
$LN10@StopAt:
; Line 58
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 4096			; 00001000H
; Line 59
	push	OFFSET $SG81579
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
$LN2@StopAt:
; Line 61
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _bSendExtra$[ebp]
	mov	DWORD PTR [ecx+44], edx
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptStop$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+24], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+28], ecx
; Line 63
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _dwCookie$[ebp]
	mov	DWORD PTR [edx+36], eax
; Line 64
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 4097			; 00001001H
; Line 66
	jmp	SHORT $LN1@StopAt
$LN5@StopAt:
; Line 68
	push	OFFSET $SG81581
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 70
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], 0
; Line 71
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], -1
	mov	DWORD PTR [eax+28], 2147483647		; 7fffffffH
; Line 72
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+36], 0
; Line 73
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 4097			; 00001001H
; Line 74
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 4096			; 00001000H
$LN1@StopAt:
; Line 77
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Set@CAMEvent@@QAEXXZ			; CAMEvent::Set
; Line 78
	mov	DWORD PTR $T82093[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82093[ebp]
$LN6@StopAt:
; Line 79
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@StopAt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN14@StopAt:
	DD	1
	DD	$LN13@StopAt
$LN13@StopAt:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN11@StopAt
$LN11@StopAt:
	DB	108					; 0000006cH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?StopAt@CBaseStreamControl@@UAGJPB_JHK@Z$0:
	lea	ecx, DWORD PTR _lck$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?StopAt@CBaseStreamControl@@UAGJPB_JHK@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?StopAt@CBaseStreamControl@@UAGJPB_JHK@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?StopAt@CBaseStreamControl@@UAGJPB_JHK@Z ENDP		; CBaseStreamControl::StopAt
PUBLIC	??_C@_1CG@LOEFFHJE@?$AAS?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AAm?$AA_?$AAh?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1HC@NPKKOGCJ@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@ ; `string'
EXTRN	?DbgAssert@@YGXPB_W0H@Z:PROC			; DbgAssert
EXTRN	__imp__SetEvent@4:PROC
;	COMDAT ??_C@_1CG@LOEFFHJE@?$AAS?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AAm?$AA_?$AAh?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CJ?$AA?$AA@
; File c:\downloads\mediapoint\src\filters\baseclasses\wxutil.h
CONST	SEGMENT
??_C@_1CG@LOEFFHJE@?$AAS?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AAm?$AA_?$AAh?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CJ?$AA?$AA@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, '(', 00H, 'm', 00H, '_', 00H, 'h', 00H, 'E', 00H, 'v'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HC@NPKKOGCJ@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@
CONST	SEGMENT
??_C@_1HC@NPKKOGCJ@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'D', 00H, 'o', 00H, 'w', 00H, 'n', 00H
	DB	'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'e', 00H, 'd', 00H, 'i', 00H, 'a', 00H, 'P', 00H, 'o', 00H
	DB	'i', 00H, 'n', 00H, 't', 00H, '\', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'B', 00H, 'a', 00H, 's', 00H, 'e'
	DB	00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 'e', 00H
	DB	's', 00H, '\', 00H, 'w', 00H, 'x', 00H, 'u', 00H, 't', 00H, 'i'
	DB	00H, 'l', 00H, '.', 00H, 'h', 00H, 00H, 00H	; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?Set@CAMEvent@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Set@CAMEvent@@QAEXXZ PROC				; CAMEvent::Set, COMDAT
; _this$ = ecx
; Line 125
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SetEvent@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN2@Set
	push	125					; 0000007dH
	push	OFFSET ??_C@_1HC@NPKKOGCJ@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@
	push	OFFSET ??_C@_1CG@LOEFFHJE@?$AAS?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AAm?$AA_?$AAh?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CJ?$AA?$AA@
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@Set:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Set@CAMEvent@@QAEXXZ ENDP				; CAMEvent::Set
_TEXT	ENDS
PUBLIC	?CancelStart@CBaseStreamControl@@AAEXXZ		; CBaseStreamControl::CancelStart
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\strmctl.cpp
xdata$x	SEGMENT
__unwindtable$?StartAt@CBaseStreamControl@@UAGJPB_JK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StartAt@CBaseStreamControl@@UAGJPB_JK@Z$0
__ehfuncinfo$?StartAt@CBaseStreamControl@@UAGJPB_JK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?StartAt@CBaseStreamControl@@UAGJPB_JK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?StartAt@CBaseStreamControl@@UAGJPB_JK@Z
_TEXT	SEGMENT
tv175 = -48						; size = 4
tv174 = -44						; size = 4
tv149 = -40						; size = 4
tv143 = -36						; size = 4
$T82112 = -32						; size = 4
$T82111 = -28						; size = 4
_lck$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_ptStart$ = 12						; size = 4
_dwCookie$ = 16						; size = 4
?StartAt@CBaseStreamControl@@UAGJPB_JK@Z PROC		; CBaseStreamControl::StartAt, COMDAT
; Line 83
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?StartAt@CBaseStreamControl@@UAGJPB_JK@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 85
	cmp	DWORD PTR _ptStart$[ebp], 0
	je	$LN5@StartAt
; Line 87
	mov	ecx, DWORD PTR _ptStart$[ebp]
	mov	DWORD PTR tv143[ebp], ecx
	mov	edx, DWORD PTR tv143[ebp]
	cmp	DWORD PTR [edx], -1
	jne	$LN4@StartAt
	mov	eax, DWORD PTR tv143[ebp]
	cmp	DWORD PTR [eax+4], 2147483647		; 7fffffffH
	jne	SHORT $LN4@StartAt
; Line 89
	push	OFFSET $SG81591
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 90
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CancelStart@CBaseStreamControl@@AAEXXZ	; CBaseStreamControl::CancelStart
; Line 93
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+100], 0
	jne	SHORT $LN3@StartAt
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv149[ebp], edx
	mov	eax, DWORD PTR tv149[ebp]
	cmp	DWORD PTR [eax+28], 2147483647		; 7fffffffH
	jg	SHORT $LN3@StartAt
	jl	SHORT $LN9@StartAt
	mov	ecx, DWORD PTR tv149[ebp]
	cmp	DWORD PTR [ecx+24], -1
	jae	SHORT $LN3@StartAt
$LN9@StartAt:
; Line 94
	push	OFFSET $SG81593
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 95
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 4096			; 00001000H
$LN3@StartAt:
; Line 97
	mov	DWORD PTR $T82111[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82111[ebp]
	jmp	$LN6@StartAt
$LN4@StartAt:
; Line 99
	mov	eax, DWORD PTR _ptStart$[ebp]
	push	0
	push	10000					; 00002710H
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	__alldiv
	push	eax
	push	OFFSET $SG81596
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 102
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	jne	SHORT $LN2@StartAt
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _ptStart$[ebp]
	mov	DWORD PTR tv174[ebp], ecx
	mov	DWORD PTR tv175[ebp], edx
	mov	eax, DWORD PTR tv174[ebp]
	mov	ecx, DWORD PTR tv175[ebp]
	mov	edx, DWORD PTR [eax+28]
	cmp	edx, DWORD PTR [ecx+4]
	jl	SHORT $LN2@StartAt
	jg	SHORT $LN10@StartAt
	mov	eax, DWORD PTR tv174[ebp]
	mov	ecx, DWORD PTR tv175[ebp]
	mov	edx, DWORD PTR [eax+24]
	cmp	edx, DWORD PTR [ecx]
	jb	SHORT $LN2@StartAt
$LN10@StartAt:
; Line 103
	push	OFFSET $SG81598
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 4097			; 00001001H
$LN2@StartAt:
; Line 106
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _ptStart$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+16], eax
	mov	edx, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+20], edx
; Line 107
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _dwCookie$[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 110
	jmp	SHORT $LN1@StartAt
$LN5@StartAt:
; Line 112
	push	OFFSET $SG81600
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 113
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], -1
	mov	DWORD PTR [edx+20], 2147483647		; 7fffffffH
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
; Line 115
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 4096			; 00001000H
$LN1@StartAt:
; Line 118
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Set@CAMEvent@@QAEXXZ			; CAMEvent::Set
; Line 119
	mov	DWORD PTR $T82112[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82112[ebp]
$LN6@StartAt:
; Line 120
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@StartAt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN14@StartAt:
	DD	1
	DD	$LN13@StartAt
$LN13@StartAt:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN11@StartAt
$LN11@StartAt:
	DB	108					; 0000006cH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?StartAt@CBaseStreamControl@@UAGJPB_JK@Z$0:
	lea	ecx, DWORD PTR _lck$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?StartAt@CBaseStreamControl@@UAGJPB_JK@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?StartAt@CBaseStreamControl@@UAGJPB_JK@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?StartAt@CBaseStreamControl@@UAGJPB_JK@Z ENDP		; CBaseStreamControl::StartAt
EXTRN	?DbgBreakPoint@@YGXPB_W0H@Z:PROC		; DbgBreakPoint
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetInfo@CBaseStreamControl@@UAGJPAUAM_STREAM_INFO@@@Z
_TEXT	SEGMENT
tv90 = -20						; size = 4
tv86 = -16						; size = 4
tv163 = -12						; size = 4
tv80 = -8						; size = 4
tv155 = -4						; size = 4
_this$ = 8						; size = 4
_pInfo$ = 12						; size = 4
?GetInfo@CBaseStreamControl@@UAGJPAUAM_STREAM_INFO@@@Z PROC ; CBaseStreamControl::GetInfo, COMDAT
; Line 124
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 125
	cmp	DWORD PTR _pInfo$[ebp], 0
	jne	SHORT $LN6@GetInfo
; Line 126
	mov	eax, -2147467261			; 80004003H
	jmp	$LN7@GetInfo
$LN6@GetInfo:
; Line 128
	mov	eax, DWORD PTR _pInfo$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+4], ecx
; Line 129
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR [eax+28]
	mov	DWORD PTR [edx+12], eax
; Line 130
	mov	ecx, DWORD PTR _pInfo$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR [ecx+16], eax
; Line 131
	mov	ecx, DWORD PTR _pInfo$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	DWORD PTR [ecx+20], eax
; Line 132
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	neg	edx
	sbb	edx, edx
	and	edx, 16					; 00000010H
	mov	eax, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [eax+24], edx
; Line 133
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv155[ebp], ecx
	mov	edx, DWORD PTR tv155[ebp]
	cmp	DWORD PTR [edx+16], -1
	jne	SHORT $LN9@GetInfo
	mov	eax, DWORD PTR tv155[ebp]
	cmp	DWORD PTR [eax+20], 2147483647		; 7fffffffH
	jne	SHORT $LN9@GetInfo
	mov	DWORD PTR tv80[ebp], 0
	jmp	SHORT $LN10@GetInfo
$LN9@GetInfo:
	mov	DWORD PTR tv80[ebp], 1
$LN10@GetInfo:
	mov	ecx, DWORD PTR _pInfo$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, DWORD PTR tv80[ebp]
	mov	eax, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [eax+24], edx
; Line 134
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv163[ebp], ecx
	mov	edx, DWORD PTR tv163[ebp]
	cmp	DWORD PTR [edx+24], -1
	jne	SHORT $LN11@GetInfo
	mov	eax, DWORD PTR tv163[ebp]
	cmp	DWORD PTR [eax+28], 2147483647		; 7fffffffH
	jne	SHORT $LN11@GetInfo
	mov	DWORD PTR tv86[ebp], 0
	jmp	SHORT $LN12@GetInfo
$LN11@GetInfo:
	mov	DWORD PTR tv86[ebp], 2
$LN12@GetInfo:
	mov	ecx, DWORD PTR _pInfo$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	or	edx, DWORD PTR tv86[ebp]
	mov	eax, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [eax+24], edx
; Line 135
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv90[ebp], edx
	cmp	DWORD PTR tv90[ebp], 4096		; 00001000H
	je	SHORT $LN2@GetInfo
	cmp	DWORD PTR tv90[ebp], 4097		; 00001001H
	je	SHORT $LN1@GetInfo
; Line 137
	push	137					; 00000089H
	push	OFFSET $SG81613
	push	OFFSET $SG81614
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN2@GetInfo:
; Line 139
	jmp	SHORT $LN4@GetInfo
$LN1@GetInfo:
; Line 141
	mov	eax, DWORD PTR _pInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	or	ecx, 4
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [edx+24], ecx
$LN4@GetInfo:
; Line 144
	xor	eax, eax
$LN7@GetInfo:
; Line 145
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetInfo@CBaseStreamControl@@UAGJPAUAM_STREAM_INFO@@@Z ENDP ; CBaseStreamControl::GetInfo
_TEXT	ENDS
PUBLIC	?ExecuteStop@CBaseStreamControl@@AAEXXZ		; CBaseStreamControl::ExecuteStop
EXTRN	?CritCheckIn@@YGHPAVCCritSec@@@Z:PROC		; CritCheckIn
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ExecuteStop@CBaseStreamControl@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ExecuteStop@CBaseStreamControl@@AAEXXZ PROC		; CBaseStreamControl::ExecuteStop, COMDAT
; _this$ = ecx
; Line 149
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 150
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	call	?CritCheckIn@@YGHPAVCCritSec@@@Z	; CritCheckIn
	test	eax, eax
	jne	SHORT $LN2@ExecuteSto
	push	150					; 00000096H
	push	OFFSET $SG81622
	push	OFFSET $SG81623
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@ExecuteSto:
; Line 151
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+4], eax
; Line 152
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+36], 0
	je	SHORT $LN1@ExecuteSto
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+96], 0
	je	SHORT $LN1@ExecuteSto
; Line 154
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	push	OFFSET $SG81625
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 155
	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	push	26					; 0000001aH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@ExecuteSto:
; Line 157
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CancelStop@CBaseStreamControl@@AAEXXZ	; CBaseStreamControl::CancelStop
; Line 158
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ExecuteStop@CBaseStreamControl@@AAEXXZ ENDP		; CBaseStreamControl::ExecuteStop
_TEXT	ENDS
PUBLIC	?ExecuteStart@CBaseStreamControl@@AAEXXZ	; CBaseStreamControl::ExecuteStart
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ExecuteStart@CBaseStreamControl@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ExecuteStart@CBaseStreamControl@@AAEXXZ PROC		; CBaseStreamControl::ExecuteStart, COMDAT
; _this$ = ecx
; Line 161
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	call	?CritCheckIn@@YGHPAVCCritSec@@@Z	; CritCheckIn
	test	eax, eax
	jne	SHORT $LN2@ExecuteSta
	push	162					; 000000a2H
	push	OFFSET $SG81631
	push	OFFSET $SG81632
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@ExecuteSta:
; Line 163
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 4096			; 00001000H
; Line 164
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+32], 0
	je	SHORT $LN1@ExecuteSta
; Line 166
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	push	OFFSET $SG81634
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 167
	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	push	27					; 0000001bH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@ExecuteSta:
; Line 169
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CancelStart@CBaseStreamControl@@AAEXXZ	; CBaseStreamControl::CancelStart
; Line 170
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ExecuteStart@CBaseStreamControl@@AAEXXZ ENDP		; CBaseStreamControl::ExecuteStart
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?CancelStop@CBaseStreamControl@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CancelStop@CBaseStreamControl@@AAEXXZ PROC		; CBaseStreamControl::CancelStop, COMDAT
; _this$ = ecx
; Line 173
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	call	?CritCheckIn@@YGHPAVCCritSec@@@Z	; CritCheckIn
	test	eax, eax
	jne	SHORT $LN1@CancelStop
	push	174					; 000000aeH
	push	OFFSET $SG81640
	push	OFFSET $SG81641
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@CancelStop:
; Line 175
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], -1
	mov	DWORD PTR [ecx+28], 2147483647		; 7fffffffH
; Line 176
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], 0
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 4096			; 00001000H
; Line 178
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CancelStop@CBaseStreamControl@@AAEXXZ ENDP		; CBaseStreamControl::CancelStop
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?CancelStart@CBaseStreamControl@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CancelStart@CBaseStreamControl@@AAEXXZ PROC		; CBaseStreamControl::CancelStart, COMDAT
; _this$ = ecx
; Line 181
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	call	?CritCheckIn@@YGHPAVCCritSec@@@Z	; CritCheckIn
	test	eax, eax
	jne	SHORT $LN1@CancelStar
	push	182					; 000000b6H
	push	OFFSET $SG81646
	push	OFFSET $SG81647
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@CancelStar:
; Line 183
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], -1
	mov	DWORD PTR [ecx+20], 2147483647		; 7fffffffH
; Line 184
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], 0
; Line 185
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CancelStart@CBaseStreamControl@@AAEXXZ ENDP		; CBaseStreamControl::CancelStart
_TEXT	ENDS
PUBLIC	?CheckSampleTimes@CBaseStreamControl@@AAE?AW4StreamControlState@1@PB_J0@Z ; CBaseStreamControl::CheckSampleTimes
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CheckSampleTimes@CBaseStreamControl@@AAE?AW4StreamControlState@1@PB_J0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CheckSampleTimes@CBaseStreamControl@@AAE?AW4StreamControlState@1@PB_J0@Z$0
__ehfuncinfo$?CheckSampleTimes@CBaseStreamControl@@AAE?AW4StreamControlState@1@PB_J0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CheckSampleTimes@CBaseStreamControl@@AAE?AW4StreamControlState@1@PB_J0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?CheckSampleTimes@CBaseStreamControl@@AAE?AW4StreamControlState@1@PB_J0@Z
_TEXT	SEGMENT
tv203 = -88						; size = 4
tv202 = -84						; size = 4
tv188 = -80						; size = 4
tv187 = -76						; size = 4
tv173 = -72						; size = 4
tv172 = -68						; size = 4
tv158 = -64						; size = 4
tv157 = -60						; size = 4
tv146 = -56						; size = 4
tv145 = -52						; size = 4
$T82145 = -48						; size = 4
$T82144 = -44						; size = 4
$T82143 = -40						; size = 4
$T82142 = -36						; size = 4
$T82141 = -32						; size = 4
_lck$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pSampleStart$ = 8					; size = 4
_pSampleStop$ = 12					; size = 4
?CheckSampleTimes@CBaseStreamControl@@AAE?AW4StreamControlState@1@PB_J0@Z PROC ; CBaseStreamControl::CheckSampleTimes, COMDAT
; _this$ = ecx
; Line 235
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CheckSampleTimes@CBaseStreamControl@@AAE?AW4StreamControlState@1@PB_J0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-88]
	mov	ecx, 19					; 00000013H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 236
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 238
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+40], 0
	je	SHORT $LN9@CheckSampl
	push	238					; 000000eeH
	push	OFFSET $SG81655
	push	OFFSET $SG81656
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN9@CheckSampl:
; Line 239
	cmp	DWORD PTR _pSampleStart$[ebp], 0
	je	SHORT $LN7@CheckSampl
	cmp	DWORD PTR _pSampleStop$[ebp], 0
	jne	SHORT $LN8@CheckSampl
$LN7@CheckSampl:
	push	239					; 000000efH
	push	OFFSET $SG81659
	push	OFFSET $SG81660
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN8@CheckSampl:
; Line 244
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pSampleStart$[ebp]
	mov	DWORD PTR tv145[ebp], edx
	mov	DWORD PTR tv146[ebp], eax
	mov	ecx, DWORD PTR tv145[ebp]
	mov	edx, DWORD PTR tv146[ebp]
	mov	eax, DWORD PTR [ecx+28]
	cmp	eax, DWORD PTR [edx+4]
	jl	$LN6@CheckSampl
	jg	SHORT $LN13@CheckSampl
	mov	ecx, DWORD PTR tv145[ebp]
	mov	edx, DWORD PTR tv146[ebp]
	mov	eax, DWORD PTR [ecx+24]
	cmp	eax, DWORD PTR [edx]
	jb	$LN6@CheckSampl
$LN13@CheckSampl:
; Line 246
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pSampleStop$[ebp]
	mov	DWORD PTR tv157[ebp], ecx
	mov	DWORD PTR tv158[ebp], edx
	mov	eax, DWORD PTR tv157[ebp]
	mov	ecx, DWORD PTR tv158[ebp]
	mov	edx, DWORD PTR [eax+20]
	cmp	edx, DWORD PTR [ecx+4]
	jl	SHORT $LN5@CheckSampl
	jg	SHORT $LN14@CheckSampl
	mov	eax, DWORD PTR tv157[ebp]
	mov	ecx, DWORD PTR tv158[ebp]
	mov	edx, DWORD PTR [eax+16]
	cmp	edx, DWORD PTR [ecx]
	jb	SHORT $LN5@CheckSampl
$LN14@CheckSampl:
; Line 247
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T82141[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82141[ebp]
	jmp	$LN10@CheckSampl
$LN5@CheckSampl:
; Line 248
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv172[ebp], edx
	mov	DWORD PTR tv173[ebp], eax
	mov	ecx, DWORD PTR tv172[ebp]
	mov	edx, DWORD PTR tv173[ebp]
	mov	eax, DWORD PTR [ecx+28]
	cmp	eax, DWORD PTR [edx+20]
	jg	SHORT $LN4@CheckSampl
	jl	SHORT $LN15@CheckSampl
	mov	ecx, DWORD PTR tv172[ebp]
	mov	edx, DWORD PTR tv173[ebp]
	mov	eax, DWORD PTR [ecx+24]
	cmp	eax, DWORD PTR [edx+16]
	jae	SHORT $LN4@CheckSampl
$LN15@CheckSampl:
; Line 249
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ExecuteStop@CBaseStreamControl@@AAEXXZ	; CBaseStreamControl::ExecuteStop
$LN4@CheckSampl:
; Line 250
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ExecuteStart@CBaseStreamControl@@AAEXXZ ; CBaseStreamControl::ExecuteStart
; Line 251
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T82142[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82142[ebp]
	jmp	$LN10@CheckSampl
$LN6@CheckSampl:
; Line 254
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pSampleStop$[ebp]
	mov	DWORD PTR tv187[ebp], eax
	mov	DWORD PTR tv188[ebp], ecx
	mov	edx, DWORD PTR tv187[ebp]
	mov	eax, DWORD PTR tv188[ebp]
	mov	ecx, DWORD PTR [edx+20]
	cmp	ecx, DWORD PTR [eax+4]
	jl	SHORT $LN3@CheckSampl
	jg	SHORT $LN16@CheckSampl
	mov	edx, DWORD PTR tv187[ebp]
	mov	eax, DWORD PTR tv188[ebp]
	mov	ecx, DWORD PTR [edx+16]
	cmp	ecx, DWORD PTR [eax]
	jb	SHORT $LN3@CheckSampl
$LN16@CheckSampl:
; Line 256
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ExecuteStop@CBaseStreamControl@@AAEXXZ	; CBaseStreamControl::ExecuteStop
; Line 257
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T82143[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82143[ebp]
	jmp	$LN10@CheckSampl
$LN3@CheckSampl:
; Line 260
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv202[ebp], ecx
	mov	DWORD PTR tv203[ebp], edx
	mov	eax, DWORD PTR tv202[ebp]
	mov	ecx, DWORD PTR tv203[ebp]
	mov	edx, DWORD PTR [eax+20]
	cmp	edx, DWORD PTR [ecx+28]
	jg	SHORT $LN2@CheckSampl
	jl	SHORT $LN17@CheckSampl
	mov	eax, DWORD PTR tv202[ebp]
	mov	ecx, DWORD PTR tv203[ebp]
	mov	edx, DWORD PTR [eax+16]
	cmp	edx, DWORD PTR [ecx+24]
	ja	SHORT $LN2@CheckSampl
$LN17@CheckSampl:
; Line 262
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ExecuteStart@CBaseStreamControl@@AAEXXZ ; CBaseStreamControl::ExecuteStart
; Line 263
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ExecuteStop@CBaseStreamControl@@AAEXXZ	; CBaseStreamControl::ExecuteStop
; Line 264
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR $T82144[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82144[ebp]
	jmp	SHORT $LN10@CheckSampl
; Line 266
	jmp	SHORT $LN1@CheckSampl
$LN2@CheckSampl:
; Line 268
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ExecuteStop@CBaseStreamControl@@AAEXXZ	; CBaseStreamControl::ExecuteStop
; Line 269
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ExecuteStart@CBaseStreamControl@@AAEXXZ ; CBaseStreamControl::ExecuteStart
; Line 270
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR $T82145[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82145[ebp]
	jmp	SHORT $LN10@CheckSampl
$LN1@CheckSampl:
; Line 272
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
$LN10@CheckSampl:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@CheckSampl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 88					; 00000058H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN21@CheckSampl:
	DD	1
	DD	$LN20@CheckSampl
$LN20@CheckSampl:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN18@CheckSampl
$LN18@CheckSampl:
	DB	108					; 0000006cH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CheckSampleTimes@CBaseStreamControl@@AAE?AW4StreamControlState@1@PB_J0@Z$0:
	lea	ecx, DWORD PTR _lck$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?CheckSampleTimes@CBaseStreamControl@@AAE?AW4StreamControlState@1@PB_J0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CheckSampleTimes@CBaseStreamControl@@AAE?AW4StreamControlState@1@PB_J0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CheckSampleTimes@CBaseStreamControl@@AAE?AW4StreamControlState@1@PB_J0@Z ENDP ; CBaseStreamControl::CheckSampleTimes
PUBLIC	?GetStreamEventHandle@CBaseStreamControl@@ABEPAXXZ ; CBaseStreamControl::GetStreamEventHandle
PUBLIC	?CheckStreamState@CBaseStreamControl@@QAE?AW4StreamControlState@1@PAUIMediaSample@@@Z ; CBaseStreamControl::CheckStreamState
EXTRN	__imp__WaitForSingleObject@8:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CheckStreamState@CBaseStreamControl@@QAE?AW4StreamControlState@1@PAUIMediaSample@@@Z
_TEXT	SEGMENT
tv184 = -72						; size = 4
tv72 = -68						; size = 4
_rtNow$81696 = -60					; size = 8
_lWait$ = -48						; size = 4
_state$ = -44						; size = 4
_bNoBufferTimes$ = -40					; size = 4
_rtBufferStop$ = -32					; size = 8
_rtBufferStart$ = -16					; size = 8
_this$ = -4						; size = 4
_pSample$ = 8						; size = 4
?CheckStreamState@CBaseStreamControl@@QAE?AW4StreamControlState@1@PAUIMediaSample@@@Z PROC ; CBaseStreamControl::CheckStreamState, COMDAT
; _this$ = ecx
; Line 276
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-72]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 281
	cmp	DWORD PTR _pSample$[ebp], 0
	je	SHORT $LN18@CheckStrea
	mov	esi, esp
	lea	eax, DWORD PTR _rtBufferStop$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rtBufferStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pSample$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pSample$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	SHORT $LN18@CheckStrea
	mov	DWORD PTR tv72[ebp], 0
	jmp	SHORT $LN19@CheckStrea
$LN18@CheckStrea:
	mov	DWORD PTR tv72[ebp], 1
$LN19@CheckStrea:
	mov	eax, DWORD PTR tv72[ebp]
	mov	DWORD PTR _bNoBufferTimes$[ebp], eax
$LN15@CheckStrea:
; Line 289
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+40], 0
	jne	SHORT $LN11@CheckStrea
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+100], 0
	jne	SHORT $LN12@CheckStrea
$LN11@CheckStrea:
; Line 290
	mov	eax, 4097				; 00001001H
	jmp	$LN16@CheckStrea
$LN12@CheckStrea:
; Line 292
	cmp	DWORD PTR _bNoBufferTimes$[ebp], 0
	je	SHORT $LN10@CheckStrea
; Line 294
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _state$[ebp], ecx
; Line 295
	jmp	$LN13@CheckStrea
; Line 296
	jmp	$LN9@CheckStrea
$LN10@CheckStrea:
; Line 297
	lea	edx, DWORD PTR _rtBufferStop$[ebp]
	push	edx
	lea	eax, DWORD PTR _rtBufferStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CheckSampleTimes@CBaseStreamControl@@AAE?AW4StreamControlState@1@PB_J0@Z ; CBaseStreamControl::CheckSampleTimes
	mov	DWORD PTR _state$[ebp], eax
; Line 298
	cmp	DWORD PTR _state$[ebp], 4096		; 00001000H
	jne	SHORT $LN8@CheckStrea
; Line 299
	jmp	$LN13@CheckStrea
$LN8@CheckStrea:
; Line 306
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+44], 0
	je	SHORT $LN9@CheckStrea
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+48], 0
	jne	SHORT $LN9@CheckStrea
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv184[ebp], eax
	mov	ecx, DWORD PTR tv184[ebp]
	cmp	DWORD PTR [ecx+24], -1
	jne	SHORT $LN9@CheckStrea
	mov	edx, DWORD PTR tv184[ebp]
	cmp	DWORD PTR [edx+28], 2147483647		; 7fffffffH
	jne	SHORT $LN9@CheckStrea
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN9@CheckStrea
; Line 307
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+48], 1
; Line 309
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	push	eax
	push	OFFSET $SG81691
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 310
	mov	DWORD PTR _state$[ebp], 4096		; 00001000H
; Line 311
	jmp	$LN13@CheckStrea
$LN9@CheckStrea:
; Line 318
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+92], 0
	jne	SHORT $LN6@CheckStrea
; Line 319
	jmp	$LN13@CheckStrea
	jmp	$LN14@CheckStrea
$LN6@CheckStrea:
; Line 325
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+100], 1
	jne	SHORT $LN4@CheckStrea
; Line 326
	mov	DWORD PTR _lWait$[ebp], -1
; Line 328
	jmp	SHORT $LN14@CheckStrea
$LN4@CheckStrea:
; Line 332
	mov	esi, esp
	lea	eax, DWORD PTR _rtNow$81696[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jge	SHORT $LN2@CheckStrea
	push	332					; 0000014cH
	push	OFFSET $SG81699
	push	OFFSET $SG81700
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@CheckStrea:
; Line 333
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _rtNow$81696[ebp]
	sub	edx, DWORD PTR [ecx+104]
	mov	eax, DWORD PTR _rtNow$81696[ebp+4]
	sbb	eax, DWORD PTR [ecx+108]
	mov	DWORD PTR _rtNow$81696[ebp], edx
	mov	DWORD PTR _rtNow$81696[ebp+4], eax
; Line 334
	mov	ecx, DWORD PTR _rtBufferStart$[ebp]
	sub	ecx, DWORD PTR _rtNow$81696[ebp]
	mov	edx, DWORD PTR _rtBufferStart$[ebp+4]
	sbb	edx, DWORD PTR _rtNow$81696[ebp+4]
	push	0
	push	10000					; 00002710H
	push	edx
	push	ecx
	call	__alldiv
	mov	DWORD PTR _lWait$[ebp], eax
; Line 335
	cmp	DWORD PTR _lWait$[ebp], 10		; 0000000aH
	jge	SHORT $LN14@CheckStrea
	jmp	SHORT $LN13@CheckStrea
$LN14@CheckStrea:
; Line 338
	mov	esi, esp
	mov	eax, DWORD PTR _lWait$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetStreamEventHandle@CBaseStreamControl@@ABEPAXXZ ; CBaseStreamControl::GetStreamEventHandle
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 258				; 00000102H
	jne	$LN15@CheckStrea
$LN13@CheckStrea:
; Line 340
	mov	eax, DWORD PTR _state$[ebp]
$LN16@CheckStrea:
; Line 341
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@CheckStrea
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 72					; 00000048H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN24@CheckStrea:
	DD	3
	DD	$LN23@CheckStrea
$LN23@CheckStrea:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN20@CheckStrea
	DD	-32					; ffffffe0H
	DD	8
	DD	$LN21@CheckStrea
	DD	-60					; ffffffc4H
	DD	8
	DD	$LN22@CheckStrea
$LN22@CheckStrea:
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	78					; 0000004eH
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
$LN21@CheckStrea:
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
$LN20@CheckStrea:
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
?CheckStreamState@CBaseStreamControl@@QAE?AW4StreamControlState@1@PAUIMediaSample@@@Z ENDP ; CBaseStreamControl::CheckStreamState
_TEXT	ENDS
PUBLIC	??BCAMEvent@@QBEPAXXZ				; CAMEvent::operator void *
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetStreamEventHandle@CBaseStreamControl@@ABEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetStreamEventHandle@CBaseStreamControl@@ABEPAXXZ PROC	; CBaseStreamControl::GetStreamEventHandle, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\strmctl.h
; Line 152
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??BCAMEvent@@QBEPAXXZ			; CAMEvent::operator void *
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetStreamEventHandle@CBaseStreamControl@@ABEPAXXZ ENDP	; CBaseStreamControl::GetStreamEventHandle
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BCAMEvent@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCAMEvent@@QBEPAXXZ PROC				; CAMEvent::operator void *, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxutil.h
; Line 123
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BCAMEvent@@QBEPAXXZ ENDP				; CAMEvent::operator void *
_TEXT	ENDS
PUBLIC	?NotifyFilterState@CBaseStreamControl@@QAEXW4_FilterState@@_J@Z ; CBaseStreamControl::NotifyFilterState
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\strmctl.cpp
xdata$x	SEGMENT
__unwindtable$?NotifyFilterState@CBaseStreamControl@@QAEXW4_FilterState@@_J@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?NotifyFilterState@CBaseStreamControl@@QAEXW4_FilterState@@_J@Z$0
__ehfuncinfo$?NotifyFilterState@CBaseStreamControl@@QAEXW4_FilterState@@_J@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?NotifyFilterState@CBaseStreamControl@@QAEXW4_FilterState@@_J@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?NotifyFilterState@CBaseStreamControl@@QAEXW4_FilterState@@_J@Z
_TEXT	SEGMENT
tv177 = -64						; size = 4
tv176 = -60						; size = 4
tv170 = -56						; size = 4
tv165 = -52						; size = 4
tv160 = -48						; size = 4
tv155 = -44						; size = 4
tv150 = -40						; size = 4
tv145 = -36						; size = 4
tv71 = -32						; size = 4
_lck$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_new_state$ = 8						; size = 4
_tStart$ = 12						; size = 8
?NotifyFilterState@CBaseStreamControl@@QAEXW4_FilterState@@_J@Z PROC ; CBaseStreamControl::NotifyFilterState, COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?NotifyFilterState@CBaseStreamControl@@QAEXW4_FilterState@@_J@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 346
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 349
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	cmp	edx, DWORD PTR _new_state$[ebp]
	jne	SHORT $LN13@NotifyFilt
; Line 350
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	jmp	$LN14@NotifyFilt
$LN13@NotifyFilt:
; Line 352
	mov	eax, DWORD PTR _new_state$[ebp]
	mov	DWORD PTR tv71[ebp], eax
	cmp	DWORD PTR tv71[ebp], 0
	je	SHORT $LN10@NotifyFilt
	cmp	DWORD PTR tv71[ebp], 2
	je	$LN2@NotifyFilt
	jmp	$LN1@NotifyFilt
$LN10@NotifyFilt:
; Line 356
	push	OFFSET $SG81714
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 362
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv145[ebp], ecx
	mov	edx, DWORD PTR tv145[ebp]
	cmp	DWORD PTR [edx+16], -1
	jne	SHORT $LN17@NotifyFilt
	mov	eax, DWORD PTR tv145[ebp]
	cmp	DWORD PTR [eax+20], 2147483647		; 7fffffffH
	je	SHORT $LN9@NotifyFilt
$LN17@NotifyFilt:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv150[ebp], ecx
	mov	edx, DWORD PTR tv150[ebp]
	cmp	DWORD PTR [edx+24], -1
	jne	SHORT $LN9@NotifyFilt
	mov	eax, DWORD PTR tv150[ebp]
	cmp	DWORD PTR [eax+28], 2147483647		; 7fffffffH
	jne	SHORT $LN9@NotifyFilt
; Line 363
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ExecuteStart@CBaseStreamControl@@AAEXXZ ; CBaseStreamControl::ExecuteStart
	jmp	$LN8@NotifyFilt
$LN9@NotifyFilt:
; Line 364
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv155[ebp], ecx
	mov	edx, DWORD PTR tv155[ebp]
	cmp	DWORD PTR [edx+24], -1
	jne	SHORT $LN18@NotifyFilt
	mov	eax, DWORD PTR tv155[ebp]
	cmp	DWORD PTR [eax+28], 2147483647		; 7fffffffH
	je	SHORT $LN7@NotifyFilt
$LN18@NotifyFilt:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv160[ebp], ecx
	mov	edx, DWORD PTR tv160[ebp]
	cmp	DWORD PTR [edx+16], -1
	jne	SHORT $LN7@NotifyFilt
	mov	eax, DWORD PTR tv160[ebp]
	cmp	DWORD PTR [eax+20], 2147483647		; 7fffffffH
	jne	SHORT $LN7@NotifyFilt
; Line 365
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ExecuteStop@CBaseStreamControl@@AAEXXZ	; CBaseStreamControl::ExecuteStop
	jmp	$LN8@NotifyFilt
$LN7@NotifyFilt:
; Line 366
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv165[ebp], ecx
	mov	edx, DWORD PTR tv165[ebp]
	cmp	DWORD PTR [edx+24], -1
	jne	SHORT $LN19@NotifyFilt
	mov	eax, DWORD PTR tv165[ebp]
	cmp	DWORD PTR [eax+28], 2147483647		; 7fffffffH
	je	SHORT $LN8@NotifyFilt
$LN19@NotifyFilt:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv170[ebp], ecx
	mov	edx, DWORD PTR tv170[ebp]
	cmp	DWORD PTR [edx+16], -1
	jne	SHORT $LN20@NotifyFilt
	mov	eax, DWORD PTR tv170[ebp]
	cmp	DWORD PTR [eax+20], 2147483647		; 7fffffffH
	je	SHORT $LN8@NotifyFilt
$LN20@NotifyFilt:
; Line 367
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv176[ebp], ecx
	mov	DWORD PTR tv177[ebp], edx
	mov	eax, DWORD PTR tv176[ebp]
	mov	ecx, DWORD PTR tv177[ebp]
	mov	edx, DWORD PTR [eax+20]
	cmp	edx, DWORD PTR [ecx+28]
	jg	SHORT $LN4@NotifyFilt
	jl	SHORT $LN21@NotifyFilt
	mov	eax, DWORD PTR tv176[ebp]
	mov	ecx, DWORD PTR tv177[ebp]
	mov	edx, DWORD PTR [eax+16]
	cmp	edx, DWORD PTR [ecx+24]
	ja	SHORT $LN4@NotifyFilt
$LN21@NotifyFilt:
; Line 368
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ExecuteStart@CBaseStreamControl@@AAEXXZ ; CBaseStreamControl::ExecuteStart
; Line 369
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ExecuteStop@CBaseStreamControl@@AAEXXZ	; CBaseStreamControl::ExecuteStop
; Line 370
	jmp	SHORT $LN8@NotifyFilt
$LN4@NotifyFilt:
; Line 371
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ExecuteStop@CBaseStreamControl@@AAEXXZ	; CBaseStreamControl::ExecuteStop
; Line 372
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ExecuteStart@CBaseStreamControl@@AAEXXZ ; CBaseStreamControl::ExecuteStart
$LN8@NotifyFilt:
; Line 377
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 4096			; 00001000H
; Line 378
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _new_state$[ebp]
	mov	DWORD PTR [ecx+100], edx
; Line 379
	jmp	SHORT $LN11@NotifyFilt
$LN2@NotifyFilt:
; Line 383
	push	OFFSET $SG81723
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 385
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _tStart$[ebp]
	mov	DWORD PTR [eax+104], ecx
	mov	edx, DWORD PTR _tStart$[ebp+4]
	mov	DWORD PTR [eax+108], edx
$LN1@NotifyFilt:
; Line 389
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _new_state$[ebp]
	mov	DWORD PTR [eax+100], ecx
$LN11@NotifyFilt:
; Line 392
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Set@CAMEvent@@QAEXXZ			; CAMEvent::Set
; Line 393
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
$LN14@NotifyFilt:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@NotifyFilt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN25@NotifyFilt:
	DD	1
	DD	$LN24@NotifyFilt
$LN24@NotifyFilt:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN22@NotifyFilt
$LN22@NotifyFilt:
	DB	108					; 0000006cH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NotifyFilterState@CBaseStreamControl@@QAEXW4_FilterState@@_J@Z$0:
	lea	ecx, DWORD PTR _lck$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?NotifyFilterState@CBaseStreamControl@@QAEXW4_FilterState@@_J@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?NotifyFilterState@CBaseStreamControl@@QAEXW4_FilterState@@_J@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?NotifyFilterState@CBaseStreamControl@@QAEXW4_FilterState@@_J@Z ENDP ; CBaseStreamControl::NotifyFilterState
PUBLIC	?Flushing@CBaseStreamControl@@QAEXH@Z		; CBaseStreamControl::Flushing
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Flushing@CBaseStreamControl@@QAEXH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Flushing@CBaseStreamControl@@QAEXH@Z$0
__ehfuncinfo$?Flushing@CBaseStreamControl@@QAEXH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Flushing@CBaseStreamControl@@QAEXH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Flushing@CBaseStreamControl@@QAEXH@Z
_TEXT	SEGMENT
_lck$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bInProgress$ = 8					; size = 4
?Flushing@CBaseStreamControl@@QAEXH@Z PROC		; CBaseStreamControl::Flushing, COMDAT
; _this$ = ecx
; Line 397
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Flushing@CBaseStreamControl@@QAEXH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 398
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 399
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _bInProgress$[ebp]
	mov	DWORD PTR [ecx+40], edx
; Line 400
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Set@CAMEvent@@QAEXXZ			; CAMEvent::Set
; Line 401
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Flushing
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN7@Flushing:
	DD	1
	DD	$LN6@Flushing
$LN6@Flushing:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@Flushing
$LN4@Flushing:
	DB	108					; 0000006cH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Flushing@CBaseStreamControl@@QAEXH@Z$0:
	lea	ecx, DWORD PTR _lck$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?Flushing@CBaseStreamControl@@QAEXH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Flushing@CBaseStreamControl@@QAEXH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Flushing@CBaseStreamControl@@QAEXH@Z ENDP		; CBaseStreamControl::Flushing
END
