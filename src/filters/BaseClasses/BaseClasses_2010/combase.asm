; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Downloads\MediaPoint\src\filters\BaseClasses\combase.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?hlibOLEAut32@@3PAUHINSTANCE__@@A		; hlibOLEAut32
PUBLIC	_IID_IAMFilterGraphCallback
PUBLIC	?m_cObjects@CBaseObject@@0JA			; CBaseObject::m_cObjects
_BSS	SEGMENT
?hlibOLEAut32@@3PAUHINSTANCE__@@A DD 01H DUP (?)	; hlibOLEAut32
?m_cObjects@CBaseObject@@0JA DD 01H DUP (?)		; CBaseObject::m_cObjects
_BSS	ENDS
CONST	SEGMENT
_szOle32Aut DB	'O', 00H, 'l', 00H, 'e', 00H, 'A', 00H, 'u', 00H, 't', 00H
	DB	'3', 00H, '2', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+2
$SG81615 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81616 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG81620 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81621 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
$SG81635 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81636 DB	'l', 00H, 'R', 00H, 'e', 00H, 'f', 00H, ' ', 00H, '>', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG81637 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, ' ', 00H, '%', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e'
	DB	00H, 'f', 00H, '+', 00H, '+', 00H, ' ', 00H, '=', 00H, ' ', 00H
	DB	'%', 00H, 'd', 00H, 00H, 00H
$SG81650 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81651 DB	'l', 00H, 'R', 00H, 'e', 00H, 'f', 00H, ' ', 00H, '>', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG81652 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, ' ', 00H, '%', 00H, 'd'
	DB	00H, ' ', 00H, 'r', 00H, 'e', 00H, 'f', 00H, '-', 00H, '-', 00H
	DB	' ', 00H, '=', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG81674 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81675 DB	'p', 00H, 'F', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG81677 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81678 DB	'p', 00H, 'S', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	'd', 00H, 00H, 00H
$SG81682 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81683 DB	'S', 00H, 'U', 00H, 'C', 00H, 'C', 00H, 'E', 00H, 'E', 00H
	DB	'D', 00H, 'E', 00H, 'D', 00H, '(', 00H, 'h', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG81685 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81686 DB	'p', 00H, 'U', 00H, 'n', 00H, 'k', 00H, 'n', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, '1', 00H, 00H, 00H
$SG81690 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81691 DB	'S', 00H, 'U', 00H, 'C', 00H, 'C', 00H, 'E', 00H, 'E', 00H
	DB	'D', 00H, 'E', 00H, 'D', 00H, '(', 00H, 'h', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG81693 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81694 DB	'p', 00H, 'U', 00H, 'n', 00H, 'k', 00H, 'n', 00H, 'o', 00H
	DB	'w', 00H, 'n', 00H, '2', 00H, 00H, 00H
CONST	ENDS
;	COMDAT _IID_IAMFilterGraphCallback
CONST	SEGMENT
_IID_IAMFilterGraphCallback DD 056a868fdH
	DW	0ad4H
	DW	011ceH
	DB	0b0H
	DB	0a3H
	DB	00H
	DB	020H
	DB	0afH
	DB	0bH
	DB	0a7H
	DB	070H
CONST	ENDS
PUBLIC	??0CBaseObject@@QAE@PB_W@Z			; CBaseObject::CBaseObject
EXTRN	?DbgRegisterObjectCreation@@YGKPBDPB_W@Z:PROC	; DbgRegisterObjectCreation
EXTRN	__imp__InterlockedIncrement@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\downloads\mediapoint\src\filters\baseclasses\combase.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT ??0CBaseObject@@QAE@PB_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pName$ = 8						; size = 4
??0CBaseObject@@QAE@PB_W@Z PROC				; CBaseObject::CBaseObject, COMDAT
; _this$ = ecx
; Line 23
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 25
	mov	esi, esp
	push	OFFSET ?m_cObjects@CBaseObject@@0JA	; CBaseObject::m_cObjects
	call	DWORD PTR __imp__InterlockedIncrement@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 30
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	push	0
	call	?DbgRegisterObjectCreation@@YGKPBDPB_W@Z ; DbgRegisterObjectCreation
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 36
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CBaseObject@@QAE@PB_W@Z ENDP				; CBaseObject::CBaseObject
_TEXT	ENDS
PUBLIC	??0CBaseObject@@QAE@PBD@Z			; CBaseObject::CBaseObject
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CBaseObject@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pName$ = 8						; size = 4
??0CBaseObject@@QAE@PBD@Z PROC				; CBaseObject::CBaseObject, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 42
	mov	esi, esp
	push	OFFSET ?m_cObjects@CBaseObject@@0JA	; CBaseObject::m_cObjects
	call	DWORD PTR __imp__InterlockedIncrement@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 45
	push	0
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	call	?DbgRegisterObjectCreation@@YGKPBDPB_W@Z ; DbgRegisterObjectCreation
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CBaseObject@@QAE@PBD@Z ENDP				; CBaseObject::CBaseObject
_TEXT	ENDS
PUBLIC	??1CBaseObject@@QAE@XZ				; CBaseObject::~CBaseObject
EXTRN	?DbgRegisterObjectDestruction@@YGHK@Z:PROC	; DbgRegisterObjectDestruction
EXTRN	__imp__FreeLibrary@4:PROC
EXTRN	__imp__InterlockedDecrement@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CBaseObject@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CBaseObject@@QAE@XZ PROC				; CBaseObject::~CBaseObject, COMDAT
; _this$ = ecx
; Line 55
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 57
	mov	esi, esp
	push	OFFSET ?m_cObjects@CBaseObject@@0JA	; CBaseObject::m_cObjects
	call	DWORD PTR __imp__InterlockedDecrement@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN2@CBaseObjec
; Line 58
	cmp	DWORD PTR ?hlibOLEAut32@@3PAUHINSTANCE__@@A, 0 ; hlibOLEAut32
	je	SHORT $LN2@CBaseObjec
; Line 59
	mov	esi, esp
	mov	eax, DWORD PTR ?hlibOLEAut32@@3PAUHINSTANCE__@@A ; hlibOLEAut32
	push	eax
	call	DWORD PTR __imp__FreeLibrary@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 61
	mov	DWORD PTR ?hlibOLEAut32@@3PAUHINSTANCE__@@A, 0 ; hlibOLEAut32
$LN2@CBaseObjec:
; Line 67
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?DbgRegisterObjectDestruction@@YGHK@Z	; DbgRegisterObjectDestruction
; Line 69
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CBaseObject@@QAE@XZ ENDP				; CBaseObject::~CBaseObject
_TEXT	ENDS
PUBLIC	?LoadOLEAut32@@YGPAUHINSTANCE__@@XZ		; LoadOLEAut32
EXTRN	__imp__LoadLibraryW@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?LoadOLEAut32@@YGPAUHINSTANCE__@@XZ
_TEXT	SEGMENT
?LoadOLEAut32@@YGPAUHINSTANCE__@@XZ PROC		; LoadOLEAut32, COMDAT
; Line 74
	push	ebp
	mov	ebp, esp
	push	esi
; Line 75
	cmp	DWORD PTR ?hlibOLEAut32@@3PAUHINSTANCE__@@A, 0 ; hlibOLEAut32
	jne	SHORT $LN1@LoadOLEAut
; Line 77
	mov	esi, esp
	push	OFFSET _szOle32Aut
	call	DWORD PTR __imp__LoadLibraryW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?hlibOLEAut32@@3PAUHINSTANCE__@@A, eax ; hlibOLEAut32
$LN1@LoadOLEAut:
; Line 80
	mov	eax, DWORD PTR ?hlibOLEAut32@@3PAUHINSTANCE__@@A ; hlibOLEAut32
; Line 81
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?LoadOLEAut32@@YGPAUHINSTANCE__@@XZ ENDP		; LoadOLEAut32
_TEXT	ENDS
PUBLIC	??0INonDelegatingUnknown@@QAE@XZ		; INonDelegatingUnknown::INonDelegatingUnknown
PUBLIC	??0CUnknown@@QAE@PB_WPAUIUnknown@@@Z		; CUnknown::CUnknown
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CUnknown@@QAE@PB_WPAUIUnknown@@@Z
_TEXT	SEGMENT
tv87 = -8						; size = 4
_this$ = -4						; size = 4
_pName$ = 8						; size = 4
_pUnk$ = 12						; size = 4
??0CUnknown@@QAE@PB_WPAUIUnknown@@@Z PROC		; CUnknown::CUnknown, COMDAT
; _this$ = ecx
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0INonDelegatingUnknown@@QAE@XZ
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CBaseObject@@QAE@PB_W@Z		; CBaseObject::CBaseObject
	cmp	DWORD PTR _pUnk$[ebp], 0
	je	SHORT $LN3@CUnknown
	mov	ecx, DWORD PTR _pUnk$[ebp]
	mov	DWORD PTR tv87[ebp], ecx
	jmp	SHORT $LN4@CUnknown
$LN3@CUnknown:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv87[ebp], edx
$LN4@CUnknown:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv87[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 106
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0CUnknown@@QAE@PB_WPAUIUnknown@@@Z ENDP		; CUnknown::CUnknown
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0INonDelegatingUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0INonDelegatingUnknown@@QAE@XZ PROC			; INonDelegatingUnknown::INonDelegatingUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0INonDelegatingUnknown@@QAE@XZ ENDP			; INonDelegatingUnknown::INonDelegatingUnknown
_TEXT	ENDS
PUBLIC	??0CUnknown@@QAE@PA_WPAUIUnknown@@PAJ@Z		; CUnknown::CUnknown
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CUnknown@@QAE@PA_WPAUIUnknown@@PAJ@Z
_TEXT	SEGMENT
tv87 = -8						; size = 4
_this$ = -4						; size = 4
_pName$ = 8						; size = 4
_pUnk$ = 12						; size = 4
_phr$ = 16						; size = 4
??0CUnknown@@QAE@PA_WPAUIUnknown@@PAJ@Z PROC		; CUnknown::CUnknown, COMDAT
; _this$ = ecx
; Line 114
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0INonDelegatingUnknown@@QAE@XZ
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CBaseObject@@QAE@PB_W@Z		; CBaseObject::CBaseObject
	cmp	DWORD PTR _pUnk$[ebp], 0
	je	SHORT $LN3@CUnknown@2
	mov	ecx, DWORD PTR _pUnk$[ebp]
	mov	DWORD PTR tv87[ebp], ecx
	jmp	SHORT $LN4@CUnknown@2
$LN3@CUnknown@2:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv87[ebp], edx
$LN4@CUnknown@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv87[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0CUnknown@@QAE@PA_WPAUIUnknown@@PAJ@Z ENDP		; CUnknown::CUnknown
_TEXT	ENDS
PUBLIC	??0CUnknown@@QAE@PBDPAUIUnknown@@@Z		; CUnknown::CUnknown
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CUnknown@@QAE@PBDPAUIUnknown@@@Z
_TEXT	SEGMENT
tv87 = -8						; size = 4
_this$ = -4						; size = 4
_pName$ = 8						; size = 4
_pUnk$ = 12						; size = 4
??0CUnknown@@QAE@PBDPAUIUnknown@@@Z PROC		; CUnknown::CUnknown, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0INonDelegatingUnknown@@QAE@XZ
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CBaseObject@@QAE@PBD@Z		; CBaseObject::CBaseObject
	cmp	DWORD PTR _pUnk$[ebp], 0
	je	SHORT $LN3@CUnknown@3
	mov	ecx, DWORD PTR _pUnk$[ebp]
	mov	DWORD PTR tv87[ebp], ecx
	jmp	SHORT $LN4@CUnknown@3
$LN3@CUnknown@3:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv87[ebp], edx
$LN4@CUnknown@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv87[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0CUnknown@@QAE@PBDPAUIUnknown@@@Z ENDP		; CUnknown::CUnknown
_TEXT	ENDS
PUBLIC	??0CUnknown@@QAE@PADPAUIUnknown@@PAJ@Z		; CUnknown::CUnknown
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CUnknown@@QAE@PADPAUIUnknown@@PAJ@Z
_TEXT	SEGMENT
tv87 = -8						; size = 4
_this$ = -4						; size = 4
_pName$ = 8						; size = 4
_pUnk$ = 12						; size = 4
_phr$ = 16						; size = 4
??0CUnknown@@QAE@PADPAUIUnknown@@PAJ@Z PROC		; CUnknown::CUnknown, COMDAT
; _this$ = ecx
; Line 126
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0INonDelegatingUnknown@@QAE@XZ
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CBaseObject@@QAE@PBD@Z		; CBaseObject::CBaseObject
	cmp	DWORD PTR _pUnk$[ebp], 0
	je	SHORT $LN3@CUnknown@4
	mov	ecx, DWORD PTR _pUnk$[ebp]
	mov	DWORD PTR tv87[ebp], ecx
	jmp	SHORT $LN4@CUnknown@4
$LN3@CUnknown@4:
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv87[ebp], edx
$LN4@CUnknown@4:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv87[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0CUnknown@@QAE@PADPAUIUnknown@@PAJ@Z ENDP		; CUnknown::CUnknown
_TEXT	ENDS
PUBLIC	_GetInterface@8
PUBLIC	_==@8
PUBLIC	?NonDelegatingQueryInterface@CUnknown@@UAGJABU_GUID@@PAPAX@Z ; CUnknown::NonDelegatingQueryInterface
EXTRN	_IID_IUnknown:BYTE
EXTRN	__imp__IsBadWritePtr@8:PROC
EXTRN	?DbgBreakPoint@@YGXPB_W0H@Z:PROC		; DbgBreakPoint
EXTRN	__imp__IsBadReadPtr@8:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?NonDelegatingQueryInterface@CUnknown@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?NonDelegatingQueryInterface@CUnknown@@UAGJABU_GUID@@PAPAX@Z PROC ; CUnknown::NonDelegatingQueryInterface, COMDAT
; Line 136
	push	ebp
	mov	ebp, esp
	push	esi
; Line 137
	cmp	DWORD PTR _ppv$[ebp], 0
	jne	SHORT $LN5@NonDelegat
	mov	eax, -2147467261			; 80004003H
	jmp	$LN6@NonDelegat
$LN5@NonDelegat:
; Line 138
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN4@NonDelegat
	push	138					; 0000008aH
	push	OFFSET $SG81615
	push	OFFSET $SG81616
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN4@NonDelegat:
	mov	esi, esp
	push	4
	mov	ecx, DWORD PTR _ppv$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsBadWritePtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@NonDelegat
	push	138					; 0000008aH
	push	OFFSET $SG81620
	push	OFFSET $SG81621
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN3@NonDelegat:
; Line 142
	push	OFFSET _IID_IUnknown
	mov	edx, DWORD PTR _riid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@NonDelegat
; Line 143
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_GetInterface@8
; Line 144
	xor	eax, eax
	jmp	SHORT $LN6@NonDelegat
; Line 145
	jmp	SHORT $LN6@NonDelegat
$LN2@NonDelegat:
; Line 146
	mov	edx, DWORD PTR _ppv$[ebp]
	mov	DWORD PTR [edx], 0
; Line 147
	mov	eax, -2147467262			; 80004002H
$LN6@NonDelegat:
; Line 149
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?NonDelegatingQueryInterface@CUnknown@@UAGJABU_GUID@@PAPAX@Z ENDP ; CUnknown::NonDelegatingQueryInterface
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
_TEXT	ENDS
PUBLIC	?NonDelegatingAddRef@CUnknown@@UAGKXZ		; CUnknown::NonDelegatingAddRef
EXTRN	?DbgLogInfo@@YAXKKPB_WZZ:PROC			; DbgLogInfo
EXTRN	?DbgAssert@@YGXPB_W0H@Z:PROC			; DbgAssert
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?NonDelegatingAddRef@CUnknown@@UAGKXZ
_TEXT	SEGMENT
$T82033 = -12						; size = 4
$T82032 = -8						; size = 4
_lRef$ = -4						; size = 4
_this$ = 8						; size = 4
?NonDelegatingAddRef@CUnknown@@UAGKXZ PROC		; CUnknown::NonDelegatingAddRef, COMDAT
; File c:\downloads\mediapoint\src\filters\baseclasses\combase.cpp
; Line 164
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 165
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__InterlockedIncrement@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lRef$[ebp], eax
; Line 166
	cmp	DWORD PTR _lRef$[ebp], 0
	jg	SHORT $LN1@NonDelegat@2
	push	166					; 000000a6H
	push	OFFSET $SG81635
	push	OFFSET $SG81636
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@NonDelegat@2:
; Line 168
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	OFFSET $SG81637
	push	3
	push	4
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 20					; 00000014H
; Line 169
	mov	DWORD PTR $T82032[ebp], 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR $T82033[ebp], eax
	lea	ecx, DWORD PTR $T82032[ebp]
	push	ecx
	lea	edx, DWORD PTR $T82033[ebp]
	push	edx
	call	??$ourmax@K@@YGKABK0@Z			; ourmax<unsigned long>
; Line 170
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?NonDelegatingAddRef@CUnknown@@UAGKXZ ENDP		; CUnknown::NonDelegatingAddRef
_TEXT	ENDS
PUBLIC	?NonDelegatingRelease@CUnknown@@UAGKXZ		; CUnknown::NonDelegatingRelease
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?NonDelegatingRelease@CUnknown@@UAGKXZ
_TEXT	SEGMENT
tv95 = -24						; size = 4
$T82041 = -20						; size = 4
$T82040 = -16						; size = 4
$T82037 = -12						; size = 4
$T82036 = -8						; size = 4
_lRef$ = -4						; size = 4
_this$ = 8						; size = 4
?NonDelegatingRelease@CUnknown@@UAGKXZ PROC		; CUnknown::NonDelegatingRelease, COMDAT
; Line 176
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__InterlockedDecrement@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lRef$[ebp], eax
; Line 180
	cmp	DWORD PTR _lRef$[ebp], 0
	jge	SHORT $LN3@NonDelegat@3
	push	180					; 000000b4H
	push	OFFSET $SG81650
	push	OFFSET $SG81651
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN3@NonDelegat@3:
; Line 183
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	OFFSET $SG81652
	push	3
	push	4
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 20					; 00000014H
; Line 184
	cmp	DWORD PTR _lRef$[ebp], 0
	jne	SHORT $LN2@NonDelegat@3
; Line 198
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 200
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T82037[ebp], edx
	mov	eax, DWORD PTR $T82037[ebp]
	mov	DWORD PTR $T82036[ebp], eax
	cmp	DWORD PTR $T82036[ebp], 0
	je	SHORT $LN6@NonDelegat@3
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T82036[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T82036[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN7@NonDelegat@3
$LN6@NonDelegat@3:
	mov	DWORD PTR tv95[ebp], 0
$LN7@NonDelegat@3:
; Line 201
	xor	eax, eax
	jmp	SHORT $LN4@NonDelegat@3
; Line 202
	jmp	SHORT $LN4@NonDelegat@3
$LN2@NonDelegat@3:
; Line 203
	mov	DWORD PTR $T82040[ebp], 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR $T82041[ebp], edx
	lea	eax, DWORD PTR $T82040[ebp]
	push	eax
	lea	ecx, DWORD PTR $T82041[ebp]
	push	ecx
	call	??$ourmax@K@@YGKABK0@Z			; ourmax<unsigned long>
$LN4@NonDelegat@3:
; Line 205
	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?NonDelegatingRelease@CUnknown@@UAGKXZ ENDP		; CUnknown::NonDelegatingRelease
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT _GetInterface@8
_TEXT	SEGMENT
_pUnk$ = 8						; size = 4
_ppv$ = 12						; size = 4
_GetInterface@8 PROC					; COMDAT
; Line 212
	push	ebp
	mov	ebp, esp
	push	esi
; Line 213
	cmp	DWORD PTR _ppv$[ebp], 0
	jne	SHORT $LN1@GetInterfa
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN2@GetInterfa
$LN1@GetInterfa:
; Line 214
	mov	eax, DWORD PTR _ppv$[ebp]
	mov	ecx, DWORD PTR _pUnk$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 215
	mov	edx, DWORD PTR _pUnk$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pUnk$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 216
	xor	eax, eax
$LN2@GetInterfa:
; Line 217
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_GetInterface@8 ENDP
_TEXT	ENDS
PUBLIC	?IsEqualObject@@YGHPAUIUnknown@@0@Z		; IsEqualObject
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsEqualObject@@YGHPAUIUnknown@@0@Z
_TEXT	SEGMENT
_hr$ = -28						; size = 4
_pUnknown2$ = -20					; size = 4
_pUnknown1$ = -8					; size = 4
_pFirst$ = 8						; size = 4
_pSecond$ = 12						; size = 4
?IsEqualObject@@YGHPAUIUnknown@@0@Z PROC		; IsEqualObject, COMDAT
; Line 223
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 227
	mov	eax, DWORD PTR _pFirst$[ebp]
	cmp	eax, DWORD PTR _pSecond$[ebp]
	jne	SHORT $LN7@IsEqualObj
; Line 228
	mov	eax, 1
	jmp	$LN8@IsEqualObj
$LN7@IsEqualObj:
; Line 237
	cmp	DWORD PTR _pFirst$[ebp], 0
	jne	SHORT $LN6@IsEqualObj
	push	237					; 000000edH
	push	OFFSET $SG81674
	push	OFFSET $SG81675
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN6@IsEqualObj:
; Line 238
	cmp	DWORD PTR _pSecond$[ebp], 0
	jne	SHORT $LN5@IsEqualObj
	push	238					; 000000eeH
	push	OFFSET $SG81677
	push	OFFSET $SG81678
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN5@IsEqualObj:
; Line 242
	mov	esi, esp
	lea	ecx, DWORD PTR _pUnknown1$[ebp]
	push	ecx
	push	OFFSET _IID_IUnknown
	mov	edx, DWORD PTR _pFirst$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pFirst$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 243
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN4@IsEqualObj
	push	243					; 000000f3H
	push	OFFSET $SG81682
	push	OFFSET $SG81683
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN4@IsEqualObj:
; Line 244
	cmp	DWORD PTR _pUnknown1$[ebp], 0
	jne	SHORT $LN3@IsEqualObj
	push	244					; 000000f4H
	push	OFFSET $SG81685
	push	OFFSET $SG81686
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN3@IsEqualObj:
; Line 246
	mov	esi, esp
	lea	eax, DWORD PTR _pUnknown2$[ebp]
	push	eax
	push	OFFSET _IID_IUnknown
	mov	ecx, DWORD PTR _pSecond$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pSecond$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 247
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@IsEqualObj
	push	247					; 000000f7H
	push	OFFSET $SG81690
	push	OFFSET $SG81691
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@IsEqualObj:
; Line 248
	cmp	DWORD PTR _pUnknown2$[ebp], 0
	jne	SHORT $LN1@IsEqualObj
	push	248					; 000000f8H
	push	OFFSET $SG81693
	push	OFFSET $SG81694
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@IsEqualObj:
; Line 252
	mov	edx, DWORD PTR _pUnknown1$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pUnknown1$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 253
	mov	eax, DWORD PTR _pUnknown2$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pUnknown2$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 254
	mov	ecx, DWORD PTR _pUnknown1$[ebp]
	xor	eax, eax
	cmp	ecx, DWORD PTR _pUnknown2$[ebp]
	sete	al
$LN8@IsEqualObj:
; Line 255
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@IsEqualObj
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN13@IsEqualObj:
	DD	2
	DD	$LN12@IsEqualObj
$LN12@IsEqualObj:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN10@IsEqualObj
	DD	-20					; ffffffecH
	DD	4
	DD	$LN11@IsEqualObj
$LN11@IsEqualObj:
	DB	112					; 00000070H
	DB	85					; 00000055H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	50					; 00000032H
	DB	0
$LN10@IsEqualObj:
	DB	112					; 00000070H
	DB	85					; 00000055H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	49					; 00000031H
	DB	0
?IsEqualObject@@YGHPAUIUnknown@@0@Z ENDP		; IsEqualObject
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??$ourmax@K@@YGKABK0@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
??$ourmax@K@@YGKABK0@Z PROC				; ourmax<unsigned long>, COMDAT
; Line 157
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 158
	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jbe	SHORT $LN3@ourmax
	mov	eax, DWORD PTR _a$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv65[ebp], ecx
	jmp	SHORT $LN4@ourmax
$LN3@ourmax:
	mov	edx, DWORD PTR _b$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv65[ebp], eax
$LN4@ourmax:
	mov	eax, DWORD PTR tv65[ebp]
; Line 159
	mov	esp, ebp
	pop	ebp
	ret	8
??$ourmax@K@@YGKABK0@Z ENDP				; ourmax<unsigned long>
_TEXT	ENDS
END
