; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Downloads\MediaPoint\src\filters\BaseClasses\transfrm.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_IID_IAMFilterGraphCallback
CONST	SEGMENT
$SG81583 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81584 DB	'"', 00H, 'C', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H, ':', 00H, ':', 00H
	DB	'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, 'm', 00H, '(', 00H, ')', 00H, ' ', 00H, 's', 00H
	DB	'h', 00H, 'o', 00H, 'u', 00H, 'l', 00H, 'd', 00H, ' ', 00H, 'n'
	DB	00H, 'e', 00H, 'v', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'b', 00H
	DB	'e', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'e'
	DB	00H, 'd', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG81600 DB	'X', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H, ' ', 00H
	DB	'I', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG81601 DB	'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'f', 00H
	DB	'o', 00H, 'r', 00H, 'm', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'p'
	DB	00H, 'u', 00H, 't', 00H, ' ', 00H, 'p', 00H, 'i', 00H, 'n', 00H
	DB	00H, 00H
$SG81604 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81605 DB	'S', 00H, 'U', 00H, 'C', 00H, 'C', 00H, 'E', 00H, 'E', 00H
	DB	'D', 00H, 'E', 00H, 'D', 00H, '(', 00H, 'h', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG81612 DB	'X', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'm', 00H, ' ', 00H
	DB	'O', 00H, 'u', 00H, 't', 00H, 00H, 00H
$SG81613 DB	'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'f', 00H
	DB	'o', 00H, 'r', 00H, 'm', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't'
	DB	00H, 'p', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'p', 00H, 'i', 00H
	DB	'n', 00H, 00H, 00H
	ORG $+2
$SG81616 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81617 DB	'S', 00H, 'U', 00H, 'C', 00H, 'C', 00H, 'E', 00H, 'E', 00H
	DB	'D', 00H, 'E', 00H, 'D', 00H, '(', 00H, 'h', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG81635 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81636 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG81640 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81641 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
$SG81643 DB	'I', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG81646 DB	'O', 00H, 'u', 00H, 't', 00H, 00H, 00H
$SG81688 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+4
$SG81689 DB	'm', 00H, '_', 00H, 'p', 00H, 'O', 00H, 'u', 00H, 't', 00H
	DB	'p', 00H, 'u', 00H, 't', 00H, '-', 00H, '>', 00H, 'm', 00H, '_'
	DB	00H, 'p', 00H, 'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '!', 00H, '='
	DB	00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
$SG81694 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81695 DB	'p', 00H, 'O', 00H, 'u', 00H, 't', 00H, 'S', 00H, 'a', 00H
	DB	'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG81707 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81708 DB	'(', 00H, '(', 00H, '(', 00H, 'H', 00H, 'R', 00H, 'E', 00H
	DB	'S', 00H, 'U', 00H, 'L', 00H, 'T', 00H, ')', 00H, '(', 00H, 'p'
	DB	00H, 'O', 00H, 'u', 00H, 't', 00H, 'S', 00H, 'a', 00H, 'm', 00H
	DB	'p', 00H, 'l', 00H, 'e', 00H, '2', 00H, '-', 00H, '>', 00H, 'G'
	DB	00H, 'e', 00H, 't', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'e', 00H, 's', 00H, '('
	DB	00H, ' ', 00H, '(', 00H, '(', 00H, 'L', 00H, 'O', 00H, 'N', 00H
	DB	'G', 00H, ')', 00H, '(', 00H, 'L', 00H, 'O', 00H, 'N', 00H, 'G'
	DB	00H, '_', 00H, 'P', 00H, 'T', 00H, 'R', 00H, ')', 00H, '&', 00H
	DB	'(', 00H, '(', 00H, '(', 00H, 'A', 00H, 'M', 00H, '_', 00H, 'S'
	DB	00H, 'A', 00H, 'M', 00H, 'P', 00H, 'L', 00H, 'E', 00H, '2', 00H
	DB	'_', 00H, 'P', 00H, 'R', 00H, 'O', 00H, 'P', 00H, 'E', 00H, 'R'
	DB	00H, 'T', 00H, 'I', 00H, 'E', 00H, 'S', 00H, ' ', 00H, '*', 00H
	DB	')', 00H, '0', 00H, ')', 00H, '-', 00H, '>', 00H, 't', 00H, 'S'
	DB	00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, ')', 00H, ')', 00H
	DB	',', 00H, ' ', 00H, '(', 00H, 'P', 00H, 'B', 00H, 'Y', 00H, 'T'
	DB	00H, 'E', 00H, ')', 00H, '&', 00H, 'O', 00H, 'u', 00H, 't', 00H
	DB	'P', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 's', 00H, ')', 00H, ')'
	DB	00H, ')', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '0', 00H
	DB	')', 00H, 00H, 00H
	ORG $+2
$SG81733 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81734 DB	'p', 00H, 'S', 00H, 'a', 00H, 'm', 00H, 'p', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG81737 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81738 DB	'm', 00H, '_', 00H, 'p', 00H, 'O', 00H, 'u', 00H, 't', 00H
	DB	'p', 00H, 'u', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' '
	DB	00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
$SG81745 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'f', 00H, 'r', 00H, 'o', 00H, 'm', 00H, ' ', 00H, 't', 00H, 'r'
	DB	00H, 'a', 00H, 'n', 00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H
	DB	'm', 00H, 00H, 00H
	ORG $+2
$SG81774 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81775 DB	'm', 00H, '_', 00H, 'p', 00H, 'O', 00H, 'u', 00H, 't', 00H
	DB	'p', 00H, 'u', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' '
	DB	00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
$SG81783 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81784 DB	'm', 00H, '_', 00H, 'p', 00H, 'I', 00H, 'n', 00H, 'p', 00H
	DB	'u', 00H, 't', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'N'
	DB	00H, 'U', 00H, 'L', 00H, 'L', 00H, ' ', 00H, '|', 00H, '|', 00H
	DB	' ', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, 'p', 00H, 'u', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H
	DB	' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
$SG81789 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81790 DB	'm', 00H, '_', 00H, 'p', 00H, 'I', 00H, 'n', 00H, 'p', 00H
	DB	'u', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG81792 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81793 DB	'm', 00H, '_', 00H, 'p', 00H, 'O', 00H, 'u', 00H, 't', 00H
	DB	'p', 00H, 'u', 00H, 't', 00H, 00H, 00H
$SG81829 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+4
$SG81830 DB	'm', 00H, '_', 00H, 'p', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'F'
	DB	00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H, '-', 00H
	DB	'>', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, 'p', 00H, 'u', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H
	DB	' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
$SG81835 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81836 DB	'I', 00H, 's', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 'n', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'e', 00H, 'd', 00H, '(', 00H, ')'
	DB	00H, 00H, 00H
$SG81851 DB	'C', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H
	DB	'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'I', 00H, 'n', 00H, 'p'
	DB	00H, 'u', 00H, 't', 00H, 'P', 00H, 'i', 00H, 'n', 00H, ':', 00H
	DB	':', 00H, 'C', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's'
	DB	00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'I', 00H, 'n', 00H
	DB	'p', 00H, 'u', 00H, 't', 00H, 'P', 00H, 'i', 00H, 'n', 00H, 00H
	DB	00H
	ORG $+2
$SG81865 DB	'C', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H
	DB	'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'I', 00H, 'n', 00H, 'p'
	DB	00H, 'u', 00H, 't', 00H, 'P', 00H, 'i', 00H, 'n', 00H, ':', 00H
	DB	':', 00H, 'C', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's'
	DB	00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'I', 00H, 'n', 00H
	DB	'p', 00H, 'u', 00H, 't', 00H, 'P', 00H, 'i', 00H, 'n', 00H, 00H
	DB	00H
	ORG $+2
$SG81877 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81878 DB	'I', 00H, 's', 00H, 'S', 00H, 't', 00H, 'o', 00H, 'p', 00H
	DB	'p', 00H, 'e', 00H, 'd', 00H, '(', 00H, ')', 00H, 00H, 00H
$SG81904 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81905 DB	'S', 00H, 'U', 00H, 'C', 00H, 'C', 00H, 'E', 00H, 'E', 00H
	DB	'D', 00H, 'E', 00H, 'D', 00H, '(', 00H, 'm', 00H, '_', 00H, 'p'
	DB	00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'f', 00H
	DB	'o', 00H, 'r', 00H, 'm', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, '-', 00H, '>', 00H, 'C', 00H, 'h', 00H
	DB	'e', 00H, 'c', 00H, 'k', 00H, 'I', 00H, 'n', 00H, 'p', 00H, 'u'
	DB	00H, 't', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, '(', 00H
	DB	'm', 00H, 't', 00H, 'I', 00H, 'n', 00H, ')', 00H, ')', 00H, 00H
	DB	00H
$SG81921 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81922 DB	'm', 00H, '_', 00H, 'p', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'F'
	DB	00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H, '-', 00H
	DB	'>', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, 'p', 00H, 'u', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H
	DB	' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
$SG81938 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+4
$SG81939 DB	'm', 00H, '_', 00H, 'p', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'F'
	DB	00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H, '-', 00H
	DB	'>', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, 'p', 00H, 'u', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H
	DB	' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
$SG81956 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81957 DB	'p', 00H, 'S', 00H, 'a', 00H, 'm', 00H, 'p', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+4
$SG81974 DB	'C', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H
	DB	'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, 'p', 00H, 'u', 00H, 't', 00H, 'P', 00H, 'i', 00H, 'n', 00H
	DB	':', 00H, ':', 00H, 'C', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'O', 00H
	DB	'u', 00H, 't', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'P', 00H, 'i'
	DB	00H, 'n', 00H, 00H, 00H
	ORG $+6
$SG81988 DB	'C', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H
	DB	'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, 'p', 00H, 'u', 00H, 't', 00H, 'P', 00H, 'i', 00H, 'n', 00H
	DB	':', 00H, ':', 00H, 'C', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'O', 00H
	DB	'u', 00H, 't', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'P', 00H, 'i'
	DB	00H, 'n', 00H, 00H, 00H
	ORG $+6
$SG81992 DB	'C', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H
	DB	'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, 'p', 00H, 'u', 00H, 't', 00H, 'P', 00H, 'i', 00H, 'n', 00H
	DB	':', 00H, ':', 00H, '~', 00H, 'C', 00H, 'T', 00H, 'r', 00H, 'a'
	DB	00H, 'n', 00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'O', 00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'P'
	DB	00H, 'i', 00H, 'n', 00H, 00H, 00H
$SG82004 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82005 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG82009 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82010 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
$SG82014 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+4
$SG82015 DB	'm', 00H, '_', 00H, 'p', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'F'
	DB	00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H, '-', 00H
	DB	'>', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'I', 00H, 'n', 00H, 'p'
	DB	00H, 'u', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG82027 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+4
$SG82028 DB	'm', 00H, '_', 00H, 'p', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'F'
	DB	00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H, '-', 00H
	DB	'>', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'I', 00H, 'n', 00H, 'p'
	DB	00H, 'u', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG82038 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82039 DB	'I', 00H, 's', 00H, 'S', 00H, 't', 00H, 'o', 00H, 'p', 00H
	DB	'p', 00H, 'e', 00H, 'd', 00H, '(', 00H, ')', 00H, 00H, 00H
$SG82052 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+4
$SG82053 DB	'm', 00H, '_', 00H, 'p', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'F'
	DB	00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H, '-', 00H
	DB	'>', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'I', 00H, 'n', 00H, 'p'
	DB	00H, 'u', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG82062 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+4
$SG82063 DB	'm', 00H, '_', 00H, 'p', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'F'
	DB	00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H, '-', 00H
	DB	'>', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'I', 00H, 'n', 00H, 'p'
	DB	00H, 'u', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG82065 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+4
$SG82066 DB	'm', 00H, '_', 00H, 'p', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'F'
	DB	00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H, '-', 00H
	DB	'>', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'I', 00H, 'n', 00H, 'p'
	DB	00H, 'u', 00H, 't', 00H, '-', 00H, '>', 00H, 'C', 00H, 'u', 00H
	DB	'r', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'M', 00H, 'e'
	DB	00H, 'd', 00H, 'i', 00H, 'a', 00H, 'T', 00H, 'y', 00H, 'p', 00H
	DB	'e', 00H, '(', 00H, ')', 00H, '.', 00H, 'I', 00H, 's', 00H, 'V'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, '(', 00H, ')', 00H
	DB	00H, 00H
	ORG $+2
$SG82071 DB	'*', 00H, '*', 00H, '*', 00H, ' ', 00H, 'T', 00H, 'h', 00H
	DB	'i', 00H, 's', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 't'
	DB	00H, 'e', 00H, 'r', 00H, ' ', 00H, 'i', 00H, 's', 00H, ' ', 00H
	DB	'a', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 'p', 00H, 't', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, ' ', 00H, 'a', 00H, 'n', 00H, ' ', 00H
	DB	'o', 00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H, 't', 00H, ' '
	DB	00H, 'm', 00H, 'e', 00H, 'd', 00H, 'i', 00H, 'a', 00H, ' ', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 00H, 00H
	ORG $+4
$SG82072 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 't', 00H, 'h', 00H
	DB	'a', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H, ' ', 00H, 'c'
	DB	00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H, 'c', 00H
	DB	'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'l'
	DB	00H, 'y', 00H, ' ', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, ' ', 00H, 't'
	DB	00H, 'o', 00H, '.', 00H, ' ', 00H, ' ', 00H, 'I', 00H, ' ', 00H
	DB	'h', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 00H, 00H
	ORG $+4
$SG82073 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'''', 00H, 's', 00H, ' ', 00H, 's', 00H, 'm', 00H, 'a', 00H, 'r'
	DB	00H, 't', 00H, ' ', 00H, 'e', 00H, 'n', 00H, 'o', 00H, 'u', 00H
	DB	'g', 00H, 'h', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'r'
	DB	00H, 'e', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'n', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H, 's', 00H, ' '
	DB	00H, 'i', 00H, 'n', 00H, 'p', 00H, 'u', 00H, 't', 00H, '.', 00H
	DB	00H, 00H
$SG82085 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+4
$SG82086 DB	'm', 00H, '_', 00H, 'p', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'F'
	DB	00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H, '-', 00H
	DB	'>', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'I', 00H, 'n', 00H, 'p'
	DB	00H, 'u', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG82098 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG82099 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG82104 DB	'.', 00H, '.', 00H, '\', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'r', 00H, 'm', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
	ORG $+4
$SG82105 DB	'm', 00H, '_', 00H, 'p', 00H, 'T', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'F'
	DB	00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H, '-', 00H
	DB	'>', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'I', 00H, 'n', 00H, 'p'
	DB	00H, 'u', 00H, 't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H
	DB	'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
CONST	ENDS
;	COMDAT _IID_IAMFilterGraphCallback
CONST	SEGMENT
_IID_IAMFilterGraphCallback DD 056a868fdH
	DW	0ad4H
	DW	011ceH
	DB	0b0H
	DB	0a3H
	DB	00H
	DB	020H
	DB	0afH
	DB	0bH
	DB	0a7H
	DB	070H
CONST	ENDS
PUBLIC	??0CTransformFilter@@QAE@PA_WPAUIUnknown@@ABU_GUID@@@Z ; CTransformFilter::CTransformFilter
EXTRN	??1CCritSec@@QAE@XZ:PROC			; CCritSec::~CCritSec
EXTRN	??1CBaseFilter@@UAE@XZ:PROC			; CBaseFilter::~CBaseFilter
EXTRN	??0CCritSec@@QAE@XZ:PROC			; CCritSec::CCritSec
EXTRN	??0CBaseFilter@@QAE@PB_WPAUIUnknown@@PAVCCritSec@@ABU_GUID@@@Z:PROC ; CBaseFilter::CBaseFilter
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\transfrm.cpp
xdata$x	SEGMENT
__unwindtable$??0CTransformFilter@@QAE@PA_WPAUIUnknown@@ABU_GUID@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CTransformFilter@@QAE@PA_WPAUIUnknown@@ABU_GUID@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CTransformFilter@@QAE@PA_WPAUIUnknown@@ABU_GUID@@@Z$1
__ehfuncinfo$??0CTransformFilter@@QAE@PA_WPAUIUnknown@@ABU_GUID@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CTransformFilter@@QAE@PA_WPAUIUnknown@@ABU_GUID@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT ??0CTransformFilter@@QAE@PA_WPAUIUnknown@@ABU_GUID@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pName$ = 8						; size = 4
_pUnk$ = 12						; size = 4
_clsid$ = 16						; size = 4
??0CTransformFilter@@QAE@PA_WPAUIUnknown@@ABU_GUID@@@Z PROC ; CTransformFilter::CTransformFilter, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CTransformFilter@@QAE@PA_WPAUIUnknown@@ABU_GUID@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _clsid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	push	ecx
	mov	edx, DWORD PTR _pUnk$[ebp]
	push	edx
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseFilter@@QAE@PB_WPAUIUnknown@@PAVCCritSec@@ABU_GUID@@@Z ; CBaseFilter::CBaseFilter
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+84], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	??0CCritSec@@QAE@XZ			; CCritSec::CCritSec
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??0CCritSec@@QAE@XZ			; CCritSec::CCritSec
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+164], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+168], 0
; Line 32
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CTransformFilter@@QAE@PA_WPAUIUnknown@@ABU_GUID@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseFilter@@UAE@XZ			; CBaseFilter::~CBaseFilter
__unwindfunclet$??0CTransformFilter@@QAE@PA_WPAUIUnknown@@ABU_GUID@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	jmp	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
__ehhandler$??0CTransformFilter@@QAE@PA_WPAUIUnknown@@ABU_GUID@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CTransformFilter@@QAE@PA_WPAUIUnknown@@ABU_GUID@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CTransformFilter@@QAE@PA_WPAUIUnknown@@ABU_GUID@@@Z ENDP ; CTransformFilter::CTransformFilter
PUBLIC	??0CTransformFilter@@QAE@PADPAUIUnknown@@ABU_GUID@@@Z ; CTransformFilter::CTransformFilter
EXTRN	??0CBaseFilter@@QAE@PBDPAUIUnknown@@PAVCCritSec@@ABU_GUID@@@Z:PROC ; CBaseFilter::CBaseFilter
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CTransformFilter@@QAE@PADPAUIUnknown@@ABU_GUID@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CTransformFilter@@QAE@PADPAUIUnknown@@ABU_GUID@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CTransformFilter@@QAE@PADPAUIUnknown@@ABU_GUID@@@Z$1
__ehfuncinfo$??0CTransformFilter@@QAE@PADPAUIUnknown@@ABU_GUID@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0CTransformFilter@@QAE@PADPAUIUnknown@@ABU_GUID@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CTransformFilter@@QAE@PADPAUIUnknown@@ABU_GUID@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pName$ = 8						; size = 4
_pUnk$ = 12						; size = 4
_clsid$ = 16						; size = 4
??0CTransformFilter@@QAE@PADPAUIUnknown@@ABU_GUID@@@Z PROC ; CTransformFilter::CTransformFilter, COMDAT
; _this$ = ecx
; Line 44
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CTransformFilter@@QAE@PADPAUIUnknown@@ABU_GUID@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _clsid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	push	ecx
	mov	edx, DWORD PTR _pUnk$[ebp]
	push	edx
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseFilter@@QAE@PBDPAUIUnknown@@PAVCCritSec@@ABU_GUID@@@Z ; CBaseFilter::CBaseFilter
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+84], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	??0CCritSec@@QAE@XZ			; CCritSec::CCritSec
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??0CCritSec@@QAE@XZ			; CCritSec::CCritSec
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+164], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+168], 0
; Line 48
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CTransformFilter@@QAE@PADPAUIUnknown@@ABU_GUID@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseFilter@@UAE@XZ			; CBaseFilter::~CBaseFilter
__unwindfunclet$??0CTransformFilter@@QAE@PADPAUIUnknown@@ABU_GUID@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	jmp	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
__ehhandler$??0CTransformFilter@@QAE@PADPAUIUnknown@@ABU_GUID@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CTransformFilter@@QAE@PADPAUIUnknown@@ABU_GUID@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CTransformFilter@@QAE@PADPAUIUnknown@@ABU_GUID@@@Z ENDP ; CTransformFilter::CTransformFilter
PUBLIC	??1CTransformFilter@@UAE@XZ			; CTransformFilter::~CTransformFilter
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CTransformFilter@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CTransformFilter@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CTransformFilter@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CTransformFilter@@UAE@XZ$2
__ehfuncinfo$??1CTransformFilter@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1CTransformFilter@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CTransformFilter@@UAE@XZ
_TEXT	SEGMENT
tv128 = -40						; size = 4
tv84 = -36						; size = 4
$T82673 = -32						; size = 4
$T82672 = -28						; size = 4
$T82669 = -24						; size = 4
$T82668 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CTransformFilter@@UAE@XZ PROC			; CTransformFilter::~CTransformFilter, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CTransformFilter@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR $T82669[ebp], ecx
	mov	edx, DWORD PTR $T82669[ebp]
	mov	DWORD PTR $T82668[ebp], edx
	cmp	DWORD PTR $T82668[ebp], 0
	je	SHORT $LN3@CTransform
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T82668[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T82668[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN4@CTransform
$LN3@CTransform:
	mov	DWORD PTR tv84[ebp], 0
$LN4@CTransform:
; Line 58
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+168]
	mov	DWORD PTR $T82673[ebp], edx
	mov	eax, DWORD PTR $T82673[ebp]
	mov	DWORD PTR $T82672[ebp], eax
	cmp	DWORD PTR $T82672[ebp], 0
	je	SHORT $LN5@CTransform
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T82672[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T82672[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN1@CTransform
$LN5@CTransform:
	mov	DWORD PTR tv128[ebp], 0
$LN1@CTransform:
; Line 59
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBaseFilter@@UAE@XZ			; CBaseFilter::~CBaseFilter
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CTransformFilter@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseFilter@@UAE@XZ			; CBaseFilter::~CBaseFilter
__unwindfunclet$??1CTransformFilter@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	jmp	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
__unwindfunclet$??1CTransformFilter@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	jmp	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
__ehhandler$??1CTransformFilter@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CTransformFilter@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CTransformFilter@@UAE@XZ ENDP			; CTransformFilter::~CTransformFilter
PUBLIC	?Transform@CTransformFilter@@UAEJPAUIMediaSample@@0@Z ; CTransformFilter::Transform
EXTRN	?DbgBreakPoint@@YGXPB_W0H@Z:PROC		; DbgBreakPoint
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Transform@CTransformFilter@@UAEJPAUIMediaSample@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pIn$ = 8						; size = 4
_pOut$ = 12						; size = 4
?Transform@CTransformFilter@@UAEJPAUIMediaSample@@0@Z PROC ; CTransformFilter::Transform, COMDAT
; _this$ = ecx
; Line 64
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 67
	push	67					; 00000043H
	push	OFFSET $SG81583
	push	OFFSET $SG81584
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
; Line 68
	mov	eax, -2147418113			; 8000ffffH
; Line 69
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Transform@CTransformFilter@@UAEJPAUIMediaSample@@0@Z ENDP ; CTransformFilter::Transform
_TEXT	ENDS
PUBLIC	?GetPinCount@CTransformFilter@@UAEHXZ		; CTransformFilter::GetPinCount
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetPinCount@CTransformFilter@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPinCount@CTransformFilter@@UAEHXZ PROC		; CTransformFilter::GetPinCount, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 76
	mov	eax, 2
; Line 77
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPinCount@CTransformFilter@@UAEHXZ ENDP		; CTransformFilter::GetPinCount
_TEXT	ENDS
PUBLIC	??0CTransformOutputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z ; CTransformOutputPin::CTransformOutputPin
PUBLIC	??0CTransformInputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z ; CTransformInputPin::CTransformInputPin
PUBLIC	?GetPin@CTransformFilter@@UAEPAVCBasePin@@H@Z	; CTransformFilter::GetPin
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?DbgAssert@@YGXPB_W0H@Z:PROC			; DbgAssert
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetPin@CTransformFilter@@UAEPAVCBasePin@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPin@CTransformFilter@@UAEPAVCBasePin@@H@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPin@CTransformFilter@@UAEPAVCBasePin@@H@Z$1
__ehfuncinfo$?GetPin@CTransformFilter@@UAEPAVCBasePin@@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetPin@CTransformFilter@@UAEPAVCBasePin@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?GetPin@CTransformFilter@@UAEPAVCBasePin@@H@Z
_TEXT	SEGMENT
tv145 = -64						; size = 4
tv128 = -60						; size = 4
tv78 = -56						; size = 4
$T82700 = -52						; size = 4
$T82699 = -48						; size = 4
$T82696 = -44						; size = 4
$T82695 = -40						; size = 4
$T82692 = -36						; size = 4
$T82691 = -32						; size = 4
_hr$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_n$ = 8							; size = 4
?GetPin@CTransformFilter@@UAEPAVCBasePin@@H@Z PROC	; CTransformFilter::GetPin, COMDAT
; _this$ = ecx
; Line 91
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetPin@CTransformFilter@@UAEPAVCBasePin@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 92
	mov	DWORD PTR _hr$[ebp], 0
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+164], 0
	jne	$LN9@GetPin
; Line 101
	push	232					; 000000e8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T82692[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T82692[ebp], 0
	je	SHORT $LN12@GetPin
	push	OFFSET $SG81600
	lea	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	push	OFFSET $SG81601
	mov	ecx, DWORD PTR $T82692[ebp]
	call	??0CTransformInputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z ; CTransformInputPin::CTransformInputPin
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN13@GetPin
$LN12@GetPin:
	mov	DWORD PTR tv78[ebp], 0
$LN13@GetPin:
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T82691[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T82691[ebp]
	mov	DWORD PTR [ecx+164], edx
; Line 105
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN8@GetPin
	push	105					; 00000069H
	push	OFFSET $SG81604
	push	OFFSET $SG81605
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN8@GetPin:
; Line 106
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+164], 0
	jne	SHORT $LN7@GetPin
; Line 107
	xor	eax, eax
	jmp	$LN10@GetPin
$LN7@GetPin:
; Line 113
	push	176					; 000000b0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T82696[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T82696[ebp], 0
	je	SHORT $LN14@GetPin
	push	OFFSET $SG81612
	lea	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	push	OFFSET $SG81613
	mov	ecx, DWORD PTR $T82696[ebp]
	call	??0CTransformOutputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z ; CTransformOutputPin::CTransformOutputPin
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN15@GetPin
$LN14@GetPin:
	mov	DWORD PTR tv128[ebp], 0
$LN15@GetPin:
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR $T82695[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T82695[ebp]
	mov	DWORD PTR [ecx+168], edx
; Line 117
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN6@GetPin
	push	117					; 00000075H
	push	OFFSET $SG81616
	push	OFFSET $SG81617
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN6@GetPin:
; Line 118
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+168], 0
	jne	SHORT $LN9@GetPin
; Line 119
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+164]
	mov	DWORD PTR $T82700[ebp], edx
	mov	eax, DWORD PTR $T82700[ebp]
	mov	DWORD PTR $T82699[ebp], eax
	cmp	DWORD PTR $T82699[ebp], 0
	je	SHORT $LN16@GetPin
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T82699[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T82699[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv145[ebp], eax
	jmp	SHORT $LN17@GetPin
$LN16@GetPin:
	mov	DWORD PTR tv145[ebp], 0
$LN17@GetPin:
; Line 120
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+164], 0
$LN9@GetPin:
; Line 126
	cmp	DWORD PTR _n$[ebp], 0
	jne	SHORT $LN4@GetPin
; Line 127
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+164]
	jmp	SHORT $LN10@GetPin
; Line 128
	jmp	SHORT $LN10@GetPin
$LN4@GetPin:
; Line 129
	cmp	DWORD PTR _n$[ebp], 1
	jne	SHORT $LN2@GetPin
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+168]
	jmp	SHORT $LN10@GetPin
; Line 131
	jmp	SHORT $LN10@GetPin
$LN2@GetPin:
; Line 132
	xor	eax, eax
$LN10@GetPin:
; Line 134
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@GetPin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN23@GetPin:
	DD	1
	DD	$LN22@GetPin
$LN22@GetPin:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN20@GetPin
$LN20@GetPin:
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetPin@CTransformFilter@@UAEPAVCBasePin@@H@Z$0:
	mov	eax, DWORD PTR $T82692[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?GetPin@CTransformFilter@@UAEPAVCBasePin@@H@Z$1:
	mov	eax, DWORD PTR $T82696[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?GetPin@CTransformFilter@@UAEPAVCBasePin@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetPin@CTransformFilter@@UAEPAVCBasePin@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetPin@CTransformFilter@@UAEPAVCBasePin@@H@Z ENDP	; CTransformFilter::GetPin
PUBLIC	?FindPin@CTransformFilter@@UAGJPB_WPAPAUIPin@@@Z ; CTransformFilter::FindPin
EXTRN	__imp__lstrcmpW@8:PROC
EXTRN	__imp__IsBadWritePtr@8:PROC
EXTRN	__imp__IsBadReadPtr@8:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?FindPin@CTransformFilter@@UAGJPB_WPAPAUIPin@@@Z
_TEXT	SEGMENT
tv152 = -20						; size = 4
tv153 = -16						; size = 4
tv130 = -12						; size = 4
tv131 = -8						; size = 4
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
_Id$ = 12						; size = 4
_ppPin$ = 16						; size = 4
?FindPin@CTransformFilter@@UAGJPB_WPAPAUIPin@@@Z PROC	; CTransformFilter::FindPin, COMDAT
; Line 144
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 145
	cmp	DWORD PTR _ppPin$[ebp], 0
	jne	SHORT $LN9@FindPin
	mov	eax, -2147467261			; 80004003H
	jmp	$LN10@FindPin
$LN9@FindPin:
; Line 146
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _ppPin$[ebp]
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN8@FindPin
	push	146					; 00000092H
	push	OFFSET $SG81635
	push	OFFSET $SG81636
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN8@FindPin:
	mov	esi, esp
	push	4
	mov	ecx, DWORD PTR _ppPin$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsBadWritePtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN7@FindPin
	push	146					; 00000092H
	push	OFFSET $SG81640
	push	OFFSET $SG81641
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN7@FindPin:
; Line 148
	mov	esi, esp
	push	OFFSET $SG81643
	mov	edx, DWORD PTR _Id$[ebp]
	push	edx
	call	DWORD PTR __imp__lstrcmpW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN6@FindPin
; Line 149
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax-16]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv131[ebp], eax
	cmp	DWORD PTR tv131[ebp], 0
	je	SHORT $LN12@FindPin
	mov	ecx, DWORD PTR tv131[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR tv130[ebp], ecx
	jmp	SHORT $LN13@FindPin
$LN12@FindPin:
	mov	DWORD PTR tv130[ebp], 0
$LN13@FindPin:
	mov	edx, DWORD PTR _ppPin$[ebp]
	mov	eax, DWORD PTR tv130[ebp]
	mov	DWORD PTR [edx], eax
	jmp	SHORT $LN5@FindPin
$LN6@FindPin:
; Line 150
	mov	esi, esp
	push	OFFSET $SG81646
	mov	ecx, DWORD PTR _Id$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrcmpW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN4@FindPin
; Line 151
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-16]
	mov	edx, DWORD PTR [eax+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv153[ebp], eax
	cmp	DWORD PTR tv153[ebp], 0
	je	SHORT $LN14@FindPin
	mov	eax, DWORD PTR tv153[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv152[ebp], eax
	jmp	SHORT $LN15@FindPin
$LN14@FindPin:
	mov	DWORD PTR tv152[ebp], 0
$LN15@FindPin:
	mov	ecx, DWORD PTR _ppPin$[ebp]
	mov	edx, DWORD PTR tv152[ebp]
	mov	DWORD PTR [ecx], edx
; Line 152
	jmp	SHORT $LN5@FindPin
$LN4@FindPin:
; Line 153
	mov	eax, DWORD PTR _ppPin$[ebp]
	mov	DWORD PTR [eax], 0
; Line 154
	mov	eax, -2147220970			; 80040216H
	jmp	SHORT $LN10@FindPin
$LN5@FindPin:
; Line 157
	mov	DWORD PTR _hr$[ebp], 0
; Line 159
	mov	ecx, DWORD PTR _ppPin$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN2@FindPin
; Line 160
	mov	edx, DWORD PTR _ppPin$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ppPin$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 161
	jmp	SHORT $LN1@FindPin
$LN2@FindPin:
; Line 162
	mov	DWORD PTR _hr$[ebp], -2147024882	; 8007000eH
$LN1@FindPin:
; Line 164
	mov	eax, DWORD PTR _hr$[ebp]
$LN10@FindPin:
; Line 165
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?FindPin@CTransformFilter@@UAGJPB_WPAPAUIPin@@@Z ENDP	; CTransformFilter::FindPin
_TEXT	ENDS
PUBLIC	?StartStreaming@CTransformFilter@@UAEJXZ	; CTransformFilter::StartStreaming
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?StartStreaming@CTransformFilter@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StartStreaming@CTransformFilter@@UAEJXZ PROC		; CTransformFilter::StartStreaming, COMDAT
; _this$ = ecx
; Line 173
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 174
	xor	eax, eax
; Line 175
	mov	esp, ebp
	pop	ebp
	ret	0
?StartStreaming@CTransformFilter@@UAEJXZ ENDP		; CTransformFilter::StartStreaming
_TEXT	ENDS
PUBLIC	?StopStreaming@CTransformFilter@@UAEJXZ		; CTransformFilter::StopStreaming
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?StopStreaming@CTransformFilter@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StopStreaming@CTransformFilter@@UAEJXZ PROC		; CTransformFilter::StopStreaming, COMDAT
; _this$ = ecx
; Line 180
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 181
	xor	eax, eax
; Line 182
	mov	esp, ebp
	pop	ebp
	ret	0
?StopStreaming@CTransformFilter@@UAEJXZ ENDP		; CTransformFilter::StopStreaming
_TEXT	ENDS
PUBLIC	?CheckConnect@CTransformFilter@@UAEJW4_PinDirection@@PAUIPin@@@Z ; CTransformFilter::CheckConnect
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CheckConnect@CTransformFilter@@UAEJW4_PinDirection@@PAUIPin@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dir$ = 8						; size = 4
_pPin$ = 12						; size = 4
?CheckConnect@CTransformFilter@@UAEJW4_PinDirection@@PAUIPin@@@Z PROC ; CTransformFilter::CheckConnect, COMDAT
; _this$ = ecx
; Line 189
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 192
	xor	eax, eax
; Line 193
	mov	esp, ebp
	pop	ebp
	ret	8
?CheckConnect@CTransformFilter@@UAEJW4_PinDirection@@PAUIPin@@@Z ENDP ; CTransformFilter::CheckConnect
_TEXT	ENDS
PUBLIC	?BreakConnect@CTransformFilter@@UAEJW4_PinDirection@@@Z ; CTransformFilter::BreakConnect
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?BreakConnect@CTransformFilter@@UAEJW4_PinDirection@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dir$ = 8						; size = 4
?BreakConnect@CTransformFilter@@UAEJW4_PinDirection@@@Z PROC ; CTransformFilter::BreakConnect, COMDAT
; _this$ = ecx
; Line 200
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 202
	xor	eax, eax
; Line 203
	mov	esp, ebp
	pop	ebp
	ret	4
?BreakConnect@CTransformFilter@@UAEJW4_PinDirection@@@Z ENDP ; CTransformFilter::BreakConnect
_TEXT	ENDS
PUBLIC	?CompleteConnect@CTransformFilter@@UAEJW4_PinDirection@@PAUIPin@@@Z ; CTransformFilter::CompleteConnect
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CompleteConnect@CTransformFilter@@UAEJW4_PinDirection@@PAUIPin@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_direction$ = 8						; size = 4
_pReceivePin$ = 12					; size = 4
?CompleteConnect@CTransformFilter@@UAEJW4_PinDirection@@PAUIPin@@@Z PROC ; CTransformFilter::CompleteConnect, COMDAT
; _this$ = ecx
; Line 210
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 213
	xor	eax, eax
; Line 214
	mov	esp, ebp
	pop	ebp
	ret	8
?CompleteConnect@CTransformFilter@@UAEJW4_PinDirection@@PAUIPin@@@Z ENDP ; CTransformFilter::CompleteConnect
_TEXT	ENDS
PUBLIC	?SetMediaType@CTransformFilter@@UAEJW4_PinDirection@@PBVCMediaType@@@Z ; CTransformFilter::SetMediaType
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetMediaType@CTransformFilter@@UAEJW4_PinDirection@@PBVCMediaType@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_direction$ = 8						; size = 4
_pmt$ = 12						; size = 4
?SetMediaType@CTransformFilter@@UAEJW4_PinDirection@@PBVCMediaType@@@Z PROC ; CTransformFilter::SetMediaType, COMDAT
; _this$ = ecx
; Line 221
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 224
	xor	eax, eax
; Line 225
	mov	esp, ebp
	pop	ebp
	ret	8
?SetMediaType@CTransformFilter@@UAEJW4_PinDirection@@PBVCMediaType@@@Z ENDP ; CTransformFilter::SetMediaType
_TEXT	ENDS
PUBLIC	?SampleProps@CBaseInputPin@@QAEPAUtagAM_SAMPLE2_PROPERTIES@@XZ ; CBaseInputPin::SampleProps
PUBLIC	?InitializeOutputSample@CTransformFilter@@QAEJPAUIMediaSample@@PAPAU2@@Z ; CTransformFilter::InitializeOutputSample
EXTRN	_IID_IMediaSample2:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?InitializeOutputSample@CTransformFilter@@QAEJPAUIMediaSample@@PAPAU2@@Z
_TEXT	SEGMENT
tv145 = -136						; size = 4
tv139 = -132						; size = 4
_MediaEnd$81722 = -124					; size = 8
_MediaStart$81721 = -108				; size = 8
_OutProps$81700 = -92					; size = 48
_pOutSample2$ = -36					; size = 4
_hr$ = -28						; size = 4
_dwFlags$ = -24						; size = 4
_pProps$ = -20						; size = 4
_pOutSample$ = -12					; size = 4
_this$ = -4						; size = 4
_pSample$ = 8						; size = 4
_ppOutSample$ = 12					; size = 4
?InitializeOutputSample@CTransformFilter@@QAEJPAUIMediaSample@@PAPAU2@@Z PROC ; CTransformFilter::InitializeOutputSample, COMDAT
; _this$ = ecx
; Line 231
	push	ebp
	mov	ebp, esp
	sub	esp, 136				; 00000088H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-136]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 236
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	call	?SampleProps@CBaseInputPin@@QAEPAUtagAM_SAMPLE2_PROPERTIES@@XZ ; CBaseInputPin::SampleProps
	mov	DWORD PTR _pProps$[ebp], eax
; Line 237
	mov	ecx, DWORD PTR _this$[ebp]
	xor	edx, edx
	cmp	DWORD PTR [ecx+84], 0
	setne	dl
	mov	DWORD PTR _dwFlags$[ebp], edx
; Line 243
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 1
	jne	SHORT $LN12@Initialize
; Line 244
	mov	edx, DWORD PTR _dwFlags$[ebp]
	or	edx, 2
	mov	DWORD PTR _dwFlags$[ebp], edx
$LN12@Initialize:
; Line 247
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	cmp	DWORD PTR [ecx+160], 0
	jne	SHORT $LN11@Initialize
	push	247					; 000000f7H
	push	OFFSET $SG81688
	push	OFFSET $SG81689
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN11@Initialize:
; Line 255
	mov	edx, DWORD PTR _pProps$[ebp]
	mov	eax, DWORD PTR [edx+8]
	and	eax, 256				; 00000100H
	je	SHORT $LN15@Initialize
	mov	ecx, DWORD PTR _pProps$[ebp]
	add	ecx, 24					; 00000018H
	mov	DWORD PTR tv139[ebp], ecx
	jmp	SHORT $LN16@Initialize
$LN15@Initialize:
	mov	DWORD PTR tv139[ebp], 0
$LN16@Initialize:
	mov	edx, DWORD PTR _pProps$[ebp]
	mov	eax, DWORD PTR [edx+8]
	and	eax, 16					; 00000010H
	je	SHORT $LN17@Initialize
	mov	ecx, DWORD PTR _pProps$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR tv145[ebp], ecx
	jmp	SHORT $LN18@Initialize
$LN17@Initialize:
	mov	DWORD PTR tv145[ebp], 0
$LN18@Initialize:
	mov	esi, esp
	mov	edx, DWORD PTR _dwFlags$[ebp]
	push	edx
	mov	eax, DWORD PTR tv139[ebp]
	push	eax
	mov	ecx, DWORD PTR tv145[ebp]
	push	ecx
	lea	edx, DWORD PTR _pOutSample$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	edx, DWORD PTR [ecx+160]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	eax, DWORD PTR [ecx+160]
	mov	ecx, DWORD PTR [edx]
	push	eax
	mov	edx, DWORD PTR [ecx+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 256
	mov	eax, DWORD PTR _ppOutSample$[ebp]
	mov	ecx, DWORD PTR _pOutSample$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 257
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN10@Initialize
; Line 258
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN13@Initialize
$LN10@Initialize:
; Line 261
	cmp	DWORD PTR _pOutSample$[ebp], 0
	jne	SHORT $LN9@Initialize
	push	261					; 00000105H
	push	OFFSET $SG81694
	push	OFFSET $SG81695
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN9@Initialize:
; Line 264
	mov	esi, esp
	lea	edx, DWORD PTR _pOutSample2$[ebp]
	push	edx
	push	OFFSET _IID_IMediaSample2
	mov	eax, DWORD PTR _pOutSample$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pOutSample$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	$LN8@Initialize
; Line 269
	mov	esi, esp
	lea	ecx, DWORD PTR _OutProps$81700[ebp]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _pOutSample2$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pOutSample2$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+76]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jge	SHORT $LN7@Initialize
	push	269					; 0000010dH
	push	OFFSET $SG81707
	push	OFFSET $SG81708
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN7@Initialize:
; Line 270
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _OutProps$81700[ebp+4], ecx
; Line 273
	mov	edx, DWORD PTR _OutProps$81700[ebp+8]
	and	edx, 8
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, -9					; fffffff7H
	or	edx, ecx
	mov	DWORD PTR _OutProps$81700[ebp+8], edx
; Line 274
	mov	edx, DWORD PTR _pProps$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _OutProps$81700[ebp+16], eax
	mov	ecx, DWORD PTR [edx+20]
	mov	DWORD PTR _OutProps$81700[ebp+20], ecx
; Line 275
	mov	edx, DWORD PTR _pProps$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR _OutProps$81700[ebp+24], eax
	mov	ecx, DWORD PTR [edx+28]
	mov	DWORD PTR _OutProps$81700[ebp+28], ecx
; Line 276
	mov	DWORD PTR _OutProps$81700[ebp], 32	; 00000020H
; Line 280
	mov	esi, esp
	lea	edx, DWORD PTR _OutProps$81700[ebp]
	push	edx
	push	32					; 00000020H
	mov	eax, DWORD PTR _pOutSample2$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pOutSample2$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+80]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 281
	mov	ecx, DWORD PTR _pProps$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	and	edx, 4
	je	SHORT $LN6@Initialize
; Line 282
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 0
$LN6@Initialize:
; Line 284
	mov	ecx, DWORD PTR _pOutSample2$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pOutSample2$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 285
	jmp	$LN5@Initialize
$LN8@Initialize:
; Line 286
	mov	edx, DWORD PTR _pProps$[ebp]
	mov	eax, DWORD PTR [edx+8]
	and	eax, 16					; 00000010H
	je	SHORT $LN4@Initialize
; Line 288
	mov	ecx, DWORD PTR _pProps$[ebp]
	add	ecx, 24					; 00000018H
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _pProps$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR _pOutSample$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pOutSample$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@Initialize:
; Line 290
	mov	ecx, DWORD PTR _pProps$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	and	edx, 1
	je	SHORT $LN3@Initialize
; Line 291
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pOutSample$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pOutSample$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Initialize:
; Line 293
	mov	ecx, DWORD PTR _pProps$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	and	edx, 4
	je	SHORT $LN2@Initialize
; Line 294
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _pOutSample$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pOutSample$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 295
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], 0
$LN2@Initialize:
; Line 300
	mov	esi, esp
	lea	edx, DWORD PTR _MediaEnd$81722[ebp]
	push	edx
	lea	eax, DWORD PTR _MediaStart$81721[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSample$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pSample$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+68]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN5@Initialize
; Line 301
	mov	esi, esp
	lea	edx, DWORD PTR _MediaEnd$81722[ebp]
	push	edx
	lea	eax, DWORD PTR _MediaStart$81721[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOutSample$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pOutSample$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@Initialize:
; Line 304
	xor	eax, eax
$LN13@Initialize:
; Line 305
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@Initialize
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 136				; 00000088H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN25@Initialize:
	DD	5
	DD	$LN24@Initialize
$LN24@Initialize:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN19@Initialize
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN20@Initialize
	DD	-92					; ffffffa4H
	DD	48					; 00000030H
	DD	$LN21@Initialize
	DD	-108					; ffffff94H
	DD	8
	DD	$LN22@Initialize
	DD	-124					; ffffff84H
	DD	8
	DD	$LN23@Initialize
$LN23@Initialize:
	DB	77					; 0000004dH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	69					; 00000045H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN22@Initialize:
	DB	77					; 0000004dH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN21@Initialize:
	DB	79					; 0000004fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN20@Initialize:
	DB	112					; 00000070H
	DB	79					; 0000004fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	50					; 00000032H
	DB	0
$LN19@Initialize:
	DB	112					; 00000070H
	DB	79					; 0000004fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
?InitializeOutputSample@CTransformFilter@@QAEJPAUIMediaSample@@PAPAU2@@Z ENDP ; CTransformFilter::InitializeOutputSample
_TEXT	ENDS
PUBLIC	??_C@_1DE@JPFPKCAE@?$AAm?$AA_?$AAS?$AAa?$AAm?$AAp?$AAl?$AAe?$AAP?$AAr?$AAo?$AAp?$AAs?$AA?4?$AAc?$AAb?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1HG@MPHBNOLH@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@ ; `string'
;	COMDAT ??_C@_1DE@JPFPKCAE@?$AAm?$AA_?$AAS?$AAa?$AAm?$AAp?$AAl?$AAe?$AAP?$AAr?$AAo?$AAp?$AAs?$AA?4?$AAc?$AAb?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
; File c:\downloads\mediapoint\src\filters\baseclasses\amfilter.h
CONST	SEGMENT
??_C@_1DE@JPFPKCAE@?$AAm?$AA_?$AAS?$AAa?$AAm?$AAp?$AAl?$AAe?$AAP?$AAr?$AAo?$AAp?$AAs?$AA?4?$AAc?$AAb?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'm'
	DB	00H, '_', 00H, 'S', 00H, 'a', 00H, 'm', 00H, 'p', 00H, 'l', 00H
	DB	'e', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 's', 00H, '.'
	DB	00H, 'c', 00H, 'b', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HG@MPHBNOLH@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@
CONST	SEGMENT
??_C@_1HG@MPHBNOLH@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'D', 00H, 'o', 00H, 'w', 00H, 'n', 00H
	DB	'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'e', 00H, 'd', 00H, 'i', 00H, 'a', 00H, 'P', 00H, 'o', 00H
	DB	'i', 00H, 'n', 00H, 't', 00H, '\', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'B', 00H, 'a', 00H, 's', 00H, 'e'
	DB	00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 'e', 00H
	DB	's', 00H, '\', 00H, 'a', 00H, 'm', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?SampleProps@CBaseInputPin@@QAEPAUtagAM_SAMPLE2_PROPERTIES@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SampleProps@CBaseInputPin@@QAEPAUtagAM_SAMPLE2_PROPERTIES@@XZ PROC ; CBaseInputPin::SampleProps, COMDAT
; _this$ = ecx
; Line 938
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 939
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+176], 0
	jne	SHORT $LN1@SampleProp
	push	939					; 000003abH
	push	OFFSET ??_C@_1HG@MPHBNOLH@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@
	push	OFFSET ??_C@_1DE@JPFPKCAE@?$AAm?$AA_?$AAS?$AAa?$AAm?$AAp?$AAl?$AAe?$AAP?$AAr?$AAo?$AAp?$AAs?$AA?4?$AAc?$AAb?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@SampleProp:
; Line 940
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 176				; 000000b0H
; Line 941
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?SampleProps@CBaseInputPin@@QAEPAUtagAM_SAMPLE2_PROPERTIES@@XZ ENDP ; CBaseInputPin::SampleProps
_TEXT	ENDS
PUBLIC	?Receive@CTransformFilter@@UAEJPAUIMediaSample@@@Z ; CTransformFilter::Receive
EXTRN	?NotifyEvent@CBaseFilter@@QAEJJJJ@Z:PROC	; CBaseFilter::NotifyEvent
EXTRN	?DbgLogInfo@@YAXKKPB_WZZ:PROC			; DbgLogInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Receive@CTransformFilter@@UAEJPAUIMediaSample@@@Z
_TEXT	SEGMENT
_pOutSample$ = -20					; size = 4
_hr$ = -12						; size = 4
_pProps$ = -8						; size = 4
_this$ = -4						; size = 4
_pSample$ = 8						; size = 4
?Receive@CTransformFilter@@UAEJPAUIMediaSample@@@Z PROC	; CTransformFilter::Receive, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\transfrm.cpp
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 313
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	call	?SampleProps@CBaseInputPin@@QAEPAUtagAM_SAMPLE2_PROPERTIES@@XZ ; CBaseInputPin::SampleProps
	mov	DWORD PTR _pProps$[ebp], eax
; Line 314
	mov	ecx, DWORD PTR _pProps$[ebp]
	cmp	DWORD PTR [ecx+32], 0
	je	SHORT $LN10@Receive
; Line 315
	mov	esi, esp
	mov	edx, DWORD PTR _pSample$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	edx, DWORD PTR [ecx+164]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	eax, DWORD PTR [ecx+164]
	mov	ecx, DWORD PTR [edx]
	push	eax
	mov	edx, DWORD PTR [ecx+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN11@Receive
$LN10@Receive:
; Line 318
	cmp	DWORD PTR _pSample$[ebp], 0
	jne	SHORT $LN9@Receive
	push	318					; 0000013eH
	push	OFFSET $SG81733
	push	OFFSET $SG81734
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN9@Receive:
; Line 323
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+168], 0
	jne	SHORT $LN8@Receive
	push	323					; 00000143H
	push	OFFSET $SG81737
	push	OFFSET $SG81738
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN8@Receive:
; Line 326
	lea	ecx, DWORD PTR _pOutSample$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pSample$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InitializeOutputSample@CTransformFilter@@QAEJPAUIMediaSample@@PAPAU2@@Z ; CTransformFilter::InitializeOutputSample
	mov	DWORD PTR _hr$[ebp], eax
; Line 328
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN7@Receive
; Line 329
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN11@Receive
$LN7@Receive:
; Line 337
	mov	esi, esp
	mov	eax, DWORD PTR _pOutSample$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSample$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+36]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 342
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN6@Receive
; Line 343
	push	OFFSET $SG81745
	push	1
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 344
	jmp	$LN5@Receive
$LN6@Receive:
; Line 348
	cmp	DWORD PTR _hr$[ebp], 0
	jne	SHORT $LN4@Receive
; Line 349
	mov	esi, esp
	mov	eax, DWORD PTR _pOutSample$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+168]
	mov	eax, DWORD PTR [edx+164]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+168]
	mov	ecx, DWORD PTR [edx+164]
	mov	edx, DWORD PTR [eax]
	push	ecx
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 350
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], 0
; Line 351
	jmp	SHORT $LN5@Receive
$LN4@Receive:
; Line 356
	cmp	DWORD PTR _hr$[ebp], 1
	jne	SHORT $LN5@Receive
; Line 361
	mov	edx, DWORD PTR _pOutSample$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pOutSample$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 362
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 1
; Line 363
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+88], 0
	jne	SHORT $LN1@Receive
; Line 364
	push	0
	push	0
	push	11					; 0000000bH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NotifyEvent@CBaseFilter@@QAEJJJJ@Z	; CBaseFilter::NotifyEvent
; Line 365
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+88], 1
$LN1@Receive:
; Line 367
	xor	eax, eax
	jmp	SHORT $LN11@Receive
$LN5@Receive:
; Line 374
	mov	eax, DWORD PTR _pOutSample$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pOutSample$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 376
	mov	eax, DWORD PTR _hr$[ebp]
$LN11@Receive:
; Line 377
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@Receive
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN15@Receive:
	DD	1
	DD	$LN14@Receive
$LN14@Receive:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN13@Receive
$LN13@Receive:
	DB	112					; 00000070H
	DB	79					; 0000004fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
?Receive@CTransformFilter@@UAEJPAUIMediaSample@@@Z ENDP	; CTransformFilter::Receive
_TEXT	ENDS
PUBLIC	?AlterQuality@CTransformFilter@@UAEJUtagQuality@@@Z ; CTransformFilter::AlterQuality
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AlterQuality@CTransformFilter@@UAEJUtagQuality@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_q$ = 8							; size = 24
?AlterQuality@CTransformFilter@@UAEJUtagQuality@@@Z PROC ; CTransformFilter::AlterQuality, COMDAT
; _this$ = ecx
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 386
	mov	eax, 1
; Line 387
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@AlterQuali
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	2
$LN5@AlterQuali:
	DD	1
	DD	$LN4@AlterQuali
$LN4@AlterQuali:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@AlterQuali
$LN3@AlterQuali:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
?AlterQuality@CTransformFilter@@UAEJUtagQuality@@@Z ENDP ; CTransformFilter::AlterQuality
_TEXT	ENDS
PUBLIC	?EndOfStream@CTransformFilter@@UAEJXZ		; CTransformFilter::EndOfStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?EndOfStream@CTransformFilter@@UAEJXZ
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
?EndOfStream@CTransformFilter@@UAEJXZ PROC		; CTransformFilter::EndOfStream, COMDAT
; _this$ = ecx
; Line 396
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 397
	mov	DWORD PTR _hr$[ebp], 0
; Line 398
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+168], 0
	je	SHORT $LN1@EndOfStrea
; Line 399
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+168]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$LN1@EndOfStrea:
; Line 402
	mov	eax, DWORD PTR _hr$[ebp]
; Line 403
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?EndOfStream@CTransformFilter@@UAEJXZ ENDP		; CTransformFilter::EndOfStream
_TEXT	ENDS
PUBLIC	?BeginFlush@CTransformFilter@@UAEJXZ		; CTransformFilter::BeginFlush
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?BeginFlush@CTransformFilter@@UAEJXZ
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
?BeginFlush@CTransformFilter@@UAEJXZ PROC		; CTransformFilter::BeginFlush, COMDAT
; _this$ = ecx
; Line 410
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 411
	mov	DWORD PTR _hr$[ebp], 0
; Line 412
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+168], 0
	je	SHORT $LN1@BeginFlush
; Line 420
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+168]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+80]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$LN1@BeginFlush:
; Line 422
	mov	eax, DWORD PTR _hr$[ebp]
; Line 423
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?BeginFlush@CTransformFilter@@UAEJXZ ENDP		; CTransformFilter::BeginFlush
_TEXT	ENDS
PUBLIC	?EndFlush@CTransformFilter@@UAEJXZ		; CTransformFilter::EndFlush
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?EndFlush@CTransformFilter@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EndFlush@CTransformFilter@@UAEJXZ PROC			; CTransformFilter::EndFlush, COMDAT
; _this$ = ecx
; Line 430
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 436
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+168], 0
	jne	SHORT $LN1@EndFlush
	push	436					; 000001b4H
	push	OFFSET $SG81774
	push	OFFSET $SG81775
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@EndFlush:
; Line 437
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+168]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 440
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?EndFlush@CTransformFilter@@UAEJXZ ENDP			; CTransformFilter::EndFlush
_TEXT	ENDS
PUBLIC	?IsConnected@CBasePin@@QAEHXZ			; CBasePin::IsConnected
PUBLIC	??1CAutoLock@@QAE@XZ				; CAutoLock::~CAutoLock
PUBLIC	??0CAutoLock@@QAE@PAVCCritSec@@@Z		; CAutoLock::CAutoLock
PUBLIC	?Stop@CTransformFilter@@UAGJXZ			; CTransformFilter::Stop
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Stop@CTransformFilter@@UAGJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Stop@CTransformFilter@@UAGJXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Stop@CTransformFilter@@UAGJXZ$1
__ehfuncinfo$?Stop@CTransformFilter@@UAGJXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Stop@CTransformFilter@@UAGJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Stop@CTransformFilter@@UAGJXZ
_TEXT	SEGMENT
$T82769 = -52						; size = 4
$T82768 = -48						; size = 4
$T82767 = -44						; size = 4
_hr$ = -40						; size = 4
_lck2$ = -32						; size = 4
_lck1$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?Stop@CTransformFilter@@UAGJXZ PROC			; CTransformFilter::Stop, COMDAT
; Line 447
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Stop@CTransformFilter@@UAGJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 448
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 76					; 0000004cH
	push	eax
	lea	ecx, DWORD PTR _lck1$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 449
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jne	SHORT $LN7@Stop
; Line 450
	mov	DWORD PTR $T82767[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck1$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82767[ebp]
	jmp	$LN8@Stop
$LN7@Stop:
; Line 455
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+148], 0
	je	SHORT $LN6@Stop
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+152], 0
	jne	SHORT $LN6@Stop
	push	455					; 000001c7H
	push	OFFSET $SG81783
	push	OFFSET $SG81784
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN6@Stop:
; Line 457
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+148], 0
	je	SHORT $LN4@Stop
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+148]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	je	SHORT $LN4@Stop
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	jne	SHORT $LN5@Stop
$LN4@Stop:
; Line 458
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 459
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+64], 0
; Line 460
	mov	DWORD PTR $T82768[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck1$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82768[ebp]
	jmp	$LN8@Stop
$LN5@Stop:
; Line 463
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+148], 0
	jne	SHORT $LN3@Stop
	push	463					; 000001cfH
	push	OFFSET $SG81789
	push	OFFSET $SG81790
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN3@Stop:
; Line 464
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+152], 0
	jne	SHORT $LN2@Stop
	push	464					; 000001d0H
	push	OFFSET $SG81792
	push	OFFSET $SG81793
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@Stop:
; Line 467
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+148]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+148]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 471
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	push	ecx
	lea	ecx, DWORD PTR _lck2$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 472
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+152]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+152]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 477
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-16]
	mov	esi, esp
	mov	edx, DWORD PTR [eax+60]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 478
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN1@Stop
; Line 480
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 481
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+64], 0
$LN1@Stop:
; Line 483
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T82769[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _lck2$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck1$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82769[ebp]
$LN8@Stop:
; Line 484
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@Stop
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN16@Stop:
	DD	2
	DD	$LN15@Stop
$LN15@Stop:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN12@Stop
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN13@Stop
$LN13@Stop:
	DB	108					; 0000006cH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	50					; 00000032H
	DB	0
$LN12@Stop:
	DB	108					; 0000006cH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	49					; 00000031H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Stop@CTransformFilter@@UAGJXZ$0:
	lea	ecx, DWORD PTR _lck1$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__unwindfunclet$?Stop@CTransformFilter@@UAGJXZ$1:
	lea	ecx, DWORD PTR _lck2$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?Stop@CTransformFilter@@UAGJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Stop@CTransformFilter@@UAGJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Stop@CTransformFilter@@UAGJXZ ENDP			; CTransformFilter::Stop
EXTRN	?Lock@CCritSec@@QAEXXZ:PROC			; CCritSec::Lock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CAutoLock@@QAE@PAVCCritSec@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_plock$ = 8						; size = 4
??0CAutoLock@@QAE@PAVCCritSec@@@Z PROC			; CAutoLock::CAutoLock, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxutil.h
; Line 94
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _plock$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 97
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?Lock@CCritSec@@QAEXXZ			; CCritSec::Lock
; Line 98
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CAutoLock@@QAE@PAVCCritSec@@@Z ENDP			; CAutoLock::CAutoLock
_TEXT	ENDS
EXTRN	?Unlock@CCritSec@@QAEXXZ:PROC			; CCritSec::Unlock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CAutoLock@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CAutoLock@@QAE@XZ PROC				; CAutoLock::~CAutoLock, COMDAT
; _this$ = ecx
; Line 100
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Unlock@CCritSec@@QAEXXZ		; CCritSec::Unlock
; Line 102
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CAutoLock@@QAE@XZ ENDP				; CAutoLock::~CAutoLock
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsConnected@CBasePin@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsConnected@CBasePin@@QAEHXZ PROC			; CBasePin::IsConnected, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\amfilter.h
; Line 499
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+28], 0
	setne	cl
	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?IsConnected@CBasePin@@QAEHXZ ENDP			; CBasePin::IsConnected
_TEXT	ENDS
PUBLIC	?Pause@CTransformFilter@@UAGJXZ			; CTransformFilter::Pause
EXTRN	?Pause@CBaseFilter@@UAGJXZ:PROC			; CBaseFilter::Pause
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\transfrm.cpp
xdata$x	SEGMENT
__unwindtable$?Pause@CTransformFilter@@UAGJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Pause@CTransformFilter@@UAGJXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Pause@CTransformFilter@@UAGJXZ$1
__ehfuncinfo$?Pause@CTransformFilter@@UAGJXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Pause@CTransformFilter@@UAGJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Pause@CTransformFilter@@UAGJXZ
_TEXT	SEGMENT
$T82790 = -44						; size = 4
_lck2$81813 = -36					; size = 4
_hr$ = -28						; size = 4
_lck$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?Pause@CTransformFilter@@UAGJXZ PROC			; CTransformFilter::Pause, COMDAT
; Line 489
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Pause@CTransformFilter@@UAGJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 490
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 76					; 0000004cH
	push	eax
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 491
	mov	DWORD PTR _hr$[ebp], 0
; Line 493
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 1
	jne	SHORT $LN10@Pause
	jmp	$LN9@Pause
$LN10@Pause:
; Line 502
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+148], 0
	je	SHORT $LN7@Pause
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	jne	SHORT $LN8@Pause
$LN7@Pause:
; Line 503
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+152], 0
	je	SHORT $LN6@Pause
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+64], 0
	jne	SHORT $LN6@Pause
; Line 504
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+152]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 505
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+64], 1
$LN6@Pause:
; Line 507
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 1
	jmp	SHORT $LN9@Pause
$LN8@Pause:
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	jne	SHORT $LN4@Pause
; Line 514
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
; Line 517
	jmp	SHORT $LN9@Pause
$LN4@Pause:
; Line 518
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN2@Pause
; Line 521
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 112				; 00000070H
	push	eax
	lea	ecx, DWORD PTR _lck2$81813[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 522
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-16]
	mov	esi, esp
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 523
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _lck2$81813[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
$LN2@Pause:
; Line 524
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN9@Pause
; Line 525
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?Pause@CBaseFilter@@UAGJXZ		; CBaseFilter::Pause
	mov	DWORD PTR _hr$[ebp], eax
$LN9@Pause:
; Line 529
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+68], 0
; Line 530
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+72], 0
; Line 531
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T82790[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82790[ebp]
; Line 532
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@Pause
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN19@Pause:
	DD	2
	DD	$LN18@Pause
$LN18@Pause:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN15@Pause
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN16@Pause
$LN16@Pause:
	DB	108					; 0000006cH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	50					; 00000032H
	DB	0
$LN15@Pause:
	DB	108					; 0000006cH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Pause@CTransformFilter@@UAGJXZ$0:
	lea	ecx, DWORD PTR _lck$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__unwindfunclet$?Pause@CTransformFilter@@UAGJXZ$1:
	lea	ecx, DWORD PTR _lck2$81813[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?Pause@CTransformFilter@@UAGJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Pause@CTransformFilter@@UAGJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Pause@CTransformFilter@@UAGJXZ ENDP			; CTransformFilter::Pause
PUBLIC	?NewSegment@CTransformFilter@@UAEJ_J0N@Z	; CTransformFilter::NewSegment
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?NewSegment@CTransformFilter@@UAEJ_J0N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_tStart$ = 8						; size = 8
_tStop$ = 16						; size = 8
_dRate$ = 24						; size = 8
?NewSegment@CTransformFilter@@UAEJ_J0N@Z PROC		; CTransformFilter::NewSegment, COMDAT
; _this$ = ecx
; Line 539
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 540
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+168], 0
	je	SHORT $LN1@NewSegment
; Line 541
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _dRate$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _tStop$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _tStop$[ebp]
	push	edx
	mov	eax, DWORD PTR _tStart$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _tStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+168]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@NewSegment
$LN1@NewSegment:
; Line 543
	xor	eax, eax
$LN2@NewSegment:
; Line 544
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?NewSegment@CTransformFilter@@UAEJ_J0N@Z ENDP		; CTransformFilter::NewSegment
_TEXT	ENDS
PUBLIC	?IsStopped@CBasePin@@QAEHXZ			; CBasePin::IsStopped
PUBLIC	?CheckStreaming@CTransformInputPin@@UAEJXZ	; CTransformInputPin::CheckStreaming
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CheckStreaming@CTransformInputPin@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CheckStreaming@CTransformInputPin@@UAEJXZ PROC		; CTransformInputPin::CheckStreaming, COMDAT
; _this$ = ecx
; Line 549
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 550
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	cmp	DWORD PTR [ecx+168], 0
	jne	SHORT $LN7@CheckStrea
	push	550					; 00000226H
	push	OFFSET $SG81829
	push	OFFSET $SG81830
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN7@CheckStrea:
; Line 551
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+224]
	mov	ecx, DWORD PTR [eax+168]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	jne	SHORT $LN6@CheckStrea
; Line 552
	mov	eax, -2147220983			; 80040209H
	jmp	SHORT $LN8@CheckStrea
; Line 553
	jmp	SHORT $LN8@CheckStrea
$LN6@CheckStrea:
; Line 555
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	jne	SHORT $LN4@CheckStrea
	push	555					; 0000022bH
	push	OFFSET $SG81835
	push	OFFSET $SG81836
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN4@CheckStrea:
; Line 558
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+169]
	test	edx, edx
	je	SHORT $LN3@CheckStrea
; Line 559
	mov	eax, 1
	jmp	SHORT $LN8@CheckStrea
$LN3@CheckStrea:
; Line 562
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsStopped@CBasePin@@QAEHXZ		; CBasePin::IsStopped
	test	eax, eax
	je	SHORT $LN2@CheckStrea
; Line 563
	mov	eax, -2147220953			; 80040227H
	jmp	SHORT $LN8@CheckStrea
$LN2@CheckStrea:
; Line 565
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+40]
	test	ecx, ecx
	je	SHORT $LN1@CheckStrea
; Line 566
	mov	eax, -2147220981			; 8004020bH
	jmp	SHORT $LN8@CheckStrea
$LN1@CheckStrea:
; Line 568
	xor	eax, eax
$LN8@CheckStrea:
; Line 570
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CheckStreaming@CTransformInputPin@@UAEJXZ ENDP		; CTransformInputPin::CheckStreaming
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsStopped@CBasePin@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsStopped@CBasePin@@QAEHXZ PROC			; CBasePin::IsStopped, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\amfilter.h
; Line 504
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 505
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	xor	eax, eax
	cmp	DWORD PTR [ecx+24], 0
	sete	al
; Line 506
	mov	esp, ebp
	pop	ebp
	ret	0
?IsStopped@CBasePin@@QAEHXZ ENDP			; CBasePin::IsStopped
_TEXT	ENDS
PUBLIC	??_7CTransformInputPin@@6B@			; CTransformInputPin::`vftable'
PUBLIC	??_7CTransformInputPin@@6BIQualityControl@@@	; CTransformInputPin::`vftable'
PUBLIC	??_7CTransformInputPin@@6BIPin@@@		; CTransformInputPin::`vftable'
PUBLIC	??_7CTransformInputPin@@6BCUnknown@@@		; CTransformInputPin::`vftable'
PUBLIC	??_R4CTransformInputPin@@6BCUnknown@@@		; CTransformInputPin::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTransformInputPin@@@8			; CTransformInputPin `RTTI Type Descriptor'
PUBLIC	??_R3CTransformInputPin@@8			; CTransformInputPin::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTransformInputPin@@8			; CTransformInputPin::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTransformInputPin@@8		; CTransformInputPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CBaseInputPin@@8			; CBaseInputPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCBaseInputPin@@@8			; CBaseInputPin `RTTI Type Descriptor'
PUBLIC	??_R3CBaseInputPin@@8				; CBaseInputPin::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseInputPin@@8				; CBaseInputPin::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBasePin@@8			; CBasePin::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCBasePin@@@8				; CBasePin `RTTI Type Descriptor'
PUBLIC	??_R3CBasePin@@8				; CBasePin::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBasePin@@8				; CBasePin::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CUnknown@@8			; CUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCUnknown@@@8				; CUnknown `RTTI Type Descriptor'
PUBLIC	??_R3CUnknown@@8				; CUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CUnknown@@8				; CUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@INonDelegatingUnknown@@8		; INonDelegatingUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUINonDelegatingUnknown@@@8		; INonDelegatingUnknown `RTTI Type Descriptor'
PUBLIC	??_R3INonDelegatingUnknown@@8			; INonDelegatingUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2INonDelegatingUnknown@@8			; INonDelegatingUnknown::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@CBaseObject@@8			; CBaseObject::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVCBaseObject@@@8				; CBaseObject `RTTI Type Descriptor'
PUBLIC	??_R3CBaseObject@@8				; CBaseObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseObject@@8				; CBaseObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseObject@@8			; CBaseObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BA@?0A@EA@IPin@@8				; IPin::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AUIPin@@@8				; IPin `RTTI Type Descriptor'
PUBLIC	??_R3IPin@@8					; IPin::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IPin@@8					; IPin::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IPin@@8				; IPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1BA@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (16,-1,0,66)'
PUBLIC	??_R1BE@?0A@EA@IQualityControl@@8		; IQualityControl::`RTTI Base Class Descriptor at (20,-1,0,64)'
PUBLIC	??_R0?AUIQualityControl@@@8			; IQualityControl `RTTI Type Descriptor'
PUBLIC	??_R3IQualityControl@@8				; IQualityControl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IQualityControl@@8				; IQualityControl::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IQualityControl@@8		; IQualityControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BE@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (20,-1,0,66)'
PUBLIC	??_R1KA@?0A@EA@IMemInputPin@@8			; IMemInputPin::`RTTI Base Class Descriptor at (160,-1,0,64)'
PUBLIC	??_R0?AUIMemInputPin@@@8			; IMemInputPin `RTTI Type Descriptor'
PUBLIC	??_R3IMemInputPin@@8				; IMemInputPin::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IMemInputPin@@8				; IMemInputPin::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IMemInputPin@@8			; IMemInputPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1KA@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (160,-1,0,66)'
PUBLIC	?CheckMediaType@CTransformInputPin@@UAEJPBVCMediaType@@@Z ; CTransformInputPin::CheckMediaType
PUBLIC	?SetMediaType@CTransformInputPin@@UAEJPBVCMediaType@@@Z ; CTransformInputPin::SetMediaType
PUBLIC	?CheckConnect@CTransformInputPin@@UAEJPAUIPin@@@Z ; CTransformInputPin::CheckConnect
PUBLIC	?BreakConnect@CTransformInputPin@@UAEJXZ	; CTransformInputPin::BreakConnect
PUBLIC	?CompleteConnect@CTransformInputPin@@UAEJPAUIPin@@@Z ; CTransformInputPin::CompleteConnect
PUBLIC	??_R4CTransformInputPin@@6BIPin@@@		; CTransformInputPin::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CBaseInputPin@@UAGJABU_GUID@@PAPAX@Z ; CBaseInputPin::QueryInterface
PUBLIC	?AddRef@CBaseInputPin@@UAGKXZ			; CBaseInputPin::AddRef
PUBLIC	?Release@CBaseInputPin@@UAGKXZ			; CBaseInputPin::Release
PUBLIC	?QueryId@CTransformInputPin@@UAGJPAPA_W@Z	; CTransformInputPin::QueryId
PUBLIC	?QueryInternalConnections@CBasePin@@UAGJPAPAUIPin@@PAK@Z ; CBasePin::QueryInternalConnections
PUBLIC	?EndOfStream@CTransformInputPin@@UAGJXZ		; CTransformInputPin::EndOfStream
PUBLIC	?BeginFlush@CTransformInputPin@@UAGJXZ		; CTransformInputPin::BeginFlush
PUBLIC	?EndFlush@CTransformInputPin@@UAGJXZ		; CTransformInputPin::EndFlush
PUBLIC	?NewSegment@CTransformInputPin@@UAGJ_J0N@Z	; CTransformInputPin::NewSegment
PUBLIC	??_R4CTransformInputPin@@6BIQualityControl@@@	; CTransformInputPin::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CBaseInputPin@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:CBaseInputPin::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CBaseInputPin@@W3AGKXZ			; [thunk]:CBaseInputPin::AddRef`adjustor{4}'
PUBLIC	?Release@CBaseInputPin@@W3AGKXZ			; [thunk]:CBaseInputPin::Release`adjustor{4}'
PUBLIC	??_R4CTransformInputPin@@6B@			; CTransformInputPin::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CBaseInputPin@@WJA@AGJABU_GUID@@PAPAX@Z ; [thunk]:CBaseInputPin::QueryInterface`adjustor{144}'
PUBLIC	?AddRef@CBaseInputPin@@WJA@AGKXZ		; [thunk]:CBaseInputPin::AddRef`adjustor{144}'
PUBLIC	?Release@CBaseInputPin@@WJA@AGKXZ		; [thunk]:CBaseInputPin::Release`adjustor{144}'
PUBLIC	?Receive@CTransformInputPin@@UAGJPAUIMediaSample@@@Z ; CTransformInputPin::Receive
EXTRN	??1CBaseInputPin@@UAE@XZ:PROC			; CBaseInputPin::~CBaseInputPin
EXTRN	??0CBaseInputPin@@QAE@PA_WPAVCBaseFilter@@PAVCCritSec@@PAJPB_W@Z:PROC ; CBaseInputPin::CBaseInputPin
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?NonDelegatingQueryInterface@CBaseInputPin@@UAGJABU_GUID@@PAPAX@Z:PROC ; CBaseInputPin::NonDelegatingQueryInterface
EXTRN	?NonDelegatingAddRef@CBasePin@@UAGKXZ:PROC	; CBasePin::NonDelegatingAddRef
EXTRN	?NonDelegatingRelease@CBasePin@@UAGKXZ:PROC	; CBasePin::NonDelegatingRelease
EXTRN	??_ECTransformInputPin@@UAEPAXI@Z:PROC		; CTransformInputPin::`vector deleting destructor'
EXTRN	?GetMediaTypeVersion@CBasePin@@UAEJXZ:PROC	; CBasePin::GetMediaTypeVersion
EXTRN	?Active@CBasePin@@UAEJXZ:PROC			; CBasePin::Active
EXTRN	?Inactive@CBaseInputPin@@UAEJXZ:PROC		; CBaseInputPin::Inactive
EXTRN	?Run@CBasePin@@UAEJ_J@Z:PROC			; CBasePin::Run
EXTRN	?GetMediaType@CBasePin@@UAEJHPAVCMediaType@@@Z:PROC ; CBasePin::GetMediaType
EXTRN	?Connect@CBasePin@@UAGJPAUIPin@@PBU_AMMediaType@@@Z:PROC ; CBasePin::Connect
EXTRN	?ReceiveConnection@CBasePin@@UAGJPAUIPin@@PBU_AMMediaType@@@Z:PROC ; CBasePin::ReceiveConnection
EXTRN	?Disconnect@CBasePin@@UAGJXZ:PROC		; CBasePin::Disconnect
EXTRN	?ConnectedTo@CBasePin@@UAGJPAPAUIPin@@@Z:PROC	; CBasePin::ConnectedTo
EXTRN	?ConnectionMediaType@CBasePin@@UAGJPAU_AMMediaType@@@Z:PROC ; CBasePin::ConnectionMediaType
EXTRN	?QueryPinInfo@CBasePin@@UAGJPAU_PinInfo@@@Z:PROC ; CBasePin::QueryPinInfo
EXTRN	?QueryDirection@CBasePin@@UAGJPAW4_PinDirection@@@Z:PROC ; CBasePin::QueryDirection
EXTRN	?QueryAccept@CBasePin@@UAGJPBU_AMMediaType@@@Z:PROC ; CBasePin::QueryAccept
EXTRN	?EnumMediaTypes@CBasePin@@UAGJPAPAUIEnumMediaTypes@@@Z:PROC ; CBasePin::EnumMediaTypes
EXTRN	?Notify@CBaseInputPin@@UAGJPAUIBaseFilter@@UtagQuality@@@Z:PROC ; CBaseInputPin::Notify
EXTRN	?SetSink@CBasePin@@UAGJPAUIQualityControl@@@Z:PROC ; CBasePin::SetSink
EXTRN	?GetAllocator@CBaseInputPin@@UAGJPAPAUIMemAllocator@@@Z:PROC ; CBaseInputPin::GetAllocator
EXTRN	?NotifyAllocator@CBaseInputPin@@UAGJPAUIMemAllocator@@H@Z:PROC ; CBaseInputPin::NotifyAllocator
EXTRN	?GetAllocatorRequirements@CBaseInputPin@@UAGJPAU_AllocatorProperties@@@Z:PROC ; CBaseInputPin::GetAllocatorRequirements
EXTRN	?ReceiveMultiple@CBaseInputPin@@UAGJPAPAUIMediaSample@@JPAJ@Z:PROC ; CBaseInputPin::ReceiveMultiple
EXTRN	?ReceiveCanBlock@CBaseInputPin@@UAGJXZ:PROC	; CBaseInputPin::ReceiveCanBlock
;	COMDAT ??_R4CTransformInputPin@@6B@
; File c:\downloads\mediapoint\src\filters\baseclasses\transfrm.cpp
rdata$r	SEGMENT
??_R4CTransformInputPin@@6B@ DD 00H			; CTransformInputPin::`RTTI Complete Object Locator'
	DD	0a0H
	DD	00H
	DD	FLAT:??_R0?AVCTransformInputPin@@@8
	DD	FLAT:??_R3CTransformInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R4CTransformInputPin@@6BIQualityControl@@@
rdata$r	SEGMENT
??_R4CTransformInputPin@@6BIQualityControl@@@ DD 00H	; CTransformInputPin::`RTTI Complete Object Locator'
	DD	014H
	DD	00H
	DD	FLAT:??_R0?AVCTransformInputPin@@@8
	DD	FLAT:??_R3CTransformInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R4CTransformInputPin@@6BIPin@@@
rdata$r	SEGMENT
??_R4CTransformInputPin@@6BIPin@@@ DD 00H		; CTransformInputPin::`RTTI Complete Object Locator'
	DD	010H
	DD	00H
	DD	FLAT:??_R0?AVCTransformInputPin@@@8
	DD	FLAT:??_R3CTransformInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R1KA@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1KA@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (160,-1,0,66)'
	DD	00H
	DD	0a0H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IMemInputPin@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IMemInputPin@@8 DD FLAT:??_R0?AUIMemInputPin@@@8 ; IMemInputPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IMemInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R2IMemInputPin@@8
rdata$r	SEGMENT
??_R2IMemInputPin@@8 DD FLAT:??_R1A@?0A@EA@IMemInputPin@@8 ; IMemInputPin::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IMemInputPin@@8
rdata$r	SEGMENT
??_R3IMemInputPin@@8 DD 00H				; IMemInputPin::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IMemInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIMemInputPin@@@8
_DATA	SEGMENT
??_R0?AUIMemInputPin@@@8 DD FLAT:??_7type_info@@6B@	; IMemInputPin `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIMemInputPin@@', 00H
_DATA	ENDS
;	COMDAT ??_R1KA@?0A@EA@IMemInputPin@@8
rdata$r	SEGMENT
??_R1KA@?0A@EA@IMemInputPin@@8 DD FLAT:??_R0?AUIMemInputPin@@@8 ; IMemInputPin::`RTTI Base Class Descriptor at (160,-1,0,64)'
	DD	01H
	DD	0a0H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IMemInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R1BE@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BE@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (20,-1,0,66)'
	DD	00H
	DD	014H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IQualityControl@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IQualityControl@@8 DD FLAT:??_R0?AUIQualityControl@@@8 ; IQualityControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IQualityControl@@8
rdata$r	ENDS
;	COMDAT ??_R2IQualityControl@@8
rdata$r	SEGMENT
??_R2IQualityControl@@8 DD FLAT:??_R1A@?0A@EA@IQualityControl@@8 ; IQualityControl::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IQualityControl@@8
rdata$r	SEGMENT
??_R3IQualityControl@@8 DD 00H				; IQualityControl::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IQualityControl@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIQualityControl@@@8
_DATA	SEGMENT
??_R0?AUIQualityControl@@@8 DD FLAT:??_7type_info@@6B@	; IQualityControl `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIQualityControl@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BE@?0A@EA@IQualityControl@@8
rdata$r	SEGMENT
??_R1BE@?0A@EA@IQualityControl@@8 DD FLAT:??_R0?AUIQualityControl@@@8 ; IQualityControl::`RTTI Base Class Descriptor at (20,-1,0,64)'
	DD	01H
	DD	014H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IQualityControl@@8
rdata$r	ENDS
;	COMDAT ??_R1BA@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BA@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (16,-1,0,66)'
	DD	00H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IPin@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IPin@@8 DD FLAT:??_R0?AUIPin@@@8		; IPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IPin@@8
rdata$r	ENDS
;	COMDAT ??_R2IPin@@8
rdata$r	SEGMENT
??_R2IPin@@8 DD	FLAT:??_R1A@?0A@EA@IPin@@8		; IPin::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IPin@@8
rdata$r	SEGMENT
??_R3IPin@@8 DD	00H					; IPin::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IPin@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIPin@@@8
_DATA	SEGMENT
??_R0?AUIPin@@@8 DD FLAT:??_7type_info@@6B@		; IPin `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIPin@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BA@?0A@EA@IPin@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@IPin@@8 DD FLAT:??_R0?AUIPin@@@8		; IPin::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	01H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IPin@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseObject@@8 DD FLAT:??_R0?AVCBaseObject@@@8 ; CBaseObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseObject@@8
rdata$r	SEGMENT
??_R2CBaseObject@@8 DD FLAT:??_R1A@?0A@EA@CBaseObject@@8 ; CBaseObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CBaseObject@@8
rdata$r	SEGMENT
??_R3CBaseObject@@8 DD 00H				; CBaseObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseObject@@@8
_DATA	SEGMENT
??_R0?AVCBaseObject@@@8 DD FLAT:??_7type_info@@6B@	; CBaseObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseObject@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@CBaseObject@@8
rdata$r	SEGMENT
??_R13?0A@EA@CBaseObject@@8 DD FLAT:??_R0?AVCBaseObject@@@8 ; CBaseObject::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R2INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R2INonDelegatingUnknown@@8 DD FLAT:??_R1A@?0A@EA@INonDelegatingUnknown@@8 ; INonDelegatingUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R3INonDelegatingUnknown@@8 DD 00H			; INonDelegatingUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2INonDelegatingUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUINonDelegatingUnknown@@@8
_DATA	SEGMENT
??_R0?AUINonDelegatingUnknown@@@8 DD FLAT:??_7type_info@@6B@ ; INonDelegatingUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUINonDelegatingUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@INonDelegatingUnknown@@8 DD FLAT:??_R0?AUINonDelegatingUnknown@@@8 ; INonDelegatingUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3INonDelegatingUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2CUnknown@@8
rdata$r	SEGMENT
??_R2CUnknown@@8 DD FLAT:??_R1A@?0A@EA@CUnknown@@8	; CUnknown::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	FLAT:??_R13?0A@EA@CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CUnknown@@8
rdata$r	SEGMENT
??_R3CUnknown@@8 DD 00H					; CUnknown::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCUnknown@@@8
_DATA	SEGMENT
??_R0?AVCUnknown@@@8 DD FLAT:??_7type_info@@6B@		; CUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CUnknown@@8 DD FLAT:??_R0?AVCUnknown@@@8	; CUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2CBasePin@@8
rdata$r	SEGMENT
??_R2CBasePin@@8 DD FLAT:??_R1A@?0A@EA@CBasePin@@8	; CBasePin::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CUnknown@@8
	DD	FLAT:??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	FLAT:??_R13?0A@EA@CBaseObject@@8
	DD	FLAT:??_R1BA@?0A@EA@IPin@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@IQualityControl@@8
	DD	FLAT:??_R1BE@?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CBasePin@@8
rdata$r	SEGMENT
??_R3CBasePin@@8 DD 00H					; CBasePin::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	08H
	DD	FLAT:??_R2CBasePin@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBasePin@@@8
_DATA	SEGMENT
??_R0?AVCBasePin@@@8 DD FLAT:??_7type_info@@6B@		; CBasePin `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBasePin@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CBasePin@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBasePin@@8 DD FLAT:??_R0?AVCBasePin@@@8	; CBasePin::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	07H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBasePin@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseInputPin@@8
rdata$r	SEGMENT
??_R2CBaseInputPin@@8 DD FLAT:??_R1A@?0A@EA@CBaseInputPin@@8 ; CBaseInputPin::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBasePin@@8
	DD	FLAT:??_R1A@?0A@EA@CUnknown@@8
	DD	FLAT:??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	FLAT:??_R13?0A@EA@CBaseObject@@8
	DD	FLAT:??_R1BA@?0A@EA@IPin@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@IQualityControl@@8
	DD	FLAT:??_R1BE@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1KA@?0A@EA@IMemInputPin@@8
	DD	FLAT:??_R1KA@?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CBaseInputPin@@8
rdata$r	SEGMENT
??_R3CBaseInputPin@@8 DD 00H				; CBaseInputPin::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	0bH
	DD	FLAT:??_R2CBaseInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseInputPin@@@8
_DATA	SEGMENT
??_R0?AVCBaseInputPin@@@8 DD FLAT:??_7type_info@@6B@	; CBaseInputPin `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseInputPin@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseInputPin@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseInputPin@@8 DD FLAT:??_R0?AVCBaseInputPin@@@8 ; CBaseInputPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CTransformInputPin@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTransformInputPin@@8 DD FLAT:??_R0?AVCTransformInputPin@@@8 ; CTransformInputPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTransformInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R2CTransformInputPin@@8
rdata$r	SEGMENT
??_R2CTransformInputPin@@8 DD FLAT:??_R1A@?0A@EA@CTransformInputPin@@8 ; CTransformInputPin::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseInputPin@@8
	DD	FLAT:??_R1A@?0A@EA@CBasePin@@8
	DD	FLAT:??_R1A@?0A@EA@CUnknown@@8
	DD	FLAT:??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	FLAT:??_R13?0A@EA@CBaseObject@@8
	DD	FLAT:??_R1BA@?0A@EA@IPin@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@IQualityControl@@8
	DD	FLAT:??_R1BE@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1KA@?0A@EA@IMemInputPin@@8
	DD	FLAT:??_R1KA@?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CTransformInputPin@@8
rdata$r	SEGMENT
??_R3CTransformInputPin@@8 DD 00H			; CTransformInputPin::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0cH
	DD	FLAT:??_R2CTransformInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTransformInputPin@@@8
_DATA	SEGMENT
??_R0?AVCTransformInputPin@@@8 DD FLAT:??_7type_info@@6B@ ; CTransformInputPin `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTransformInputPin@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CTransformInputPin@@6BCUnknown@@@
rdata$r	SEGMENT
??_R4CTransformInputPin@@6BCUnknown@@@ DD 00H		; CTransformInputPin::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTransformInputPin@@@8
	DD	FLAT:??_R3CTransformInputPin@@8
rdata$r	ENDS
;	COMDAT ??_7CTransformInputPin@@6B@
CONST	SEGMENT
??_7CTransformInputPin@@6B@ DD FLAT:??_R4CTransformInputPin@@6B@ ; CTransformInputPin::`vftable'
	DD	FLAT:?QueryInterface@CBaseInputPin@@WJA@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CBaseInputPin@@WJA@AGKXZ
	DD	FLAT:?Release@CBaseInputPin@@WJA@AGKXZ
	DD	FLAT:?GetAllocator@CBaseInputPin@@UAGJPAPAUIMemAllocator@@@Z
	DD	FLAT:?NotifyAllocator@CBaseInputPin@@UAGJPAUIMemAllocator@@H@Z
	DD	FLAT:?GetAllocatorRequirements@CBaseInputPin@@UAGJPAU_AllocatorProperties@@@Z
	DD	FLAT:?Receive@CTransformInputPin@@UAGJPAUIMediaSample@@@Z
	DD	FLAT:?ReceiveMultiple@CBaseInputPin@@UAGJPAPAUIMediaSample@@JPAJ@Z
	DD	FLAT:?ReceiveCanBlock@CBaseInputPin@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7CTransformInputPin@@6BIQualityControl@@@
CONST	SEGMENT
??_7CTransformInputPin@@6BIQualityControl@@@ DD FLAT:??_R4CTransformInputPin@@6BIQualityControl@@@ ; CTransformInputPin::`vftable'
	DD	FLAT:?QueryInterface@CBaseInputPin@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CBaseInputPin@@W3AGKXZ
	DD	FLAT:?Release@CBaseInputPin@@W3AGKXZ
	DD	FLAT:?Notify@CBaseInputPin@@UAGJPAUIBaseFilter@@UtagQuality@@@Z
	DD	FLAT:?SetSink@CBasePin@@UAGJPAUIQualityControl@@@Z
CONST	ENDS
;	COMDAT ??_7CTransformInputPin@@6BIPin@@@
CONST	SEGMENT
??_7CTransformInputPin@@6BIPin@@@ DD FLAT:??_R4CTransformInputPin@@6BIPin@@@ ; CTransformInputPin::`vftable'
	DD	FLAT:?QueryInterface@CBaseInputPin@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CBaseInputPin@@UAGKXZ
	DD	FLAT:?Release@CBaseInputPin@@UAGKXZ
	DD	FLAT:?Connect@CBasePin@@UAGJPAUIPin@@PBU_AMMediaType@@@Z
	DD	FLAT:?ReceiveConnection@CBasePin@@UAGJPAUIPin@@PBU_AMMediaType@@@Z
	DD	FLAT:?Disconnect@CBasePin@@UAGJXZ
	DD	FLAT:?ConnectedTo@CBasePin@@UAGJPAPAUIPin@@@Z
	DD	FLAT:?ConnectionMediaType@CBasePin@@UAGJPAU_AMMediaType@@@Z
	DD	FLAT:?QueryPinInfo@CBasePin@@UAGJPAU_PinInfo@@@Z
	DD	FLAT:?QueryDirection@CBasePin@@UAGJPAW4_PinDirection@@@Z
	DD	FLAT:?QueryId@CTransformInputPin@@UAGJPAPA_W@Z
	DD	FLAT:?QueryAccept@CBasePin@@UAGJPBU_AMMediaType@@@Z
	DD	FLAT:?EnumMediaTypes@CBasePin@@UAGJPAPAUIEnumMediaTypes@@@Z
	DD	FLAT:?QueryInternalConnections@CBasePin@@UAGJPAPAUIPin@@PAK@Z
	DD	FLAT:?EndOfStream@CTransformInputPin@@UAGJXZ
	DD	FLAT:?BeginFlush@CTransformInputPin@@UAGJXZ
	DD	FLAT:?EndFlush@CTransformInputPin@@UAGJXZ
	DD	FLAT:?NewSegment@CTransformInputPin@@UAGJ_J0N@Z
CONST	ENDS
;	COMDAT ??_7CTransformInputPin@@6BCUnknown@@@
CONST	SEGMENT
??_7CTransformInputPin@@6BCUnknown@@@ DD FLAT:??_R4CTransformInputPin@@6BCUnknown@@@ ; CTransformInputPin::`vftable'
	DD	FLAT:?NonDelegatingQueryInterface@CBaseInputPin@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?NonDelegatingAddRef@CBasePin@@UAGKXZ
	DD	FLAT:?NonDelegatingRelease@CBasePin@@UAGKXZ
	DD	FLAT:??_ECTransformInputPin@@UAEPAXI@Z
	DD	FLAT:?GetMediaTypeVersion@CBasePin@@UAEJXZ
	DD	FLAT:?Active@CBasePin@@UAEJXZ
	DD	FLAT:?Inactive@CBaseInputPin@@UAEJXZ
	DD	FLAT:?Run@CBasePin@@UAEJ_J@Z
	DD	FLAT:?CheckMediaType@CTransformInputPin@@UAEJPBVCMediaType@@@Z
	DD	FLAT:?SetMediaType@CTransformInputPin@@UAEJPBVCMediaType@@@Z
	DD	FLAT:?CheckConnect@CTransformInputPin@@UAEJPAUIPin@@@Z
	DD	FLAT:?BreakConnect@CTransformInputPin@@UAEJXZ
	DD	FLAT:?CompleteConnect@CTransformInputPin@@UAEJPAUIPin@@@Z
	DD	FLAT:?GetMediaType@CBasePin@@UAEJHPAVCMediaType@@@Z
	DD	FLAT:?CheckStreaming@CTransformInputPin@@UAEJXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CTransformInputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CTransformInputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z$0
__ehfuncinfo$??0CTransformInputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CTransformInputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CTransformInputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pObjectName$ = 8					; size = 4
_pTransformFilter$ = 12					; size = 4
_phr$ = 16						; size = 4
_pName$ = 20						; size = 4
??0CTransformInputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z PROC ; CTransformInputPin::CTransformInputPin, COMDAT
; _this$ = ecx
; Line 586
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CTransformInputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _phr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pTransformFilter$[ebp]
	add	edx, 92					; 0000005cH
	push	edx
	mov	eax, DWORD PTR _pTransformFilter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObjectName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseInputPin@@QAE@PA_WPAVCBaseFilter@@PAVCCritSec@@PAJPB_W@Z ; CBaseInputPin::CBaseInputPin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7CTransformInputPin@@6BCUnknown@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], OFFSET ??_7CTransformInputPin@@6BIPin@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], OFFSET ??_7CTransformInputPin@@6BIQualityControl@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+160], OFFSET ??_7CTransformInputPin@@6B@
; Line 587
	push	OFFSET $SG81851
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 588
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTransformFilter$[ebp]
	mov	DWORD PTR [eax+224], ecx
; Line 589
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CTransformInputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseInputPin@@UAE@XZ		; CBaseInputPin::~CBaseInputPin
__ehhandler$??0CTransformInputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CTransformInputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CTransformInputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z ENDP ; CTransformInputPin::CTransformInputPin
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInternalConnections@CBasePin@@UAGJPAPAUIPin@@PAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_apPin$ = 12						; size = 4
_nPin$ = 16						; size = 4
?QueryInternalConnections@CBasePin@@UAGJPAPAUIPin@@PAK@Z PROC ; CBasePin::QueryInternalConnections, COMDAT
; File c:\downloads\mediapoint\src\filters\baseclasses\amfilter.h
; Line 472
	push	ebp
	mov	ebp, esp
	mov	eax, -2147467263			; 80004001H
	pop	ebp
	ret	12					; 0000000cH
?QueryInternalConnections@CBasePin@@UAGJPAPAUIPin@@PAK@Z ENDP ; CBasePin::QueryInternalConnections
_TEXT	ENDS
PUBLIC	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ		; CUnknown::GetOwner
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CBaseInputPin@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv72 = -4						; size = 4
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?QueryInterface@CBaseInputPin@@UAGJABU_GUID@@PAPAX@Z PROC ; CBaseInputPin::QueryInterface, COMDAT
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CBaseInputPin@@UAGJABU_GUID@@PAPAX@Z ENDP ; CBaseInputPin::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ PROC		; CUnknown::GetOwner, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\combase.h
; Line 224
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 225
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 226
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ ENDP		; CUnknown::GetOwner
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CBaseInputPin@@UAGKXZ
_TEXT	SEGMENT
tv72 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CBaseInputPin@@UAGKXZ PROC			; CBaseInputPin::AddRef, COMDAT
; File c:\downloads\mediapoint\src\filters\baseclasses\amfilter.h
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv72[ebp], eax
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CBaseInputPin@@UAGKXZ ENDP			; CBaseInputPin::AddRef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CBaseInputPin@@UAGKXZ
_TEXT	SEGMENT
tv72 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CBaseInputPin@@UAGKXZ PROC			; CBaseInputPin::Release, COMDAT
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv72[ebp], eax
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CBaseInputPin@@UAGKXZ ENDP			; CBaseInputPin::Release
_TEXT	ENDS
PUBLIC	??_C@_15LNJDIFMI@?$AAI?$AAn?$AA?$AA@		; `string'
EXTRN	_AMGetWideString@8:PROC
;	COMDAT ??_C@_15LNJDIFMI@?$AAI?$AAn?$AA?$AA@
; File c:\downloads\mediapoint\src\filters\baseclasses\transfrm.h
CONST	SEGMENT
??_C@_15LNJDIFMI@?$AAI?$AAn?$AA?$AA@ DB 'I', 00H, 'n', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?QueryId@CTransformInputPin@@UAGJPAPA_W@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Id$ = 12						; size = 4
?QueryId@CTransformInputPin@@UAGJPAPA_W@Z PROC		; CTransformInputPin::QueryId, COMDAT
; Line 57
	push	ebp
	mov	ebp, esp
; Line 58
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	push	OFFSET ??_C@_15LNJDIFMI@?$AAI?$AAn?$AA?$AA@
	call	_AMGetWideString@8
; Line 59
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?QueryId@CTransformInputPin@@UAGJPAPA_W@Z ENDP		; CTransformInputPin::QueryId
_TEXT	ENDS
PUBLIC	??1CTransformInputPin@@UAE@XZ			; CTransformInputPin::~CTransformInputPin
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCTransformInputPin@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCTransformInputPin@@UAEPAXI@Z PROC			; CTransformInputPin::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CTransformInputPin@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCTransformInputPin@@UAEPAXI@Z ENDP			; CTransformInputPin::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CTransformInputPin@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CTransformInputPin@@UAE@XZ PROC			; CTransformInputPin::~CTransformInputPin, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBaseInputPin@@UAE@XZ		; CBaseInputPin::~CBaseInputPin
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CTransformInputPin@@UAE@XZ ENDP			; CTransformInputPin::~CTransformInputPin
_TEXT	ENDS
PUBLIC	??0CTransformInputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z ; CTransformInputPin::CTransformInputPin
EXTRN	??0CBaseInputPin@@QAE@PADPAVCBaseFilter@@PAVCCritSec@@PAJPB_W@Z:PROC ; CBaseInputPin::CBaseInputPin
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\transfrm.cpp
xdata$x	SEGMENT
__unwindtable$??0CTransformInputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CTransformInputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z$0
__ehfuncinfo$??0CTransformInputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CTransformInputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CTransformInputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pObjectName$ = 8					; size = 4
_pTransformFilter$ = 12					; size = 4
_phr$ = 16						; size = 4
_pName$ = 20						; size = 4
??0CTransformInputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z PROC ; CTransformInputPin::CTransformInputPin, COMDAT
; _this$ = ecx
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CTransformInputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _phr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pTransformFilter$[ebp]
	add	edx, 92					; 0000005cH
	push	edx
	mov	eax, DWORD PTR _pTransformFilter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObjectName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseInputPin@@QAE@PADPAVCBaseFilter@@PAVCCritSec@@PAJPB_W@Z ; CBaseInputPin::CBaseInputPin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7CTransformInputPin@@6BCUnknown@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], OFFSET ??_7CTransformInputPin@@6BIPin@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], OFFSET ??_7CTransformInputPin@@6BIQualityControl@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+160], OFFSET ??_7CTransformInputPin@@6B@
; Line 599
	push	OFFSET $SG81865
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 600
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTransformFilter$[ebp]
	mov	DWORD PTR [eax+224], ecx
; Line 601
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CTransformInputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseInputPin@@UAE@XZ		; CBaseInputPin::~CBaseInputPin
__ehhandler$??0CTransformInputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CTransformInputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CTransformInputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z ENDP ; CTransformInputPin::CTransformInputPin
EXTRN	?CheckConnect@CBasePin@@UAEJPAUIPin@@@Z:PROC	; CBasePin::CheckConnect
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CheckConnect@CTransformInputPin@@UAEJPAUIPin@@@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_pPin$ = 8						; size = 4
?CheckConnect@CTransformInputPin@@UAEJPAUIPin@@@Z PROC	; CTransformInputPin::CheckConnect, COMDAT
; _this$ = ecx
; Line 608
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 609
	mov	esi, esp
	mov	eax, DWORD PTR _pPin$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+224]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+72]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 610
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CheckConne
; Line 611
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@CheckConne
$LN1@CheckConne:
; Line 613
	mov	ecx, DWORD PTR _pPin$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CheckConnect@CBasePin@@UAEJPAUIPin@@@Z	; CBasePin::CheckConnect
$LN2@CheckConne:
; Line 614
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CheckConnect@CTransformInputPin@@UAEJPAUIPin@@@Z ENDP	; CTransformInputPin::CheckConnect
_TEXT	ENDS
EXTRN	?BreakConnect@CBaseInputPin@@UAEJXZ:PROC	; CBaseInputPin::BreakConnect
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?BreakConnect@CTransformInputPin@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BreakConnect@CTransformInputPin@@UAEJXZ PROC		; CTransformInputPin::BreakConnect, COMDAT
; _this$ = ecx
; Line 621
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 623
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsStopped@CBasePin@@QAEHXZ		; CBasePin::IsStopped
	test	eax, eax
	jne	SHORT $LN1@BreakConne
	push	623					; 0000026fH
	push	OFFSET $SG81877
	push	OFFSET $SG81878
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@BreakConne:
; Line 624
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+224]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 625
	mov	ecx, DWORD PTR _this$[ebp]
	call	?BreakConnect@CBaseInputPin@@UAEJXZ	; CBaseInputPin::BreakConnect
; Line 626
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?BreakConnect@CTransformInputPin@@UAEJXZ ENDP		; CTransformInputPin::BreakConnect
_TEXT	ENDS
EXTRN	?CompleteConnect@CBasePin@@UAEJPAUIPin@@@Z:PROC	; CBasePin::CompleteConnect
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CompleteConnect@CTransformInputPin@@UAEJPAUIPin@@@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_pReceivePin$ = 8					; size = 4
?CompleteConnect@CTransformInputPin@@UAEJPAUIPin@@@Z PROC ; CTransformInputPin::CompleteConnect, COMDAT
; _this$ = ecx
; Line 633
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 634
	mov	esi, esp
	mov	eax, DWORD PTR _pReceivePin$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+224]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+80]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 635
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CompleteCo
; Line 636
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@CompleteCo
$LN1@CompleteCo:
; Line 638
	mov	ecx, DWORD PTR _pReceivePin$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CompleteConnect@CBasePin@@UAEJPAUIPin@@@Z ; CBasePin::CompleteConnect
$LN2@CompleteCo:
; Line 639
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CompleteConnect@CTransformInputPin@@UAEJPAUIPin@@@Z ENDP ; CTransformInputPin::CompleteConnect
_TEXT	ENDS
PUBLIC	?CurrentMediaType@CTransformOutputPin@@QAEAAVCMediaType@@XZ ; CTransformOutputPin::CurrentMediaType
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CheckMediaType@CTransformInputPin@@UAEJPBVCMediaType@@@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_pmt$ = 8						; size = 4
?CheckMediaType@CTransformInputPin@@UAEJPBVCMediaType@@@Z PROC ; CTransformInputPin::CheckMediaType, COMDAT
; _this$ = ecx
; Line 646
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 649
	mov	esi, esp
	mov	eax, DWORD PTR _pmt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+224]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 650
	cmp	DWORD PTR _hr$[ebp], 0
	je	SHORT $LN3@CheckMedia
; Line 651
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN4@CheckMedia
$LN3@CheckMedia:
; Line 658
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+224]
	cmp	DWORD PTR [edx+168], 0
	je	SHORT $LN2@CheckMedia
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	mov	ecx, DWORD PTR [ecx+168]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	je	SHORT $LN2@CheckMedia
; Line 661
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+224]
	mov	ecx, DWORD PTR [eax+168]
	call	?CurrentMediaType@CTransformOutputPin@@QAEAAVCMediaType@@XZ ; CTransformOutputPin::CurrentMediaType
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+224]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+224]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN4@CheckMedia
; Line 662
	jmp	SHORT $LN4@CheckMedia
$LN2@CheckMedia:
; Line 663
	mov	eax, DWORD PTR _hr$[ebp]
$LN4@CheckMedia:
; Line 665
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CheckMediaType@CTransformInputPin@@UAEJPBVCMediaType@@@Z ENDP ; CTransformInputPin::CheckMediaType
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?CurrentMediaType@CTransformOutputPin@@QAEAAVCMediaType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CurrentMediaType@CTransformOutputPin@@QAEAAVCMediaType@@XZ PROC ; CTransformOutputPin::CurrentMediaType, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\transfrm.h
; Line 170
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	mov	esp, ebp
	pop	ebp
	ret	0
?CurrentMediaType@CTransformOutputPin@@QAEAAVCMediaType@@XZ ENDP ; CTransformOutputPin::CurrentMediaType
_TEXT	ENDS
EXTRN	?SetMediaType@CBasePin@@UAEJPBVCMediaType@@@Z:PROC ; CBasePin::SetMediaType
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetMediaType@CTransformInputPin@@UAEJPBVCMediaType@@@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_mtIn$ = 8						; size = 4
?SetMediaType@CTransformInputPin@@UAEJPBVCMediaType@@@Z PROC ; CTransformInputPin::SetMediaType, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\transfrm.cpp
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 674
	mov	eax, DWORD PTR _mtIn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetMediaType@CBasePin@@UAEJPBVCMediaType@@@Z ; CBasePin::SetMediaType
	mov	DWORD PTR _hr$[ebp], eax
; Line 675
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@SetMediaTy
; Line 676
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN3@SetMediaTy
$LN2@SetMediaTy:
; Line 680
	mov	esi, esp
	mov	ecx, DWORD PTR _mtIn$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+224]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+224]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jge	SHORT $LN1@SetMediaTy
	push	680					; 000002a8H
	push	OFFSET $SG81904
	push	OFFSET $SG81905
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@SetMediaTy:
; Line 682
	mov	esi, esp
	mov	ecx, DWORD PTR _mtIn$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+224]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+224]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@SetMediaTy:
; Line 683
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMediaType@CTransformInputPin@@UAEJPBVCMediaType@@@Z ENDP ; CTransformInputPin::SetMediaType
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?EndOfStream@CTransformInputPin@@UAGJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EndOfStream@CTransformInputPin@@UAGJXZ$0
__ehfuncinfo$?EndOfStream@CTransformInputPin@@UAGJXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?EndOfStream@CTransformInputPin@@UAGJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?EndOfStream@CTransformInputPin@@UAGJXZ
_TEXT	SEGMENT
$T82859 = -32						; size = 4
_hr$ = -28						; size = 4
_lck$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?EndOfStream@CTransformInputPin@@UAGJXZ PROC		; CTransformInputPin::EndOfStream, COMDAT
; Line 695
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?EndOfStream@CTransformInputPin@@UAGJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 696
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	add	ecx, 128				; 00000080H
	push	ecx
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 697
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-16]
	mov	esi, esp
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 698
	cmp	DWORD PTR _hr$[ebp], 0
	jne	SHORT $LN1@EndOfStrea@2
; Line 699
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+208]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$LN1@EndOfStrea@2:
; Line 701
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T82859[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82859[ebp]
; Line 702
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@EndOfStrea@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN8@EndOfStrea@2:
	DD	1
	DD	$LN7@EndOfStrea@2
$LN7@EndOfStrea@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN5@EndOfStrea@2
$LN5@EndOfStrea@2:
	DB	108					; 0000006cH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?EndOfStream@CTransformInputPin@@UAGJXZ$0:
	lea	ecx, DWORD PTR _lck$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?EndOfStream@CTransformInputPin@@UAGJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?EndOfStream@CTransformInputPin@@UAGJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?EndOfStream@CTransformInputPin@@UAGJXZ ENDP		; CTransformInputPin::EndOfStream
EXTRN	?BeginFlush@CBaseInputPin@@UAGJXZ:PROC		; CBaseInputPin::BeginFlush
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?BeginFlush@CTransformInputPin@@UAGJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BeginFlush@CTransformInputPin@@UAGJXZ$0
__ehfuncinfo$?BeginFlush@CTransformInputPin@@UAGJXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BeginFlush@CTransformInputPin@@UAGJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?BeginFlush@CTransformInputPin@@UAGJXZ
_TEXT	SEGMENT
$T82874 = -40						; size = 4
$T82873 = -36						; size = 4
$T82872 = -32						; size = 4
_hr$ = -28						; size = 4
_lck$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?BeginFlush@CTransformInputPin@@UAGJXZ PROC		; CTransformInputPin::BeginFlush, COMDAT
; Line 709
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BeginFlush@CTransformInputPin@@UAGJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 710
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	add	ecx, 92					; 0000005cH
	push	ecx
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 712
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+208]
	cmp	DWORD PTR [eax+168], 0
	jne	SHORT $LN4@BeginFlush@2
	push	712					; 000002c8H
	push	OFFSET $SG81921
	push	OFFSET $SG81922
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN4@BeginFlush@2:
; Line 714
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	je	SHORT $LN2@BeginFlush@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+208]
	mov	ecx, DWORD PTR [edx+168]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	jne	SHORT $LN3@BeginFlush@2
$LN2@BeginFlush@2:
; Line 715
	mov	DWORD PTR $T82872[ebp], -2147220983	; 80040209H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82872[ebp]
	jmp	SHORT $LN5@BeginFlush@2
$LN3@BeginFlush@2:
; Line 717
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?BeginFlush@CBaseInputPin@@UAGJXZ	; CBaseInputPin::BeginFlush
	mov	DWORD PTR _hr$[ebp], eax
; Line 718
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@BeginFlush@2
; Line 719
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T82873[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82873[ebp]
	jmp	SHORT $LN5@BeginFlush@2
$LN1@BeginFlush@2:
; Line 722
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+208]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+208]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T82874[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82874[ebp]
$LN5@BeginFlush@2:
; Line 723
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@BeginFlush@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN11@BeginFlush@2:
	DD	1
	DD	$LN10@BeginFlush@2
$LN10@BeginFlush@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@BeginFlush@2
$LN8@BeginFlush@2:
	DB	108					; 0000006cH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?BeginFlush@CTransformInputPin@@UAGJXZ$0:
	lea	ecx, DWORD PTR _lck$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?BeginFlush@CTransformInputPin@@UAGJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BeginFlush@CTransformInputPin@@UAGJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?BeginFlush@CTransformInputPin@@UAGJXZ ENDP		; CTransformInputPin::BeginFlush
EXTRN	?EndFlush@CBaseInputPin@@UAGJXZ:PROC		; CBaseInputPin::EndFlush
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?EndFlush@CTransformInputPin@@UAGJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EndFlush@CTransformInputPin@@UAGJXZ$0
__ehfuncinfo$?EndFlush@CTransformInputPin@@UAGJXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?EndFlush@CTransformInputPin@@UAGJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?EndFlush@CTransformInputPin@@UAGJXZ
_TEXT	SEGMENT
$T82889 = -40						; size = 4
$T82888 = -36						; size = 4
$T82887 = -32						; size = 4
_hr$ = -28						; size = 4
_lck$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?EndFlush@CTransformInputPin@@UAGJXZ PROC		; CTransformInputPin::EndFlush, COMDAT
; Line 731
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?EndFlush@CTransformInputPin@@UAGJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 732
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	add	ecx, 92					; 0000005cH
	push	ecx
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 734
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+208]
	cmp	DWORD PTR [eax+168], 0
	jne	SHORT $LN4@EndFlush@2
	push	734					; 000002deH
	push	OFFSET $SG81938
	push	OFFSET $SG81939
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN4@EndFlush@2:
; Line 736
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	je	SHORT $LN2@EndFlush@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+208]
	mov	ecx, DWORD PTR [edx+168]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	jne	SHORT $LN3@EndFlush@2
$LN2@EndFlush@2:
; Line 737
	mov	DWORD PTR $T82887[ebp], -2147220983	; 80040209H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82887[ebp]
	jmp	SHORT $LN5@EndFlush@2
$LN3@EndFlush@2:
; Line 740
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+208]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 741
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@EndFlush@2
; Line 742
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T82888[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82888[ebp]
	jmp	SHORT $LN5@EndFlush@2
$LN1@EndFlush@2:
; Line 745
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?EndFlush@CBaseInputPin@@UAGJXZ		; CBaseInputPin::EndFlush
	mov	DWORD PTR $T82889[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82889[ebp]
$LN5@EndFlush@2:
; Line 746
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@EndFlush@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN11@EndFlush@2:
	DD	1
	DD	$LN10@EndFlush@2
$LN10@EndFlush@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@EndFlush@2
$LN8@EndFlush@2:
	DB	108					; 0000006cH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?EndFlush@CTransformInputPin@@UAGJXZ$0:
	lea	ecx, DWORD PTR _lck$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?EndFlush@CTransformInputPin@@UAGJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?EndFlush@CTransformInputPin@@UAGJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?EndFlush@CTransformInputPin@@UAGJXZ ENDP		; CTransformInputPin::EndFlush
EXTRN	?Receive@CBaseInputPin@@UAGJPAUIMediaSample@@@Z:PROC ; CBaseInputPin::Receive
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Receive@CTransformInputPin@@UAGJPAUIMediaSample@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Receive@CTransformInputPin@@UAGJPAUIMediaSample@@@Z$0
__ehfuncinfo$?Receive@CTransformInputPin@@UAGJPAUIMediaSample@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Receive@CTransformInputPin@@UAGJPAUIMediaSample@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Receive@CTransformInputPin@@UAGJPAUIMediaSample@@@Z
_TEXT	SEGMENT
$T82902 = -32						; size = 4
_lck$ = -24						; size = 4
_hr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_pSample$ = 12						; size = 4
?Receive@CTransformInputPin@@UAGJPAUIMediaSample@@@Z PROC ; CTransformInputPin::Receive, COMDAT
; Line 755
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Receive@CTransformInputPin@@UAGJPAUIMediaSample@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 757
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	add	ecx, 128				; 00000080H
	push	ecx
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 758
	cmp	DWORD PTR _pSample$[ebp], 0
	jne	SHORT $LN2@Receive@2
	push	758					; 000002f6H
	push	OFFSET $SG81956
	push	OFFSET $SG81957
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@Receive@2:
; Line 761
	mov	edx, DWORD PTR _pSample$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?Receive@CBaseInputPin@@UAGJPAUIMediaSample@@@Z ; CBaseInputPin::Receive
	mov	DWORD PTR _hr$[ebp], eax
; Line 762
	cmp	DWORD PTR _hr$[ebp], 0
	jne	SHORT $LN1@Receive@2
; Line 763
	mov	esi, esp
	mov	ecx, DWORD PTR _pSample$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+64]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$LN1@Receive@2:
; Line 765
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T82902[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lck$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82902[ebp]
; Line 766
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Receive@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN9@Receive@2:
	DD	1
	DD	$LN8@Receive@2
$LN8@Receive@2:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN6@Receive@2
$LN6@Receive@2:
	DB	108					; 0000006cH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Receive@CTransformInputPin@@UAGJPAUIMediaSample@@@Z$0:
	lea	ecx, DWORD PTR _lck$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?Receive@CTransformInputPin@@UAGJPAUIMediaSample@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Receive@CTransformInputPin@@UAGJPAUIMediaSample@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Receive@CTransformInputPin@@UAGJPAUIMediaSample@@@Z ENDP ; CTransformInputPin::Receive
EXTRN	?NewSegment@CBasePin@@UAGJ_J0N@Z:PROC		; CBasePin::NewSegment
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?NewSegment@CTransformInputPin@@UAGJ_J0N@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_tStart$ = 12						; size = 8
_tStop$ = 20						; size = 8
_dRate$ = 28						; size = 8
?NewSegment@CTransformInputPin@@UAGJ_J0N@Z PROC		; CTransformInputPin::NewSegment, COMDAT
; Line 777
	push	ebp
	mov	ebp, esp
	push	esi
; Line 779
	sub	esp, 8
	fld	QWORD PTR _dRate$[ebp]
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR _tStop$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _tStop$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tStart$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _tStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?NewSegment@CBasePin@@UAGJ_J0N@Z	; CBasePin::NewSegment
; Line 780
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _dRate$[ebp]
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _tStop$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _tStop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tStart$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _tStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+208]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 781
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	28					; 0000001cH
?NewSegment@CTransformInputPin@@UAGJ_J0N@Z ENDP		; CTransformInputPin::NewSegment
_TEXT	ENDS
PUBLIC	??1CBaseOutputPin@@UAE@XZ			; CBaseOutputPin::~CBaseOutputPin
PUBLIC	??_7CTransformOutputPin@@6BIQualityControl@@@	; CTransformOutputPin::`vftable'
PUBLIC	??_7CTransformOutputPin@@6BIPin@@@		; CTransformOutputPin::`vftable'
PUBLIC	??_7CTransformOutputPin@@6BCUnknown@@@		; CTransformOutputPin::`vftable'
PUBLIC	??_R4CTransformOutputPin@@6BCUnknown@@@		; CTransformOutputPin::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCTransformOutputPin@@@8			; CTransformOutputPin `RTTI Type Descriptor'
PUBLIC	??_R3CTransformOutputPin@@8			; CTransformOutputPin::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CTransformOutputPin@@8			; CTransformOutputPin::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CTransformOutputPin@@8		; CTransformOutputPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CBaseOutputPin@@8			; CBaseOutputPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCBaseOutputPin@@@8			; CBaseOutputPin `RTTI Type Descriptor'
PUBLIC	??_R3CBaseOutputPin@@8				; CBaseOutputPin::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseOutputPin@@8				; CBaseOutputPin::`RTTI Base Class Array'
PUBLIC	?NonDelegatingQueryInterface@CTransformOutputPin@@UAGJABU_GUID@@PAPAX@Z ; CTransformOutputPin::NonDelegatingQueryInterface
PUBLIC	?CheckMediaType@CTransformOutputPin@@UAEJPBVCMediaType@@@Z ; CTransformOutputPin::CheckMediaType
PUBLIC	?SetMediaType@CTransformOutputPin@@UAEJPBVCMediaType@@@Z ; CTransformOutputPin::SetMediaType
PUBLIC	?CheckConnect@CTransformOutputPin@@UAEJPAUIPin@@@Z ; CTransformOutputPin::CheckConnect
PUBLIC	?BreakConnect@CTransformOutputPin@@UAEJXZ	; CTransformOutputPin::BreakConnect
PUBLIC	?CompleteConnect@CTransformOutputPin@@UAEJPAUIPin@@@Z ; CTransformOutputPin::CompleteConnect
PUBLIC	?GetMediaType@CTransformOutputPin@@UAEJHPAVCMediaType@@@Z ; CTransformOutputPin::GetMediaType
PUBLIC	?DecideBufferSize@CTransformOutputPin@@UAEJPAUIMemAllocator@@PAU_AllocatorProperties@@@Z ; CTransformOutputPin::DecideBufferSize
PUBLIC	??_R4CTransformOutputPin@@6BIPin@@@		; CTransformOutputPin::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CBasePin@@UAGJABU_GUID@@PAPAX@Z	; CBasePin::QueryInterface
PUBLIC	?AddRef@CBasePin@@UAGKXZ			; CBasePin::AddRef
PUBLIC	?Release@CBasePin@@UAGKXZ			; CBasePin::Release
PUBLIC	?QueryId@CTransformOutputPin@@UAGJPAPA_W@Z	; CTransformOutputPin::QueryId
PUBLIC	??_R4CTransformOutputPin@@6BIQualityControl@@@	; CTransformOutputPin::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CBasePin@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:CBasePin::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CBasePin@@W3AGKXZ			; [thunk]:CBasePin::AddRef`adjustor{4}'
PUBLIC	?Release@CBasePin@@W3AGKXZ			; [thunk]:CBasePin::Release`adjustor{4}'
PUBLIC	?Notify@CTransformOutputPin@@UAGJPAUIBaseFilter@@UtagQuality@@@Z ; CTransformOutputPin::Notify
EXTRN	??0CBaseOutputPin@@QAE@PA_WPAVCBaseFilter@@PAVCCritSec@@PAJPB_W@Z:PROC ; CBaseOutputPin::CBaseOutputPin
EXTRN	??_ECTransformOutputPin@@UAEPAXI@Z:PROC		; CTransformOutputPin::`vector deleting destructor'
EXTRN	?Active@CBaseOutputPin@@UAEJXZ:PROC		; CBaseOutputPin::Active
EXTRN	?Inactive@CBaseOutputPin@@UAEJXZ:PROC		; CBaseOutputPin::Inactive
EXTRN	?DecideAllocator@CBaseOutputPin@@UAEJPAUIMemInputPin@@PAPAUIMemAllocator@@@Z:PROC ; CBaseOutputPin::DecideAllocator
EXTRN	?GetDeliveryBuffer@CBaseOutputPin@@UAEJPAPAUIMediaSample@@PA_J1K@Z:PROC ; CBaseOutputPin::GetDeliveryBuffer
EXTRN	?Deliver@CBaseOutputPin@@UAEJPAUIMediaSample@@@Z:PROC ; CBaseOutputPin::Deliver
EXTRN	?InitAllocator@CBaseOutputPin@@UAEJPAPAUIMemAllocator@@@Z:PROC ; CBaseOutputPin::InitAllocator
EXTRN	?DeliverEndOfStream@CBaseOutputPin@@UAEJXZ:PROC	; CBaseOutputPin::DeliverEndOfStream
EXTRN	?DeliverBeginFlush@CBaseOutputPin@@UAEJXZ:PROC	; CBaseOutputPin::DeliverBeginFlush
EXTRN	?DeliverEndFlush@CBaseOutputPin@@UAEJXZ:PROC	; CBaseOutputPin::DeliverEndFlush
EXTRN	?DeliverNewSegment@CBaseOutputPin@@UAEJ_J0N@Z:PROC ; CBaseOutputPin::DeliverNewSegment
EXTRN	?EndOfStream@CBaseOutputPin@@UAGJXZ:PROC	; CBaseOutputPin::EndOfStream
EXTRN	?BeginFlush@CBaseOutputPin@@UAGJXZ:PROC		; CBaseOutputPin::BeginFlush
EXTRN	?EndFlush@CBaseOutputPin@@UAGJXZ:PROC		; CBaseOutputPin::EndFlush
;	COMDAT ??_R4CTransformOutputPin@@6BIQualityControl@@@
rdata$r	SEGMENT
??_R4CTransformOutputPin@@6BIQualityControl@@@ DD 00H	; CTransformOutputPin::`RTTI Complete Object Locator'
	DD	014H
	DD	00H
	DD	FLAT:??_R0?AVCTransformOutputPin@@@8
	DD	FLAT:??_R3CTransformOutputPin@@8
rdata$r	ENDS
;	COMDAT ??_R4CTransformOutputPin@@6BIPin@@@
rdata$r	SEGMENT
??_R4CTransformOutputPin@@6BIPin@@@ DD 00H		; CTransformOutputPin::`RTTI Complete Object Locator'
	DD	010H
	DD	00H
	DD	FLAT:??_R0?AVCTransformOutputPin@@@8
	DD	FLAT:??_R3CTransformOutputPin@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseOutputPin@@8
rdata$r	SEGMENT
??_R2CBaseOutputPin@@8 DD FLAT:??_R1A@?0A@EA@CBaseOutputPin@@8 ; CBaseOutputPin::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBasePin@@8
	DD	FLAT:??_R1A@?0A@EA@CUnknown@@8
	DD	FLAT:??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	FLAT:??_R13?0A@EA@CBaseObject@@8
	DD	FLAT:??_R1BA@?0A@EA@IPin@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@IQualityControl@@8
	DD	FLAT:??_R1BE@?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CBaseOutputPin@@8
rdata$r	SEGMENT
??_R3CBaseOutputPin@@8 DD 00H				; CBaseOutputPin::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	09H
	DD	FLAT:??_R2CBaseOutputPin@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseOutputPin@@@8
_DATA	SEGMENT
??_R0?AVCBaseOutputPin@@@8 DD FLAT:??_7type_info@@6B@	; CBaseOutputPin `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseOutputPin@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseOutputPin@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseOutputPin@@8 DD FLAT:??_R0?AVCBaseOutputPin@@@8 ; CBaseOutputPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseOutputPin@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CTransformOutputPin@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CTransformOutputPin@@8 DD FLAT:??_R0?AVCTransformOutputPin@@@8 ; CTransformOutputPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CTransformOutputPin@@8
rdata$r	ENDS
;	COMDAT ??_R2CTransformOutputPin@@8
rdata$r	SEGMENT
??_R2CTransformOutputPin@@8 DD FLAT:??_R1A@?0A@EA@CTransformOutputPin@@8 ; CTransformOutputPin::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseOutputPin@@8
	DD	FLAT:??_R1A@?0A@EA@CBasePin@@8
	DD	FLAT:??_R1A@?0A@EA@CUnknown@@8
	DD	FLAT:??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	FLAT:??_R13?0A@EA@CBaseObject@@8
	DD	FLAT:??_R1BA@?0A@EA@IPin@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@IQualityControl@@8
	DD	FLAT:??_R1BE@?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CTransformOutputPin@@8
rdata$r	SEGMENT
??_R3CTransformOutputPin@@8 DD 00H			; CTransformOutputPin::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	FLAT:??_R2CTransformOutputPin@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCTransformOutputPin@@@8
_DATA	SEGMENT
??_R0?AVCTransformOutputPin@@@8 DD FLAT:??_7type_info@@6B@ ; CTransformOutputPin `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCTransformOutputPin@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CTransformOutputPin@@6BCUnknown@@@
rdata$r	SEGMENT
??_R4CTransformOutputPin@@6BCUnknown@@@ DD 00H		; CTransformOutputPin::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCTransformOutputPin@@@8
	DD	FLAT:??_R3CTransformOutputPin@@8
rdata$r	ENDS
;	COMDAT ??_7CTransformOutputPin@@6BIQualityControl@@@
CONST	SEGMENT
??_7CTransformOutputPin@@6BIQualityControl@@@ DD FLAT:??_R4CTransformOutputPin@@6BIQualityControl@@@ ; CTransformOutputPin::`vftable'
	DD	FLAT:?QueryInterface@CBasePin@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CBasePin@@W3AGKXZ
	DD	FLAT:?Release@CBasePin@@W3AGKXZ
	DD	FLAT:?Notify@CTransformOutputPin@@UAGJPAUIBaseFilter@@UtagQuality@@@Z
	DD	FLAT:?SetSink@CBasePin@@UAGJPAUIQualityControl@@@Z
CONST	ENDS
;	COMDAT ??_7CTransformOutputPin@@6BIPin@@@
CONST	SEGMENT
??_7CTransformOutputPin@@6BIPin@@@ DD FLAT:??_R4CTransformOutputPin@@6BIPin@@@ ; CTransformOutputPin::`vftable'
	DD	FLAT:?QueryInterface@CBasePin@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CBasePin@@UAGKXZ
	DD	FLAT:?Release@CBasePin@@UAGKXZ
	DD	FLAT:?Connect@CBasePin@@UAGJPAUIPin@@PBU_AMMediaType@@@Z
	DD	FLAT:?ReceiveConnection@CBasePin@@UAGJPAUIPin@@PBU_AMMediaType@@@Z
	DD	FLAT:?Disconnect@CBasePin@@UAGJXZ
	DD	FLAT:?ConnectedTo@CBasePin@@UAGJPAPAUIPin@@@Z
	DD	FLAT:?ConnectionMediaType@CBasePin@@UAGJPAU_AMMediaType@@@Z
	DD	FLAT:?QueryPinInfo@CBasePin@@UAGJPAU_PinInfo@@@Z
	DD	FLAT:?QueryDirection@CBasePin@@UAGJPAW4_PinDirection@@@Z
	DD	FLAT:?QueryId@CTransformOutputPin@@UAGJPAPA_W@Z
	DD	FLAT:?QueryAccept@CBasePin@@UAGJPBU_AMMediaType@@@Z
	DD	FLAT:?EnumMediaTypes@CBasePin@@UAGJPAPAUIEnumMediaTypes@@@Z
	DD	FLAT:?QueryInternalConnections@CBasePin@@UAGJPAPAUIPin@@PAK@Z
	DD	FLAT:?EndOfStream@CBaseOutputPin@@UAGJXZ
	DD	FLAT:?BeginFlush@CBaseOutputPin@@UAGJXZ
	DD	FLAT:?EndFlush@CBaseOutputPin@@UAGJXZ
	DD	FLAT:?NewSegment@CBasePin@@UAGJ_J0N@Z
CONST	ENDS
;	COMDAT ??_7CTransformOutputPin@@6BCUnknown@@@
CONST	SEGMENT
??_7CTransformOutputPin@@6BCUnknown@@@ DD FLAT:??_R4CTransformOutputPin@@6BCUnknown@@@ ; CTransformOutputPin::`vftable'
	DD	FLAT:?NonDelegatingQueryInterface@CTransformOutputPin@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?NonDelegatingAddRef@CBasePin@@UAGKXZ
	DD	FLAT:?NonDelegatingRelease@CBasePin@@UAGKXZ
	DD	FLAT:??_ECTransformOutputPin@@UAEPAXI@Z
	DD	FLAT:?GetMediaTypeVersion@CBasePin@@UAEJXZ
	DD	FLAT:?Active@CBaseOutputPin@@UAEJXZ
	DD	FLAT:?Inactive@CBaseOutputPin@@UAEJXZ
	DD	FLAT:?Run@CBasePin@@UAEJ_J@Z
	DD	FLAT:?CheckMediaType@CTransformOutputPin@@UAEJPBVCMediaType@@@Z
	DD	FLAT:?SetMediaType@CTransformOutputPin@@UAEJPBVCMediaType@@@Z
	DD	FLAT:?CheckConnect@CTransformOutputPin@@UAEJPAUIPin@@@Z
	DD	FLAT:?BreakConnect@CTransformOutputPin@@UAEJXZ
	DD	FLAT:?CompleteConnect@CTransformOutputPin@@UAEJPAUIPin@@@Z
	DD	FLAT:?GetMediaType@CTransformOutputPin@@UAEJHPAVCMediaType@@@Z
	DD	FLAT:?DecideAllocator@CBaseOutputPin@@UAEJPAUIMemInputPin@@PAPAUIMemAllocator@@@Z
	DD	FLAT:?DecideBufferSize@CTransformOutputPin@@UAEJPAUIMemAllocator@@PAU_AllocatorProperties@@@Z
	DD	FLAT:?GetDeliveryBuffer@CBaseOutputPin@@UAEJPAPAUIMediaSample@@PA_J1K@Z
	DD	FLAT:?Deliver@CBaseOutputPin@@UAEJPAUIMediaSample@@@Z
	DD	FLAT:?InitAllocator@CBaseOutputPin@@UAEJPAPAUIMemAllocator@@@Z
	DD	FLAT:?DeliverEndOfStream@CBaseOutputPin@@UAEJXZ
	DD	FLAT:?DeliverBeginFlush@CBaseOutputPin@@UAEJXZ
	DD	FLAT:?DeliverEndFlush@CBaseOutputPin@@UAEJXZ
	DD	FLAT:?DeliverNewSegment@CBaseOutputPin@@UAEJ_J0N@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CTransformOutputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CTransformOutputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z$0
__ehfuncinfo$??0CTransformOutputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CTransformOutputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CTransformOutputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pObjectName$ = 8					; size = 4
_pTransformFilter$ = 12					; size = 4
_phr$ = 16						; size = 4
_pPinName$ = 20						; size = 4
??0CTransformOutputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z PROC ; CTransformOutputPin::CTransformOutputPin, COMDAT
; _this$ = ecx
; Line 800
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CTransformOutputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pPinName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _phr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pTransformFilter$[ebp]
	add	edx, 92					; 0000005cH
	push	edx
	mov	eax, DWORD PTR _pTransformFilter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObjectName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseOutputPin@@QAE@PA_WPAVCBaseFilter@@PAVCCritSec@@PAJPB_W@Z ; CBaseOutputPin::CBaseOutputPin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7CTransformOutputPin@@6BCUnknown@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], OFFSET ??_7CTransformOutputPin@@6BIPin@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], OFFSET ??_7CTransformOutputPin@@6BIQualityControl@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+172], 0
; Line 801
	push	OFFSET $SG81974
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTransformFilter$[ebp]
	mov	DWORD PTR [eax+168], ecx
; Line 804
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CTransformOutputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseOutputPin@@UAE@XZ
__ehhandler$??0CTransformOutputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CTransformOutputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CTransformOutputPin@@QAE@PA_WPAVCTransformFilter@@PAJPB_W@Z ENDP ; CTransformOutputPin::CTransformOutputPin
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CBasePin@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv72 = -4						; size = 4
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?QueryInterface@CBasePin@@UAGJABU_GUID@@PAPAX@Z PROC	; CBasePin::QueryInterface, COMDAT
; File c:\downloads\mediapoint\src\filters\baseclasses\amfilter.h
; Line 411
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CBasePin@@UAGJABU_GUID@@PAPAX@Z ENDP	; CBasePin::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CBasePin@@UAGKXZ
_TEXT	SEGMENT
tv72 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CBasePin@@UAGKXZ PROC				; CBasePin::AddRef, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv72[ebp], eax
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CBasePin@@UAGKXZ ENDP				; CBasePin::AddRef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CBasePin@@UAGKXZ
_TEXT	SEGMENT
tv72 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CBasePin@@UAGKXZ PROC				; CBasePin::Release, COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv72[ebp], eax
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CBasePin@@UAGKXZ ENDP				; CBasePin::Release
_TEXT	ENDS
PUBLIC	??_C@_17NFNCFLGO@?$AAO?$AAu?$AAt?$AA?$AA@	; `string'
;	COMDAT ??_C@_17NFNCFLGO@?$AAO?$AAu?$AAt?$AA?$AA@
; File c:\downloads\mediapoint\src\filters\baseclasses\transfrm.h
CONST	SEGMENT
??_C@_17NFNCFLGO@?$AAO?$AAu?$AAt?$AA?$AA@ DB 'O', 00H, 'u', 00H, 't', 00H
	DB	00H, 00H					; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?QueryId@CTransformOutputPin@@UAGJPAPA_W@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Id$ = 12						; size = 4
?QueryId@CTransformOutputPin@@UAGJPAPA_W@Z PROC		; CTransformOutputPin::QueryId, COMDAT
; Line 140
	push	ebp
	mov	ebp, esp
; Line 141
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	push	OFFSET ??_C@_17NFNCFLGO@?$AAO?$AAu?$AAt?$AA?$AA@
	call	_AMGetWideString@8
; Line 142
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?QueryId@CTransformOutputPin@@UAGJPAPA_W@Z ENDP		; CTransformOutputPin::QueryId
_TEXT	ENDS
PUBLIC	??1CTransformOutputPin@@UAE@XZ			; CTransformOutputPin::~CTransformOutputPin
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCTransformOutputPin@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCTransformOutputPin@@UAEPAXI@Z PROC			; CTransformOutputPin::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CTransformOutputPin@@UAE@XZ		; CTransformOutputPin::~CTransformOutputPin
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCTransformOutputPin@@UAEPAXI@Z ENDP			; CTransformOutputPin::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CBasePin@@UAE@XZ:PROC			; CBasePin::~CBasePin
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CBaseOutputPin@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CBaseOutputPin@@UAE@XZ PROC				; CBaseOutputPin::~CBaseOutputPin, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBasePin@@UAE@XZ			; CBasePin::~CBasePin
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CBaseOutputPin@@UAE@XZ ENDP				; CBaseOutputPin::~CBaseOutputPin
_TEXT	ENDS
PUBLIC	??0CTransformOutputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z ; CTransformOutputPin::CTransformOutputPin
EXTRN	??0CBaseOutputPin@@QAE@PADPAVCBaseFilter@@PAVCCritSec@@PAJPB_W@Z:PROC ; CBaseOutputPin::CBaseOutputPin
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\transfrm.cpp
xdata$x	SEGMENT
__unwindtable$??0CTransformOutputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CTransformOutputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z$0
__ehfuncinfo$??0CTransformOutputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CTransformOutputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CTransformOutputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pObjectName$ = 8					; size = 4
_pTransformFilter$ = 12					; size = 4
_phr$ = 16						; size = 4
_pPinName$ = 20						; size = 4
??0CTransformOutputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z PROC ; CTransformOutputPin::CTransformOutputPin, COMDAT
; _this$ = ecx
; Line 814
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CTransformOutputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pPinName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _phr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pTransformFilter$[ebp]
	add	edx, 92					; 0000005cH
	push	edx
	mov	eax, DWORD PTR _pTransformFilter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObjectName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseOutputPin@@QAE@PADPAVCBaseFilter@@PAVCCritSec@@PAJPB_W@Z ; CBaseOutputPin::CBaseOutputPin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7CTransformOutputPin@@6BCUnknown@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], OFFSET ??_7CTransformOutputPin@@6BIPin@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], OFFSET ??_7CTransformOutputPin@@6BIQualityControl@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+172], 0
; Line 815
	push	OFFSET $SG81988
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 816
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pTransformFilter$[ebp]
	mov	DWORD PTR [eax+168], ecx
; Line 818
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CTransformOutputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseOutputPin@@UAE@XZ
__ehhandler$??0CTransformOutputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CTransformOutputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CTransformOutputPin@@QAE@PADPAVCTransformFilter@@PAJPB_W@Z ENDP ; CTransformOutputPin::CTransformOutputPin
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CTransformOutputPin@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CTransformOutputPin@@UAE@XZ$0
__ehfuncinfo$??1CTransformOutputPin@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CTransformOutputPin@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CTransformOutputPin@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CTransformOutputPin@@UAE@XZ PROC			; CTransformOutputPin::~CTransformOutputPin, COMDAT
; _this$ = ecx
; Line 824
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CTransformOutputPin@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CTransformOutputPin@@6BCUnknown@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], OFFSET ??_7CTransformOutputPin@@6BIPin@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], OFFSET ??_7CTransformOutputPin@@6BIQualityControl@@@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 825
	push	OFFSET $SG81992
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 827
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+172], 0
	je	SHORT $LN2@CTransform@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+172]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CTransform@2:
; Line 828
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBaseOutputPin@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CTransformOutputPin@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseOutputPin@@UAE@XZ
__ehhandler$??1CTransformOutputPin@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CTransformOutputPin@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CTransformOutputPin@@UAE@XZ ENDP			; CTransformOutputPin::~CTransformOutputPin
PUBLIC	_==@8
EXTRN	?NonDelegatingQueryInterface@CBasePin@@UAGJABU_GUID@@PAPAX@Z:PROC ; CBasePin::NonDelegatingQueryInterface
EXTRN	_CreatePosPassThru@16:PROC
EXTRN	_IID_IMediaSeeking:BYTE
EXTRN	_IID_IMediaPosition:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?NonDelegatingQueryInterface@CTransformOutputPin@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv137 = -8						; size = 4
_hr$82017 = -4						; size = 4
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?NonDelegatingQueryInterface@CTransformOutputPin@@UAGJABU_GUID@@PAPAX@Z PROC ; CTransformOutputPin::NonDelegatingQueryInterface, COMDAT
; Line 835
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 836
	cmp	DWORD PTR _ppv$[ebp], 0
	jne	SHORT $LN9@NonDelegat
	mov	eax, -2147467261			; 80004003H
	jmp	$LN10@NonDelegat
$LN9@NonDelegat:
; Line 837
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN8@NonDelegat
	push	837					; 00000345H
	push	OFFSET $SG82004
	push	OFFSET $SG82005
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN8@NonDelegat:
	mov	esi, esp
	push	4
	mov	ecx, DWORD PTR _ppv$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsBadWritePtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN7@NonDelegat
	push	837					; 00000345H
	push	OFFSET $SG82009
	push	OFFSET $SG82010
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN7@NonDelegat:
; Line 838
	mov	edx, DWORD PTR _ppv$[ebp]
	mov	DWORD PTR [edx], 0
; Line 840
	push	OFFSET _IID_IMediaPosition
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	jne	SHORT $LN5@NonDelegat
	push	OFFSET _IID_IMediaSeeking
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	$LN6@NonDelegat
$LN5@NonDelegat:
; Line 844
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+168]
	cmp	DWORD PTR [eax+164], 0
	jne	SHORT $LN4@NonDelegat
	push	844					; 0000034cH
	push	OFFSET $SG82014
	push	OFFSET $SG82015
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN4@NonDelegat:
; Line 846
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+172], 0
	jne	SHORT $LN3@NonDelegat
; Line 852
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR tv137[ebp], ecx
	cmp	DWORD PTR tv137[ebp], 0
	je	SHORT $LN12@NonDelegat
	mov	edx, DWORD PTR tv137[ebp]
	add	edx, 16					; 00000010H
	mov	DWORD PTR tv136[ebp], edx
	jmp	SHORT $LN13@NonDelegat
$LN12@NonDelegat:
	mov	DWORD PTR tv136[ebp], 0
$LN13@NonDelegat:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 172				; 000000acH
	push	eax
	mov	ecx, DWORD PTR tv136[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	push	eax
	call	_CreatePosPassThru@16
	mov	DWORD PTR _hr$82017[ebp], eax
; Line 853
	cmp	DWORD PTR _hr$82017[ebp], 0
	jge	SHORT $LN3@NonDelegat
; Line 854
	mov	eax, DWORD PTR _hr$82017[ebp]
	jmp	SHORT $LN10@NonDelegat
$LN3@NonDelegat:
; Line 857
	mov	esi, esp
	mov	edx, DWORD PTR _ppv$[ebp]
	push	edx
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+172]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN10@NonDelegat
; Line 858
	jmp	SHORT $LN10@NonDelegat
$LN6@NonDelegat:
; Line 859
	mov	ecx, DWORD PTR _ppv$[ebp]
	push	ecx
	mov	edx, DWORD PTR _riid$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?NonDelegatingQueryInterface@CBasePin@@UAGJABU_GUID@@PAPAX@Z ; CBasePin::NonDelegatingQueryInterface
$LN10@NonDelegat:
; Line 861
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?NonDelegatingQueryInterface@CTransformOutputPin@@UAGJABU_GUID@@PAPAX@Z ENDP ; CTransformOutputPin::NonDelegatingQueryInterface
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
_TEXT	ENDS
EXTRN	?CheckConnect@CBaseOutputPin@@UAEJPAUIPin@@@Z:PROC ; CBaseOutputPin::CheckConnect
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CheckConnect@CTransformOutputPin@@UAEJPAUIPin@@@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_pPin$ = 8						; size = 4
?CheckConnect@CTransformOutputPin@@UAEJPAUIPin@@@Z PROC	; CTransformOutputPin::CheckConnect, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\transfrm.cpp
; Line 868
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 871
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	cmp	DWORD PTR [ecx+164], 0
	jne	SHORT $LN3@CheckConne@2
	push	871					; 00000367H
	push	OFFSET $SG82027
	push	OFFSET $SG82028
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN3@CheckConne@2:
; Line 872
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	ecx, DWORD PTR [eax+164]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	jne	SHORT $LN2@CheckConne@2
; Line 873
	mov	eax, -2147418113			; 8000ffffH
	jmp	SHORT $LN4@CheckConne@2
$LN2@CheckConne@2:
; Line 876
	mov	esi, esp
	mov	ecx, DWORD PTR _pPin$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+168]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+72]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 877
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CheckConne@2
; Line 878
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN4@CheckConne@2
$LN1@CheckConne@2:
; Line 880
	mov	ecx, DWORD PTR _pPin$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CheckConnect@CBaseOutputPin@@UAEJPAUIPin@@@Z ; CBaseOutputPin::CheckConnect
$LN4@CheckConne@2:
; Line 881
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CheckConnect@CTransformOutputPin@@UAEJPAUIPin@@@Z ENDP	; CTransformOutputPin::CheckConnect
_TEXT	ENDS
EXTRN	?BreakConnect@CBaseOutputPin@@UAEJXZ:PROC	; CBaseOutputPin::BreakConnect
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?BreakConnect@CTransformOutputPin@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BreakConnect@CTransformOutputPin@@UAEJXZ PROC		; CTransformOutputPin::BreakConnect, COMDAT
; _this$ = ecx
; Line 888
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 890
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsStopped@CBasePin@@QAEHXZ		; CBasePin::IsStopped
	test	eax, eax
	jne	SHORT $LN1@BreakConne@2
	push	890					; 0000037aH
	push	OFFSET $SG82038
	push	OFFSET $SG82039
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@BreakConne@2:
; Line 891
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 892
	mov	ecx, DWORD PTR _this$[ebp]
	call	?BreakConnect@CBaseOutputPin@@UAEJXZ	; CBaseOutputPin::BreakConnect
; Line 893
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?BreakConnect@CTransformOutputPin@@UAEJXZ ENDP		; CTransformOutputPin::BreakConnect
_TEXT	ENDS
EXTRN	?CompleteConnect@CBaseOutputPin@@UAEJPAUIPin@@@Z:PROC ; CBaseOutputPin::CompleteConnect
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CompleteConnect@CTransformOutputPin@@UAEJPAUIPin@@@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_pReceivePin$ = 8					; size = 4
?CompleteConnect@CTransformOutputPin@@UAEJPAUIPin@@@Z PROC ; CTransformOutputPin::CompleteConnect, COMDAT
; _this$ = ecx
; Line 900
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 901
	mov	esi, esp
	mov	eax, DWORD PTR _pReceivePin$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+168]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+80]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 902
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CompleteCo@2
; Line 903
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@CompleteCo@2
$LN1@CompleteCo@2:
; Line 905
	mov	ecx, DWORD PTR _pReceivePin$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CompleteConnect@CBaseOutputPin@@UAEJPAUIPin@@@Z ; CBaseOutputPin::CompleteConnect
$LN2@CompleteCo@2:
; Line 906
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CompleteConnect@CTransformOutputPin@@UAEJPAUIPin@@@Z ENDP ; CTransformOutputPin::CompleteConnect
_TEXT	ENDS
PUBLIC	?CurrentMediaType@CTransformInputPin@@QAEAAVCMediaType@@XZ ; CTransformInputPin::CurrentMediaType
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CheckMediaType@CTransformOutputPin@@UAEJPBVCMediaType@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pmtOut$ = 8						; size = 4
?CheckMediaType@CTransformOutputPin@@UAEJPBVCMediaType@@@Z PROC ; CTransformOutputPin::CheckMediaType, COMDAT
; _this$ = ecx
; Line 913
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 915
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	cmp	DWORD PTR [ecx+164], 0
	jne	SHORT $LN2@CheckMedia@2
	push	915					; 00000393H
	push	OFFSET $SG82052
	push	OFFSET $SG82053
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@CheckMedia@2:
; Line 916
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	ecx, DWORD PTR [eax+164]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	jne	SHORT $LN1@CheckMedia@2
; Line 917
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN3@CheckMedia@2
$LN1@CheckMedia@2:
; Line 922
	mov	esi, esp
	mov	ecx, DWORD PTR _pmtOut$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	ecx, DWORD PTR [eax+164]
	call	?CurrentMediaType@CTransformInputPin@@QAEAAVCMediaType@@XZ ; CTransformInputPin::CurrentMediaType
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+168]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@CheckMedia@2:
; Line 923
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CheckMediaType@CTransformOutputPin@@UAEJPBVCMediaType@@@Z ENDP ; CTransformOutputPin::CheckMediaType
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?CurrentMediaType@CTransformInputPin@@QAEAAVCMediaType@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CurrentMediaType@CTransformInputPin@@QAEAAVCMediaType@@XZ PROC ; CTransformInputPin::CurrentMediaType, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\transfrm.h
; Line 100
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	mov	esp, ebp
	pop	ebp
	ret	0
?CurrentMediaType@CTransformInputPin@@QAEAAVCMediaType@@XZ ENDP ; CTransformInputPin::CurrentMediaType
_TEXT	ENDS
EXTRN	?IsValid@CMediaType@@QBEHXZ:PROC		; CMediaType::IsValid
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetMediaType@CTransformOutputPin@@UAEJPBVCMediaType@@@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_pmtOut$ = 8						; size = 4
?SetMediaType@CTransformOutputPin@@UAEJPBVCMediaType@@@Z PROC ; CTransformOutputPin::SetMediaType, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\transfrm.cpp
; Line 931
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 932
	mov	DWORD PTR _hr$[ebp], 0
; Line 933
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	cmp	DWORD PTR [ecx+164], 0
	jne	SHORT $LN4@SetMediaTy@2
	push	933					; 000003a5H
	push	OFFSET $SG82062
	push	OFFSET $SG82063
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN4@SetMediaTy@2:
; Line 935
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	ecx, DWORD PTR [eax+164]
	call	?CurrentMediaType@CTransformInputPin@@QAEAAVCMediaType@@XZ ; CTransformInputPin::CurrentMediaType
	mov	ecx, eax
	call	?IsValid@CMediaType@@QBEHXZ		; CMediaType::IsValid
	test	eax, eax
	jne	SHORT $LN3@SetMediaTy@2
	push	935					; 000003a7H
	push	OFFSET $SG82065
	push	OFFSET $SG82066
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN3@SetMediaTy@2:
; Line 938
	mov	ecx, DWORD PTR _pmtOut$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetMediaType@CBasePin@@UAEJPBVCMediaType@@@Z ; CBasePin::SetMediaType
	mov	DWORD PTR _hr$[ebp], eax
; Line 939
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@SetMediaTy@2
; Line 940
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN5@SetMediaTy@2
$LN2@SetMediaTy@2:
; Line 945
	mov	esi, esp
	mov	edx, DWORD PTR _pmtOut$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	ecx, DWORD PTR [ecx+164]
	call	?CurrentMediaType@CTransformInputPin@@QAEAAVCMediaType@@XZ ; CTransformInputPin::CurrentMediaType
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+168]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jge	SHORT $LN1@SetMediaTy@2
; Line 946
	push	OFFSET $SG82071
	push	0
	push	16					; 00000010H
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 947
	push	OFFSET $SG82072
	push	0
	push	16					; 00000010H
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 948
	push	OFFSET $SG82073
	push	0
	push	16					; 00000010H
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
$LN1@SetMediaTy@2:
; Line 952
	mov	esi, esp
	mov	ecx, DWORD PTR _pmtOut$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+168]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@SetMediaTy@2:
; Line 953
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMediaType@CTransformOutputPin@@UAEJPBVCMediaType@@@Z ENDP ; CTransformOutputPin::SetMediaType
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DecideBufferSize@CTransformOutputPin@@UAEJPAUIMemAllocator@@PAU_AllocatorProperties@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pAllocator$ = 8					; size = 4
_pProp$ = 12						; size = 4
?DecideBufferSize@CTransformOutputPin@@UAEJPAUIMemAllocator@@PAU_AllocatorProperties@@@Z PROC ; CTransformOutputPin::DecideBufferSize, COMDAT
; _this$ = ecx
; Line 962
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 963
	mov	esi, esp
	mov	eax, DWORD PTR _pProp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pAllocator$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+168]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 964
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?DecideBufferSize@CTransformOutputPin@@UAEJPAUIMemAllocator@@PAU_AllocatorProperties@@@Z ENDP ; CTransformOutputPin::DecideBufferSize
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetMediaType@CTransformOutputPin@@UAEJHPAVCMediaType@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iPosition$ = 8						; size = 4
_pMediaType$ = 12					; size = 4
?GetMediaType@CTransformOutputPin@@UAEJHPAVCMediaType@@@Z PROC ; CTransformOutputPin::GetMediaType, COMDAT
; _this$ = ecx
; Line 974
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 975
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	cmp	DWORD PTR [ecx+164], 0
	jne	SHORT $LN3@GetMediaTy
	push	975					; 000003cfH
	push	OFFSET $SG82085
	push	OFFSET $SG82086
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN3@GetMediaTy:
; Line 979
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	ecx, DWORD PTR [eax+164]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	je	SHORT $LN2@GetMediaTy
; Line 980
	mov	esi, esp
	mov	ecx, DWORD PTR _pMediaType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iPosition$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+168]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN4@GetMediaTy
; Line 981
	jmp	SHORT $LN4@GetMediaTy
$LN2@GetMediaTy:
; Line 982
	mov	eax, 262403				; 00040103H
$LN4@GetMediaTy:
; Line 984
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetMediaType@CTransformOutputPin@@UAEJHPAVCMediaType@@@Z ENDP ; CTransformOutputPin::GetMediaType
_TEXT	ENDS
EXTRN	?PassNotify@CBaseInputPin@@QAEJAAUtagQuality@@@Z:PROC ; CBaseInputPin::PassNotify
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Notify@CTransformOutputPin@@UAGJPAUIBaseFilter@@UtagQuality@@@Z
_TEXT	SEGMENT
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
_pSender$ = 12						; size = 4
_q$ = 16						; size = 24
?Notify@CTransformOutputPin@@UAGJPAUIBaseFilter@@UtagQuality@@@Z PROC ; CTransformOutputPin::Notify, COMDAT
; Line 994
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 996
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _pSender$[ebp]
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@Notify
	push	996					; 000003e4H
	push	OFFSET $SG82098
	push	OFFSET $SG82099
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN3@Notify:
; Line 999
	mov	esi, esp
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	mov	edx, DWORD PTR _q$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _q$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _q$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _q$[ebp+12]
	mov	DWORD PTR [ecx+12], eax
	mov	edx, DWORD PTR _q$[ebp+16]
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR _q$[ebp+20]
	mov	DWORD PTR [ecx+20], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+148]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1000
	cmp	DWORD PTR _hr$[ebp], 1
	je	SHORT $LN2@Notify
; Line 1001
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN4@Notify
$LN2@Notify:
; Line 1007
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+148]
	cmp	DWORD PTR [edx+164], 0
	jne	SHORT $LN1@Notify
	push	1007					; 000003efH
	push	OFFSET $SG82104
	push	OFFSET $SG82105
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@Notify:
; Line 1009
	lea	eax, DWORD PTR _q$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+148]
	mov	ecx, DWORD PTR [edx+164]
	call	?PassNotify@CBaseInputPin@@QAEJAAUtagQuality@@@Z ; CBaseInputPin::PassNotify
$LN4@Notify:
; Line 1011
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Notify
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
	npad	2
$LN8@Notify:
	DD	1
	DD	$LN7@Notify
$LN7@Notify:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN6@Notify
$LN6@Notify:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
?Notify@CTransformOutputPin@@UAGJPAUIBaseFilter@@UtagQuality@@@Z ENDP ; CTransformOutputPin::Notify
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CBaseInputPin@@WJA@AGKXZ
_TEXT	SEGMENT
?AddRef@CBaseInputPin@@WJA@AGKXZ PROC			; [thunk]:CBaseInputPin::AddRef`adjustor{144}', COMDAT
	sub	DWORD PTR [esp+4], 144			; 00000090H
	jmp	?AddRef@CBaseInputPin@@UAGKXZ		; CBaseInputPin::AddRef
?AddRef@CBaseInputPin@@WJA@AGKXZ ENDP			; [thunk]:CBaseInputPin::AddRef`adjustor{144}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CBasePin@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CBasePin@@W3AGKXZ PROC				; [thunk]:CBasePin::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CBasePin@@UAGKXZ		; CBasePin::AddRef
?AddRef@CBasePin@@W3AGKXZ ENDP				; [thunk]:CBasePin::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CBaseInputPin@@WJA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CBaseInputPin@@WJA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CBaseInputPin::QueryInterface`adjustor{144}', COMDAT
	sub	DWORD PTR [esp+4], 144			; 00000090H
	jmp	?QueryInterface@CBaseInputPin@@UAGJABU_GUID@@PAPAX@Z ; CBaseInputPin::QueryInterface
?QueryInterface@CBaseInputPin@@WJA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CBaseInputPin::QueryInterface`adjustor{144}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CBaseInputPin@@W3AGKXZ
_TEXT	SEGMENT
?Release@CBaseInputPin@@W3AGKXZ PROC			; [thunk]:CBaseInputPin::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CBaseInputPin@@UAGKXZ		; CBaseInputPin::Release
?Release@CBaseInputPin@@W3AGKXZ ENDP			; [thunk]:CBaseInputPin::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CBasePin@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CBasePin@@W3AGJABU_GUID@@PAPAX@Z PROC	; [thunk]:CBasePin::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CBasePin@@UAGJABU_GUID@@PAPAX@Z ; CBasePin::QueryInterface
?QueryInterface@CBasePin@@W3AGJABU_GUID@@PAPAX@Z ENDP	; [thunk]:CBasePin::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CBaseInputPin@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CBaseInputPin@@W3AGKXZ PROC			; [thunk]:CBaseInputPin::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CBaseInputPin@@UAGKXZ		; CBaseInputPin::AddRef
?AddRef@CBaseInputPin@@W3AGKXZ ENDP			; [thunk]:CBaseInputPin::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CBaseInputPin@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CBaseInputPin@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CBaseInputPin::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CBaseInputPin@@UAGJABU_GUID@@PAPAX@Z ; CBaseInputPin::QueryInterface
?QueryInterface@CBaseInputPin@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CBaseInputPin::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CBaseInputPin@@WJA@AGKXZ
_TEXT	SEGMENT
?Release@CBaseInputPin@@WJA@AGKXZ PROC			; [thunk]:CBaseInputPin::Release`adjustor{144}', COMDAT
	sub	DWORD PTR [esp+4], 144			; 00000090H
	jmp	?Release@CBaseInputPin@@UAGKXZ		; CBaseInputPin::Release
?Release@CBaseInputPin@@WJA@AGKXZ ENDP			; [thunk]:CBaseInputPin::Release`adjustor{144}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CBasePin@@W3AGKXZ
_TEXT	SEGMENT
?Release@CBasePin@@W3AGKXZ PROC				; [thunk]:CBasePin::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CBasePin@@UAGKXZ		; CBasePin::Release
?Release@CBasePin@@W3AGKXZ ENDP				; [thunk]:CBasePin::Release`adjustor{4}'
_TEXT	ENDS
END
