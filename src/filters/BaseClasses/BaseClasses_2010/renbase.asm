; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Downloads\MediaPoint\src\filters\BaseClasses\renbase.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_IID_IAMFilterGraphCallback
CONST	SEGMENT
$SG81578 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81579 DB	'm', 00H, '_', 00H, 'b', 00H, 'S', 00H, 't', 00H, 'r', 00H
	DB	'e', 00H, 'a', 00H, 'm', 00H, 'i', 00H, 'n', 00H, 'g', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'F', 00H, 'A', 00H, 'L', 00H
	DB	'S', 00H, 'E', 00H, 00H, 00H
$SG81581 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81582 DB	'm', 00H, '_', 00H, 'E', 00H, 'n', 00H, 'd', 00H, 'O', 00H
	DB	'f', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm'
	DB	00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG81590 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81591 DB	'm', 00H, '_', 00H, 'p', 00H, 'Q', 00H, 'S', 00H, 'i', 00H
	DB	'n', 00H, 'k', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'N'
	DB	00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG81606 DB	'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H
	DB	'e', 00H, 'r', 00H, ' ', 00H, 'C', 00H, 'P', 00H, 'o', 00H, 's'
	DB	00H, 'P', 00H, 'a', 00H, 's', 00H, 's', 00H, 'T', 00H, 'h', 00H
	DB	'r', 00H, 'u', 00H, 00H, 00H
	ORG $+4
$SG81634 DB	0aH, 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'i', 00H, 'n'
	DB	00H, ' ', 00H, 'W', 00H, 'a', 00H, 'i', 00H, 't', 00H, 'F', 00H
	DB	'o', 00H, 'r', 00H, 'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e'
	DB	00H, 'r', 00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG81636 DB	'S', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 's', 00H, 'a', 00H, 'n', 00H, 'i', 00H, 't', 00H, 'y'
	DB	00H, ' ', 00H, 'c', 00H, 'h', 00H, 'e', 00H, 'c', 00H, 'k', 00H
	DB	' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG81637 DB	'F', 00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' '
	DB	00H, '%', 00H, 'd', 00H, 00H, 00H
$SG81638 DB	'A', 00H, 'b', 00H, 'o', 00H, 'r', 00H, 't', 00H, ' ', 00H
	DB	'f', 00H, 'l', 00H, 'a', 00H, 'g', 00H, ' ', 00H, '%', 00H, 'd'
	DB	00H, 00H, 00H
$SG81639 DB	'S', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'f', 00H, 'l', 00H, 'a'
	DB	00H, 'g', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
$SG81640 DB	'C', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ' ', 00H
	DB	'a', 00H, 'd', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'e', 00H, ' '
	DB	00H, 'l', 00H, 'i', 00H, 'n', 00H, 'k', 00H, ' ', 00H, '%', 00H
	DB	'd', 00H, 00H, 00H
	ORG $+2
$SG81641 DB	'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, ' ', 00H, 'm', 00H, 'e', 00H, 'd', 00H, 'i', 00H, 'a'
	DB	00H, ' ', 00H, 's', 00H, 'a', 00H, 'm', 00H, 'p', 00H, 'l', 00H
	DB	'e', 00H, ' ', 00H, '%', 00H, 'x', 00H, 00H, 00H
$SG81642 DB	'E', 00H, 'O', 00H, 'S', 00H, ' ', 00H, 's', 00H, 'i', 00H
	DB	'g', 00H, 'n', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'd'
	DB	00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG81643 DB	'E', 00H, 'O', 00H, 'S', 00H, ' ', 00H, 'd', 00H, 'e', 00H
	DB	'l', 00H, 'i', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'd'
	DB	00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG81644 DB	'R', 00H, 'e', 00H, 'p', 00H, 'a', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'a', 00H, 't', 00H, 'u'
	DB	00H, 's', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
$SG81645 DB	'E', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm'
	DB	00H, ' ', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'r', 00H
	DB	' ', 00H, '%', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG81648 DB	'D', 00H, 'e', 00H, 'l', 00H, 'i', 00H, 'v', 00H, 'e', 00H
	DB	'r', 00H, ' ', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, ' '
	DB	00H, '%', 00H, 's', 00H, 00H, 00H
$SG81650 DB	'F', 00H, 'l', 00H, 'u', 00H, 's', 00H, 'h', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 's', 00H, 'a', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, ' ', 00H, 'c', 00H, 'h', 00H, 'e', 00H
	DB	'c', 00H, 'k', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG81653 DB	'L', 00H, 'a', 00H, 's', 00H, 't', 00H, ' ', 00H, 'r', 00H
	DB	'u', 00H, 'n', 00H, ' ', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'e'
	DB	00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG81662 DB	'C', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ' ', 00H
	DB	't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, ' ', 00H, '%', 00H, 's'
	DB	00H, 00H, 00H
$SG81663 DB	'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, ' ', 00H, 'd', 00H
	DB	'i', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n'
	DB	00H, 'c', 00H, 'e', 00H, ' ', 00H, '%', 00H, 'd', 00H, 'm', 00H
	DB	's', 00H, 00H, 00H
	ORG $+2
$SG81667 DB	'N', 00H, 'e', 00H, 'x', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	'a', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm', 00H, ' ', 00H
	DB	't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 's', 00H, ' ', 00H, '('
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, ' ', 00H
	DB	'%', 00H, 'd', 00H, ' ', 00H, 'E', 00H, 'n', 00H, 'd', 00H, ' '
	DB	00H, '%', 00H, 'd', 00H, ' ', 00H, 'm', 00H, 's', 00H, ')', 00H
	DB	00H, 00H
$SG81669 DB	'W', 00H, 'a', 00H, 'i', 00H, 't', 00H, ' ', 00H, 'r', 00H
	DB	'e', 00H, 'q', 00H, 'u', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'd'
	DB	00H, ' ', 00H, '%', 00H, 'd', 00H, ' ', 00H, 'm', 00H, 's', 00H
	DB	00H, 00H
$SG81724 DB	'I', 00H, 'n', 00H, 'p', 00H, 'u', 00H, 't', 00H, ' ', 00H
	DB	'p', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'i', 00H, 's', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, 'n', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'e', 00H, 'd'
	DB	00H, 00H, 00H
	ORG $+2
$SG81729 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+6
$SG81730 DB	'C', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'l', 00H
	DB	'N', 00H, 'o', 00H, 't', 00H, 'i', 00H, 'f', 00H, 'i', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '(', 00H
	DB	')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'S', 00H, '_'
	DB	00H, 'F', 00H, 'A', 00H, 'L', 00H, 'S', 00H, 'E', 00H, 00H, 00H
$SG81733 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81734 DB	'W', 00H, 'A', 00H, 'I', 00H, 'T', 00H, '_', 00H, 'T', 00H
	DB	'I', 00H, 'M', 00H, 'E', 00H, 'O', 00H, 'U', 00H, 'T', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'W', 00H, 'a', 00H, 'i', 00H
	DB	't', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, '(', 00H, '(', 00H, 'H', 00H, 'A'
	DB	00H, 'N', 00H, 'D', 00H, 'L', 00H, 'E', 00H, ')', 00H, 'm', 00H
	DB	'_', 00H, 'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, ',', 00H
	DB	'0', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG81736 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81737 DB	'm', 00H, '_', 00H, 'E', 00H, 'n', 00H, 'd', 00H, 'O', 00H
	DB	'f', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm'
	DB	00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG81745 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+6
$SG81746 DB	'm', 00H, '_', 00H, 'p', 00H, 'I', 00H, 'n', 00H, 'p', 00H
	DB	'u', 00H, 't', 00H, 'P', 00H, 'i', 00H, 'n', 00H, '-', 00H, '>'
	DB	00H, 'I', 00H, 's', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 's', 00H
	DB	'h', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '(', 00H, ')', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'F', 00H, 'A', 00H, 'L', 00H
	DB	'S', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG81750 DB	'I', 00H, 'n', 00H, 'p', 00H, 'u', 00H, 't', 00H, ' ', 00H
	DB	'p', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'i', 00H, 's', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, 'n', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'e', 00H, 'd'
	DB	00H, 00H, 00H
	ORG $+2
$SG81755 DB	'P', 00H, 'a', 00H, 'u', 00H, 's', 00H, 'e', 00H, ' ', 00H
	DB	'f', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG81760 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+6
$SG81761 DB	'C', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'l', 00H
	DB	'N', 00H, 'o', 00H, 't', 00H, 'i', 00H, 'f', 00H, 'i', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '(', 00H
	DB	')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'S', 00H, '_'
	DB	00H, 'F', 00H, 'A', 00H, 'L', 00H, 'S', 00H, 'E', 00H, 00H, 00H
$SG81764 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81765 DB	'W', 00H, 'A', 00H, 'I', 00H, 'T', 00H, '_', 00H, 'T', 00H
	DB	'I', 00H, 'M', 00H, 'E', 00H, 'O', 00H, 'U', 00H, 'T', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'W', 00H, 'a', 00H, 'i', 00H
	DB	't', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, '(', 00H, '(', 00H, 'H', 00H, 'A'
	DB	00H, 'N', 00H, 'D', 00H, 'L', 00H, 'E', 00H, ')', 00H, 'm', 00H
	DB	'_', 00H, 'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, ',', 00H
	DB	'0', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG81767 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81768 DB	'm', 00H, '_', 00H, 'E', 00H, 'n', 00H, 'd', 00H, 'O', 00H
	DB	'f', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm'
	DB	00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG81770 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+6
$SG81771 DB	'm', 00H, '_', 00H, 'p', 00H, 'I', 00H, 'n', 00H, 'p', 00H
	DB	'u', 00H, 't', 00H, 'P', 00H, 'i', 00H, 'n', 00H, '-', 00H, '>'
	DB	00H, 'I', 00H, 's', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 's', 00H
	DB	'h', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '(', 00H, ')', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'F', 00H, 'A', 00H, 'L', 00H
	DB	'S', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG81790 DB	'R', 00H, 'u', 00H, 'n', 00H, ' ', 00H, 'f', 00H, 'a', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG81793 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81794 DB	'm', 00H, '_', 00H, 'p', 00H, 'I', 00H, 'n', 00H, 'p', 00H
	DB	'u', 00H, 't', 00H, 'P', 00H, 'i', 00H, 'n', 00H, '-', 00H, '>'
	DB	00H, 'I', 00H, 's', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 's', 00H
	DB	'h', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '(', 00H, ')', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'F', 00H, 'A', 00H, 'L', 00H
	DB	'S', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG81797 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81798 DB	'C', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'l', 00H
	DB	'N', 00H, 'o', 00H, 't', 00H, 'i', 00H, 'f', 00H, 'i', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '(', 00H
	DB	')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'S', 00H, '_'
	DB	00H, 'F', 00H, 'A', 00H, 'L', 00H, 'S', 00H, 'E', 00H, 00H, 00H
$SG81801 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81802 DB	'W', 00H, 'A', 00H, 'I', 00H, 'T', 00H, '_', 00H, 'T', 00H
	DB	'I', 00H, 'M', 00H, 'E', 00H, 'O', 00H, 'U', 00H, 'T', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'W', 00H, 'a', 00H, 'i', 00H
	DB	't', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, '(', 00H, '(', 00H, 'H', 00H, 'A'
	DB	00H, 'N', 00H, 'D', 00H, 'L', 00H, 'E', 00H, ')', 00H, 'm', 00H
	DB	'_', 00H, 'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, ',', 00H
	DB	'0', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG81804 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81805 DB	'm', 00H, '_', 00H, 'E', 00H, 'n', 00H, 'd', 00H, 'O', 00H
	DB	'f', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm'
	DB	00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG81807 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+6
$SG81808 DB	'm', 00H, '_', 00H, 'p', 00H, 'I', 00H, 'n', 00H, 'p', 00H
	DB	'u', 00H, 't', 00H, 'P', 00H, 'i', 00H, 'n', 00H, '-', 00H, '>'
	DB	00H, 'I', 00H, 's', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 's', 00H
	DB	'h', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '(', 00H, ')', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'F', 00H, 'A', 00H, 'L', 00H
	DB	'S', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG81821 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81822 DB	'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H
	ORG $+2
$SG81831 DB	'I', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG81848 DB	'I', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG81850 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81851 DB	'*', 00H, 'p', 00H, 'p', 00H, 'P', 00H, 'i', 00H, 'n', 00H
	DB	00H, 00H
	ORG $+2
$SG81870 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81871 DB	'C', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'l', 00H
	DB	'N', 00H, 'o', 00H, 't', 00H, 'i', 00H, 'f', 00H, 'i', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '(', 00H
	DB	')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'S', 00H, '_'
	DB	00H, 'F', 00H, 'A', 00H, 'L', 00H, 'S', 00H, 'E', 00H, 00H, 00H
$SG81877 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81878 DB	'C', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'C', 00H, 'h', 00H
	DB	'e', 00H, 'c', 00H, 'k', 00H, 'I', 00H, 'n', 00H, '(', 00H, '&'
	DB	00H, 'm', 00H, '_', 00H, 'I', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'L', 00H, 'o'
	DB	00H, 'c', 00H, 'k', 00H, ')', 00H, 00H, 00H
$SG81911 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81912 DB	'm', 00H, '_', 00H, 'd', 00H, 'w', 00H, 'A', 00H, 'd', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'e', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H
$SG81914 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81915 DB	'p', 00H, 'M', 00H, 'e', 00H, 'd', 00H, 'i', 00H, 'a', 00H
	DB	'S', 00H, 'a', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG81938 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81939 DB	'm', 00H, '_', 00H, 'd', 00H, 'w', 00H, 'A', 00H, 'd', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'e', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H
	DB	'm', 00H, '_', 00H, 'p', 00H, 'C', 00H, 'l', 00H, 'o', 00H, 'c'
	DB	00H, 'k', 00H, 00H, 00H
$SG81943 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81944 DB	'm', 00H, '_', 00H, 'd', 00H, 'w', 00H, 'A', 00H, 'd', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'e', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H
$SG81961 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81962 DB	'S', 00H, 'e', 00H, 't', 00H, 'E', 00H, 'v', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, '(', 00H, '(', 00H, 'H', 00H, 'A', 00H, 'N'
	DB	00H, 'D', 00H, 'L', 00H, 'E', 00H, ')', 00H, ' ', 00H, 'm', 00H
	DB	'_', 00H, 'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, ')', 00H
	DB	00H, 00H
	ORG $+2
$SG81964 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81965 DB	'm', 00H, '_', 00H, 'd', 00H, 'w', 00H, 'A', 00H, 'd', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'e', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H
$SG81967 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81968 DB	'm', 00H, '_', 00H, 'p', 00H, 'C', 00H, 'l', 00H, 'o', 00H
	DB	'c', 00H, 'k', 00H, 00H, 00H
	ORG $+2
$SG81971 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81972 DB	'W', 00H, 'A', 00H, 'I', 00H, 'T', 00H, '_', 00H, 'T', 00H
	DB	'I', 00H, 'M', 00H, 'E', 00H, 'O', 00H, 'U', 00H, 'T', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'W', 00H, 'a', 00H, 'i', 00H
	DB	't', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, '(', 00H, '(', 00H, 'H', 00H, 'A'
	DB	00H, 'N', 00H, 'D', 00H, 'L', 00H, 'E', 00H, ')', 00H, 'm', 00H
	DB	'_', 00H, 'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, ',', 00H
	DB	'0', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG81979 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81980 DB	'm', 00H, '_', 00H, 'd', 00H, 'w', 00H, 'A', 00H, 'd', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'e', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H
$SG82016 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82017 DB	'I', 00H, 's', 00H, 'A', 00H, 'c', 00H, 't', 00H, 'i', 00H
	DB	'v', 00H, 'e', 00H, '(', 00H, ')', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, 'T', 00H, 'R', 00H, 'U', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG82019 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+6
$SG82020 DB	'm', 00H, '_', 00H, 'p', 00H, 'I', 00H, 'n', 00H, 'p', 00H
	DB	'u', 00H, 't', 00H, 'P', 00H, 'i', 00H, 'n', 00H, '-', 00H, '>'
	DB	00H, 'I', 00H, 's', 00H, 'F', 00H, 'l', 00H, 'u', 00H, 's', 00H
	DB	'h', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '(', 00H, ')', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'F', 00H, 'A', 00H, 'L', 00H
	DB	'S', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG82022 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82023 DB	'm', 00H, '_', 00H, 'p', 00H, 'I', 00H, 'n', 00H, 'p', 00H
	DB	'u', 00H, 't', 00H, 'P', 00H, 'i', 00H, 'n', 00H, '-', 00H, '>'
	DB	00H, 'I', 00H, 's', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 'n', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'e', 00H, 'd', 00H, '(', 00H, ')'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'T', 00H, 'R', 00H
	DB	'U', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG82025 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82026 DB	'm', 00H, '_', 00H, 'p', 00H, 'M', 00H, 'e', 00H, 'd', 00H
	DB	'i', 00H, 'a', 00H, 'S', 00H, 'a', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, 'e', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'N', 00H
	DB	'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG82035 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82036 DB	'W', 00H, 'A', 00H, 'I', 00H, 'T', 00H, '_', 00H, 'T', 00H
	DB	'I', 00H, 'M', 00H, 'E', 00H, 'O', 00H, 'U', 00H, 'T', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'W', 00H, 'a', 00H, 'i', 00H
	DB	't', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, '(', 00H, '(', 00H, 'H', 00H, 'A'
	DB	00H, 'N', 00H, 'D', 00H, 'L', 00H, 'E', 00H, ')', 00H, 'm', 00H
	DB	'_', 00H, 'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, ',', 00H
	DB	'0', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG82039 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+6
$SG82040 DB	'C', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'l', 00H
	DB	'N', 00H, 'o', 00H, 't', 00H, 'i', 00H, 'f', 00H, 'i', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '(', 00H
	DB	')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'S', 00H, '_'
	DB	00H, 'F', 00H, 'A', 00H, 'L', 00H, 'S', 00H, 'E', 00H, 00H, 00H
$SG82050 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82051 DB	'p', 00H, 'S', 00H, 'a', 00H, 'm', 00H, 'p', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H
$SG82055 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82056 DB	'm', 00H, '_', 00H, 'b', 00H, 'I', 00H, 'n', 00H, 'R', 00H
	DB	'e', 00H, 'c', 00H, 'e', 00H, 'i', 00H, 'v', 00H, 'e', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'S', 00H, 'U', 00H, 'C', 00H
	DB	'C', 00H, 'E', 00H, 'E', 00H, 'D', 00H, 'E', 00H, 'D', 00H, '('
	DB	00H, 'h', 00H, 'r', 00H, ')', 00H, 00H, 00H
$SG82088 DB	'E', 00H, 'n', 00H, 'd', 00H, 'O', 00H, 'f', 00H, 'S', 00H
	DB	't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm', 00H, 'T', 00H, 'i'
	DB	00H, 'm', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'c', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '(', 00H, '%'
	DB	00H, 'd', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG82098 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82099 DB	'C', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'C', 00H, 'h', 00H
	DB	'e', 00H, 'c', 00H, 'k', 00H, 'I', 00H, 'n', 00H, '(', 00H, '&'
	DB	00H, 'm', 00H, '_', 00H, 'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H
	DB	'e', 00H, 'r', 00H, 'e', 00H, 'r', 00H, 'L', 00H, 'o', 00H, 'c'
	DB	00H, 'k', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG82106 DB	'D', 00H, 'e', 00H, 'l', 00H, 'a', 00H, 'y', 00H, ' ', 00H
	DB	'u', 00H, 'n', 00H, 't', 00H, 'i', 00H, 'l', 00H, ' ', 00H, 'e'
	DB	00H, 'n', 00H, 'd', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm', 00H, ' '
	DB	00H, 'd', 00H, 'e', 00H, 'l', 00H, 'i', 00H, 'v', 00H, 'e', 00H
	DB	'r', 00H, 'y', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
$SG82110 DB	'C', 00H, 'u', 00H, 'r', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG82114 DB	'S', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG82123 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82124 DB	'm', 00H, '_', 00H, 'b', 00H, 'E', 00H, 'O', 00H, 'S', 00H
	DB	'D', 00H, 'e', 00H, 'l', 00H, 'i', 00H, 'v', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'd', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'F', 00H, 'A', 00H, 'L', 00H, 'S', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG82126 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82127 DB	'm', 00H, '_', 00H, 'E', 00H, 'n', 00H, 'd', 00H, 'O', 00H
	DB	'f', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm'
	DB	00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG82130 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82131 DB	'm', 00H, '_', 00H, 'E', 00H, 'n', 00H, 'd', 00H, 'O', 00H
	DB	'f', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm'
	DB	00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H
$SG82134 DB	'S', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 'E', 00H, 'C', 00H, '_', 00H, 'C', 00H, 'O'
	DB	00H, 'M', 00H, 'P', 00H, 'L', 00H, 'E', 00H, 'T', 00H, 'E', 00H
	DB	'.', 00H, '.', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG82148 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82149 DB	'C', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'C', 00H, 'h', 00H
	DB	'e', 00H, 'c', 00H, 'k', 00H, 'O', 00H, 'u', 00H, 't', 00H, '('
	DB	00H, '&', 00H, 'm', 00H, '_', 00H, 'R', 00H, 'e', 00H, 'n', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'r', 00H, 'L', 00H, 'o'
	DB	00H, 'c', 00H, 'k', 00H, ')', 00H, 00H, 00H
$SG82159 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82160 DB	'W', 00H, 'A', 00H, 'I', 00H, 'T', 00H, '_', 00H, 'T', 00H
	DB	'I', 00H, 'M', 00H, 'E', 00H, 'O', 00H, 'U', 00H, 'T', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'W', 00H, 'a', 00H, 'i', 00H
	DB	't', 00H, 'F', 00H, 'o', 00H, 'r', 00H, 'S', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, '(', 00H, '(', 00H, 'H', 00H, 'A'
	DB	00H, 'N', 00H, 'D', 00H, 'L', 00H, 'E', 00H, ')', 00H, 'm', 00H
	DB	'_', 00H, 'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, ',', 00H
	DB	'0', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG82163 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+6
$SG82164 DB	'C', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'l', 00H
	DB	'N', 00H, 'o', 00H, 't', 00H, 'i', 00H, 'f', 00H, 'i', 00H, 'c'
	DB	00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '(', 00H
	DB	')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'S', 00H, '_'
	DB	00H, 'F', 00H, 'A', 00H, 'L', 00H, 'S', 00H, 'E', 00H, 00H, 00H
$SG82168 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82169 DB	'm', 00H, '_', 00H, 'p', 00H, 'M', 00H, 'e', 00H, 'd', 00H
	DB	'i', 00H, 'a', 00H, 'S', 00H, 'a', 00H, 'm', 00H, 'p', 00H, 'l'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG82198 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82199 DB	'm', 00H, '_', 00H, 'p', 00H, 'I', 00H, 'n', 00H, 'p', 00H
	DB	'u', 00H, 't', 00H, 'P', 00H, 'i', 00H, 'n', 00H, 00H, 00H
$SG82208 DB	'S', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'p', 00H, 'a', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, 00H, 00H
$SG82215 DB	'N', 00H, 'o', 00H, 't', 00H, 'i', 00H, 'f', 00H, 'i', 00H
	DB	'c', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' '
	DB	00H, 'o', 00H, 'f', 00H, ' ', 00H, 'E', 00H, 'C', 00H, '_', 00H
	DB	'D', 00H, 'I', 00H, 'S', 00H, 'P', 00H, 'L', 00H, 'A', 00H, 'Y'
	DB	00H, '_', 00H, 'C', 00H, 'H', 00H, 'A', 00H, 'N', 00H, 'G', 00H
	DB	'E', 00H, 00H, 00H
$SG82235 DB	'R', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H
	DB	'e', 00H, 'r', 00H, ' ', 00H, 'p', 00H, 'i', 00H, 'n', 00H, 00H
	DB	00H
	ORG $+2
$SG82237 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82238 DB	'm', 00H, '_', 00H, 'p', 00H, 'R', 00H, 'e', 00H, 'n', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'r', 00H, 00H, 00H
$SG82279 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82280 DB	'C', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'C', 00H, 'h', 00H
	DB	'e', 00H, 'c', 00H, 'k', 00H, 'O', 00H, 'u', 00H, 't', 00H, '('
	DB	00H, '&', 00H, 'm', 00H, '_', 00H, 'p', 00H, 'R', 00H, 'e', 00H
	DB	'n', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'r', 00H, '-'
	DB	00H, '>', 00H, 'm', 00H, '_', 00H, 'R', 00H, 'e', 00H, 'n', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'r', 00H, 'L', 00H, 'o'
	DB	00H, 'c', 00H, 'k', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG82307 DB	'I', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG82319 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82320 DB	'C', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'C', 00H, 'h', 00H
	DB	'e', 00H, 'c', 00H, 'k', 00H, 'I', 00H, 'n', 00H, '(', 00H, '&'
	DB	00H, 'm', 00H, '_', 00H, 'p', 00H, 'R', 00H, 'e', 00H, 'n', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'r', 00H, '-', 00H, '>'
	DB	00H, 'm', 00H, '_', 00H, 'I', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'f', 00H, 'a', 00H, 'c', 00H, 'e', 00H, 'L', 00H, 'o'
	DB	00H, 'c', 00H, 'k', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG82349 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82350 DB	'm', 00H, '_', 00H, 'd', 00H, 'w', 00H, 'A', 00H, 'd', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'e', 00H, ' ', 00H, '=', 00H, '='
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H
$SG82391 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82392 DB	'm', 00H, '_', 00H, 'i', 00H, 'S', 00H, 'u', 00H, 'm', 00H
	DB	'S', 00H, 'q', 00H, 'F', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e'
	DB	00H, 'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, '>', 00H, '=', 00H
	DB	'0', 00H, 00H, 00H
	ORG $+2
$SG82399 DB	'T', 00H, 'h', 00H, 'r', 00H, 'o', 00H, 't', 00H, 't', 00H
	DB	'l', 00H, 'e', 00H, ' ', 00H, '%', 00H, 'd', 00H, ' ', 00H, 'm'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG82458 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82459 DB	'p', 00H, 'O', 00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H
	DB	't', 00H, 'P', 00H, 'i', 00H, 'n', 00H, ' ', 00H, '!', 00H, '='
	DB	00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H, 00H
	ORG $+2
$SG82472 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82473 DB	'm', 00H, '_', 00H, 'p', 00H, 'C', 00H, 'l', 00H, 'o', 00H
	DB	'c', 00H, 'k', 00H, 00H, 00H
	ORG $+2
$SG82568 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82569 DB	'm', 00H, '_', 00H, 'c', 00H, 'F', 00H, 'r', 00H, 'a', 00H
	DB	'm', 00H, 'e', 00H, 's', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w'
	DB	00H, 'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H
$SG82614 DB	'.', 00H, '.', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82615 DB	'x', 00H, '>', 00H, '=', 00H, '0', 00H, 00H, 00H
CONST	ENDS
;	COMDAT _IID_IAMFilterGraphCallback
CONST	SEGMENT
_IID_IAMFilterGraphCallback DD 056a868fdH
	DW	0ad4H
	DW	011ceH
	DB	0b0H
	DB	0a3H
	DB	00H
	DB	020H
	DB	0afH
	DB	0bH
	DB	0a7H
	DB	070H
CONST	ENDS
PUBLIC	?Ready@CBaseRenderer@@QAEXXZ			; CBaseRenderer::Ready
PUBLIC	??_7CBaseRenderer@@6BIAMovieSetup@@@		; CBaseRenderer::`vftable'
PUBLIC	??_7CBaseRenderer@@6BIBaseFilter@@@		; CBaseRenderer::`vftable'
PUBLIC	??_7CBaseRenderer@@6BCUnknown@@@		; CBaseRenderer::`vftable'
PUBLIC	??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z ; CBaseRenderer::CBaseRenderer
PUBLIC	??_R4CBaseRenderer@@6BCUnknown@@@		; CBaseRenderer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBaseRenderer@@@8			; CBaseRenderer `RTTI Type Descriptor'
PUBLIC	??_R3CBaseRenderer@@8				; CBaseRenderer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseRenderer@@8				; CBaseRenderer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseRenderer@@8			; CBaseRenderer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CBaseFilter@@8			; CBaseFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCBaseFilter@@@8				; CBaseFilter `RTTI Type Descriptor'
PUBLIC	??_R3CBaseFilter@@8				; CBaseFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseFilter@@8				; CBaseFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CUnknown@@8			; CUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCUnknown@@@8				; CUnknown `RTTI Type Descriptor'
PUBLIC	??_R3CUnknown@@8				; CUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CUnknown@@8				; CUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@INonDelegatingUnknown@@8		; INonDelegatingUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUINonDelegatingUnknown@@@8		; INonDelegatingUnknown `RTTI Type Descriptor'
PUBLIC	??_R3INonDelegatingUnknown@@8			; INonDelegatingUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2INonDelegatingUnknown@@8			; INonDelegatingUnknown::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@CBaseObject@@8			; CBaseObject::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVCBaseObject@@@8				; CBaseObject `RTTI Type Descriptor'
PUBLIC	??_R3CBaseObject@@8				; CBaseObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseObject@@8				; CBaseObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseObject@@8			; CBaseObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BA@?0A@EA@IBaseFilter@@8			; IBaseFilter::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AUIBaseFilter@@@8				; IBaseFilter `RTTI Type Descriptor'
PUBLIC	??_R3IBaseFilter@@8				; IBaseFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IBaseFilter@@8				; IBaseFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IBaseFilter@@8			; IBaseFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IMediaFilter@@8			; IMediaFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIMediaFilter@@@8			; IMediaFilter `RTTI Type Descriptor'
PUBLIC	??_R3IMediaFilter@@8				; IMediaFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IMediaFilter@@8				; IMediaFilter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IPersist@@8			; IPersist::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIPersist@@@8				; IPersist `RTTI Type Descriptor'
PUBLIC	??_R3IPersist@@8				; IPersist::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IPersist@@8				; IPersist::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1BA@?0A@EA@IMediaFilter@@8			; IMediaFilter::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R1BA@?0A@EA@IPersist@@8			; IPersist::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R1BA@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (16,-1,0,66)'
PUBLIC	??_R1BE@?0A@EA@IAMovieSetup@@8			; IAMovieSetup::`RTTI Base Class Descriptor at (20,-1,0,64)'
PUBLIC	??_R0?AUIAMovieSetup@@@8			; IAMovieSetup `RTTI Type Descriptor'
PUBLIC	??_R3IAMovieSetup@@8				; IAMovieSetup::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IAMovieSetup@@8				; IAMovieSetup::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IAMovieSetup@@8			; IAMovieSetup::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BE@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (20,-1,0,66)'
PUBLIC	?NonDelegatingQueryInterface@CBaseRenderer@@UAGJABU_GUID@@PAPAX@Z ; CBaseRenderer::NonDelegatingQueryInterface
PUBLIC	?GetPinCount@CBaseRenderer@@UAEHXZ		; CBaseRenderer::GetPinCount
PUBLIC	?GetPin@CBaseRenderer@@UAEPAVCBasePin@@H@Z	; CBaseRenderer::GetPin
PUBLIC	?GetSetupData@CBaseFilter@@UAEPAU_AMOVIESETUP_FILTER@@XZ ; CBaseFilter::GetSetupData
PUBLIC	?GetMediaPositionInterface@CBaseRenderer@@UAEJABU_GUID@@PAPAX@Z ; CBaseRenderer::GetMediaPositionInterface
PUBLIC	?SourceThreadCanWait@CBaseRenderer@@UAEJH@Z	; CBaseRenderer::SourceThreadCanWait
PUBLIC	?WaitForRenderTime@CBaseRenderer@@UAEJXZ	; CBaseRenderer::WaitForRenderTime
PUBLIC	?CompleteStateChange@CBaseRenderer@@UAEJW4_FilterState@@@Z ; CBaseRenderer::CompleteStateChange
PUBLIC	?OnReceiveFirstSample@CBaseRenderer@@UAEXPAUIMediaSample@@@Z ; CBaseRenderer::OnReceiveFirstSample
PUBLIC	?OnRenderStart@CBaseRenderer@@UAEXPAUIMediaSample@@@Z ; CBaseRenderer::OnRenderStart
PUBLIC	?OnRenderEnd@CBaseRenderer@@UAEXPAUIMediaSample@@@Z ; CBaseRenderer::OnRenderEnd
PUBLIC	?OnStartStreaming@CBaseRenderer@@UAEJXZ		; CBaseRenderer::OnStartStreaming
PUBLIC	?OnStopStreaming@CBaseRenderer@@UAEJXZ		; CBaseRenderer::OnStopStreaming
PUBLIC	?OnWaitStart@CBaseRenderer@@UAEXXZ		; CBaseRenderer::OnWaitStart
PUBLIC	?OnWaitEnd@CBaseRenderer@@UAEXXZ		; CBaseRenderer::OnWaitEnd
PUBLIC	?PrepareRender@CBaseRenderer@@UAEXXZ		; CBaseRenderer::PrepareRender
PUBLIC	?ScheduleSample@CBaseRenderer@@UAEHPAUIMediaSample@@@Z ; CBaseRenderer::ScheduleSample
PUBLIC	?GetSampleTimes@CBaseRenderer@@UAEJPAUIMediaSample@@PA_J1@Z ; CBaseRenderer::GetSampleTimes
PUBLIC	?ShouldDrawSampleNow@CBaseRenderer@@UAEJPAUIMediaSample@@PA_J1@Z ; CBaseRenderer::ShouldDrawSampleNow
PUBLIC	?SendEndOfStream@CBaseRenderer@@UAEJXZ		; CBaseRenderer::SendEndOfStream
PUBLIC	?ResetEndOfStream@CBaseRenderer@@UAEJXZ		; CBaseRenderer::ResetEndOfStream
PUBLIC	?EndOfStream@CBaseRenderer@@UAEJXZ		; CBaseRenderer::EndOfStream
PUBLIC	?CancelNotification@CBaseRenderer@@UAEJXZ	; CBaseRenderer::CancelNotification
PUBLIC	?ClearPendingSample@CBaseRenderer@@UAEJXZ	; CBaseRenderer::ClearPendingSample
PUBLIC	?Active@CBaseRenderer@@UAEJXZ			; CBaseRenderer::Active
PUBLIC	?Inactive@CBaseRenderer@@UAEJXZ			; CBaseRenderer::Inactive
PUBLIC	?StartStreaming@CBaseRenderer@@UAEJXZ		; CBaseRenderer::StartStreaming
PUBLIC	?StopStreaming@CBaseRenderer@@UAEJXZ		; CBaseRenderer::StopStreaming
PUBLIC	?BeginFlush@CBaseRenderer@@UAEJXZ		; CBaseRenderer::BeginFlush
PUBLIC	?EndFlush@CBaseRenderer@@UAEJXZ			; CBaseRenderer::EndFlush
PUBLIC	?BreakConnect@CBaseRenderer@@UAEJXZ		; CBaseRenderer::BreakConnect
PUBLIC	?SetMediaType@CBaseRenderer@@UAEJPBVCMediaType@@@Z ; CBaseRenderer::SetMediaType
PUBLIC	?CompleteConnect@CBaseRenderer@@UAEJPAUIPin@@@Z	; CBaseRenderer::CompleteConnect
PUBLIC	?PrepareReceive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z ; CBaseRenderer::PrepareReceive
PUBLIC	?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z	; CBaseRenderer::Receive
PUBLIC	?HaveCurrentSample@CBaseRenderer@@UAEHXZ	; CBaseRenderer::HaveCurrentSample
PUBLIC	?GetCurrentSample@CBaseRenderer@@UAEPAUIMediaSample@@XZ ; CBaseRenderer::GetCurrentSample
PUBLIC	?Render@CBaseRenderer@@UAEJPAUIMediaSample@@@Z	; CBaseRenderer::Render
PUBLIC	??_R4CBaseRenderer@@6BIBaseFilter@@@		; CBaseRenderer::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CBaseFilter@@UAGJABU_GUID@@PAPAX@Z ; CBaseFilter::QueryInterface
PUBLIC	?AddRef@CBaseFilter@@UAGKXZ			; CBaseFilter::AddRef
PUBLIC	?Release@CBaseFilter@@UAGKXZ			; CBaseFilter::Release
PUBLIC	?Stop@CBaseRenderer@@UAGJXZ			; CBaseRenderer::Stop
PUBLIC	?Pause@CBaseRenderer@@UAGJXZ			; CBaseRenderer::Pause
PUBLIC	?Run@CBaseRenderer@@UAGJ_J@Z			; CBaseRenderer::Run
PUBLIC	?GetState@CBaseRenderer@@UAGJKPAW4_FilterState@@@Z ; CBaseRenderer::GetState
PUBLIC	?FindPin@CBaseRenderer@@UAGJPB_WPAPAUIPin@@@Z	; CBaseRenderer::FindPin
PUBLIC	??_R4CBaseRenderer@@6BIAMovieSetup@@@		; CBaseRenderer::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CBaseFilter@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:CBaseFilter::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CBaseFilter@@W3AGKXZ			; [thunk]:CBaseFilter::AddRef`adjustor{4}'
PUBLIC	?Release@CBaseFilter@@W3AGKXZ			; [thunk]:CBaseFilter::Release`adjustor{4}'
EXTRN	??1CCritSec@@QAE@XZ:PROC			; CCritSec::~CCritSec
EXTRN	??1CAMEvent@@QAE@XZ:PROC			; CAMEvent::~CAMEvent
EXTRN	??1CBaseFilter@@UAE@XZ:PROC			; CBaseFilter::~CBaseFilter
EXTRN	??0CCritSec@@QAE@XZ:PROC			; CCritSec::CCritSec
EXTRN	??0CAMEvent@@QAE@H@Z:PROC			; CAMEvent::CAMEvent
EXTRN	??0CBaseFilter@@QAE@PB_WPAUIUnknown@@PAVCCritSec@@ABU_GUID@@@Z:PROC ; CBaseFilter::CBaseFilter
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?NonDelegatingAddRef@CUnknown@@UAGKXZ:PROC	; CUnknown::NonDelegatingAddRef
EXTRN	?NonDelegatingRelease@CBaseFilter@@UAGKXZ:PROC	; CBaseFilter::NonDelegatingRelease
EXTRN	??_ECBaseRenderer@@UAEPAXI@Z:PROC		; CBaseRenderer::`vector deleting destructor'
EXTRN	?StreamTime@CBaseFilter@@UAEJAAVCRefTime@@@Z:PROC ; CBaseFilter::StreamTime
EXTRN	?GetPinVersion@CBaseFilter@@UAEJXZ:PROC		; CBaseFilter::GetPinVersion
EXTRN	__purecall:PROC
EXTRN	?GetClassID@CBaseFilter@@UAGJPAU_GUID@@@Z:PROC	; CBaseFilter::GetClassID
EXTRN	?SetSyncSource@CBaseFilter@@UAGJPAUIReferenceClock@@@Z:PROC ; CBaseFilter::SetSyncSource
EXTRN	?GetSyncSource@CBaseFilter@@UAGJPAPAUIReferenceClock@@@Z:PROC ; CBaseFilter::GetSyncSource
EXTRN	?EnumPins@CBaseFilter@@UAGJPAPAUIEnumPins@@@Z:PROC ; CBaseFilter::EnumPins
EXTRN	?QueryFilterInfo@CBaseFilter@@UAGJPAU_FilterInfo@@@Z:PROC ; CBaseFilter::QueryFilterInfo
EXTRN	?JoinFilterGraph@CBaseFilter@@UAGJPAUIFilterGraph@@PB_W@Z:PROC ; CBaseFilter::JoinFilterGraph
EXTRN	?QueryVendorInfo@CBaseFilter@@UAGJPAPA_W@Z:PROC	; CBaseFilter::QueryVendorInfo
EXTRN	?Register@CBaseFilter@@UAGJXZ:PROC		; CBaseFilter::Register
EXTRN	?Unregister@CBaseFilter@@UAGJXZ:PROC		; CBaseFilter::Unregister
;	COMDAT ??_R4CBaseRenderer@@6BIAMovieSetup@@@
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.cpp
rdata$r	SEGMENT
??_R4CBaseRenderer@@6BIAMovieSetup@@@ DD 00H		; CBaseRenderer::`RTTI Complete Object Locator'
	DD	014H
	DD	00H
	DD	FLAT:??_R0?AVCBaseRenderer@@@8
	DD	FLAT:??_R3CBaseRenderer@@8
rdata$r	ENDS
;	COMDAT ??_R4CBaseRenderer@@6BIBaseFilter@@@
rdata$r	SEGMENT
??_R4CBaseRenderer@@6BIBaseFilter@@@ DD 00H		; CBaseRenderer::`RTTI Complete Object Locator'
	DD	010H
	DD	00H
	DD	FLAT:??_R0?AVCBaseRenderer@@@8
	DD	FLAT:??_R3CBaseRenderer@@8
rdata$r	ENDS
;	COMDAT ??_R1BE@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BE@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (20,-1,0,66)'
	DD	00H
	DD	014H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IAMovieSetup@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IAMovieSetup@@8 DD FLAT:??_R0?AUIAMovieSetup@@@8 ; IAMovieSetup::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAMovieSetup@@8
rdata$r	ENDS
;	COMDAT ??_R2IAMovieSetup@@8
rdata$r	SEGMENT
??_R2IAMovieSetup@@8 DD FLAT:??_R1A@?0A@EA@IAMovieSetup@@8 ; IAMovieSetup::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IAMovieSetup@@8
rdata$r	SEGMENT
??_R3IAMovieSetup@@8 DD 00H				; IAMovieSetup::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IAMovieSetup@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIAMovieSetup@@@8
_DATA	SEGMENT
??_R0?AUIAMovieSetup@@@8 DD FLAT:??_7type_info@@6B@	; IAMovieSetup `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIAMovieSetup@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BE@?0A@EA@IAMovieSetup@@8
rdata$r	SEGMENT
??_R1BE@?0A@EA@IAMovieSetup@@8 DD FLAT:??_R0?AUIAMovieSetup@@@8 ; IAMovieSetup::`RTTI Base Class Descriptor at (20,-1,0,64)'
	DD	01H
	DD	014H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IAMovieSetup@@8
rdata$r	ENDS
;	COMDAT ??_R1BA@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BA@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (16,-1,0,66)'
	DD	00H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1BA@?0A@EA@IPersist@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@IPersist@@8 DD FLAT:??_R0?AUIPersist@@@8	; IPersist::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	01H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IPersist@@8
rdata$r	ENDS
;	COMDAT ??_R1BA@?0A@EA@IMediaFilter@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@IMediaFilter@@8 DD FLAT:??_R0?AUIMediaFilter@@@8 ; IMediaFilter::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	02H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IMediaFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IPersist@@8
rdata$r	SEGMENT
??_R2IPersist@@8 DD FLAT:??_R1A@?0A@EA@IPersist@@8	; IPersist::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IPersist@@8
rdata$r	SEGMENT
??_R3IPersist@@8 DD 00H					; IPersist::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IPersist@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIPersist@@@8
_DATA	SEGMENT
??_R0?AUIPersist@@@8 DD FLAT:??_7type_info@@6B@		; IPersist `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIPersist@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IPersist@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IPersist@@8 DD FLAT:??_R0?AUIPersist@@@8	; IPersist::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IPersist@@8
rdata$r	ENDS
;	COMDAT ??_R2IMediaFilter@@8
rdata$r	SEGMENT
??_R2IMediaFilter@@8 DD FLAT:??_R1A@?0A@EA@IMediaFilter@@8 ; IMediaFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IPersist@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IMediaFilter@@8
rdata$r	SEGMENT
??_R3IMediaFilter@@8 DD 00H				; IMediaFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2IMediaFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIMediaFilter@@@8
_DATA	SEGMENT
??_R0?AUIMediaFilter@@@8 DD FLAT:??_7type_info@@6B@	; IMediaFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIMediaFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IMediaFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IMediaFilter@@8 DD FLAT:??_R0?AUIMediaFilter@@@8 ; IMediaFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IMediaFilter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IBaseFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IBaseFilter@@8 DD FLAT:??_R0?AUIBaseFilter@@@8 ; IBaseFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IBaseFilter@@8
rdata$r	ENDS
;	COMDAT ??_R2IBaseFilter@@8
rdata$r	SEGMENT
??_R2IBaseFilter@@8 DD FLAT:??_R1A@?0A@EA@IBaseFilter@@8 ; IBaseFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IMediaFilter@@8
	DD	FLAT:??_R1A@?0A@EA@IPersist@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IBaseFilter@@8
rdata$r	SEGMENT
??_R3IBaseFilter@@8 DD 00H				; IBaseFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2IBaseFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIBaseFilter@@@8
_DATA	SEGMENT
??_R0?AUIBaseFilter@@@8 DD FLAT:??_7type_info@@6B@	; IBaseFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIBaseFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BA@?0A@EA@IBaseFilter@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@IBaseFilter@@8 DD FLAT:??_R0?AUIBaseFilter@@@8 ; IBaseFilter::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	03H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IBaseFilter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseObject@@8 DD FLAT:??_R0?AVCBaseObject@@@8 ; CBaseObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseObject@@8
rdata$r	SEGMENT
??_R2CBaseObject@@8 DD FLAT:??_R1A@?0A@EA@CBaseObject@@8 ; CBaseObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CBaseObject@@8
rdata$r	SEGMENT
??_R3CBaseObject@@8 DD 00H				; CBaseObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseObject@@@8
_DATA	SEGMENT
??_R0?AVCBaseObject@@@8 DD FLAT:??_7type_info@@6B@	; CBaseObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseObject@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@CBaseObject@@8
rdata$r	SEGMENT
??_R13?0A@EA@CBaseObject@@8 DD FLAT:??_R0?AVCBaseObject@@@8 ; CBaseObject::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R2INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R2INonDelegatingUnknown@@8 DD FLAT:??_R1A@?0A@EA@INonDelegatingUnknown@@8 ; INonDelegatingUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R3INonDelegatingUnknown@@8 DD 00H			; INonDelegatingUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2INonDelegatingUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUINonDelegatingUnknown@@@8
_DATA	SEGMENT
??_R0?AUINonDelegatingUnknown@@@8 DD FLAT:??_7type_info@@6B@ ; INonDelegatingUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUINonDelegatingUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@INonDelegatingUnknown@@8 DD FLAT:??_R0?AUINonDelegatingUnknown@@@8 ; INonDelegatingUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3INonDelegatingUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2CUnknown@@8
rdata$r	SEGMENT
??_R2CUnknown@@8 DD FLAT:??_R1A@?0A@EA@CUnknown@@8	; CUnknown::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	FLAT:??_R13?0A@EA@CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CUnknown@@8
rdata$r	SEGMENT
??_R3CUnknown@@8 DD 00H					; CUnknown::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCUnknown@@@8
_DATA	SEGMENT
??_R0?AVCUnknown@@@8 DD FLAT:??_7type_info@@6B@		; CUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CUnknown@@8 DD FLAT:??_R0?AVCUnknown@@@8	; CUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseFilter@@8
rdata$r	SEGMENT
??_R2CBaseFilter@@8 DD FLAT:??_R1A@?0A@EA@CBaseFilter@@8 ; CBaseFilter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CUnknown@@8
	DD	FLAT:??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	FLAT:??_R13?0A@EA@CBaseObject@@8
	DD	FLAT:??_R1BA@?0A@EA@IBaseFilter@@8
	DD	FLAT:??_R1BA@?0A@EA@IMediaFilter@@8
	DD	FLAT:??_R1BA@?0A@EA@IPersist@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@IAMovieSetup@@8
	DD	FLAT:??_R1BE@?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CBaseFilter@@8
rdata$r	SEGMENT
??_R3CBaseFilter@@8 DD 00H				; CBaseFilter::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	0aH
	DD	FLAT:??_R2CBaseFilter@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseFilter@@@8
_DATA	SEGMENT
??_R0?AVCBaseFilter@@@8 DD FLAT:??_7type_info@@6B@	; CBaseFilter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseFilter@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseFilter@@8 DD FLAT:??_R0?AVCBaseFilter@@@8 ; CBaseFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseFilter@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseRenderer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseRenderer@@8 DD FLAT:??_R0?AVCBaseRenderer@@@8 ; CBaseRenderer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseRenderer@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseRenderer@@8
rdata$r	SEGMENT
??_R2CBaseRenderer@@8 DD FLAT:??_R1A@?0A@EA@CBaseRenderer@@8 ; CBaseRenderer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseFilter@@8
	DD	FLAT:??_R1A@?0A@EA@CUnknown@@8
	DD	FLAT:??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	FLAT:??_R13?0A@EA@CBaseObject@@8
	DD	FLAT:??_R1BA@?0A@EA@IBaseFilter@@8
	DD	FLAT:??_R1BA@?0A@EA@IMediaFilter@@8
	DD	FLAT:??_R1BA@?0A@EA@IPersist@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@IAMovieSetup@@8
	DD	FLAT:??_R1BE@?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CBaseRenderer@@8
rdata$r	SEGMENT
??_R3CBaseRenderer@@8 DD 00H				; CBaseRenderer::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0bH
	DD	FLAT:??_R2CBaseRenderer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseRenderer@@@8
_DATA	SEGMENT
??_R0?AVCBaseRenderer@@@8 DD FLAT:??_7type_info@@6B@	; CBaseRenderer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseRenderer@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CBaseRenderer@@6BCUnknown@@@
rdata$r	SEGMENT
??_R4CBaseRenderer@@6BCUnknown@@@ DD 00H		; CBaseRenderer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBaseRenderer@@@8
	DD	FLAT:??_R3CBaseRenderer@@8
rdata$r	ENDS
;	COMDAT ??_7CBaseRenderer@@6BIAMovieSetup@@@
CONST	SEGMENT
??_7CBaseRenderer@@6BIAMovieSetup@@@ DD FLAT:??_R4CBaseRenderer@@6BIAMovieSetup@@@ ; CBaseRenderer::`vftable'
	DD	FLAT:?QueryInterface@CBaseFilter@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CBaseFilter@@W3AGKXZ
	DD	FLAT:?Release@CBaseFilter@@W3AGKXZ
	DD	FLAT:?Register@CBaseFilter@@UAGJXZ
	DD	FLAT:?Unregister@CBaseFilter@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7CBaseRenderer@@6BIBaseFilter@@@
CONST	SEGMENT
??_7CBaseRenderer@@6BIBaseFilter@@@ DD FLAT:??_R4CBaseRenderer@@6BIBaseFilter@@@ ; CBaseRenderer::`vftable'
	DD	FLAT:?QueryInterface@CBaseFilter@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CBaseFilter@@UAGKXZ
	DD	FLAT:?Release@CBaseFilter@@UAGKXZ
	DD	FLAT:?GetClassID@CBaseFilter@@UAGJPAU_GUID@@@Z
	DD	FLAT:?Stop@CBaseRenderer@@UAGJXZ
	DD	FLAT:?Pause@CBaseRenderer@@UAGJXZ
	DD	FLAT:?Run@CBaseRenderer@@UAGJ_J@Z
	DD	FLAT:?GetState@CBaseRenderer@@UAGJKPAW4_FilterState@@@Z
	DD	FLAT:?SetSyncSource@CBaseFilter@@UAGJPAUIReferenceClock@@@Z
	DD	FLAT:?GetSyncSource@CBaseFilter@@UAGJPAPAUIReferenceClock@@@Z
	DD	FLAT:?EnumPins@CBaseFilter@@UAGJPAPAUIEnumPins@@@Z
	DD	FLAT:?FindPin@CBaseRenderer@@UAGJPB_WPAPAUIPin@@@Z
	DD	FLAT:?QueryFilterInfo@CBaseFilter@@UAGJPAU_FilterInfo@@@Z
	DD	FLAT:?JoinFilterGraph@CBaseFilter@@UAGJPAUIFilterGraph@@PB_W@Z
	DD	FLAT:?QueryVendorInfo@CBaseFilter@@UAGJPAPA_W@Z
CONST	ENDS
;	COMDAT ??_7CBaseRenderer@@6BCUnknown@@@
CONST	SEGMENT
??_7CBaseRenderer@@6BCUnknown@@@ DD FLAT:??_R4CBaseRenderer@@6BCUnknown@@@ ; CBaseRenderer::`vftable'
	DD	FLAT:?NonDelegatingQueryInterface@CBaseRenderer@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?NonDelegatingAddRef@CUnknown@@UAGKXZ
	DD	FLAT:?NonDelegatingRelease@CBaseFilter@@UAGKXZ
	DD	FLAT:??_ECBaseRenderer@@UAEPAXI@Z
	DD	FLAT:?StreamTime@CBaseFilter@@UAEJAAVCRefTime@@@Z
	DD	FLAT:?GetPinVersion@CBaseFilter@@UAEJXZ
	DD	FLAT:?GetPinCount@CBaseRenderer@@UAEHXZ
	DD	FLAT:?GetPin@CBaseRenderer@@UAEPAVCBasePin@@H@Z
	DD	FLAT:?GetSetupData@CBaseFilter@@UAEPAU_AMOVIESETUP_FILTER@@XZ
	DD	FLAT:?GetMediaPositionInterface@CBaseRenderer@@UAEJABU_GUID@@PAPAX@Z
	DD	FLAT:?SourceThreadCanWait@CBaseRenderer@@UAEJH@Z
	DD	FLAT:?WaitForRenderTime@CBaseRenderer@@UAEJXZ
	DD	FLAT:?CompleteStateChange@CBaseRenderer@@UAEJW4_FilterState@@@Z
	DD	FLAT:?OnReceiveFirstSample@CBaseRenderer@@UAEXPAUIMediaSample@@@Z
	DD	FLAT:?OnRenderStart@CBaseRenderer@@UAEXPAUIMediaSample@@@Z
	DD	FLAT:?OnRenderEnd@CBaseRenderer@@UAEXPAUIMediaSample@@@Z
	DD	FLAT:?OnStartStreaming@CBaseRenderer@@UAEJXZ
	DD	FLAT:?OnStopStreaming@CBaseRenderer@@UAEJXZ
	DD	FLAT:?OnWaitStart@CBaseRenderer@@UAEXXZ
	DD	FLAT:?OnWaitEnd@CBaseRenderer@@UAEXXZ
	DD	FLAT:?PrepareRender@CBaseRenderer@@UAEXXZ
	DD	FLAT:?ScheduleSample@CBaseRenderer@@UAEHPAUIMediaSample@@@Z
	DD	FLAT:?GetSampleTimes@CBaseRenderer@@UAEJPAUIMediaSample@@PA_J1@Z
	DD	FLAT:?ShouldDrawSampleNow@CBaseRenderer@@UAEJPAUIMediaSample@@PA_J1@Z
	DD	FLAT:?SendEndOfStream@CBaseRenderer@@UAEJXZ
	DD	FLAT:?ResetEndOfStream@CBaseRenderer@@UAEJXZ
	DD	FLAT:?EndOfStream@CBaseRenderer@@UAEJXZ
	DD	FLAT:?CancelNotification@CBaseRenderer@@UAEJXZ
	DD	FLAT:?ClearPendingSample@CBaseRenderer@@UAEJXZ
	DD	FLAT:?Active@CBaseRenderer@@UAEJXZ
	DD	FLAT:?Inactive@CBaseRenderer@@UAEJXZ
	DD	FLAT:?StartStreaming@CBaseRenderer@@UAEJXZ
	DD	FLAT:?StopStreaming@CBaseRenderer@@UAEJXZ
	DD	FLAT:?BeginFlush@CBaseRenderer@@UAEJXZ
	DD	FLAT:?EndFlush@CBaseRenderer@@UAEJXZ
	DD	FLAT:?BreakConnect@CBaseRenderer@@UAEJXZ
	DD	FLAT:?SetMediaType@CBaseRenderer@@UAEJPBVCMediaType@@@Z
	DD	FLAT:?CompleteConnect@CBaseRenderer@@UAEJPAUIPin@@@Z
	DD	FLAT:?PrepareReceive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z
	DD	FLAT:?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z
	DD	FLAT:?HaveCurrentSample@CBaseRenderer@@UAEHXZ
	DD	FLAT:?GetCurrentSample@CBaseRenderer@@UAEPAUIMediaSample@@XZ
	DD	FLAT:?Render@CBaseRenderer@@UAEJPAUIMediaSample@@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z$6
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT ??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_RenderClass$ = 8					; size = 4
_pName$ = 12						; size = 4
_pUnk$ = 16						; size = 4
_phr$ = 20						; size = 4
??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z PROC ; CBaseRenderer::CBaseRenderer, COMDAT
; _this$ = ecx
; Line 51
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _RenderClass$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	push	ecx
	mov	edx, DWORD PTR _pUnk$[ebp]
	push	edx
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseFilter@@QAE@PB_WPAUIUnknown@@PAVCCritSec@@ABU_GUID@@@Z ; CBaseFilter::CBaseFilter
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7CBaseRenderer@@6BCUnknown@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], OFFSET ??_7CBaseRenderer@@6BIBaseFilter@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], OFFSET ??_7CBaseRenderer@@6BIAMovieSetup@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??0CAMEvent@@QAE@H@Z			; CAMEvent::CAMEvent
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??0CAMEvent@@QAE@H@Z			; CAMEvent::CAMEvent
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	??0CAMEvent@@QAE@H@Z			; CAMEvent::CAMEvent
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+96], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+100], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+104], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+108], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+116], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+120], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??0CCritSec@@QAE@XZ			; CCritSec::CCritSec
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	call	??0CCritSec@@QAE@XZ			; CCritSec::CCritSec
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+196], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+200], 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+204], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+208], 0
	mov	DWORD PTR [eax+212], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+216], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	call	??0CCritSec@@QAE@XZ			; CCritSec::CCritSec
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 52
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Ready@CBaseRenderer@@QAEXXZ		; CBaseRenderer::Ready
; Line 58
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseFilter@@UAE@XZ			; CBaseFilter::~CBaseFilter
__unwindfunclet$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	jmp	??1CAMEvent@@QAE@XZ			; CAMEvent::~CAMEvent
__unwindfunclet$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	jmp	??1CAMEvent@@QAE@XZ			; CAMEvent::~CAMEvent
__unwindfunclet$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	jmp	??1CAMEvent@@QAE@XZ			; CAMEvent::~CAMEvent
__unwindfunclet$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	jmp	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
__unwindfunclet$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	jmp	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
__unwindfunclet$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	jmp	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
__ehhandler$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z ENDP ; CBaseRenderer::CBaseRenderer
PUBLIC	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ		; CUnknown::GetOwner
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CBaseFilter@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv72 = -4						; size = 4
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?QueryInterface@CBaseFilter@@UAGJABU_GUID@@PAPAX@Z PROC	; CBaseFilter::QueryInterface, COMDAT
; File c:\downloads\mediapoint\src\filters\baseclasses\amfilter.h
; Line 198
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CBaseFilter@@UAGJABU_GUID@@PAPAX@Z ENDP	; CBaseFilter::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ PROC		; CUnknown::GetOwner, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\combase.h
; Line 224
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 225
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 226
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ ENDP		; CUnknown::GetOwner
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CBaseFilter@@UAGKXZ
_TEXT	SEGMENT
tv72 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CBaseFilter@@UAGKXZ PROC			; CBaseFilter::AddRef, COMDAT
; File c:\downloads\mediapoint\src\filters\baseclasses\amfilter.h
; Line 198
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv72[ebp], eax
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CBaseFilter@@UAGKXZ ENDP			; CBaseFilter::AddRef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CBaseFilter@@UAGKXZ
_TEXT	SEGMENT
tv72 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CBaseFilter@@UAGKXZ PROC			; CBaseFilter::Release, COMDAT
; Line 198
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv72[ebp], eax
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CBaseFilter@@UAGKXZ ENDP			; CBaseFilter::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetSetupData@CBaseFilter@@UAEPAU_AMOVIESETUP_FILTER@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSetupData@CBaseFilter@@UAEPAU_AMOVIESETUP_FILTER@@XZ PROC ; CBaseFilter::GetSetupData, COMDAT
; _this$ = ecx
; Line 317
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSetupData@CBaseFilter@@UAEPAU_AMOVIESETUP_FILTER@@XZ ENDP ; CBaseFilter::GetSetupData
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnReceiveFirstSample@CBaseRenderer@@UAEXPAUIMediaSample@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMediaSample$ = 8					; size = 4
?OnReceiveFirstSample@CBaseRenderer@@UAEXPAUIMediaSample@@@Z PROC ; CBaseRenderer::OnReceiveFirstSample, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.h
; Line 126
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?OnReceiveFirstSample@CBaseRenderer@@UAEXPAUIMediaSample@@@Z ENDP ; CBaseRenderer::OnReceiveFirstSample
_TEXT	ENDS
PUBLIC	?Set@CAMEvent@@QAEXXZ				; CAMEvent::Set
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Ready@CBaseRenderer@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Ready@CBaseRenderer@@QAEXXZ PROC			; CBaseRenderer::Ready, COMDAT
; _this$ = ecx
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	?Set@CAMEvent@@QAEXXZ			; CAMEvent::Set
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Ready@CBaseRenderer@@QAEXXZ ENDP			; CBaseRenderer::Ready
_TEXT	ENDS
PUBLIC	??_C@_1CG@LOEFFHJE@?$AAS?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AAm?$AA_?$AAh?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1HC@NPKKOGCJ@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@ ; `string'
EXTRN	?DbgAssert@@YGXPB_W0H@Z:PROC			; DbgAssert
EXTRN	__imp__SetEvent@4:PROC
;	COMDAT ??_C@_1CG@LOEFFHJE@?$AAS?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AAm?$AA_?$AAh?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CJ?$AA?$AA@
; File c:\downloads\mediapoint\src\filters\baseclasses\wxutil.h
CONST	SEGMENT
??_C@_1CG@LOEFFHJE@?$AAS?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AAm?$AA_?$AAh?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CJ?$AA?$AA@ DB 'S'
	DB	00H, 'e', 00H, 't', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, '(', 00H, 'm', 00H, '_', 00H, 'h', 00H, 'E', 00H, 'v'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HC@NPKKOGCJ@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@
CONST	SEGMENT
??_C@_1HC@NPKKOGCJ@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'D', 00H, 'o', 00H, 'w', 00H, 'n', 00H
	DB	'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'e', 00H, 'd', 00H, 'i', 00H, 'a', 00H, 'P', 00H, 'o', 00H
	DB	'i', 00H, 'n', 00H, 't', 00H, '\', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'B', 00H, 'a', 00H, 's', 00H, 'e'
	DB	00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 'e', 00H
	DB	's', 00H, '\', 00H, 'w', 00H, 'x', 00H, 'u', 00H, 't', 00H, 'i'
	DB	00H, 'l', 00H, '.', 00H, 'h', 00H, 00H, 00H	; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?Set@CAMEvent@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Set@CAMEvent@@QAEXXZ PROC				; CAMEvent::Set, COMDAT
; _this$ = ecx
; Line 125
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__SetEvent@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN2@Set
	push	125					; 0000007dH
	push	OFFSET ??_C@_1HC@NPKKOGCJ@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@
	push	OFFSET ??_C@_1CG@LOEFFHJE@?$AAS?$AAe?$AAt?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AAm?$AA_?$AAh?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CJ?$AA?$AA@
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@Set:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Set@CAMEvent@@QAEXXZ ENDP				; CAMEvent::Set
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnStartStreaming@CBaseRenderer@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnStartStreaming@CBaseRenderer@@UAEJXZ PROC		; CBaseRenderer::OnStartStreaming, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.h
; Line 155
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?OnStartStreaming@CBaseRenderer@@UAEJXZ ENDP		; CBaseRenderer::OnStartStreaming
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnStopStreaming@CBaseRenderer@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnStopStreaming@CBaseRenderer@@UAEJXZ PROC		; CBaseRenderer::OnStopStreaming, COMDAT
; _this$ = ecx
; Line 156
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?OnStopStreaming@CBaseRenderer@@UAEJXZ ENDP		; CBaseRenderer::OnStopStreaming
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnWaitStart@CBaseRenderer@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnWaitStart@CBaseRenderer@@UAEXXZ PROC			; CBaseRenderer::OnWaitStart, COMDAT
; _this$ = ecx
; Line 157
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OnWaitStart@CBaseRenderer@@UAEXXZ ENDP			; CBaseRenderer::OnWaitStart
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnWaitEnd@CBaseRenderer@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnWaitEnd@CBaseRenderer@@UAEXXZ PROC			; CBaseRenderer::OnWaitEnd, COMDAT
; _this$ = ecx
; Line 158
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OnWaitEnd@CBaseRenderer@@UAEXXZ ENDP			; CBaseRenderer::OnWaitEnd
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?PrepareRender@CBaseRenderer@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?PrepareRender@CBaseRenderer@@UAEXXZ PROC		; CBaseRenderer::PrepareRender, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?PrepareRender@CBaseRenderer@@UAEXXZ ENDP		; CBaseRenderer::PrepareRender
_TEXT	ENDS
PUBLIC	??1CBaseRenderer@@UAE@XZ			; CBaseRenderer::~CBaseRenderer
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCBaseRenderer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCBaseRenderer@@UAEPAXI@Z PROC			; CBaseRenderer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBaseRenderer@@UAE@XZ		; CBaseRenderer::~CBaseRenderer
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCBaseRenderer@@UAEPAXI@Z ENDP			; CBaseRenderer::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.cpp
xdata$x	SEGMENT
__ehfuncinfo$??1CBaseRenderer@@UAE@XZ DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??1CBaseRenderer@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1CBaseRenderer@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CBaseRenderer@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CBaseRenderer@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CBaseRenderer@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CBaseRenderer@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1CBaseRenderer@@UAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1CBaseRenderer@@UAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1CBaseRenderer@@UAE@XZ$6
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CBaseRenderer@@UAE@XZ
_TEXT	SEGMENT
tv169 = -40						; size = 4
tv154 = -36						; size = 4
$T83338 = -32						; size = 4
$T83337 = -28						; size = 4
$T83334 = -24						; size = 4
$T83333 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CBaseRenderer@@UAE@XZ PROC				; CBaseRenderer::~CBaseRenderer, COMDAT
; _this$ = ecx
; Line 68
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CBaseRenderer@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CBaseRenderer@@6BCUnknown@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], OFFSET ??_7CBaseRenderer@@6BIBaseFilter@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], OFFSET ??_7CBaseRenderer@@6BIAMovieSetup@@@
	mov	DWORD PTR __$EHRec$[ebp+8], 6
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN5@CBaseRende
	push	69					; 00000045H
	push	OFFSET $SG81578
	push	OFFSET $SG81579
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN5@CBaseRende:
; Line 70
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+216], 0
	je	SHORT $LN4@CBaseRende
	push	70					; 00000046H
	push	OFFSET $SG81581
	push	OFFSET $SG81582
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN4@CBaseRende:
; Line 71
	mov	ecx, DWORD PTR _this$[ebp]
	call	?StopStreaming@CBaseRenderer@@UAEJXZ	; CBaseRenderer::StopStreaming
; Line 72
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearPendingSample@CBaseRenderer@@UAEJXZ ; CBaseRenderer::ClearPendingSample
; Line 76
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+80], 0
	je	SHORT $LN3@CBaseRende
; Line 77
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR $T83334[ebp], ecx
	mov	edx, DWORD PTR $T83334[ebp]
	mov	DWORD PTR $T83333[ebp], edx
	cmp	DWORD PTR $T83333[ebp], 0
	je	SHORT $LN8@CBaseRende
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T83333[ebp]
	add	ecx, 8
	mov	eax, DWORD PTR $T83333[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv154[ebp], eax
	jmp	SHORT $LN9@CBaseRende
$LN8@CBaseRende:
	mov	DWORD PTR tv154[ebp], 0
$LN9@CBaseRende:
; Line 78
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], 0
$LN3@CBaseRende:
; Line 83
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+120], 0
	je	SHORT $LN2@CBaseRende
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	DWORD PTR $T83338[ebp], ecx
	mov	edx, DWORD PTR $T83338[ebp]
	mov	DWORD PTR $T83337[ebp], edx
	cmp	DWORD PTR $T83337[ebp], 0
	je	SHORT $LN10@CBaseRende
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T83337[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T83337[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv169[ebp], eax
	jmp	SHORT $LN11@CBaseRende
$LN10@CBaseRende:
	mov	DWORD PTR tv169[ebp], 0
$LN11@CBaseRende:
; Line 85
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+120], 0
$LN2@CBaseRende:
; Line 90
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+196], 0
	je	SHORT $LN6@CBaseRende
	push	90					; 0000005aH
	push	OFFSET $SG81590
	push	OFFSET $SG81591
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN6@CBaseRende:
; Line 91
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	call	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	call	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	??1CAMEvent@@QAE@XZ			; CAMEvent::~CAMEvent
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??1CAMEvent@@QAE@XZ			; CAMEvent::~CAMEvent
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??1CAMEvent@@QAE@XZ			; CAMEvent::~CAMEvent
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBaseFilter@@UAE@XZ			; CBaseFilter::~CBaseFilter
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CBaseRenderer@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseFilter@@UAE@XZ			; CBaseFilter::~CBaseFilter
__unwindfunclet$??1CBaseRenderer@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	jmp	??1CAMEvent@@QAE@XZ			; CAMEvent::~CAMEvent
__unwindfunclet$??1CBaseRenderer@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	jmp	??1CAMEvent@@QAE@XZ			; CAMEvent::~CAMEvent
__unwindfunclet$??1CBaseRenderer@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	jmp	??1CAMEvent@@QAE@XZ			; CAMEvent::~CAMEvent
__unwindfunclet$??1CBaseRenderer@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	jmp	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
__unwindfunclet$??1CBaseRenderer@@UAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	jmp	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
__unwindfunclet$??1CBaseRenderer@@UAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	jmp	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
__ehhandler$??1CBaseRenderer@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CBaseRenderer@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CBaseRenderer@@UAE@XZ ENDP				; CBaseRenderer::~CBaseRenderer
PUBLIC	??1CAutoLock@@QAE@XZ				; CAutoLock::~CAutoLock
PUBLIC	??0CAutoLock@@QAE@PAVCCritSec@@@Z		; CAutoLock::CAutoLock
EXTRN	??0CRendererPosPassThru@@QAE@PB_WPAUIUnknown@@PAJPAUIPin@@@Z:PROC ; CRendererPosPassThru::CRendererPosPassThru
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetMediaPositionInterface@CBaseRenderer@@UAEJABU_GUID@@PAPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetMediaPositionInterface@CBaseRenderer@@UAEJABU_GUID@@PAPAX@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetMediaPositionInterface@CBaseRenderer@@UAEJABU_GUID@@PAPAX@Z$1
__ehfuncinfo$?GetMediaPositionInterface@CBaseRenderer@@UAEJABU_GUID@@PAPAX@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetMediaPositionInterface@CBaseRenderer@@UAEJABU_GUID@@PAPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?GetMediaPositionInterface@CBaseRenderer@@UAEJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv165 = -88						; size = 4
tv150 = -84						; size = 4
tv137 = -80						; size = 4
tv138 = -76						; size = 4
$T83369 = -72						; size = 4
$T83368 = -68						; size = 4
$T83365 = -64						; size = 4
$T83364 = -60						; size = 4
$T83363 = -56						; size = 4
$T83358 = -52						; size = 4
$T83357 = -48						; size = 4
$T83356 = -44						; size = 4
_hr$ = -36						; size = 4
_cObjectCreationLock$ = -24				; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_riid$ = 8						; size = 4
_ppv$ = 12						; size = 4
?GetMediaPositionInterface@CBaseRenderer@@UAEJABU_GUID@@PAPAX@Z PROC ; CBaseRenderer::GetMediaPositionInterface, COMDAT
; _this$ = ecx
; Line 97
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetMediaPositionInterface@CBaseRenderer@@UAEJABU_GUID@@PAPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-88]
	mov	ecx, 19					; 00000013H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 98
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 220				; 000000dcH
	push	eax
	lea	ecx, DWORD PTR _cObjectCreationLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 99
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+80], 0
	je	SHORT $LN3@GetMediaPo
; Line 100
	mov	esi, esp
	mov	edx, DWORD PTR _ppv$[ebp]
	push	edx
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	add	ecx, 8
	mov	edx, DWORD PTR [edx+8]
	push	ecx
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83356[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cObjectCreationLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83356[ebp]
	jmp	$LN4@GetMediaPo
$LN3@GetMediaPo:
; Line 103
	mov	DWORD PTR _hr$[ebp], 0
; Line 113
	push	96					; 00000060H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T83358[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T83358[ebp], 0
	je	SHORT $LN8@GetMediaPo
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv138[ebp], eax
	cmp	DWORD PTR tv138[ebp], 0
	je	SHORT $LN6@GetMediaPo
	mov	ecx, DWORD PTR tv138[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR tv137[ebp], ecx
	jmp	SHORT $LN7@GetMediaPo
$LN6@GetMediaPo:
	mov	DWORD PTR tv137[ebp], 0
$LN7@GetMediaPo:
	mov	edx, DWORD PTR tv137[ebp]
	push	edx
	lea	eax, DWORD PTR _hr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	push	eax
	push	OFFSET $SG81606
	mov	ecx, DWORD PTR $T83358[ebp]
	call	??0CRendererPosPassThru@@QAE@PB_WPAUIUnknown@@PAJPAUIPin@@@Z ; CRendererPosPassThru::CRendererPosPassThru
	mov	DWORD PTR tv150[ebp], eax
	jmp	SHORT $LN9@GetMediaPo
$LN8@GetMediaPo:
	mov	DWORD PTR tv150[ebp], 0
$LN9@GetMediaPo:
	mov	ecx, DWORD PTR tv150[ebp]
	mov	DWORD PTR $T83357[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T83357[ebp]
	mov	DWORD PTR [edx+80], eax
; Line 114
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+80], 0
	jne	SHORT $LN2@GetMediaPo
; Line 115
	mov	DWORD PTR $T83363[ebp], -2147024882	; 8007000eH
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cObjectCreationLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83363[ebp]
	jmp	$LN4@GetMediaPo
$LN2@GetMediaPo:
; Line 118
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@GetMediaPo
; Line 119
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	DWORD PTR $T83365[ebp], eax
	mov	ecx, DWORD PTR $T83365[ebp]
	mov	DWORD PTR $T83364[ebp], ecx
	cmp	DWORD PTR $T83364[ebp], 0
	je	SHORT $LN10@GetMediaPo
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T83364[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR $T83364[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv165[ebp], eax
	jmp	SHORT $LN11@GetMediaPo
$LN10@GetMediaPo:
	mov	DWORD PTR tv165[ebp], 0
$LN11@GetMediaPo:
; Line 120
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
; Line 121
	mov	DWORD PTR $T83368[ebp], -2147467262	; 80004002H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cObjectCreationLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83368[ebp]
	jmp	SHORT $LN4@GetMediaPo
$LN1@GetMediaPo:
; Line 123
	mov	esi, esp
	mov	ecx, DWORD PTR _ppv$[ebp]
	push	ecx
	mov	edx, DWORD PTR _riid$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83369[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cObjectCreationLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83369[ebp]
$LN4@GetMediaPo:
; Line 124
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@GetMediaPo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 88					; 00000058H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN18@GetMediaPo:
	DD	2
	DD	$LN17@GetMediaPo
$LN17@GetMediaPo:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN14@GetMediaPo
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN15@GetMediaPo
$LN15@GetMediaPo:
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	0
$LN14@GetMediaPo:
	DB	99					; 00000063H
	DB	79					; 0000004fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetMediaPositionInterface@CBaseRenderer@@UAEJABU_GUID@@PAPAX@Z$0:
	lea	ecx, DWORD PTR _cObjectCreationLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__unwindfunclet$?GetMediaPositionInterface@CBaseRenderer@@UAEJABU_GUID@@PAPAX@Z$1:
	mov	eax, DWORD PTR $T83358[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?GetMediaPositionInterface@CBaseRenderer@@UAEJABU_GUID@@PAPAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetMediaPositionInterface@CBaseRenderer@@UAEJABU_GUID@@PAPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetMediaPositionInterface@CBaseRenderer@@UAEJABU_GUID@@PAPAX@Z ENDP ; CBaseRenderer::GetMediaPositionInterface
EXTRN	?Lock@CCritSec@@QAEXXZ:PROC			; CCritSec::Lock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CAutoLock@@QAE@PAVCCritSec@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_plock$ = 8						; size = 4
??0CAutoLock@@QAE@PAVCCritSec@@@Z PROC			; CAutoLock::CAutoLock, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxutil.h
; Line 94
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _plock$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 97
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?Lock@CCritSec@@QAEXXZ			; CCritSec::Lock
; Line 98
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CAutoLock@@QAE@PAVCCritSec@@@Z ENDP			; CAutoLock::CAutoLock
_TEXT	ENDS
EXTRN	?Unlock@CCritSec@@QAEXXZ:PROC			; CCritSec::Unlock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CAutoLock@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CAutoLock@@QAE@XZ PROC				; CAutoLock::~CAutoLock, COMDAT
; _this$ = ecx
; Line 100
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Unlock@CCritSec@@QAEXXZ		; CCritSec::Unlock
; Line 102
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CAutoLock@@QAE@XZ ENDP				; CAutoLock::~CAutoLock
_TEXT	ENDS
PUBLIC	_==@8
EXTRN	?NonDelegatingQueryInterface@CBaseFilter@@UAGJABU_GUID@@PAPAX@Z:PROC ; CBaseFilter::NonDelegatingQueryInterface
EXTRN	_IID_IMediaSeeking:BYTE
EXTRN	_IID_IMediaPosition:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?NonDelegatingQueryInterface@CBaseRenderer@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?NonDelegatingQueryInterface@CBaseRenderer@@UAGJABU_GUID@@PAPAX@Z PROC ; CBaseRenderer::NonDelegatingQueryInterface, COMDAT
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.cpp
; Line 130
	push	ebp
	mov	ebp, esp
	push	esi
; Line 133
	push	OFFSET _IID_IMediaPosition
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	jne	SHORT $LN2@NonDelegat
	push	OFFSET _IID_IMediaSeeking
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN3@NonDelegat
$LN2@NonDelegat:
; Line 134
	mov	esi, esp
	mov	edx, DWORD PTR _ppv$[ebp]
	push	edx
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN4@NonDelegat
; Line 135
	jmp	SHORT $LN4@NonDelegat
$LN3@NonDelegat:
; Line 136
	mov	ecx, DWORD PTR _ppv$[ebp]
	push	ecx
	mov	edx, DWORD PTR _riid$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?NonDelegatingQueryInterface@CBaseFilter@@UAGJABU_GUID@@PAPAX@Z ; CBaseFilter::NonDelegatingQueryInterface
$LN4@NonDelegat:
; Line 138
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?NonDelegatingQueryInterface@CBaseRenderer@@UAGJABU_GUID@@PAPAX@Z ENDP ; CBaseRenderer::NonDelegatingQueryInterface
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
_TEXT	ENDS
PUBLIC	?Reset@CAMEvent@@QAEXXZ				; CAMEvent::Reset
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SourceThreadCanWait@CBaseRenderer@@UAEJH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bCanWait$ = 8						; size = 4
?SourceThreadCanWait@CBaseRenderer@@UAEJH@Z PROC	; CBaseRenderer::SourceThreadCanWait, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.cpp
; Line 148
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	cmp	DWORD PTR _bCanWait$[ebp], 1
	jne	SHORT $LN2@SourceThre
; Line 150
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Reset@CAMEvent@@QAEXXZ			; CAMEvent::Reset
; Line 151
	jmp	SHORT $LN1@SourceThre
$LN2@SourceThre:
; Line 152
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Set@CAMEvent@@QAEXXZ			; CAMEvent::Set
$LN1@SourceThre:
; Line 154
	xor	eax, eax
; Line 155
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SourceThreadCanWait@CBaseRenderer@@UAEJH@Z ENDP	; CBaseRenderer::SourceThreadCanWait
_TEXT	ENDS
EXTRN	__imp__ResetEvent@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Reset@CAMEvent@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Reset@CAMEvent@@QAEXXZ PROC				; CAMEvent::Reset, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxutil.h
; Line 129
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__ResetEvent@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@CAMEvent@@QAEXXZ ENDP				; CAMEvent::Reset
_TEXT	ENDS
PUBLIC	?Millisecs@CRefTime@@QAEJXZ			; CRefTime::Millisecs
PUBLIC	??0CRefTime@@QAE@_J@Z				; CRefTime::CRefTime
PUBLIC	??BCRefTime@@QBE_JXZ				; CRefTime::operator __int64
PUBLIC	??0CRefTime@@QAE@XZ				; CRefTime::CRefTime
PUBLIC	?IsFlushing@CBaseInputPin@@QAEHXZ		; CBaseInputPin::IsFlushing
PUBLIC	?Check@CAMEvent@@QAEHXZ				; CAMEvent::Check
PUBLIC	__$ArrayPad$
PUBLIC	?DisplayRendererState@CBaseRenderer@@QAEXXZ	; CBaseRenderer::DisplayRendererState
EXTRN	??1CDisp@@QAE@XZ:PROC				; CDisp::~CDisp
EXTRN	??0CDisp@@QAE@_JH@Z:PROC			; CDisp::CDisp
EXTRN	?DbgLogInfo@@YAXKKPB_WZZ:PROC			; DbgLogInfo
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.cpp
xdata$x	SEGMENT
__unwindtable$?DisplayRendererState@CBaseRenderer@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DisplayRendererState@CBaseRenderer@@QAEXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DisplayRendererState@CBaseRenderer@@QAEXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?DisplayRendererState@CBaseRenderer@@QAEXXZ$2
__ehfuncinfo$?DisplayRendererState@CBaseRenderer@@QAEXXZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?DisplayRendererState@CBaseRenderer@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?DisplayRendererState@CBaseRenderer@@QAEXXZ
_TEXT	SEGMENT
tv288 = -444						; size = 4
tv291 = -440						; size = 4
tv286 = -436						; size = 4
tv290 = -432						; size = 4
tv284 = -428						; size = 4
tv289 = -424						; size = 4
_Wait$ = -416						; size = 8
$T81661 = -404						; size = 104
_Offset$ = -296						; size = 8
_EndTime$ = -280					; size = 8
_StartTime$ = -264					; size = 8
_CurrentTime$ = -248					; size = 8
$T81652 = -236						; size = 104
_bFlushing$ = -132					; size = 4
$T81647 = -128						; size = 104
_bSignalled$ = -24					; size = 4
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?DisplayRendererState@CBaseRenderer@@QAEXXZ PROC	; CBaseRenderer::DisplayRendererState, COMDAT
; _this$ = ecx
; Line 166
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DisplayRendererState@CBaseRenderer@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 432				; 000001b0H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-444]
	mov	ecx, 108				; 0000006cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	push	OFFSET $SG81634
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 171
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	?Check@CAMEvent@@QAEHXZ			; CAMEvent::Check
	mov	DWORD PTR _bSignalled$[ebp], eax
; Line 172
	mov	eax, DWORD PTR _bSignalled$[ebp]
	push	eax
	push	OFFSET $SG81636
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 176
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	push	OFFSET $SG81637
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 178
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	push	ecx
	push	OFFSET $SG81638
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 180
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	push	eax
	push	OFFSET $SG81639
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 182
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	push	edx
	push	OFFSET $SG81640
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	push	OFFSET $SG81641
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 186
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112]
	push	eax
	push	OFFSET $SG81642
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 188
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	push	edx
	push	OFFSET $SG81643
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 190
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+200]
	push	ecx
	push	OFFSET $SG81644
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 195
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+216]
	push	eax
	push	OFFSET $SG81645
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 197
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+212]
	push	edx
	mov	eax, DWORD PTR [ecx+208]
	push	eax
	lea	ecx, DWORD PTR $T81647[ebp]
	call	??0CDisp@@QAE@_JH@Z			; CDisp::CDisp
	mov	DWORD PTR tv289[ebp], eax
	mov	ecx, DWORD PTR tv289[ebp]
	mov	DWORD PTR tv284[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, DWORD PTR tv284[ebp]
	sub	esp, 104				; 00000068H
	mov	ecx, 26					; 0000001aH
	mov	edi, esp
	rep movsd
	push	OFFSET $SG81648
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 116				; 00000074H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T81647[ebp]
	call	??1CDisp@@QAE@XZ			; CDisp::~CDisp
; Line 202
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+120]
	call	?IsFlushing@CBaseInputPin@@QAEHXZ	; CBaseInputPin::IsFlushing
	mov	DWORD PTR _bFlushing$[ebp], eax
; Line 203
	mov	eax, DWORD PTR _bFlushing$[ebp]
	push	eax
	push	OFFSET $SG81650
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 206
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	mov	eax, DWORD PTR [ecx+32]
	push	eax
	lea	ecx, DWORD PTR $T81652[ebp]
	call	??0CDisp@@QAE@_JH@Z			; CDisp::CDisp
	mov	DWORD PTR tv290[ebp], eax
	mov	ecx, DWORD PTR tv290[ebp]
	mov	DWORD PTR tv286[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	esi, DWORD PTR tv286[ebp]
	sub	esp, 104				; 00000068H
	mov	ecx, 26					; 0000001aH
	mov	edi, esp
	rep movsd
	push	OFFSET $SG81653
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 116				; 00000074H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T81652[ebp]
	call	??1CDisp@@QAE@XZ			; CDisp::~CDisp
; Line 209
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+28], 0
	jne	SHORT $LN2@DisplayRen
	jmp	$LN3@DisplayRen
$LN2@DisplayRen:
; Line 213
	lea	ecx, DWORD PTR _CurrentTime$[ebp]
	call	??0CRefTime@@QAE@XZ			; CRefTime::CRefTime
	lea	ecx, DWORD PTR _StartTime$[ebp]
	call	??0CRefTime@@QAE@XZ			; CRefTime::CRefTime
	lea	ecx, DWORD PTR _EndTime$[ebp]
	call	??0CRefTime@@QAE@XZ			; CRefTime::CRefTime
; Line 214
	mov	esi, esp
	lea	eax, DWORD PTR _CurrentTime$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 215
	lea	ecx, DWORD PTR _CurrentTime$[ebp]
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	esi, eax
	mov	edi, edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	sub	esi, eax
	sbb	edi, edx
	push	edi
	push	esi
	lea	ecx, DWORD PTR _Offset$[ebp]
	call	??0CRefTime@@QAE@_J@Z			; CRefTime::CRefTime
; Line 219
	push	1
	mov	ecx, DWORD PTR _CurrentTime$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _CurrentTime$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T81661[ebp]
	call	??0CDisp@@QAE@_JH@Z			; CDisp::CDisp
	mov	DWORD PTR tv291[ebp], eax
	mov	eax, DWORD PTR tv291[ebp]
	mov	DWORD PTR tv288[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	esi, DWORD PTR tv288[ebp]
	sub	esp, 104				; 00000068H
	mov	ecx, 26					; 0000001aH
	mov	edi, esp
	rep movsd
	push	OFFSET $SG81662
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 116				; 00000074H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T81661[ebp]
	call	??1CDisp@@QAE@XZ			; CDisp::~CDisp
; Line 221
	lea	ecx, DWORD PTR _Offset$[ebp]
	call	?Millisecs@CRefTime@@QAEJXZ		; CRefTime::Millisecs
	push	eax
	push	OFFSET $SG81663
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 225
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+108], 0
	jne	SHORT $LN1@DisplayRen
	jmp	$LN3@DisplayRen
$LN1@DisplayRen:
; Line 227
	mov	esi, esp
	lea	edx, DWORD PTR _EndTime$[ebp]
	push	edx
	lea	eax, DWORD PTR _StartTime$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 229
	lea	ecx, DWORD PTR _EndTime$[ebp]
	call	?Millisecs@CRefTime@@QAEJXZ		; CRefTime::Millisecs
	push	eax
	lea	ecx, DWORD PTR _StartTime$[ebp]
	call	?Millisecs@CRefTime@@QAEJXZ		; CRefTime::Millisecs
	push	eax
	push	OFFSET $SG81667
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 20					; 00000014H
; Line 232
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	esi, eax
	mov	edi, edx
	lea	ecx, DWORD PTR _StartTime$[ebp]
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	add	esi, eax
	adc	edi, edx
	lea	ecx, DWORD PTR _CurrentTime$[ebp]
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	sub	esi, eax
	sbb	edi, edx
	push	edi
	push	esi
	lea	ecx, DWORD PTR _Wait$[ebp]
	call	??0CRefTime@@QAE@_J@Z			; CRefTime::CRefTime
; Line 233
	lea	ecx, DWORD PTR _Wait$[ebp]
	call	?Millisecs@CRefTime@@QAEJXZ		; CRefTime::Millisecs
	push	eax
	push	OFFSET $SG81669
	push	1
	push	1
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
$LN3@DisplayRen:
; Line 234
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@DisplayRen
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 444				; 000001bcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN15@DisplayRen:
	DD	5
	DD	$LN14@DisplayRen
$LN14@DisplayRen:
	DD	-248					; ffffff08H
	DD	8
	DD	$LN8@DisplayRen
	DD	-264					; fffffef8H
	DD	8
	DD	$LN9@DisplayRen
	DD	-280					; fffffee8H
	DD	8
	DD	$LN10@DisplayRen
	DD	-296					; fffffed8H
	DD	8
	DD	$LN11@DisplayRen
	DD	-416					; fffffe60H
	DD	8
	DD	$LN12@DisplayRen
$LN12@DisplayRen:
	DB	87					; 00000057H
	DB	97					; 00000061H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
$LN11@DisplayRen:
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN10@DisplayRen:
	DB	69					; 00000045H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN9@DisplayRen:
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN8@DisplayRen:
	DB	67					; 00000043H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DisplayRendererState@CBaseRenderer@@QAEXXZ$0:
	lea	ecx, DWORD PTR $T81647[ebp]
	jmp	??1CDisp@@QAE@XZ			; CDisp::~CDisp
__unwindfunclet$?DisplayRendererState@CBaseRenderer@@QAEXXZ$1:
	lea	ecx, DWORD PTR $T81652[ebp]
	jmp	??1CDisp@@QAE@XZ			; CDisp::~CDisp
__unwindfunclet$?DisplayRendererState@CBaseRenderer@@QAEXXZ$2:
	lea	ecx, DWORD PTR $T81661[ebp]
	jmp	??1CDisp@@QAE@XZ			; CDisp::~CDisp
__ehhandler$?DisplayRendererState@CBaseRenderer@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-444]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DisplayRendererState@CBaseRenderer@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?DisplayRendererState@CBaseRenderer@@QAEXXZ ENDP	; CBaseRenderer::DisplayRendererState
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CRefTime@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CRefTime@@QAE@XZ PROC				; CRefTime::CRefTime, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\reftime.h
; Line 59
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CRefTime@@QAE@XZ ENDP				; CRefTime::CRefTime
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CRefTime@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rt$ = 8						; size = 8
??0CRefTime@@QAE@_J@Z PROC				; CRefTime::CRefTime, COMDAT
; _this$ = ecx
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _rt$[ebp+4]
	mov	DWORD PTR [eax+4], edx
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0CRefTime@@QAE@_J@Z ENDP				; CRefTime::CRefTime
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BCRefTime@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCRefTime@@QBE_JXZ PROC				; CRefTime::operator __int64, COMDAT
; _this$ = ecx
; Line 76
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
; Line 78
	mov	esp, ebp
	pop	ebp
	ret	0
??BCRefTime@@QBE_JXZ ENDP				; CRefTime::operator __int64
_TEXT	ENDS
EXTRN	__alldiv:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Millisecs@CRefTime@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Millisecs@CRefTime@@QAEJXZ PROC			; CRefTime::Millisecs, COMDAT
; _this$ = ecx
; Line 103
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	push	0
	push	10000					; 00002710H
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	__alldiv
; Line 105
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Millisecs@CRefTime@@QAEJXZ ENDP			; CRefTime::Millisecs
_TEXT	ENDS
PUBLIC	?Wait@CAMEvent@@QAEHK@Z				; CAMEvent::Wait
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Check@CAMEvent@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Check@CAMEvent@@QAEHXZ PROC				; CAMEvent::Check, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxutil.h
; Line 130
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Wait@CAMEvent@@QAEHK@Z			; CAMEvent::Wait
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Check@CAMEvent@@QAEHXZ ENDP				; CAMEvent::Check
_TEXT	ENDS
EXTRN	__imp__WaitForSingleObject@8:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Wait@CAMEvent@@QAEHK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_dwTimeout$ = 8						; size = 4
?Wait@CAMEvent@@QAEHK@Z PROC				; CAMEvent::Wait, COMDAT
; _this$ = ecx
; Line 126
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 127
	mov	esi, esp
	mov	eax, DWORD PTR _dwTimeout$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__WaitForSingleObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 128
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Wait@CAMEvent@@QAEHK@Z ENDP				; CAMEvent::Wait
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsFlushing@CBaseInputPin@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsFlushing@CBaseInputPin@@QAEHXZ PROC			; CBaseInputPin::IsFlushing, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\amfilter.h
; Line 912
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 913
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+169]
; Line 914
	mov	esp, ebp
	pop	ebp
	ret	0
?IsFlushing@CBaseInputPin@@QAEHXZ ENDP			; CBaseInputPin::IsFlushing
_TEXT	ENDS
PUBLIC	?SignalTimerFired@CBaseRenderer@@QAEXXZ		; CBaseRenderer::SignalTimerFired
PUBLIC	??BCAMEvent@@QBEPAXXZ				; CAMEvent::operator void *
EXTRN	__imp__WaitForMultipleObjects@16:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?WaitForRenderTime@CBaseRenderer@@UAEJXZ
_TEXT	SEGMENT
_Result$ = -24						; size = 4
_WaitObjects$ = -16					; size = 8
_this$ = -4						; size = 4
?WaitForRenderTime@CBaseRenderer@@UAEJXZ PROC		; CBaseRenderer::WaitForRenderTime, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.cpp
; Line 247
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 248
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??BCAMEvent@@QBEPAXXZ			; CAMEvent::operator void *
	mov	DWORD PTR _WaitObjects$[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??BCAMEvent@@QBEPAXXZ			; CAMEvent::operator void *
	mov	DWORD PTR _WaitObjects$[ebp+4], eax
; Line 249
	mov	DWORD PTR _Result$[ebp], 258		; 00000102H
; Line 253
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+72]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@WaitForRen:
; Line 254
	cmp	DWORD PTR _Result$[ebp], 258		; 00000102H
	jne	SHORT $LN3@WaitForRen
; Line 255
	mov	esi, esp
	push	10000					; 00002710H
	push	0
	lea	ecx, DWORD PTR _WaitObjects$[ebp]
	push	ecx
	push	2
	call	DWORD PTR __imp__WaitForMultipleObjects@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _Result$[ebp], eax
; Line 258
	cmp	DWORD PTR _Result$[ebp], 258		; 00000102H
	jne	SHORT $LN2@WaitForRen
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DisplayRendererState@CBaseRenderer@@QAEXXZ ; CBaseRenderer::DisplayRendererState
$LN2@WaitForRen:
; Line 261
	jmp	SHORT $LN4@WaitForRen
$LN3@WaitForRen:
; Line 262
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+76]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 266
	cmp	DWORD PTR _Result$[ebp], 0
	jne	SHORT $LN1@WaitForRen
; Line 267
	mov	eax, -2147220957			; 80040223H
	jmp	SHORT $LN5@WaitForRen
$LN1@WaitForRen:
; Line 270
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SignalTimerFired@CBaseRenderer@@QAEXXZ	; CBaseRenderer::SignalTimerFired
; Line 271
	xor	eax, eax
$LN5@WaitForRen:
; Line 272
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@WaitForRen
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@WaitForRen:
	DD	1
	DD	$LN8@WaitForRen
$LN8@WaitForRen:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN7@WaitForRen
$LN7@WaitForRen:
	DB	87					; 00000057H
	DB	97					; 00000061H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	79					; 0000004fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
?WaitForRenderTime@CBaseRenderer@@UAEJXZ ENDP		; CBaseRenderer::WaitForRenderTime
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BCAMEvent@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCAMEvent@@QBEPAXXZ PROC				; CAMEvent::operator void *, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxutil.h
; Line 123
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BCAMEvent@@QBEPAXXZ ENDP				; CAMEvent::operator void *
_TEXT	ENDS
PUBLIC	?WaitForReceiveToComplete@CBaseRenderer@@QAEXXZ	; CBaseRenderer::WaitForReceiveToComplete
EXTRN	__imp__PostThreadMessageW@16:PROC
EXTRN	__imp__GetCurrentThreadId@0:PROC
EXTRN	__imp__GetQueueStatus@4:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__PeekMessageW@20:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?WaitForReceiveToComplete@CBaseRenderer@@QAEXXZ
_TEXT	SEGMENT
_msg$81689 = -36					; size = 28
_this$ = -4						; size = 4
?WaitForReceiveToComplete@CBaseRenderer@@QAEXXZ PROC	; CBaseRenderer::WaitForReceiveToComplete, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.cpp
; Line 283
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN4@WaitForRec:
; Line 285
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+204], 0
	jne	SHORT $LN2@WaitForRec
; Line 286
	jmp	SHORT $LN3@WaitForRec
$LN2@WaitForRec:
; Line 291
	mov	esi, esp
	push	0
	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR _msg$81689[ebp]
	push	ecx
	call	DWORD PTR __imp__PeekMessageW@20
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 293
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__Sleep@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 294
	jmp	SHORT $LN4@WaitForRec
$LN3@WaitForRec:
; Line 300
	mov	esi, esp
	push	8
	call	DWORD PTR __imp__GetQueueStatus@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	shr	eax, 16					; 00000010H
	and	eax, 65535				; 0000ffffH
	movzx	edx, ax
	and	edx, 8
	je	SHORT $LN5@WaitForRec
; Line 302
	mov	esi, esp
	push	0
	push	0
	push	0
	mov	edi, esp
	call	DWORD PTR __imp__GetCurrentThreadId@0
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__PostThreadMessageW@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@WaitForRec:
; Line 304
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@WaitForRec
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@WaitForRec:
	DD	1
	DD	$LN8@WaitForRec
$LN8@WaitForRec:
	DD	-36					; ffffffdcH
	DD	28					; 0000001cH
	DD	$LN7@WaitForRec
$LN7@WaitForRec:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
?WaitForReceiveToComplete@CBaseRenderer@@QAEXXZ ENDP	; CBaseRenderer::WaitForReceiveToComplete
_TEXT	ENDS
PUBLIC	?GetRealState@CBaseRenderer@@QAE?AW4_FilterState@@XZ ; CBaseRenderer::GetRealState
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetRealState@CBaseRenderer@@QAE?AW4_FilterState@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetRealState@CBaseRenderer@@QAE?AW4_FilterState@@XZ PROC ; CBaseRenderer::GetRealState, COMDAT
; _this$ = ecx
; Line 323
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 324
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
; Line 325
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRealState@CBaseRenderer@@QAE?AW4_FilterState@@XZ ENDP ; CBaseRenderer::GetRealState
_TEXT	ENDS
EXTRN	?WaitDispatchingMessages@@YGKPAXKPAUHWND__@@I0@Z:PROC ; WaitDispatchingMessages
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetState@CBaseRenderer@@UAGJKPAW4_FilterState@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_dwMSecs$ = 12						; size = 4
_State$ = 16						; size = 4
?GetState@CBaseRenderer@@UAGJKPAW4_FilterState@@@Z PROC	; CBaseRenderer::GetState, COMDAT
; Line 333
	push	ebp
	mov	ebp, esp
; Line 334
	cmp	DWORD PTR _State$[ebp], 0
	jne	SHORT $LN2@GetState
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN3@GetState
$LN2@GetState:
; Line 336
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _dwMSecs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??BCAMEvent@@QBEPAXXZ			; CAMEvent::operator void *
	push	eax
	call	?WaitDispatchingMessages@@YGKPAXKPAUHWND__@@I0@Z ; WaitDispatchingMessages
	cmp	eax, 258				; 00000102H
	jne	SHORT $LN1@GetState
; Line 337
	mov	ecx, DWORD PTR _State$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx], eax
; Line 338
	mov	eax, 262711				; 00040237H
	jmp	SHORT $LN3@GetState
$LN1@GetState:
; Line 340
	mov	ecx, DWORD PTR _State$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx], eax
; Line 341
	xor	eax, eax
$LN3@GetState:
; Line 342
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?GetState@CBaseRenderer@@UAGJKPAW4_FilterState@@@Z ENDP	; CBaseRenderer::GetState
_TEXT	ENDS
PUBLIC	?NotReady@CBaseRenderer@@QAEXXZ			; CBaseRenderer::NotReady
PUBLIC	?IsEndOfStream@CBaseRenderer@@QAEHXZ		; CBaseRenderer::IsEndOfStream
PUBLIC	?IsConnected@CBasePin@@QAEHXZ			; CBasePin::IsConnected
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CompleteStateChange@CBaseRenderer@@UAEJW4_FilterState@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_OldState$ = 8						; size = 4
?CompleteStateChange@CBaseRenderer@@UAEJW4_FilterState@@@Z PROC ; CBaseRenderer::CompleteStateChange, COMDAT
; _this$ = ecx
; Line 353
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 356
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	jne	SHORT $LN4@CompleteSt
; Line 357
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Ready@CBaseRenderer@@QAEXXZ		; CBaseRenderer::Ready
; Line 358
	xor	eax, eax
	jmp	SHORT $LN5@CompleteSt
$LN4@CompleteSt:
; Line 363
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsEndOfStream@CBaseRenderer@@QAEHXZ	; CBaseRenderer::IsEndOfStream
	cmp	eax, 1
	jne	SHORT $LN3@CompleteSt
; Line 364
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Ready@CBaseRenderer@@QAEXXZ		; CBaseRenderer::Ready
; Line 365
	xor	eax, eax
	jmp	SHORT $LN5@CompleteSt
$LN3@CompleteSt:
; Line 370
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+160]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN2@CompleteSt
; Line 371
	cmp	DWORD PTR _OldState$[ebp], 0
	je	SHORT $LN2@CompleteSt
; Line 372
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Ready@CBaseRenderer@@QAEXXZ		; CBaseRenderer::Ready
; Line 373
	xor	eax, eax
	jmp	SHORT $LN5@CompleteSt
$LN2@CompleteSt:
; Line 376
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NotReady@CBaseRenderer@@QAEXXZ		; CBaseRenderer::NotReady
; Line 377
	mov	eax, 1
$LN5@CompleteSt:
; Line 378
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CompleteStateChange@CBaseRenderer@@UAEJW4_FilterState@@@Z ENDP ; CBaseRenderer::CompleteStateChange
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsConnected@CBasePin@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsConnected@CBasePin@@QAEHXZ PROC			; CBasePin::IsConnected, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\amfilter.h
; Line 499
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+28], 0
	setne	cl
	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?IsConnected@CBasePin@@QAEHXZ ENDP			; CBasePin::IsConnected
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEndOfStream@CBaseRenderer@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEndOfStream@CBaseRenderer@@QAEHXZ PROC		; CBaseRenderer::IsEndOfStream, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.h
; Line 122
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+112]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEndOfStream@CBaseRenderer@@QAEHXZ ENDP		; CBaseRenderer::IsEndOfStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?NotReady@CBaseRenderer@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?NotReady@CBaseRenderer@@QAEXXZ PROC			; CBaseRenderer::NotReady, COMDAT
; _this$ = ecx
; Line 132
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	?Reset@CAMEvent@@QAEXXZ			; CAMEvent::Reset
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?NotReady@CBaseRenderer@@QAEXXZ ENDP			; CBaseRenderer::NotReady
_TEXT	ENDS
PUBLIC	?SetRepaintStatus@CBaseRenderer@@QAEXH@Z	; CBaseRenderer::SetRepaintStatus
PUBLIC	?Allocator@CRendererInputPin@@QBEPAUIMemAllocator@@XZ ; CRendererInputPin::Allocator
EXTRN	?Stop@CBaseFilter@@UAGJXZ:PROC			; CBaseFilter::Stop
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.cpp
xdata$x	SEGMENT
__unwindtable$?Stop@CBaseRenderer@@UAGJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Stop@CBaseRenderer@@UAGJXZ$0
__ehfuncinfo$?Stop@CBaseRenderer@@UAGJXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Stop@CBaseRenderer@@UAGJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Stop@CBaseRenderer@@UAGJXZ
_TEXT	SEGMENT
tv144 = -40						; size = 4
$T83459 = -36						; size = 4
$T83458 = -32						; size = 4
$T83457 = -28						; size = 4
_cRendererLock$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?Stop@CBaseRenderer@@UAGJXZ PROC			; CBaseRenderer::Stop, COMDAT
; Line 390
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Stop@CBaseRenderer@@UAGJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 391
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 108				; 0000006cH
	push	eax
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 395
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jne	SHORT $LN6@Stop
; Line 396
	mov	DWORD PTR $T83457[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83457[ebp]
	jmp	$LN7@Stop
$LN6@Stop:
; Line 401
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+104]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	jne	SHORT $LN5@Stop
; Line 402
	push	OFFSET $SG81724
	push	5
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 403
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 404
	mov	DWORD PTR $T83458[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83458[ebp]
	jmp	$LN7@Stop
$LN5@Stop:
; Line 407
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?Stop@CBaseFilter@@UAGJXZ		; CBaseFilter::Stop
; Line 413
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+104]
	call	?Allocator@CRendererInputPin@@QBEPAUIMemAllocator@@XZ ; CRendererInputPin::Allocator
	test	eax, eax
	je	SHORT $LN4@Stop
; Line 414
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	call	?Allocator@CRendererInputPin@@QBEPAUIMemAllocator@@XZ ; CRendererInputPin::Allocator
	mov	DWORD PTR tv144[ebp], eax
	mov	ecx, DWORD PTR tv144[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR tv144[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@Stop:
; Line 419
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?SetRepaintStatus@CBaseRenderer@@QAEXH@Z ; CBaseRenderer::SetRepaintStatus
; Line 420
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-16]
	mov	esi, esp
	mov	edx, DWORD PTR [eax+128]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 421
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax-16]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 422
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-16]
	mov	esi, esp
	mov	edx, DWORD PTR [eax+100]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 423
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax-16]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 426
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-16]
	mov	esi, esp
	mov	edx, DWORD PTR [eax+108]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	je	SHORT $LN3@Stop
	push	426					; 000001aaH
	push	OFFSET $SG81729
	push	OFFSET $SG81730
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN3@Stop:
; Line 427
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??BCAMEvent@@QBEPAXXZ			; CAMEvent::operator void *
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 258				; 00000102H
	je	SHORT $LN2@Stop
	push	427					; 000001abH
	push	OFFSET $SG81733
	push	OFFSET $SG81734
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@Stop:
; Line 428
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+200], 0
	je	SHORT $LN1@Stop
	push	428					; 000001acH
	push	OFFSET $SG81736
	push	OFFSET $SG81737
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@Stop:
; Line 430
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?Ready@CBaseRenderer@@QAEXXZ		; CBaseRenderer::Ready
; Line 431
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?WaitForReceiveToComplete@CBaseRenderer@@QAEXXZ ; CBaseRenderer::WaitForReceiveToComplete
; Line 432
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], 0
; Line 434
	mov	DWORD PTR $T83459[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83459[ebp]
$LN7@Stop:
; Line 435
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Stop
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN13@Stop:
	DD	1
	DD	$LN12@Stop
$LN12@Stop:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN10@Stop
$LN10@Stop:
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Stop@CBaseRenderer@@UAGJXZ$0:
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?Stop@CBaseRenderer@@UAGJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Stop@CBaseRenderer@@UAGJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Stop@CBaseRenderer@@UAGJXZ ENDP			; CBaseRenderer::Stop
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Allocator@CRendererInputPin@@QBEPAUIMemAllocator@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Allocator@CRendererInputPin@@QBEPAUIMemAllocator@@XZ PROC ; CRendererInputPin::Allocator, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.h
; Line 53
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 54
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+164]
; Line 55
	mov	esp, ebp
	pop	ebp
	ret	0
?Allocator@CRendererInputPin@@QBEPAUIMemAllocator@@XZ ENDP ; CRendererInputPin::Allocator
_TEXT	ENDS
PUBLIC	?ResetEndOfStreamTimer@CBaseRenderer@@QAEXXZ	; CBaseRenderer::ResetEndOfStreamTimer
EXTRN	?Pause@CBaseFilter@@UAGJXZ:PROC			; CBaseFilter::Pause
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.cpp
xdata$x	SEGMENT
__unwindtable$?Pause@CBaseRenderer@@UAGJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Pause@CBaseRenderer@@UAGJXZ$0
__ehfuncinfo$?Pause@CBaseRenderer@@UAGJXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Pause@CBaseRenderer@@UAGJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Pause@CBaseRenderer@@UAGJXZ
_TEXT	SEGMENT
tv202 = -52						; size = 4
$T83477 = -48						; size = 4
$T83476 = -44						; size = 4
$T83475 = -40						; size = 4
$T83474 = -36						; size = 4
_hr$ = -32						; size = 4
_OldState$ = -28					; size = 4
_cRendererLock$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?Pause@CBaseRenderer@@UAGJXZ PROC			; CBaseRenderer::Pause, COMDAT
; Line 447
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Pause@CBaseRenderer@@UAGJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 448
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 108				; 0000006cH
	push	eax
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 449
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _OldState$[ebp], edx
; Line 450
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	call	?IsFlushing@CBaseInputPin@@QAEHXZ	; CBaseInputPin::IsFlushing
	test	eax, eax
	je	SHORT $LN10@Pause
	push	450					; 000001c2H
	push	OFFSET $SG81745
	push	OFFSET $SG81746
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN10@Pause:
; Line 454
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 1
	jne	SHORT $LN9@Pause
; Line 455
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-16]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83474[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83474[ebp]
	jmp	$LN11@Pause
$LN9@Pause:
; Line 460
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	jne	SHORT $LN8@Pause
; Line 461
	push	OFFSET $SG81750
	push	5
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 462
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 1
; Line 463
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-16]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83475[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83475[ebp]
	jmp	$LN11@Pause
$LN8@Pause:
; Line 468
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?Pause@CBaseFilter@@UAGJXZ		; CBaseFilter::Pause
	mov	DWORD PTR _hr$[ebp], eax
; Line 469
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN7@Pause
; Line 470
	push	OFFSET $SG81755
	push	5
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 471
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T83476[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83476[ebp]
	jmp	$LN11@Pause
$LN7@Pause:
; Line 476
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?SetRepaintStatus@CBaseRenderer@@QAEXH@Z ; CBaseRenderer::SetRepaintStatus
; Line 477
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-16]
	mov	esi, esp
	mov	edx, DWORD PTR [eax+128]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 478
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax-16]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 479
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-16]
	mov	esi, esp
	mov	edx, DWORD PTR [eax+108]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 480
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?ResetEndOfStreamTimer@CBaseRenderer@@QAEXXZ ; CBaseRenderer::ResetEndOfStreamTimer
; Line 486
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	call	?Allocator@CRendererInputPin@@QBEPAUIMemAllocator@@XZ ; CRendererInputPin::Allocator
	test	eax, eax
	je	SHORT $LN6@Pause
; Line 487
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+104]
	call	?Allocator@CRendererInputPin@@QBEPAUIMemAllocator@@XZ ; CRendererInputPin::Allocator
	mov	DWORD PTR tv202[ebp], eax
	mov	edx, DWORD PTR tv202[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv202[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@Pause:
; Line 491
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax-16]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	je	SHORT $LN5@Pause
	push	491					; 000001ebH
	push	OFFSET $SG81760
	push	OFFSET $SG81761
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN5@Pause:
; Line 492
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??BCAMEvent@@QBEPAXXZ			; CAMEvent::operator void *
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 258				; 00000102H
	je	SHORT $LN4@Pause
	push	492					; 000001ecH
	push	OFFSET $SG81764
	push	OFFSET $SG81765
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN4@Pause:
; Line 493
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+200], 0
	je	SHORT $LN3@Pause
	push	493					; 000001edH
	push	OFFSET $SG81767
	push	OFFSET $SG81768
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN3@Pause:
; Line 494
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+104]
	call	?IsFlushing@CBaseInputPin@@QAEHXZ	; CBaseInputPin::IsFlushing
	test	eax, eax
	je	SHORT $LN2@Pause
	push	494					; 000001eeH
	push	OFFSET $SG81770
	push	OFFSET $SG81771
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@Pause:
; Line 502
	cmp	DWORD PTR _OldState$[ebp], 0
	jne	SHORT $LN1@Pause
; Line 503
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
; Line 504
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-16]
	mov	esi, esp
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Pause:
; Line 506
	mov	esi, esp
	mov	eax, DWORD PTR _OldState$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-16]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83477[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83477[ebp]
$LN11@Pause:
; Line 507
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@Pause
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN17@Pause:
	DD	1
	DD	$LN16@Pause
$LN16@Pause:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN14@Pause
$LN14@Pause:
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Pause@CBaseRenderer@@UAGJXZ$0:
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?Pause@CBaseRenderer@@UAGJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Pause@CBaseRenderer@@UAGJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Pause@CBaseRenderer@@UAGJXZ ENDP			; CBaseRenderer::Pause
EXTRN	?Run@CBaseFilter@@UAGJ_J@Z:PROC			; CBaseFilter::Run
EXTRN	?NotifyEvent@CBaseFilter@@QAEJJJJ@Z:PROC	; CBaseFilter::NotifyEvent
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Run@CBaseRenderer@@UAGJ_J@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Run@CBaseRenderer@@UAGJ_J@Z$0
__ehfuncinfo$?Run@CBaseRenderer@@UAGJ_J@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Run@CBaseRenderer@@UAGJ_J@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Run@CBaseRenderer@@UAGJ_J@Z
_TEXT	SEGMENT
tv233 = -56						; size = 4
tv136 = -52						; size = 4
$T83495 = -48						; size = 4
$T83494 = -44						; size = 4
$T83493 = -40						; size = 4
$T83490 = -36						; size = 4
_hr$ = -32						; size = 4
_OldState$ = -28					; size = 4
_cRendererLock$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_StartTime$ = 12					; size = 8
?Run@CBaseRenderer@@UAGJ_J@Z PROC			; CBaseRenderer::Run, COMDAT
; Line 520
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Run@CBaseRenderer@@UAGJ_J@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 521
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 108				; 0000006cH
	push	eax
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 522
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _OldState$[ebp], edx
; Line 526
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 2
	jne	SHORT $LN10@Run
; Line 527
	mov	DWORD PTR $T83490[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83490[ebp]
	jmp	$LN11@Run
$LN10@Run:
; Line 532
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+104]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	jne	SHORT $LN9@Run
; Line 533
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 16					; 00000010H
	je	SHORT $LN13@Run
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv136[ebp], eax
	jmp	SHORT $LN14@Run
$LN13@Run:
	mov	DWORD PTR tv136[ebp], 0
$LN14@Run:
	mov	ecx, DWORD PTR tv136[ebp]
	push	ecx
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?NotifyEvent@CBaseFilter@@QAEJJJJ@Z	; CBaseFilter::NotifyEvent
; Line 534
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 2
; Line 535
	mov	DWORD PTR $T83493[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83493[ebp]
	jmp	$LN11@Run
$LN9@Run:
; Line 538
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?Ready@CBaseRenderer@@QAEXXZ		; CBaseRenderer::Ready
; Line 542
	mov	eax, DWORD PTR _StartTime$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _StartTime$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?Run@CBaseFilter@@UAGJ_J@Z		; CBaseFilter::Run
	mov	DWORD PTR _hr$[ebp], eax
; Line 543
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN8@Run
; Line 544
	push	OFFSET $SG81790
	push	5
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 545
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T83494[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83494[ebp]
	jmp	$LN11@Run
$LN8@Run:
; Line 549
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+104]
	call	?IsFlushing@CBaseInputPin@@QAEHXZ	; CBaseInputPin::IsFlushing
	test	eax, eax
	je	SHORT $LN7@Run
	push	549					; 00000225H
	push	OFFSET $SG81793
	push	OFFSET $SG81794
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN7@Run:
; Line 550
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-16]
	mov	edx, DWORD PTR [eax+40]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 551
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?SetRepaintStatus@CBaseRenderer@@QAEXH@Z ; CBaseRenderer::SetRepaintStatus
; Line 554
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax-16]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	je	SHORT $LN6@Run
	push	554					; 0000022aH
	push	OFFSET $SG81797
	push	OFFSET $SG81798
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN6@Run:
; Line 555
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??BCAMEvent@@QBEPAXXZ			; CAMEvent::operator void *
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 258				; 00000102H
	je	SHORT $LN5@Run
	push	555					; 0000022bH
	push	OFFSET $SG81801
	push	OFFSET $SG81802
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN5@Run:
; Line 556
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+200], 0
	je	SHORT $LN4@Run
	push	556					; 0000022cH
	push	OFFSET $SG81804
	push	OFFSET $SG81805
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN4@Run:
; Line 557
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+104]
	call	?IsFlushing@CBaseInputPin@@QAEHXZ	; CBaseInputPin::IsFlushing
	test	eax, eax
	je	SHORT $LN3@Run
	push	557					; 0000022dH
	push	OFFSET $SG81807
	push	OFFSET $SG81808
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN3@Run:
; Line 563
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	call	?Allocator@CRendererInputPin@@QBEPAUIMemAllocator@@XZ ; CRendererInputPin::Allocator
	test	eax, eax
	je	SHORT $LN2@Run
; Line 564
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+104]
	call	?Allocator@CRendererInputPin@@QBEPAUIMemAllocator@@XZ ; CRendererInputPin::Allocator
	mov	DWORD PTR tv233[ebp], eax
	mov	edx, DWORD PTR tv233[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv233[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Run:
; Line 573
	cmp	DWORD PTR _OldState$[ebp], 0
	jne	SHORT $LN1@Run
; Line 574
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
; Line 575
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-16]
	mov	esi, esp
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Run:
; Line 577
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax-16]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+124]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83495[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83495[ebp]
$LN11@Run:
; Line 578
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@Run
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN19@Run:
	DD	1
	DD	$LN18@Run
$LN18@Run:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN16@Run
$LN16@Run:
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Run@CBaseRenderer@@UAGJ_J@Z$0:
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?Run@CBaseRenderer@@UAGJ_J@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Run@CBaseRenderer@@UAGJ_J@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Run@CBaseRenderer@@UAGJ_J@Z ENDP			; CBaseRenderer::Run
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetPinCount@CBaseRenderer@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPinCount@CBaseRenderer@@UAEHXZ PROC			; CBaseRenderer::GetPinCount, COMDAT
; _this$ = ecx
; Line 584
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 585
	mov	eax, 1
; Line 586
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPinCount@CBaseRenderer@@UAEHXZ ENDP			; CBaseRenderer::GetPinCount
_TEXT	ENDS
PUBLIC	??0CRendererInputPin@@QAE@PAVCBaseRenderer@@PAJPB_W@Z ; CRendererInputPin::CRendererInputPin
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetPin@CBaseRenderer@@UAEPAVCBasePin@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPin@CBaseRenderer@@UAEPAVCBasePin@@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetPin@CBaseRenderer@@UAEPAVCBasePin@@H@Z$1
__ehfuncinfo$?GetPin@CBaseRenderer@@UAEPAVCBasePin@@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetPin@CBaseRenderer@@UAEPAVCBasePin@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?GetPin@CBaseRenderer@@UAEPAVCBasePin@@H@Z
_TEXT	SEGMENT
tv133 = -80						; size = 4
tv87 = -76						; size = 4
$T83521 = -72						; size = 4
$T83520 = -68						; size = 4
$T83517 = -64						; size = 4
$T83516 = -60						; size = 4
$T83515 = -56						; size = 4
$T83512 = -52						; size = 4
$T83511 = -48						; size = 4
$T83510 = -44						; size = 4
_hr$81826 = -36						; size = 4
_cObjectCreationLock$ = -24				; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_n$ = 8							; size = 4
?GetPin@CBaseRenderer@@UAEPAVCBasePin@@H@Z PROC		; CBaseRenderer::GetPin, COMDAT
; _this$ = ecx
; Line 592
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetPin@CBaseRenderer@@UAEPAVCBasePin@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-80]
	mov	ecx, 17					; 00000011H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 593
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 220				; 000000dcH
	push	eax
	lea	ecx, DWORD PTR _cObjectCreationLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 596
	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN5@GetPin
	push	596					; 00000254H
	push	OFFSET $SG81821
	push	OFFSET $SG81822
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN5@GetPin:
; Line 598
	cmp	DWORD PTR _n$[ebp], 0
	je	SHORT $LN4@GetPin
; Line 599
	mov	DWORD PTR $T83510[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cObjectCreationLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83510[ebp]
	jmp	$LN6@GetPin
$LN4@GetPin:
; Line 604
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+120], 0
	jne	$LN3@GetPin
; Line 609
	mov	DWORD PTR _hr$81826[ebp], 0
; Line 611
	push	232					; 000000e8H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T83512[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T83512[ebp], 0
	je	SHORT $LN8@GetPin
	push	OFFSET $SG81831
	lea	edx, DWORD PTR _hr$81826[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T83512[ebp]
	call	??0CRendererInputPin@@QAE@PAVCBaseRenderer@@PAJPB_W@Z ; CRendererInputPin::CRendererInputPin
	mov	DWORD PTR tv87[ebp], eax
	jmp	SHORT $LN9@GetPin
$LN8@GetPin:
	mov	DWORD PTR tv87[ebp], 0
$LN9@GetPin:
	mov	ecx, DWORD PTR tv87[ebp]
	mov	DWORD PTR $T83511[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T83511[ebp]
	mov	DWORD PTR [edx+120], eax
; Line 612
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+120], 0
	jne	SHORT $LN2@GetPin
; Line 613
	mov	DWORD PTR $T83515[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cObjectCreationLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83515[ebp]
	jmp	SHORT $LN6@GetPin
$LN2@GetPin:
; Line 616
	cmp	DWORD PTR _hr$81826[ebp], 0
	jge	SHORT $LN3@GetPin
; Line 617
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	DWORD PTR $T83517[ebp], eax
	mov	ecx, DWORD PTR $T83517[ebp]
	mov	DWORD PTR $T83516[ebp], ecx
	cmp	DWORD PTR $T83516[ebp], 0
	je	SHORT $LN10@GetPin
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T83516[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T83516[ebp]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN11@GetPin
$LN10@GetPin:
	mov	DWORD PTR tv133[ebp], 0
$LN11@GetPin:
; Line 618
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 0
; Line 619
	mov	DWORD PTR $T83520[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cObjectCreationLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83520[ebp]
	jmp	SHORT $LN6@GetPin
$LN3@GetPin:
; Line 622
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR $T83521[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cObjectCreationLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83521[ebp]
$LN6@GetPin:
; Line 623
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@GetPin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 80					; 00000050H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN18@GetPin:
	DD	2
	DD	$LN17@GetPin
$LN17@GetPin:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN14@GetPin
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN15@GetPin
$LN15@GetPin:
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	0
$LN14@GetPin:
	DB	99					; 00000063H
	DB	79					; 0000004fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetPin@CBaseRenderer@@UAEPAVCBasePin@@H@Z$0:
	lea	ecx, DWORD PTR _cObjectCreationLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__unwindfunclet$?GetPin@CBaseRenderer@@UAEPAVCBasePin@@H@Z$1:
	mov	eax, DWORD PTR $T83512[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?GetPin@CBaseRenderer@@UAEPAVCBasePin@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetPin@CBaseRenderer@@UAEPAVCBasePin@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetPin@CBaseRenderer@@UAEPAVCBasePin@@H@Z ENDP		; CBaseRenderer::GetPin
EXTRN	__imp__lstrcmpW@8:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?FindPin@CBaseRenderer@@UAGJPB_WPAPAUIPin@@@Z
_TEXT	SEGMENT
tv84 = -8						; size = 4
tv85 = -4						; size = 4
_this$ = 8						; size = 4
_Id$ = 12						; size = 4
_ppPin$ = 16						; size = 4
?FindPin@CBaseRenderer@@UAGJPB_WPAPAUIPin@@@Z PROC	; CBaseRenderer::FindPin, COMDAT
; Line 629
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 630
	cmp	DWORD PTR _ppPin$[ebp], 0
	jne	SHORT $LN4@FindPin
	mov	eax, -2147467261			; 80004003H
	jmp	$LN5@FindPin
$LN4@FindPin:
; Line 632
	mov	esi, esp
	push	OFFSET $SG81848
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrcmpW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN3@FindPin
; Line 633
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-16]
	mov	edx, DWORD PTR [eax+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv85[ebp], eax
	cmp	DWORD PTR tv85[ebp], 0
	je	SHORT $LN7@FindPin
	mov	eax, DWORD PTR tv85[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN8@FindPin
$LN7@FindPin:
	mov	DWORD PTR tv84[ebp], 0
$LN8@FindPin:
	mov	ecx, DWORD PTR _ppPin$[ebp]
	mov	edx, DWORD PTR tv84[ebp]
	mov	DWORD PTR [ecx], edx
; Line 634
	mov	eax, DWORD PTR _ppPin$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN2@FindPin
	push	634					; 0000027aH
	push	OFFSET $SG81850
	push	OFFSET $SG81851
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@FindPin:
; Line 635
	mov	ecx, DWORD PTR _ppPin$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _ppPin$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 636
	jmp	SHORT $LN1@FindPin
$LN3@FindPin:
; Line 637
	mov	ecx, DWORD PTR _ppPin$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 638
	mov	eax, -2147220970			; 80040216H
	jmp	SHORT $LN5@FindPin
$LN1@FindPin:
; Line 640
	xor	eax, eax
$LN5@FindPin:
; Line 641
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?FindPin@CBaseRenderer@@UAGJPB_WPAPAUIPin@@@Z ENDP	; CBaseRenderer::FindPin
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?EndOfStream@CBaseRenderer@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EndOfStream@CBaseRenderer@@UAEJXZ PROC			; CBaseRenderer::EndOfStream, COMDAT
; _this$ = ecx
; Line 650
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 653
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	jne	SHORT $LN3@EndOfStrea
; Line 654
	xor	eax, eax
	jmp	SHORT $LN4@EndOfStrea
$LN3@EndOfStrea:
; Line 659
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+112], 1
; Line 660
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+108], 0
	je	SHORT $LN2@EndOfStrea
; Line 661
	xor	eax, eax
	jmp	SHORT $LN4@EndOfStrea
$LN2@EndOfStrea:
; Line 668
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Ready@CBaseRenderer@@QAEXXZ		; CBaseRenderer::Ready
; Line 674
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	je	SHORT $LN1@EndOfStrea
; Line 675
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@EndOfStrea:
; Line 677
	xor	eax, eax
$LN4@EndOfStrea:
; Line 678
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?EndOfStream@CBaseRenderer@@UAEJXZ ENDP			; CBaseRenderer::EndOfStream
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?BeginFlush@CBaseRenderer@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BeginFlush@CBaseRenderer@@UAEJXZ PROC			; CBaseRenderer::BeginFlush, COMDAT
; _this$ = ecx
; Line 684
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 687
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 1
	jne	SHORT $LN1@BeginFlush
; Line 688
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NotReady@CBaseRenderer@@QAEXXZ		; CBaseRenderer::NotReady
$LN1@BeginFlush:
; Line 691
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 692
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 693
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 695
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WaitForReceiveToComplete@CBaseRenderer@@QAEXXZ ; CBaseRenderer::WaitForReceiveToComplete
; Line 697
	xor	eax, eax
; Line 698
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?BeginFlush@CBaseRenderer@@UAEJXZ ENDP			; CBaseRenderer::BeginFlush
_TEXT	ENDS
EXTRN	?ResetMediaTime@CRendererPosPassThru@@QAEJXZ:PROC ; CRendererPosPassThru::ResetMediaTime
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?EndFlush@CBaseRenderer@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?EndFlush@CBaseRenderer@@UAEJXZ PROC			; CBaseRenderer::EndFlush, COMDAT
; _this$ = ecx
; Line 704
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 706
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN2@EndFlush
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+80]
	call	?ResetMediaTime@CRendererPosPassThru@@QAEJXZ ; CRendererPosPassThru::ResetMediaTime
$LN2@EndFlush:
; Line 710
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+108]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	je	SHORT $LN1@EndFlush
	push	710					; 000002c6H
	push	OFFSET $SG81870
	push	OFFSET $SG81871
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@EndFlush:
; Line 711
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 712
	xor	eax, eax
; Line 713
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?EndFlush@CBaseRenderer@@UAEJXZ ENDP			; CBaseRenderer::EndFlush
_TEXT	ENDS
EXTRN	?CritCheckIn@@YGHPAVCCritSec@@@Z:PROC		; CritCheckIn
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CompleteConnect@CBaseRenderer@@UAEJPAUIPin@@@Z
_TEXT	SEGMENT
_hr$81880 = -8						; size = 4
_this$ = -4						; size = 4
_pReceivePin$ = 8					; size = 4
?CompleteConnect@CBaseRenderer@@UAEJPAUIPin@@@Z PROC	; CBaseRenderer::CompleteConnect, COMDAT
; _this$ = ecx
; Line 719
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 722
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 124				; 0000007cH
	push	eax
	call	?CritCheckIn@@YGHPAVCCritSec@@@Z	; CritCheckIn
	test	eax, eax
	jne	SHORT $LN4@CompleteCo
	push	722					; 000002d2H
	push	OFFSET $SG81877
	push	OFFSET $SG81878
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN4@CompleteCo:
; Line 724
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+96], 0
; Line 726
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetRealState@CBaseRenderer@@QAE?AW4_FilterState@@XZ ; CBaseRenderer::GetRealState
	cmp	eax, 2
	jne	SHORT $LN3@CompleteCo
; Line 727
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+124]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$81880[ebp], eax
; Line 728
	cmp	DWORD PTR _hr$81880[ebp], 0
	jge	SHORT $LN2@CompleteCo
; Line 729
	mov	eax, DWORD PTR _hr$81880[ebp]
	jmp	SHORT $LN5@CompleteCo
$LN2@CompleteCo:
; Line 732
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetRepaintStatus@CBaseRenderer@@QAEXH@Z ; CBaseRenderer::SetRepaintStatus
; Line 733
	jmp	SHORT $LN1@CompleteCo
$LN3@CompleteCo:
; Line 734
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetRepaintStatus@CBaseRenderer@@QAEXH@Z ; CBaseRenderer::SetRepaintStatus
$LN1@CompleteCo:
; Line 737
	xor	eax, eax
$LN5@CompleteCo:
; Line 738
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CompleteConnect@CBaseRenderer@@UAEJPAUIPin@@@Z ENDP	; CBaseRenderer::CompleteConnect
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Active@CBaseRenderer@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Active@CBaseRenderer@@UAEJXZ PROC			; CBaseRenderer::Active, COMDAT
; _this$ = ecx
; Line 744
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 745
	xor	eax, eax
; Line 746
	mov	esp, ebp
	pop	ebp
	ret	0
?Active@CBaseRenderer@@UAEJXZ ENDP			; CBaseRenderer::Active
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Inactive@CBaseRenderer@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Inactive@CBaseRenderer@@UAEJXZ PROC			; CBaseRenderer::Inactive, COMDAT
; _this$ = ecx
; Line 752
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 753
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN1@Inactive
; Line 754
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+80]
	call	?ResetMediaTime@CRendererPosPassThru@@QAEJXZ ; CRendererPosPassThru::ResetMediaTime
$LN1@Inactive:
; Line 758
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+112]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 760
	xor	eax, eax
; Line 761
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Inactive@CBaseRenderer@@UAEJXZ ENDP			; CBaseRenderer::Inactive
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetMediaType@CBaseRenderer@@UAEJPBVCMediaType@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pmt$ = 8						; size = 4
?SetMediaType@CBaseRenderer@@UAEJPBVCMediaType@@@Z PROC	; CBaseRenderer::SetMediaType, COMDAT
; _this$ = ecx
; Line 767
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 768
	xor	eax, eax
; Line 769
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMediaType@CBaseRenderer@@UAEJPBVCMediaType@@@Z ENDP	; CBaseRenderer::SetMediaType
_TEXT	ENDS
PUBLIC	?CanReconnectWhenActive@CBasePin@@QAE_NXZ	; CBasePin::CanReconnectWhenActive
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?BreakConnect@CBaseRenderer@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BreakConnect@CBaseRenderer@@UAEJXZ PROC		; CBaseRenderer::BreakConnect, COMDAT
; _this$ = ecx
; Line 779
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 782
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+196], 0
	je	SHORT $LN4@BreakConne
; Line 783
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+196]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+196]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 784
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+196], 0
$LN4@BreakConne:
; Line 789
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+120]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	jne	SHORT $LN3@BreakConne
; Line 790
	mov	eax, 1
	jmp	$LN5@BreakConne
$LN3@BreakConne:
; Line 794
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN2@BreakConne
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+120]
	call	?CanReconnectWhenActive@CBasePin@@QAE_NXZ ; CBasePin::CanReconnectWhenActive
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@BreakConne
; Line 795
	mov	eax, -2147220956			; 80040224H
	jmp	SHORT $LN5@BreakConne
$LN2@BreakConne:
; Line 798
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetRepaintStatus@CBaseRenderer@@QAEXH@Z ; CBaseRenderer::SetRepaintStatus
; Line 799
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 800
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 801
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+96], 0
; Line 803
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+24], 2
	jne	SHORT $LN1@BreakConne
; Line 804
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+128]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@BreakConne:
; Line 807
	xor	eax, eax
$LN5@BreakConne:
; Line 808
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?BreakConnect@CBaseRenderer@@UAEJXZ ENDP		; CBaseRenderer::BreakConnect
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?CanReconnectWhenActive@CBasePin@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CanReconnectWhenActive@CBasePin@@QAE_NXZ PROC		; CBasePin::CanReconnectWhenActive, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\amfilter.h
; Line 560
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 561
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+41]
; Line 562
	mov	esp, ebp
	pop	ebp
	ret	0
?CanReconnectWhenActive@CBasePin@@QAE_NXZ ENDP		; CBasePin::CanReconnectWhenActive
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetSampleTimes@CBaseRenderer@@UAEJPAUIMediaSample@@PA_J1@Z
_TEXT	SEGMENT
tv140 = -12						; size = 4
tv139 = -8						; size = 4
_this$ = -4						; size = 4
_pMediaSample$ = 8					; size = 4
_pStartTime$ = 12					; size = 4
_pEndTime$ = 16						; size = 4
?GetSampleTimes@CBaseRenderer@@UAEJPAUIMediaSample@@PA_J1@Z PROC ; CBaseRenderer::GetSampleTimes, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.cpp
; Line 819
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 820
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+104], 0
	je	SHORT $LN6@GetSampleT
	push	820					; 00000334H
	push	OFFSET $SG81911
	push	OFFSET $SG81912
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN6@GetSampleT:
; Line 821
	cmp	DWORD PTR _pMediaSample$[ebp], 0
	jne	SHORT $LN5@GetSampleT
	push	821					; 00000335H
	push	OFFSET $SG81914
	push	OFFSET $SG81915
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN5@GetSampleT:
; Line 827
	mov	esi, esp
	mov	ecx, DWORD PTR _pEndTime$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStartTime$[ebp]
	push	edx
	mov	eax, DWORD PTR _pMediaSample$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pMediaSample$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jl	SHORT $LN4@GetSampleT
; Line 828
	mov	ecx, DWORD PTR _pEndTime$[ebp]
	mov	edx, DWORD PTR _pStartTime$[ebp]
	mov	DWORD PTR tv139[ebp], ecx
	mov	DWORD PTR tv140[ebp], edx
	mov	eax, DWORD PTR tv139[ebp]
	mov	ecx, DWORD PTR tv140[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jg	SHORT $LN3@GetSampleT
	jl	SHORT $LN9@GetSampleT
	mov	eax, DWORD PTR tv139[ebp]
	mov	ecx, DWORD PTR tv140[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@GetSampleT
$LN9@GetSampleT:
; Line 829
	mov	eax, -2147220952			; 80040228H
	jmp	SHORT $LN7@GetSampleT
$LN3@GetSampleT:
; Line 831
	jmp	SHORT $LN2@GetSampleT
$LN4@GetSampleT:
; Line 833
	xor	eax, eax
	jmp	SHORT $LN7@GetSampleT
$LN2@GetSampleT:
; Line 840
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	SHORT $LN1@GetSampleT
; Line 841
	xor	eax, eax
	jmp	SHORT $LN7@GetSampleT
$LN1@GetSampleT:
; Line 843
	mov	esi, esp
	mov	ecx, DWORD PTR _pEndTime$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStartTime$[ebp]
	push	edx
	mov	eax, DWORD PTR _pMediaSample$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@GetSampleT:
; Line 844
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetSampleTimes@CBaseRenderer@@UAEJPAUIMediaSample@@PA_J1@Z ENDP ; CBaseRenderer::GetSampleTimes
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ShouldDrawSampleNow@CBaseRenderer@@UAEJPAUIMediaSample@@PA_J1@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMediaSample$ = 8					; size = 4
_ptrStart$ = 12						; size = 4
_ptrEnd$ = 16						; size = 4
?ShouldDrawSampleNow@CBaseRenderer@@UAEJPAUIMediaSample@@PA_J1@Z PROC ; CBaseRenderer::ShouldDrawSampleNow, COMDAT
; _this$ = ecx
; Line 854
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 855
	mov	eax, 1
; Line 856
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ShouldDrawSampleNow@CBaseRenderer@@UAEJPAUIMediaSample@@PA_J1@Z ENDP ; CBaseRenderer::ShouldDrawSampleNow
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SignalTimerFired@CBaseRenderer@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SignalTimerFired@CBaseRenderer@@QAEXXZ PROC		; CBaseRenderer::SignalTimerFired, COMDAT
; _this$ = ecx
; Line 864
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 865
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 0
; Line 866
	mov	esp, ebp
	pop	ebp
	ret	0
?SignalTimerFired@CBaseRenderer@@QAEXXZ ENDP		; CBaseRenderer::SignalTimerFired
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?CancelNotification@CBaseRenderer@@UAEJXZ
_TEXT	SEGMENT
_dwAdvise$ = -8						; size = 4
_this$ = -4						; size = 4
?CancelNotification@CBaseRenderer@@UAEJXZ PROC		; CBaseRenderer::CancelNotification, COMDAT
; _this$ = ecx
; Line 878
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+104], 0
	je	SHORT $LN3@CancelNoti
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+28], 0
	jne	SHORT $LN3@CancelNoti
	push	879					; 0000036fH
	push	OFFSET $SG81938
	push	OFFSET $SG81939
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN3@CancelNoti:
; Line 880
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	mov	DWORD PTR _dwAdvise$[ebp], eax
; Line 884
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+104], 0
	je	SHORT $LN2@CancelNoti
; Line 885
	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 886
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SignalTimerFired@CBaseRenderer@@QAEXXZ	; CBaseRenderer::SignalTimerFired
; Line 887
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+104], 0
	je	SHORT $LN2@CancelNoti
	push	887					; 00000377H
	push	OFFSET $SG81943
	push	OFFSET $SG81944
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@CancelNoti:
; Line 892
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	?Reset@CAMEvent@@QAEXXZ			; CAMEvent::Reset
; Line 893
	xor	eax, eax
	cmp	DWORD PTR _dwAdvise$[ebp], 0
	sete	al
; Line 894
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CancelNotification@CBaseRenderer@@UAEJXZ ENDP		; CBaseRenderer::CancelNotification
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ScheduleSample@CBaseRenderer@@UAEHPAUIMediaSample@@@Z
_TEXT	SEGMENT
_hr$ = -40						; size = 4
_EndSample$ = -32					; size = 8
_StartSample$ = -16					; size = 8
_this$ = -4						; size = 4
_pMediaSample$ = 8					; size = 4
?ScheduleSample@CBaseRenderer@@UAEHPAUIMediaSample@@@Z PROC ; CBaseRenderer::ScheduleSample, COMDAT
; _this$ = ecx
; Line 903
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 908
	cmp	DWORD PTR _pMediaSample$[ebp], 0
	jne	SHORT $LN9@ScheduleSa
; Line 909
	xor	eax, eax
	jmp	$LN10@ScheduleSa
$LN9@ScheduleSa:
; Line 917
	mov	esi, esp
	lea	eax, DWORD PTR _EndSample$[ebp]
	push	eax
	lea	ecx, DWORD PTR _StartSample$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMediaSample$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 918
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN8@ScheduleSa
; Line 919
	xor	eax, eax
	jmp	$LN10@ScheduleSa
$LN8@ScheduleSa:
; Line 926
	cmp	DWORD PTR _hr$[ebp], 0
	jne	SHORT $LN7@ScheduleSa
; Line 927
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??BCAMEvent@@QBEPAXXZ			; CAMEvent::operator void *
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__SetEvent@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN6@ScheduleSa
	push	927					; 0000039fH
	push	OFFSET $SG81961
	push	OFFSET $SG81962
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN6@ScheduleSa:
; Line 928
	mov	eax, 1
	jmp	$LN10@ScheduleSa
$LN7@ScheduleSa:
; Line 931
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+104], 0
	je	SHORT $LN5@ScheduleSa
	push	931					; 000003a3H
	push	OFFSET $SG81964
	push	OFFSET $SG81965
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN5@ScheduleSa:
; Line 932
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+28], 0
	jne	SHORT $LN4@ScheduleSa
	push	932					; 000003a4H
	push	OFFSET $SG81967
	push	OFFSET $SG81968
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN4@ScheduleSa:
; Line 933
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??BCAMEvent@@QBEPAXXZ			; CAMEvent::operator void *
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 258				; 00000102H
	je	SHORT $LN3@ScheduleSa
	push	933					; 000003a5H
	push	OFFSET $SG81971
	push	OFFSET $SG81972
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN3@ScheduleSa:
; Line 944
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 104				; 00000068H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??BCAMEvent@@QBEPAXXZ			; CAMEvent::operator void *
	push	eax
	mov	ecx, DWORD PTR _StartSample$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _StartSample$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	push	edx
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 946
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN2@ScheduleSa
; Line 947
	mov	eax, 1
	jmp	SHORT $LN10@ScheduleSa
$LN2@ScheduleSa:
; Line 954
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+104], 0
	je	SHORT $LN1@ScheduleSa
	push	954					; 000003baH
	push	OFFSET $SG81979
	push	OFFSET $SG81980
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@ScheduleSa:
; Line 955
	xor	eax, eax
$LN10@ScheduleSa:
; Line 956
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@ScheduleSa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN15@ScheduleSa:
	DD	2
	DD	$LN14@ScheduleSa
$LN14@ScheduleSa:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN12@ScheduleSa
	DD	-32					; ffffffe0H
	DD	8
	DD	$LN13@ScheduleSa
$LN13@ScheduleSa:
	DB	69					; 00000045H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN12@ScheduleSa:
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
?ScheduleSample@CBaseRenderer@@UAEHPAUIMediaSample@@@Z ENDP ; CBaseRenderer::ScheduleSample
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Render@CBaseRenderer@@UAEJPAUIMediaSample@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMediaSample$ = 8					; size = 4
?Render@CBaseRenderer@@UAEJPAUIMediaSample@@@Z PROC	; CBaseRenderer::Render, COMDAT
; _this$ = ecx
; Line 965
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 970
	cmp	DWORD PTR _pMediaSample$[ebp], 0
	jne	SHORT $LN2@Render
; Line 971
	mov	eax, 1
	jmp	SHORT $LN3@Render
$LN2@Render:
; Line 978
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	jne	SHORT $LN1@Render
; Line 979
	mov	eax, 1
	jmp	SHORT $LN3@Render
$LN1@Render:
; Line 984
	mov	esi, esp
	mov	ecx, DWORD PTR _pMediaSample$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 985
	mov	esi, esp
	mov	eax, DWORD PTR _pMediaSample$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+172]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 986
	mov	esi, esp
	mov	ecx, DWORD PTR _pMediaSample$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+60]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 988
	xor	eax, eax
$LN3@Render:
; Line 989
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Render@CBaseRenderer@@UAEJPAUIMediaSample@@@Z ENDP	; CBaseRenderer::Render
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?HaveCurrentSample@CBaseRenderer@@UAEHXZ
_TEXT	SEGMENT
$T83575 = -20						; size = 4
_cRendererLock$ = -12					; size = 4
_this$ = -4						; size = 4
?HaveCurrentSample@CBaseRenderer@@UAEHXZ PROC		; CBaseRenderer::HaveCurrentSample, COMDAT
; _this$ = ecx
; Line 995
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 996
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
; Line 997
	mov	ecx, DWORD PTR _this$[ebp]
	xor	edx, edx
	cmp	DWORD PTR [ecx+108], 0
	setne	dl
	mov	DWORD PTR $T83575[ebp], edx
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83575[ebp]
; Line 998
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@HaveCurren
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@HaveCurren:
	DD	1
	DD	$LN5@HaveCurren
$LN5@HaveCurren:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN4@HaveCurren
$LN4@HaveCurren:
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?HaveCurrentSample@CBaseRenderer@@UAEHXZ ENDP		; CBaseRenderer::HaveCurrentSample
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCurrentSample@CBaseRenderer@@UAEPAUIMediaSample@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCurrentSample@CBaseRenderer@@UAEPAUIMediaSample@@XZ$0
__ehfuncinfo$?GetCurrentSample@CBaseRenderer@@UAEPAUIMediaSample@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCurrentSample@CBaseRenderer@@UAEPAUIMediaSample@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?GetCurrentSample@CBaseRenderer@@UAEPAUIMediaSample@@XZ
_TEXT	SEGMENT
$T83582 = -32						; size = 4
_cRendererLock$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?GetCurrentSample@CBaseRenderer@@UAEPAUIMediaSample@@XZ PROC ; CBaseRenderer::GetCurrentSample, COMDAT
; _this$ = ecx
; Line 1007
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetCurrentSample@CBaseRenderer@@UAEPAUIMediaSample@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1008
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1009
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+108], 0
	je	SHORT $LN1@GetCurrent
; Line 1010
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@GetCurrent:
; Line 1012
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	DWORD PTR $T83582[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83582[ebp]
; Line 1013
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@GetCurrent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@GetCurrent:
	DD	1
	DD	$LN7@GetCurrent
$LN7@GetCurrent:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN5@GetCurrent
$LN5@GetCurrent:
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCurrentSample@CBaseRenderer@@UAEPAUIMediaSample@@XZ$0:
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?GetCurrentSample@CBaseRenderer@@UAEPAUIMediaSample@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetCurrentSample@CBaseRenderer@@UAEPAUIMediaSample@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetCurrentSample@CBaseRenderer@@UAEPAUIMediaSample@@XZ ENDP ; CBaseRenderer::GetCurrentSample
PUBLIC	?IsActive@CBaseFilter@@QAEHXZ			; CBaseFilter::IsActive
PUBLIC	?SampleProps@CBaseInputPin@@QAEPAUtagAM_SAMPLE2_PROPERTIES@@XZ ; CBaseInputPin::SampleProps
EXTRN	?RegisterMediaTime@CRendererPosPassThru@@QAEJPAUIMediaSample@@@Z:PROC ; CRendererPosPassThru::RegisterMediaTime
EXTRN	?Receive@CBaseInputPin@@UAGJPAUIMediaSample@@@Z:PROC ; CBaseInputPin::Receive
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PrepareReceive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PrepareReceive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?PrepareReceive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z$1
__ehfuncinfo$?PrepareReceive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?PrepareReceive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?PrepareReceive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z
_TEXT	SEGMENT
$T83599 = -64						; size = 4
$T83598 = -60						; size = 4
$T83597 = -56						; size = 4
$T83596 = -52						; size = 4
$T83595 = -48						; size = 4
_cSampleLock$ = -40					; size = 4
_hr$ = -32						; size = 4
_cInterfaceLock$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pMediaSample$ = 8					; size = 4
?PrepareReceive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z PROC ; CBaseRenderer::PrepareReceive, COMDAT
; _this$ = ecx
; Line 1025
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PrepareReceive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1026
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 124				; 0000007cH
	push	eax
	lea	ecx, DWORD PTR _cInterfaceLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1027
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+204], 1
; Line 1034
	mov	edx, DWORD PTR _pMediaSample$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	add	ecx, 160				; 000000a0H
	push	ecx
	call	?Receive@CBaseInputPin@@UAGJPAUIMediaSample@@@Z ; CBaseInputPin::Receive
	mov	DWORD PTR _hr$[ebp], eax
; Line 1036
	cmp	DWORD PTR _hr$[ebp], 0
	je	SHORT $LN14@PrepareRec
; Line 1037
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+204], 0
; Line 1038
	mov	DWORD PTR $T83595[ebp], -2147467259	; 80004005H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cInterfaceLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83595[ebp]
	jmp	$LN15@PrepareRec
$LN14@PrepareRec:
; Line 1047
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	call	?SampleProps@CBaseInputPin@@QAEPAUtagAM_SAMPLE2_PROPERTIES@@XZ ; CBaseInputPin::SampleProps
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN13@PrepareRec
; Line 1049
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+120]
	call	?SampleProps@CBaseInputPin@@QAEPAUtagAM_SAMPLE2_PROPERTIES@@XZ ; CBaseInputPin::SampleProps
	mov	esi, esp
	mov	edx, DWORD PTR [eax+36]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1050
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN13@PrepareRec
; Line 1051
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+204], 0
; Line 1052
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T83596[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cInterfaceLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83596[ebp]
	jmp	$LN15@PrepareRec
$LN13@PrepareRec:
; Line 1057
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1059
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsActive@CBaseFilter@@QAEHXZ		; CBaseFilter::IsActive
	cmp	eax, 1
	je	SHORT $LN11@PrepareRec
	push	1059					; 00000423H
	push	OFFSET $SG82016
	push	OFFSET $SG82017
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN11@PrepareRec:
; Line 1060
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+120]
	call	?IsFlushing@CBaseInputPin@@QAEHXZ	; CBaseInputPin::IsFlushing
	test	eax, eax
	je	SHORT $LN10@PrepareRec
	push	1060					; 00000424H
	push	OFFSET $SG82019
	push	OFFSET $SG82020
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN10@PrepareRec:
; Line 1061
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+120]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	cmp	eax, 1
	je	SHORT $LN9@PrepareRec
	push	1061					; 00000425H
	push	OFFSET $SG82022
	push	OFFSET $SG82023
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN9@PrepareRec:
; Line 1062
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+108], 0
	je	SHORT $LN8@PrepareRec
	push	1062					; 00000426H
	push	OFFSET $SG82025
	push	OFFSET $SG82026
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN8@PrepareRec:
; Line 1068
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+108], 0
	jne	SHORT $LN6@PrepareRec
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+112], 0
	jne	SHORT $LN6@PrepareRec
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+96], 0
	je	SHORT $LN7@PrepareRec
$LN6@PrepareRec:
; Line 1069
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Ready@CBaseRenderer@@QAEXXZ		; CBaseRenderer::Ready
; Line 1070
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+204], 0
; Line 1071
	mov	DWORD PTR $T83597[ebp], -2147418113	; 8000ffffH
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cInterfaceLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83597[ebp]
	jmp	$LN15@PrepareRec
$LN7@PrepareRec:
; Line 1075
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+80], 0
	je	SHORT $LN5@PrepareRec
	mov	eax, DWORD PTR _pMediaSample$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+80]
	call	?RegisterMediaTime@CRendererPosPassThru@@QAEJPAUIMediaSample@@@Z ; CRendererPosPassThru::RegisterMediaTime
$LN5@PrepareRec:
; Line 1079
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+100], 1
	jne	$LN4@PrepareRec
	mov	esi, esp
	mov	eax, DWORD PTR _pMediaSample$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	$LN4@PrepareRec
; Line 1080
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??BCAMEvent@@QBEPAXXZ			; CAMEvent::operator void *
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 258				; 00000102H
	je	SHORT $LN3@PrepareRec
	push	1080					; 00000438H
	push	OFFSET $SG82035
	push	OFFSET $SG82036
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN3@PrepareRec:
; Line 1081
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	je	SHORT $LN2@PrepareRec
	push	1081					; 00000439H
	push	OFFSET $SG82039
	push	OFFSET $SG82040
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@PrepareRec:
; Line 1082
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+204], 0
; Line 1083
	mov	DWORD PTR $T83598[ebp], -2147220949	; 8004022bH
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cInterfaceLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83598[ebp]
	jmp	SHORT $LN15@PrepareRec
$LN4@PrepareRec:
; Line 1087
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+120]
	call	?SampleProps@CBaseInputPin@@QAEPAUtagAM_SAMPLE2_PROPERTIES@@XZ ; CBaseInputPin::SampleProps
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+24]
	mov	DWORD PTR [ecx+208], edx
	mov	eax, DWORD PTR [eax+28]
	mov	DWORD PTR [ecx+212], eax
; Line 1095
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pMediaSample$[ebp]
	mov	DWORD PTR [ecx+108], edx
; Line 1096
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1098
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	jne	SHORT $LN1@PrepareRec
; Line 1099
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetRepaintStatus@CBaseRenderer@@QAEXH@Z ; CBaseRenderer::SetRepaintStatus
$LN1@PrepareRec:
; Line 1101
	mov	DWORD PTR $T83599[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cInterfaceLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83599[ebp]
$LN15@PrepareRec:
; Line 1102
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@PrepareRec
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN23@PrepareRec:
	DD	2
	DD	$LN22@PrepareRec
$LN22@PrepareRec:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN19@PrepareRec
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN20@PrepareRec
$LN20@PrepareRec:
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN19@PrepareRec:
	DB	99					; 00000063H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	102					; 00000066H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PrepareReceive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z$0:
	lea	ecx, DWORD PTR _cInterfaceLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__unwindfunclet$?PrepareReceive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z$1:
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?PrepareReceive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PrepareReceive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PrepareReceive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z ENDP ; CBaseRenderer::PrepareReceive
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsActive@CBaseFilter@@QAEHXZ
_TEXT	SEGMENT
tv73 = -24						; size = 4
$T83614 = -20						; size = 4
_cObjectLock$ = -12					; size = 4
_this$ = -4						; size = 4
?IsActive@CBaseFilter@@QAEHXZ PROC			; CBaseFilter::IsActive, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\amfilter.h
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	lea	ecx, DWORD PTR _cObjectLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
; Line 242
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+24], 1
	je	SHORT $LN3@IsActive
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 2
	je	SHORT $LN3@IsActive
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN4@IsActive
$LN3@IsActive:
	mov	DWORD PTR tv73[ebp], 1
$LN4@IsActive:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T83614[ebp], ecx
	lea	ecx, DWORD PTR _cObjectLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83614[ebp]
; Line 243
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@IsActive
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@IsActive:
	DD	1
	DD	$LN7@IsActive
$LN7@IsActive:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN6@IsActive
$LN6@IsActive:
	DB	99					; 00000063H
	DB	79					; 0000004fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?IsActive@CBaseFilter@@QAEHXZ ENDP			; CBaseFilter::IsActive
_TEXT	ENDS
PUBLIC	??_C@_1DE@JPFPKCAE@?$AAm?$AA_?$AAS?$AAa?$AAm?$AAp?$AAl?$AAe?$AAP?$AAr?$AAo?$AAp?$AAs?$AA?4?$AAc?$AAb?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1HG@MPHBNOLH@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@ ; `string'
;	COMDAT ??_C@_1DE@JPFPKCAE@?$AAm?$AA_?$AAS?$AAa?$AAm?$AAp?$AAl?$AAe?$AAP?$AAr?$AAo?$AAp?$AAs?$AA?4?$AAc?$AAb?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1DE@JPFPKCAE@?$AAm?$AA_?$AAS?$AAa?$AAm?$AAp?$AAl?$AAe?$AAP?$AAr?$AAo?$AAp?$AAs?$AA?4?$AAc?$AAb?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'm'
	DB	00H, '_', 00H, 'S', 00H, 'a', 00H, 'm', 00H, 'p', 00H, 'l', 00H
	DB	'e', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 's', 00H, '.'
	DB	00H, 'c', 00H, 'b', 00H, 'D', 00H, 'a', 00H, 't', 00H, 'a', 00H
	DB	' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HG@MPHBNOLH@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@
CONST	SEGMENT
??_C@_1HG@MPHBNOLH@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'D', 00H, 'o', 00H, 'w', 00H, 'n', 00H
	DB	'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'e', 00H, 'd', 00H, 'i', 00H, 'a', 00H, 'P', 00H, 'o', 00H
	DB	'i', 00H, 'n', 00H, 't', 00H, '\', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'B', 00H, 'a', 00H, 's', 00H, 'e'
	DB	00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, 'e', 00H
	DB	's', 00H, '\', 00H, 'a', 00H, 'm', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?SampleProps@CBaseInputPin@@QAEPAUtagAM_SAMPLE2_PROPERTIES@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SampleProps@CBaseInputPin@@QAEPAUtagAM_SAMPLE2_PROPERTIES@@XZ PROC ; CBaseInputPin::SampleProps, COMDAT
; _this$ = ecx
; Line 938
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 939
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+176], 0
	jne	SHORT $LN1@SampleProp
	push	939					; 000003abH
	push	OFFSET ??_C@_1HG@MPHBNOLH@?$AAC?$AA?3?$AA?2?$AAD?$AAo?$AAw?$AAn?$AAl?$AAo?$AAa?$AAd?$AAs?$AA?2?$AAM?$AAe?$AAd?$AAi?$AAa?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAf?$AAi?$AAl?$AAt@
	push	OFFSET ??_C@_1DE@JPFPKCAE@?$AAm?$AA_?$AAS?$AAa?$AAm?$AAp?$AAl?$AAe?$AAP?$AAr?$AAo?$AAp?$AAs?$AA?4?$AAc?$AAb?$AAD?$AAa?$AAt?$AAa?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@SampleProp:
; Line 940
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 176				; 000000b0H
; Line 941
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?SampleProps@CBaseInputPin@@QAEPAUtagAM_SAMPLE2_PROPERTIES@@XZ ENDP ; CBaseInputPin::SampleProps
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.cpp
xdata$x	SEGMENT
__unwindtable$?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z$3
__ehfuncinfo$?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z
_TEXT	SEGMENT
$T83627 = -80						; size = 4
$T83626 = -76						; size = 4
$T83625 = -72						; size = 4
_cSampleLock$ = -64					; size = 4
_cRendererLock$ = -52					; size = 4
_cSampleLock$82065 = -40				; size = 4
_cRendererLock$82062 = -28				; size = 4
_hr$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pSample$ = 8						; size = 4
?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z PROC	; CBaseRenderer::Receive, COMDAT
; _this$ = ecx
; Line 1112
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-80]
	mov	ecx, 17					; 00000011H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1113
	cmp	DWORD PTR _pSample$[ebp], 0
	jne	SHORT $LN8@Receive
	push	1113					; 00000459H
	push	OFFSET $SG82050
	push	OFFSET $SG82051
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN8@Receive:
; Line 1117
	mov	esi, esp
	mov	eax, DWORD PTR _pSample$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+152]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1118
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+204]
	xor	eax, eax
	cmp	DWORD PTR _hr$[ebp], 0
	setge	al
	cmp	edx, eax
	je	SHORT $LN7@Receive
	push	1118					; 0000045eH
	push	OFFSET $SG82055
	push	OFFSET $SG82056
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN7@Receive:
; Line 1119
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN6@Receive
; Line 1120
	cmp	DWORD PTR _hr$[ebp], -2147220949	; 8004022bH
	jne	SHORT $LN5@Receive
; Line 1121
	xor	eax, eax
	jmp	$LN9@Receive
$LN5@Receive:
; Line 1123
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN9@Receive
$LN6@Receive:
; Line 1128
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 1
	jne	$LN4@Receive
; Line 1129
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+80]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1131
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+204], 0
; Line 1134
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	push	ecx
	lea	ecx, DWORD PTR _cRendererLock$82062[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1135
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+24], 0
	jne	SHORT $LN3@Receive
; Line 1136
	mov	DWORD PTR $T83625[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$82062[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83625[ebp]
	jmp	$LN9@Receive
$LN3@Receive:
; Line 1138
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+204], 1
; Line 1139
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	push	ecx
	lea	ecx, DWORD PTR _cSampleLock$82065[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1140
	mov	esi, esp
	mov	edx, DWORD PTR _pSample$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1141
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _cSampleLock$82065[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$82062[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
; Line 1142
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Ready@CBaseRenderer@@QAEXXZ		; CBaseRenderer::Ready
$LN4@Receive:
; Line 1148
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1149
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@Receive
; Line 1150
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+204], 0
; Line 1151
	xor	eax, eax
	jmp	$LN9@Receive
$LN2@Receive:
; Line 1154
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+80]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1160
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+204], 0
; Line 1163
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	push	ecx
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 1167
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+24], 0
	jne	SHORT $LN1@Receive
; Line 1168
	mov	DWORD PTR $T83626[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83626[ebp]
	jmp	$LN9@Receive
$LN1@Receive:
; Line 1170
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 1174
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+168]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1175
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1176
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1177
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1178
	mov	DWORD PTR $T83627[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83627[ebp]
$LN9@Receive:
; Line 1179
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@Receive
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 80					; 00000050H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN21@Receive:
	DD	4
	DD	$LN20@Receive
$LN20@Receive:
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN15@Receive
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN16@Receive
	DD	-52					; ffffffccH
	DD	4
	DD	$LN17@Receive
	DD	-64					; ffffffc0H
	DD	4
	DD	$LN18@Receive
$LN18@Receive:
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN17@Receive:
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN16@Receive:
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN15@Receive:
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z$0:
	lea	ecx, DWORD PTR _cRendererLock$82062[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__unwindfunclet$?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z$1:
	lea	ecx, DWORD PTR _cSampleLock$82065[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__unwindfunclet$?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z$2:
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__unwindfunclet$?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z$3:
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z ENDP	; CBaseRenderer::Receive
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ClearPendingSample@CBaseRenderer@@UAEJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ClearPendingSample@CBaseRenderer@@UAEJXZ$0
__ehfuncinfo$?ClearPendingSample@CBaseRenderer@@UAEJXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ClearPendingSample@CBaseRenderer@@UAEJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?ClearPendingSample@CBaseRenderer@@UAEJXZ
_TEXT	SEGMENT
$T83646 = -32						; size = 4
_cRendererLock$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?ClearPendingSample@CBaseRenderer@@UAEJXZ PROC		; CBaseRenderer::ClearPendingSample, COMDAT
; _this$ = ecx
; Line 1189
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ClearPendingSample@CBaseRenderer@@UAEJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1190
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1191
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+108], 0
	je	SHORT $LN1@ClearPendi
; Line 1192
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1193
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+108], 0
$LN1@ClearPendi:
; Line 1195
	mov	DWORD PTR $T83646[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83646[ebp]
; Line 1196
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@ClearPendi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@ClearPendi:
	DD	1
	DD	$LN7@ClearPendi
$LN7@ClearPendi:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN5@ClearPendi
$LN5@ClearPendi:
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ClearPendingSample@CBaseRenderer@@UAEJXZ$0:
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?ClearPendingSample@CBaseRenderer@@UAEJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ClearPendingSample@CBaseRenderer@@UAEJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ClearPendingSample@CBaseRenderer@@UAEJXZ ENDP		; CBaseRenderer::ClearPendingSample
PUBLIC	?TimerCallback@CBaseRenderer@@QAEXXZ		; CBaseRenderer::TimerCallback
PUBLIC	?EndOfStreamTimer@@YGXIIKKK@Z			; EndOfStreamTimer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?EndOfStreamTimer@@YGXIIKKK@Z
_TEXT	SEGMENT
_pRenderer$ = -4					; size = 4
_uID$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_dwUser$ = 16						; size = 4
_dw1$ = 20						; size = 4
_dw2$ = 24						; size = 4
?EndOfStreamTimer@@YGXIIKKK@Z PROC			; EndOfStreamTimer, COMDAT
; Line 1206
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1207
	mov	eax, DWORD PTR _dwUser$[ebp]
	mov	DWORD PTR _pRenderer$[ebp], eax
; Line 1208
	mov	ecx, DWORD PTR _uID$[ebp]
	push	ecx
	push	OFFSET $SG82088
	push	5
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 1209
	mov	ecx, DWORD PTR _pRenderer$[ebp]
	call	?TimerCallback@CBaseRenderer@@QAEXXZ	; CBaseRenderer::TimerCallback
; Line 1210
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?EndOfStreamTimer@@YGXIIKKK@Z ENDP			; EndOfStreamTimer
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?TimerCallback@CBaseRenderer@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?TimerCallback@CBaseRenderer@@QAEXXZ$0
__ehfuncinfo$?TimerCallback@CBaseRenderer@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?TimerCallback@CBaseRenderer@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?TimerCallback@CBaseRenderer@@QAEXXZ
_TEXT	SEGMENT
_cRendererLock$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?TimerCallback@CBaseRenderer@@QAEXXZ PROC		; CBaseRenderer::TimerCallback, COMDAT
; _this$ = ecx
; Line 1214
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?TimerCallback@CBaseRenderer@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1217
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1221
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+216], 0
	je	SHORT $LN1@TimerCallb
; Line 1222
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+216], 0
; Line 1223
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@TimerCallb:
; Line 1225
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@TimerCallb
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN8@TimerCallb:
	DD	1
	DD	$LN7@TimerCallb
$LN7@TimerCallb:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN5@TimerCallb
$LN5@TimerCallb:
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?TimerCallback@CBaseRenderer@@QAEXXZ$0:
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?TimerCallback@CBaseRenderer@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?TimerCallback@CBaseRenderer@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?TimerCallback@CBaseRenderer@@QAEXXZ ENDP		; CBaseRenderer::TimerCallback
PUBLIC	??BCDisp@@QAEPB_WXZ				; CDisp::operator wchar_t const *
PUBLIC	?NotifyEndOfStream@CBaseRenderer@@QAEJXZ	; CBaseRenderer::NotifyEndOfStream
PUBLIC	__$ArrayPad$
EXTRN	?CompatibleTimeSetEvent@@YGIIIP6GXIIKKK@ZKI@Z:PROC ; CompatibleTimeSetEvent
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SendEndOfStream@CBaseRenderer@@UAEJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendEndOfStream@CBaseRenderer@@UAEJXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SendEndOfStream@CBaseRenderer@@UAEJXZ$1
__ehfuncinfo$?SendEndOfStream@CBaseRenderer@@UAEJXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SendEndOfStream@CBaseRenderer@@UAEJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?SendEndOfStream@CBaseRenderer@@UAEJXZ
_TEXT	SEGMENT
tv186 = -272						; size = 4
tv188 = -268						; size = 4
tv184 = -264						; size = 4
tv187 = -260						; size = 4
$T82113 = -256						; size = 104
$T82109 = -152						; size = 104
_Delay$ = -48						; size = 4
_CurrentTime$ = -40					; size = 8
_Signal$ = -28						; size = 8
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?SendEndOfStream@CBaseRenderer@@UAEJXZ PROC		; CBaseRenderer::SendEndOfStream, COMDAT
; _this$ = ecx
; Line 1238
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SendEndOfStream@CBaseRenderer@@UAEJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 260				; 00000104H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1239
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	call	?CritCheckIn@@YGHPAVCCritSec@@@Z	; CritCheckIn
	test	eax, eax
	jne	SHORT $LN6@SendEndOfS
	push	1239					; 000004d7H
	push	OFFSET $SG82098
	push	OFFSET $SG82099
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN6@SendEndOfS:
; Line 1240
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+112], 0
	je	SHORT $LN4@SendEndOfS
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+116], 0
	jne	SHORT $LN4@SendEndOfS
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+216], 0
	je	SHORT $LN5@SendEndOfS
$LN4@SendEndOfS:
; Line 1241
	xor	eax, eax
	jmp	$LN7@SendEndOfS
$LN5@SendEndOfS:
; Line 1245
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+28], 0
	jne	SHORT $LN3@SendEndOfS
; Line 1246
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NotifyEndOfStream@CBaseRenderer@@QAEJXZ ; CBaseRenderer::NotifyEndOfStream
	jmp	$LN7@SendEndOfS
$LN3@SendEndOfS:
; Line 1251
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+208]
	adc	edx, DWORD PTR [ecx+212]
	mov	DWORD PTR _Signal$[ebp], eax
	mov	DWORD PTR _Signal$[ebp+4], edx
; Line 1253
	mov	esi, esp
	lea	edx, DWORD PTR _CurrentTime$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1254
	mov	eax, DWORD PTR _Signal$[ebp]
	sub	eax, DWORD PTR _CurrentTime$[ebp]
	mov	ecx, DWORD PTR _Signal$[ebp+4]
	sbb	ecx, DWORD PTR _CurrentTime$[ebp+4]
	push	0
	push	10000					; 00002710H
	push	ecx
	push	eax
	call	__alldiv
	mov	DWORD PTR _Delay$[ebp], eax
; Line 1258
	mov	edx, DWORD PTR _Delay$[ebp]
	push	edx
	push	OFFSET $SG82106
	push	5
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 1259
	push	1
	mov	eax, DWORD PTR _CurrentTime$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _CurrentTime$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T82109[ebp]
	call	??0CDisp@@QAE@_JH@Z			; CDisp::CDisp
	mov	DWORD PTR tv187[ebp], eax
	mov	edx, DWORD PTR tv187[ebp]
	mov	DWORD PTR tv184[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv184[ebp]
	call	??BCDisp@@QAEPB_WXZ			; CDisp::operator wchar_t const *
	push	eax
	push	OFFSET $SG82110
	push	5
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T82109[ebp]
	call	??1CDisp@@QAE@XZ			; CDisp::~CDisp
; Line 1260
	push	1
	mov	eax, DWORD PTR _Signal$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _Signal$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T82113[ebp]
	call	??0CDisp@@QAE@_JH@Z			; CDisp::CDisp
	mov	DWORD PTR tv188[ebp], eax
	mov	edx, DWORD PTR tv188[ebp]
	mov	DWORD PTR tv186[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv186[ebp]
	call	??BCDisp@@QAEPB_WXZ			; CDisp::operator wchar_t const *
	push	eax
	push	OFFSET $SG82114
	push	5
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T82113[ebp]
	call	??1CDisp@@QAE@XZ			; CDisp::~CDisp
; Line 1264
	cmp	DWORD PTR _Delay$[ebp], 50		; 00000032H
	jge	SHORT $LN2@SendEndOfS
; Line 1265
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NotifyEndOfStream@CBaseRenderer@@QAEJXZ ; CBaseRenderer::NotifyEndOfStream
	jmp	SHORT $LN7@SendEndOfS
$LN2@SendEndOfS:
; Line 1274
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	push	OFFSET ?EndOfStreamTimer@@YGXIIKKK@Z	; EndOfStreamTimer
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _Delay$[ebp]
	push	ecx
	call	?CompatibleTimeSetEvent@@YGIIIP6GXIIKKK@ZKI@Z ; CompatibleTimeSetEvent
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+216], eax
; Line 1275
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+216], 0
	jne	SHORT $LN1@SendEndOfS
; Line 1276
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NotifyEndOfStream@CBaseRenderer@@QAEJXZ ; CBaseRenderer::NotifyEndOfStream
	jmp	SHORT $LN7@SendEndOfS
$LN1@SendEndOfS:
; Line 1278
	xor	eax, eax
$LN7@SendEndOfS:
; Line 1279
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@SendEndOfS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN14@SendEndOfS:
	DD	1
	DD	$LN13@SendEndOfS
$LN13@SendEndOfS:
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN11@SendEndOfS
$LN11@SendEndOfS:
	DB	67					; 00000043H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SendEndOfStream@CBaseRenderer@@UAEJXZ$0:
	lea	ecx, DWORD PTR $T82109[ebp]
	jmp	??1CDisp@@QAE@XZ			; CDisp::~CDisp
__unwindfunclet$?SendEndOfStream@CBaseRenderer@@UAEJXZ$1:
	lea	ecx, DWORD PTR $T82113[ebp]
	jmp	??1CDisp@@QAE@XZ			; CDisp::~CDisp
__ehhandler$?SendEndOfStream@CBaseRenderer@@UAEJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SendEndOfStream@CBaseRenderer@@UAEJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?SendEndOfStream@CBaseRenderer@@UAEJXZ ENDP		; CBaseRenderer::SendEndOfStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??BCDisp@@QAEPB_WXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCDisp@@QAEPB_WXZ PROC				; CDisp::operator wchar_t const *, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxdebug.h
; Line 349
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 350
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 351
	mov	esp, ebp
	pop	ebp
	ret	0
??BCDisp@@QAEPB_WXZ ENDP				; CDisp::operator wchar_t const *
_TEXT	ENDS
EXTRN	?EOS@CRendererPosPassThru@@QAEJXZ:PROC		; CRendererPosPassThru::EOS
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.cpp
xdata$x	SEGMENT
__unwindtable$?NotifyEndOfStream@CBaseRenderer@@QAEJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?NotifyEndOfStream@CBaseRenderer@@QAEJXZ$0
__ehfuncinfo$?NotifyEndOfStream@CBaseRenderer@@QAEJXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?NotifyEndOfStream@CBaseRenderer@@QAEJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?NotifyEndOfStream@CBaseRenderer@@QAEJXZ
_TEXT	SEGMENT
tv137 = -40						; size = 4
$T83690 = -36						; size = 4
$T83689 = -32						; size = 4
_cRendererLock$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?NotifyEndOfStream@CBaseRenderer@@QAEJXZ PROC		; CBaseRenderer::NotifyEndOfStream, COMDAT
; _this$ = ecx
; Line 1285
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?NotifyEndOfStream@CBaseRenderer@@QAEJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1286
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1287
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+116], 0
	je	SHORT $LN5@NotifyEndO
	push	1287					; 00000507H
	push	OFFSET $SG82123
	push	OFFSET $SG82124
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN5@NotifyEndO:
; Line 1288
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+216], 0
	je	SHORT $LN4@NotifyEndO
	push	1288					; 00000508H
	push	OFFSET $SG82126
	push	OFFSET $SG82127
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN4@NotifyEndO:
; Line 1292
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+100], 0
	jne	SHORT $LN3@NotifyEndO
; Line 1293
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+216], 0
	je	SHORT $LN2@NotifyEndO
	push	1293					; 0000050dH
	push	OFFSET $SG82130
	push	OFFSET $SG82131
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@NotifyEndO:
; Line 1294
	mov	DWORD PTR $T83689[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83689[ebp]
	jmp	SHORT $LN6@NotifyEndO
$LN3@NotifyEndO:
; Line 1298
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+216], 0
; Line 1305
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN1@NotifyEndO
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+80]
	call	?EOS@CRendererPosPassThru@@QAEJXZ	; CRendererPosPassThru::EOS
$LN1@NotifyEndO:
; Line 1306
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+116], 1
; Line 1307
	push	OFFSET $SG82134
	push	5
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 1308
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN8@NotifyEndO
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN9@NotifyEndO
$LN8@NotifyEndO:
	mov	DWORD PTR tv137[ebp], 0
$LN9@NotifyEndO:
	mov	ecx, DWORD PTR tv137[ebp]
	push	ecx
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NotifyEvent@CBaseFilter@@QAEJJJJ@Z	; CBaseFilter::NotifyEvent
	mov	DWORD PTR $T83690[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83690[ebp]
$LN6@NotifyEndO:
; Line 1309
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@NotifyEndO
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN14@NotifyEndO:
	DD	1
	DD	$LN13@NotifyEndO
$LN13@NotifyEndO:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN11@NotifyEndO
$LN11@NotifyEndO:
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?NotifyEndOfStream@CBaseRenderer@@QAEJXZ$0:
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?NotifyEndOfStream@CBaseRenderer@@QAEJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?NotifyEndOfStream@CBaseRenderer@@QAEJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?NotifyEndOfStream@CBaseRenderer@@QAEJXZ ENDP		; CBaseRenderer::NotifyEndOfStream
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ResetEndOfStream@CBaseRenderer@@UAEJXZ
_TEXT	SEGMENT
$T83705 = -20						; size = 4
_cRendererLock$ = -12					; size = 4
_this$ = -4						; size = 4
?ResetEndOfStream@CBaseRenderer@@UAEJXZ PROC		; CBaseRenderer::ResetEndOfStream, COMDAT
; _this$ = ecx
; Line 1321
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1322
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ResetEndOfStreamTimer@CBaseRenderer@@QAEXXZ ; CBaseRenderer::ResetEndOfStreamTimer
; Line 1323
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
; Line 1325
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+112], 0
; Line 1326
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+116], 0
; Line 1327
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+208], 0
	mov	DWORD PTR [eax+212], 0
; Line 1329
	mov	DWORD PTR $T83705[ebp], 0
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83705[ebp]
; Line 1330
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ResetEndOf
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@ResetEndOf:
	DD	1
	DD	$LN5@ResetEndOf
$LN5@ResetEndOf:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN4@ResetEndOf
$LN4@ResetEndOf:
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?ResetEndOfStream@CBaseRenderer@@UAEJXZ ENDP		; CBaseRenderer::ResetEndOfStream
_TEXT	ENDS
EXTRN	__imp__timeKillEvent@4:PROC
EXTRN	?CritCheckOut@@YGHPAVCCritSec@@@Z:PROC		; CritCheckOut
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ResetEndOfStreamTimer@CBaseRenderer@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ResetEndOfStreamTimer@CBaseRenderer@@QAEXXZ PROC	; CBaseRenderer::ResetEndOfStreamTimer, COMDAT
; _this$ = ecx
; Line 1336
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1337
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	call	?CritCheckOut@@YGHPAVCCritSec@@@Z	; CritCheckOut
	test	eax, eax
	jne	SHORT $LN2@ResetEndOf@2
	push	1337					; 00000539H
	push	OFFSET $SG82148
	push	OFFSET $SG82149
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@ResetEndOf@2:
; Line 1338
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+216], 0
	je	SHORT $LN3@ResetEndOf@2
; Line 1339
	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+216]
	push	eax
	call	DWORD PTR __imp__timeKillEvent@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1340
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+216], 0
$LN3@ResetEndOf@2:
; Line 1342
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ResetEndOfStreamTimer@CBaseRenderer@@QAEXXZ ENDP	; CBaseRenderer::ResetEndOfStreamTimer
_TEXT	ENDS
EXTRN	__imp__timeBeginPeriod@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?StartStreaming@CBaseRenderer@@UAEJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StartStreaming@CBaseRenderer@@UAEJXZ$0
__ehfuncinfo$?StartStreaming@CBaseRenderer@@UAEJXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?StartStreaming@CBaseRenderer@@UAEJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?StartStreaming@CBaseRenderer@@UAEJXZ
_TEXT	SEGMENT
$T83716 = -40						; size = 4
$T83715 = -36						; size = 4
$T83714 = -32						; size = 4
_cRendererLock$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?StartStreaming@CBaseRenderer@@UAEJXZ PROC		; CBaseRenderer::StartStreaming, COMDAT
; _this$ = ecx
; Line 1352
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?StartStreaming@CBaseRenderer@@UAEJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1353
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1354
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+100], 1
	jne	SHORT $LN6@StartStrea
; Line 1355
	mov	DWORD PTR $T83714[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83714[ebp]
	jmp	$LN7@StartStrea
$LN6@StartStrea:
; Line 1360
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+100], 1
; Line 1362
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__timeBeginPeriod@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1363
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1366
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	??BCAMEvent@@QBEPAXXZ			; CAMEvent::operator void *
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 258				; 00000102H
	je	SHORT $LN5@StartStrea
	push	1366					; 00000556H
	push	OFFSET $SG82159
	push	OFFSET $SG82160
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN5@StartStrea:
; Line 1367
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	je	SHORT $LN4@StartStrea
	push	1367					; 00000557H
	push	OFFSET $SG82163
	push	OFFSET $SG82164
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN4@StartStrea:
; Line 1371
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+108], 0
	jne	SHORT $LN3@StartStrea
; Line 1372
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+96]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83715[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83715[ebp]
	jmp	SHORT $LN7@StartStrea
$LN3@StartStrea:
; Line 1377
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+108], 0
	jne	SHORT $LN2@StartStrea
	push	1377					; 00000561H
	push	OFFSET $SG82168
	push	OFFSET $SG82169
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@StartStrea:
; Line 1378
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN1@StartStrea
; Line 1379
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 84					; 00000054H
	call	?Set@CAMEvent@@QAEXXZ			; CAMEvent::Set
$LN1@StartStrea:
; Line 1381
	mov	DWORD PTR $T83716[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83716[ebp]
$LN7@StartStrea:
; Line 1382
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@StartStrea
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN13@StartStrea:
	DD	1
	DD	$LN12@StartStrea
$LN12@StartStrea:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@StartStrea
$LN10@StartStrea:
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?StartStreaming@CBaseRenderer@@UAEJXZ$0:
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?StartStreaming@CBaseRenderer@@UAEJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?StartStreaming@CBaseRenderer@@UAEJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?StartStreaming@CBaseRenderer@@UAEJXZ ENDP		; CBaseRenderer::StartStreaming
EXTRN	__imp__timeEndPeriod@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?StopStreaming@CBaseRenderer@@UAEJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StopStreaming@CBaseRenderer@@UAEJXZ$0
__ehfuncinfo$?StopStreaming@CBaseRenderer@@UAEJXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?StopStreaming@CBaseRenderer@@UAEJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?StopStreaming@CBaseRenderer@@UAEJXZ
_TEXT	SEGMENT
$T83729 = -32						; size = 4
_cRendererLock$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?StopStreaming@CBaseRenderer@@UAEJXZ PROC		; CBaseRenderer::StopStreaming, COMDAT
; _this$ = ecx
; Line 1391
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?StopStreaming@CBaseRenderer@@UAEJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1392
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1393
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+116], 0
; Line 1395
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+100], 1
	jne	SHORT $LN1@StopStream
; Line 1396
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+100], 0
; Line 1397
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1398
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__timeEndPeriod@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@StopStream:
; Line 1400
	mov	DWORD PTR $T83729[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83729[ebp]
; Line 1401
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@StopStream
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@StopStream:
	DD	1
	DD	$LN7@StopStream
$LN7@StopStream:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN5@StopStream
$LN5@StopStream:
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?StopStreaming@CBaseRenderer@@UAEJXZ$0:
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?StopStreaming@CBaseRenderer@@UAEJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?StopStreaming@CBaseRenderer@@UAEJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?StopStreaming@CBaseRenderer@@UAEJXZ ENDP		; CBaseRenderer::StopStreaming
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetRepaintStatus@CBaseRenderer@@QAEXH@Z
_TEXT	SEGMENT
_cSampleLock$ = -12					; size = 4
_this$ = -4						; size = 4
_bRepaint$ = 8						; size = 4
?SetRepaintStatus@CBaseRenderer@@QAEXH@Z PROC		; CBaseRenderer::SetRepaintStatus, COMDAT
; _this$ = ecx
; Line 1413
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1414
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
; Line 1415
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _bRepaint$[ebp]
	mov	DWORD PTR [ecx+200], edx
; Line 1416
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetRepaint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SetRepaint:
	DD	1
	DD	$LN5@SetRepaint
$LN5@SetRepaint:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN4@SetRepaint
$LN4@SetRepaint:
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?SetRepaintStatus@CBaseRenderer@@QAEXH@Z ENDP		; CBaseRenderer::SetRepaintStatus
_TEXT	ENDS
PUBLIC	?SendNotifyWindow@CBaseRenderer@@QAEXPAUIPin@@PAUHWND__@@@Z ; CBaseRenderer::SendNotifyWindow
EXTRN	_IID_IMediaEventSink:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SendNotifyWindow@CBaseRenderer@@QAEXPAUIPin@@PAUHWND__@@@Z
_TEXT	SEGMENT
_hr$ = -20						; size = 4
_pSink$ = -12						; size = 4
_this$ = -4						; size = 4
_pPin$ = 8						; size = 4
_hwnd$ = 12						; size = 4
?SendNotifyWindow@CBaseRenderer@@QAEXPAUIPin@@PAUHWND__@@@Z PROC ; CBaseRenderer::SendNotifyWindow, COMDAT
; _this$ = ecx
; Line 1422
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1426
	mov	esi, esp
	lea	eax, DWORD PTR _pSink$[ebp]
	push	eax
	push	OFFSET _IID_IMediaEventSink
	mov	ecx, DWORD PTR _pPin$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pPin$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1427
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN1@SendNotify
; Line 1428
	mov	esi, esp
	push	0
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	push	25					; 00000019H
	mov	eax, DWORD PTR _pSink$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pSink$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1429
	mov	ecx, DWORD PTR _pSink$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pSink$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@SendNotify:
; Line 1431
	push	0
	mov	edx, DWORD PTR _hwnd$[ebp]
	push	edx
	push	25					; 00000019H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NotifyEvent@CBaseFilter@@QAEJJJJ@Z	; CBaseFilter::NotifyEvent
; Line 1432
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SendNotify
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN6@SendNotify:
	DD	1
	DD	$LN5@SendNotify
$LN5@SendNotify:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN4@SendNotify
$LN4@SendNotify:
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
?SendNotifyWindow@CBaseRenderer@@QAEXPAUIPin@@PAUHWND__@@@Z ENDP ; CBaseRenderer::SendNotifyWindow
_TEXT	ENDS
PUBLIC	?SendRepaint@CBaseRenderer@@QAEXXZ		; CBaseRenderer::SendRepaint
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SendRepaint@CBaseRenderer@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendRepaint@CBaseRenderer@@QAEXXZ$0
__ehfuncinfo$?SendRepaint@CBaseRenderer@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SendRepaint@CBaseRenderer@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?SendRepaint@CBaseRenderer@@QAEXXZ
_TEXT	SEGMENT
tv134 = -40						; size = 4
tv135 = -36						; size = 4
_pPin$82205 = -32					; size = 4
_cSampleLock$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?SendRepaint@CBaseRenderer@@QAEXXZ PROC			; CBaseRenderer::SendRepaint, COMDAT
; _this$ = ecx
; Line 1445
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SendRepaint@CBaseRenderer@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1446
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1447
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+120], 0
	jne	SHORT $LN6@SendRepain
	push	1447					; 000005a7H
	push	OFFSET $SG82198
	push	OFFSET $SG82199
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN6@SendRepain:
; Line 1456
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+96], 0
	jne	$LN5@SendRepain
; Line 1457
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	cmp	eax, 1
	jne	SHORT $LN5@SendRepain
; Line 1458
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+120]
	call	?IsFlushing@CBaseInputPin@@QAEHXZ	; CBaseInputPin::IsFlushing
	test	eax, eax
	jne	SHORT $LN5@SendRepain
; Line 1459
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsEndOfStream@CBaseRenderer@@QAEHXZ	; CBaseRenderer::IsEndOfStream
	test	eax, eax
	jne	SHORT $LN5@SendRepain
; Line 1460
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+200], 1
	jne	SHORT $LN5@SendRepain
; Line 1461
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	DWORD PTR tv135[ebp], ecx
	cmp	DWORD PTR tv135[ebp], 0
	je	SHORT $LN9@SendRepain
	mov	edx, DWORD PTR tv135[ebp]
	add	edx, 16					; 00000010H
	mov	DWORD PTR tv134[ebp], edx
	jmp	SHORT $LN10@SendRepain
$LN9@SendRepain:
	mov	DWORD PTR tv134[ebp], 0
$LN10@SendRepain:
	mov	eax, DWORD PTR tv134[ebp]
	mov	DWORD PTR _pPin$82205[ebp], eax
; Line 1462
	push	0
	mov	ecx, DWORD PTR _pPin$82205[ebp]
	push	ecx
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NotifyEvent@CBaseFilter@@QAEJJJJ@Z	; CBaseFilter::NotifyEvent
; Line 1463
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetRepaintStatus@CBaseRenderer@@QAEXH@Z ; CBaseRenderer::SetRepaintStatus
; Line 1464
	push	OFFSET $SG82208
	push	1
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
$LN5@SendRepain:
; Line 1470
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@SendRepain
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN15@SendRepain:
	DD	1
	DD	$LN14@SendRepain
$LN14@SendRepain:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN12@SendRepain
$LN12@SendRepain:
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SendRepaint@CBaseRenderer@@QAEXXZ$0:
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?SendRepaint@CBaseRenderer@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SendRepaint@CBaseRenderer@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?SendRepaint@CBaseRenderer@@QAEXXZ ENDP			; CBaseRenderer::SendRepaint
PUBLIC	?SetAbortSignal@CBaseRenderer@@QAEXH@Z		; CBaseRenderer::SetAbortSignal
PUBLIC	?OnDisplayChange@CBaseRenderer@@QAEHXZ		; CBaseRenderer::OnDisplayChange
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?OnDisplayChange@CBaseRenderer@@QAEHXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnDisplayChange@CBaseRenderer@@QAEHXZ$0
__ehfuncinfo$?OnDisplayChange@CBaseRenderer@@QAEHXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnDisplayChange@CBaseRenderer@@QAEHXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?OnDisplayChange@CBaseRenderer@@QAEHXZ
_TEXT	SEGMENT
tv85 = -48						; size = 4
tv86 = -44						; size = 4
$T83770 = -40						; size = 4
$T83767 = -36						; size = 4
_pPin$ = -32						; size = 4
_cSampleLock$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?OnDisplayChange@CBaseRenderer@@QAEHXZ PROC		; CBaseRenderer::OnDisplayChange, COMDAT
; _this$ = ecx
; Line 1480
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnDisplayChange@CBaseRenderer@@QAEHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1483
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1484
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+120]
	call	?IsConnected@CBasePin@@QAEHXZ		; CBasePin::IsConnected
	test	eax, eax
	jne	SHORT $LN1@OnDisplayC
; Line 1485
	mov	DWORD PTR $T83767[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83767[ebp]
	jmp	$LN2@OnDisplayC
$LN1@OnDisplayC:
; Line 1488
	push	OFFSET $SG82215
	push	1
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 1492
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	DWORD PTR tv86[ebp], eax
	cmp	DWORD PTR tv86[ebp], 0
	je	SHORT $LN4@OnDisplayC
	mov	ecx, DWORD PTR tv86[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR tv85[ebp], ecx
	jmp	SHORT $LN5@OnDisplayC
$LN4@OnDisplayC:
	mov	DWORD PTR tv85[ebp], 0
$LN5@OnDisplayC:
	mov	edx, DWORD PTR tv85[ebp]
	mov	DWORD PTR _pPin$[ebp], edx
; Line 1493
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR [ecx+16]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1494
	push	0
	mov	eax, DWORD PTR _pPin$[ebp]
	push	eax
	push	22					; 00000016H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NotifyEvent@CBaseFilter@@QAEJJJJ@Z	; CBaseFilter::NotifyEvent
; Line 1495
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetAbortSignal@CBaseRenderer@@QAEXH@Z	; CBaseRenderer::SetAbortSignal
; Line 1496
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1497
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	add	ecx, 16					; 00000010H
	mov	edx, DWORD PTR [edx+16]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1499
	mov	DWORD PTR $T83770[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83770[ebp]
$LN2@OnDisplayC:
; Line 1500
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@OnDisplayC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@OnDisplayC:
	DD	1
	DD	$LN9@OnDisplayC
$LN9@OnDisplayC:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN7@OnDisplayC
$LN7@OnDisplayC:
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnDisplayChange@CBaseRenderer@@QAEHXZ$0:
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?OnDisplayChange@CBaseRenderer@@QAEHXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnDisplayChange@CBaseRenderer@@QAEHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnDisplayChange@CBaseRenderer@@QAEHXZ ENDP		; CBaseRenderer::OnDisplayChange
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetAbortSignal@CBaseRenderer@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bAbort$ = 8						; size = 4
?SetAbortSignal@CBaseRenderer@@QAEXH@Z PROC		; CBaseRenderer::SetAbortSignal, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.h
; Line 125
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bAbort$[ebp]
	mov	DWORD PTR [eax+96], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetAbortSignal@CBaseRenderer@@QAEXH@Z ENDP		; CBaseRenderer::SetAbortSignal
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnRenderStart@CBaseRenderer@@UAEXPAUIMediaSample@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMediaSample$ = 8					; size = 4
?OnRenderStart@CBaseRenderer@@UAEXPAUIMediaSample@@@Z PROC ; CBaseRenderer::OnRenderStart, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.cpp
; Line 1508
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1525
	mov	esp, ebp
	pop	ebp
	ret	4
?OnRenderStart@CBaseRenderer@@UAEXPAUIMediaSample@@@Z ENDP ; CBaseRenderer::OnRenderStart
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnRenderEnd@CBaseRenderer@@UAEXPAUIMediaSample@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMediaSample$ = 8					; size = 4
?OnRenderEnd@CBaseRenderer@@UAEXPAUIMediaSample@@@Z PROC ; CBaseRenderer::OnRenderEnd, COMDAT
; _this$ = ecx
; Line 1532
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1540
	mov	esp, ebp
	pop	ebp
	ret	4
?OnRenderEnd@CBaseRenderer@@UAEXPAUIMediaSample@@@Z ENDP ; CBaseRenderer::OnRenderEnd
_TEXT	ENDS
PUBLIC	??_7CRendererInputPin@@6B@			; CRendererInputPin::`vftable'
PUBLIC	??_7CRendererInputPin@@6BIQualityControl@@@	; CRendererInputPin::`vftable'
PUBLIC	??_7CRendererInputPin@@6BIPin@@@		; CRendererInputPin::`vftable'
PUBLIC	??_7CRendererInputPin@@6BCUnknown@@@		; CRendererInputPin::`vftable'
PUBLIC	??_R4CRendererInputPin@@6BCUnknown@@@		; CRendererInputPin::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRendererInputPin@@@8			; CRendererInputPin `RTTI Type Descriptor'
PUBLIC	??_R3CRendererInputPin@@8			; CRendererInputPin::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRendererInputPin@@8			; CRendererInputPin::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRendererInputPin@@8		; CRendererInputPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CBaseInputPin@@8			; CBaseInputPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCBaseInputPin@@@8			; CBaseInputPin `RTTI Type Descriptor'
PUBLIC	??_R3CBaseInputPin@@8				; CBaseInputPin::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseInputPin@@8				; CBaseInputPin::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBasePin@@8			; CBasePin::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCBasePin@@@8				; CBasePin `RTTI Type Descriptor'
PUBLIC	??_R3CBasePin@@8				; CBasePin::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBasePin@@8				; CBasePin::`RTTI Base Class Array'
PUBLIC	??_R1BA@?0A@EA@IPin@@8				; IPin::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AUIPin@@@8				; IPin `RTTI Type Descriptor'
PUBLIC	??_R3IPin@@8					; IPin::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IPin@@8					; IPin::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IPin@@8				; IPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BE@?0A@EA@IQualityControl@@8		; IQualityControl::`RTTI Base Class Descriptor at (20,-1,0,64)'
PUBLIC	??_R0?AUIQualityControl@@@8			; IQualityControl `RTTI Type Descriptor'
PUBLIC	??_R3IQualityControl@@8				; IQualityControl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IQualityControl@@8				; IQualityControl::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IQualityControl@@8		; IQualityControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1KA@?0A@EA@IMemInputPin@@8			; IMemInputPin::`RTTI Base Class Descriptor at (160,-1,0,64)'
PUBLIC	??_R0?AUIMemInputPin@@@8			; IMemInputPin `RTTI Type Descriptor'
PUBLIC	??_R3IMemInputPin@@8				; IMemInputPin::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IMemInputPin@@8				; IMemInputPin::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IMemInputPin@@8			; IMemInputPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1KA@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (160,-1,0,66)'
PUBLIC	?Active@CRendererInputPin@@UAEJXZ		; CRendererInputPin::Active
PUBLIC	?Inactive@CRendererInputPin@@UAEJXZ		; CRendererInputPin::Inactive
PUBLIC	?CheckMediaType@CRendererInputPin@@UAEJPBVCMediaType@@@Z ; CRendererInputPin::CheckMediaType
PUBLIC	?SetMediaType@CRendererInputPin@@UAEJPBVCMediaType@@@Z ; CRendererInputPin::SetMediaType
PUBLIC	?BreakConnect@CRendererInputPin@@UAEJXZ		; CRendererInputPin::BreakConnect
PUBLIC	?CompleteConnect@CRendererInputPin@@UAEJPAUIPin@@@Z ; CRendererInputPin::CompleteConnect
PUBLIC	??_R4CRendererInputPin@@6BIPin@@@		; CRendererInputPin::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CBaseInputPin@@UAGJABU_GUID@@PAPAX@Z ; CBaseInputPin::QueryInterface
PUBLIC	?AddRef@CBaseInputPin@@UAGKXZ			; CBaseInputPin::AddRef
PUBLIC	?Release@CBaseInputPin@@UAGKXZ			; CBaseInputPin::Release
PUBLIC	?QueryId@CRendererInputPin@@UAGJPAPA_W@Z	; CRendererInputPin::QueryId
PUBLIC	?QueryInternalConnections@CBasePin@@UAGJPAPAUIPin@@PAK@Z ; CBasePin::QueryInternalConnections
PUBLIC	?EndOfStream@CRendererInputPin@@UAGJXZ		; CRendererInputPin::EndOfStream
PUBLIC	?BeginFlush@CRendererInputPin@@UAGJXZ		; CRendererInputPin::BeginFlush
PUBLIC	?EndFlush@CRendererInputPin@@UAGJXZ		; CRendererInputPin::EndFlush
PUBLIC	??_R4CRendererInputPin@@6BIQualityControl@@@	; CRendererInputPin::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CBaseInputPin@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:CBaseInputPin::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CBaseInputPin@@W3AGKXZ			; [thunk]:CBaseInputPin::AddRef`adjustor{4}'
PUBLIC	?Release@CBaseInputPin@@W3AGKXZ			; [thunk]:CBaseInputPin::Release`adjustor{4}'
PUBLIC	??_R4CRendererInputPin@@6B@			; CRendererInputPin::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CBaseInputPin@@WJA@AGJABU_GUID@@PAPAX@Z ; [thunk]:CBaseInputPin::QueryInterface`adjustor{144}'
PUBLIC	?AddRef@CBaseInputPin@@WJA@AGKXZ		; [thunk]:CBaseInputPin::AddRef`adjustor{144}'
PUBLIC	?Release@CBaseInputPin@@WJA@AGKXZ		; [thunk]:CBaseInputPin::Release`adjustor{144}'
PUBLIC	?Receive@CRendererInputPin@@UAGJPAUIMediaSample@@@Z ; CRendererInputPin::Receive
EXTRN	??1CBaseInputPin@@UAE@XZ:PROC			; CBaseInputPin::~CBaseInputPin
EXTRN	??0CBaseInputPin@@QAE@PA_WPAVCBaseFilter@@PAVCCritSec@@PAJPB_W@Z:PROC ; CBaseInputPin::CBaseInputPin
EXTRN	?NonDelegatingQueryInterface@CBaseInputPin@@UAGJABU_GUID@@PAPAX@Z:PROC ; CBaseInputPin::NonDelegatingQueryInterface
EXTRN	?NonDelegatingAddRef@CBasePin@@UAGKXZ:PROC	; CBasePin::NonDelegatingAddRef
EXTRN	?NonDelegatingRelease@CBasePin@@UAGKXZ:PROC	; CBasePin::NonDelegatingRelease
EXTRN	??_ECRendererInputPin@@UAEPAXI@Z:PROC		; CRendererInputPin::`vector deleting destructor'
EXTRN	?GetMediaTypeVersion@CBasePin@@UAEJXZ:PROC	; CBasePin::GetMediaTypeVersion
EXTRN	?Run@CBasePin@@UAEJ_J@Z:PROC			; CBasePin::Run
EXTRN	?CheckConnect@CBasePin@@UAEJPAUIPin@@@Z:PROC	; CBasePin::CheckConnect
EXTRN	?GetMediaType@CBasePin@@UAEJHPAVCMediaType@@@Z:PROC ; CBasePin::GetMediaType
EXTRN	?CheckStreaming@CBaseInputPin@@UAEJXZ:PROC	; CBaseInputPin::CheckStreaming
EXTRN	?Connect@CBasePin@@UAGJPAUIPin@@PBU_AMMediaType@@@Z:PROC ; CBasePin::Connect
EXTRN	?ReceiveConnection@CBasePin@@UAGJPAUIPin@@PBU_AMMediaType@@@Z:PROC ; CBasePin::ReceiveConnection
EXTRN	?Disconnect@CBasePin@@UAGJXZ:PROC		; CBasePin::Disconnect
EXTRN	?ConnectedTo@CBasePin@@UAGJPAPAUIPin@@@Z:PROC	; CBasePin::ConnectedTo
EXTRN	?ConnectionMediaType@CBasePin@@UAGJPAU_AMMediaType@@@Z:PROC ; CBasePin::ConnectionMediaType
EXTRN	?QueryPinInfo@CBasePin@@UAGJPAU_PinInfo@@@Z:PROC ; CBasePin::QueryPinInfo
EXTRN	?QueryDirection@CBasePin@@UAGJPAW4_PinDirection@@@Z:PROC ; CBasePin::QueryDirection
EXTRN	?QueryAccept@CBasePin@@UAGJPBU_AMMediaType@@@Z:PROC ; CBasePin::QueryAccept
EXTRN	?EnumMediaTypes@CBasePin@@UAGJPAPAUIEnumMediaTypes@@@Z:PROC ; CBasePin::EnumMediaTypes
EXTRN	?NewSegment@CBasePin@@UAGJ_J0N@Z:PROC		; CBasePin::NewSegment
EXTRN	?Notify@CBaseInputPin@@UAGJPAUIBaseFilter@@UtagQuality@@@Z:PROC ; CBaseInputPin::Notify
EXTRN	?SetSink@CBasePin@@UAGJPAUIQualityControl@@@Z:PROC ; CBasePin::SetSink
EXTRN	?GetAllocator@CBaseInputPin@@UAGJPAPAUIMemAllocator@@@Z:PROC ; CBaseInputPin::GetAllocator
EXTRN	?NotifyAllocator@CBaseInputPin@@UAGJPAUIMemAllocator@@H@Z:PROC ; CBaseInputPin::NotifyAllocator
EXTRN	?GetAllocatorRequirements@CBaseInputPin@@UAGJPAU_AllocatorProperties@@@Z:PROC ; CBaseInputPin::GetAllocatorRequirements
EXTRN	?ReceiveMultiple@CBaseInputPin@@UAGJPAPAUIMediaSample@@JPAJ@Z:PROC ; CBaseInputPin::ReceiveMultiple
EXTRN	?ReceiveCanBlock@CBaseInputPin@@UAGJXZ:PROC	; CBaseInputPin::ReceiveCanBlock
;	COMDAT ??_R4CRendererInputPin@@6B@
rdata$r	SEGMENT
??_R4CRendererInputPin@@6B@ DD 00H			; CRendererInputPin::`RTTI Complete Object Locator'
	DD	0a0H
	DD	00H
	DD	FLAT:??_R0?AVCRendererInputPin@@@8
	DD	FLAT:??_R3CRendererInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R4CRendererInputPin@@6BIQualityControl@@@
rdata$r	SEGMENT
??_R4CRendererInputPin@@6BIQualityControl@@@ DD 00H	; CRendererInputPin::`RTTI Complete Object Locator'
	DD	014H
	DD	00H
	DD	FLAT:??_R0?AVCRendererInputPin@@@8
	DD	FLAT:??_R3CRendererInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R4CRendererInputPin@@6BIPin@@@
rdata$r	SEGMENT
??_R4CRendererInputPin@@6BIPin@@@ DD 00H		; CRendererInputPin::`RTTI Complete Object Locator'
	DD	010H
	DD	00H
	DD	FLAT:??_R0?AVCRendererInputPin@@@8
	DD	FLAT:??_R3CRendererInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R1KA@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1KA@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (160,-1,0,66)'
	DD	00H
	DD	0a0H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IMemInputPin@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IMemInputPin@@8 DD FLAT:??_R0?AUIMemInputPin@@@8 ; IMemInputPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IMemInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R2IMemInputPin@@8
rdata$r	SEGMENT
??_R2IMemInputPin@@8 DD FLAT:??_R1A@?0A@EA@IMemInputPin@@8 ; IMemInputPin::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IMemInputPin@@8
rdata$r	SEGMENT
??_R3IMemInputPin@@8 DD 00H				; IMemInputPin::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IMemInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIMemInputPin@@@8
_DATA	SEGMENT
??_R0?AUIMemInputPin@@@8 DD FLAT:??_7type_info@@6B@	; IMemInputPin `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIMemInputPin@@', 00H
_DATA	ENDS
;	COMDAT ??_R1KA@?0A@EA@IMemInputPin@@8
rdata$r	SEGMENT
??_R1KA@?0A@EA@IMemInputPin@@8 DD FLAT:??_R0?AUIMemInputPin@@@8 ; IMemInputPin::`RTTI Base Class Descriptor at (160,-1,0,64)'
	DD	01H
	DD	0a0H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IMemInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IQualityControl@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IQualityControl@@8 DD FLAT:??_R0?AUIQualityControl@@@8 ; IQualityControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IQualityControl@@8
rdata$r	ENDS
;	COMDAT ??_R2IQualityControl@@8
rdata$r	SEGMENT
??_R2IQualityControl@@8 DD FLAT:??_R1A@?0A@EA@IQualityControl@@8 ; IQualityControl::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IQualityControl@@8
rdata$r	SEGMENT
??_R3IQualityControl@@8 DD 00H				; IQualityControl::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IQualityControl@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIQualityControl@@@8
_DATA	SEGMENT
??_R0?AUIQualityControl@@@8 DD FLAT:??_7type_info@@6B@	; IQualityControl `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIQualityControl@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BE@?0A@EA@IQualityControl@@8
rdata$r	SEGMENT
??_R1BE@?0A@EA@IQualityControl@@8 DD FLAT:??_R0?AUIQualityControl@@@8 ; IQualityControl::`RTTI Base Class Descriptor at (20,-1,0,64)'
	DD	01H
	DD	014H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IQualityControl@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IPin@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IPin@@8 DD FLAT:??_R0?AUIPin@@@8		; IPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IPin@@8
rdata$r	ENDS
;	COMDAT ??_R2IPin@@8
rdata$r	SEGMENT
??_R2IPin@@8 DD	FLAT:??_R1A@?0A@EA@IPin@@8		; IPin::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IPin@@8
rdata$r	SEGMENT
??_R3IPin@@8 DD	00H					; IPin::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IPin@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIPin@@@8
_DATA	SEGMENT
??_R0?AUIPin@@@8 DD FLAT:??_7type_info@@6B@		; IPin `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIPin@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BA@?0A@EA@IPin@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@IPin@@8 DD FLAT:??_R0?AUIPin@@@8		; IPin::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	01H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IPin@@8
rdata$r	ENDS
;	COMDAT ??_R2CBasePin@@8
rdata$r	SEGMENT
??_R2CBasePin@@8 DD FLAT:??_R1A@?0A@EA@CBasePin@@8	; CBasePin::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CUnknown@@8
	DD	FLAT:??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	FLAT:??_R13?0A@EA@CBaseObject@@8
	DD	FLAT:??_R1BA@?0A@EA@IPin@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@IQualityControl@@8
	DD	FLAT:??_R1BE@?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CBasePin@@8
rdata$r	SEGMENT
??_R3CBasePin@@8 DD 00H					; CBasePin::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	08H
	DD	FLAT:??_R2CBasePin@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBasePin@@@8
_DATA	SEGMENT
??_R0?AVCBasePin@@@8 DD FLAT:??_7type_info@@6B@		; CBasePin `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBasePin@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CBasePin@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBasePin@@8 DD FLAT:??_R0?AVCBasePin@@@8	; CBasePin::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	07H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBasePin@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseInputPin@@8
rdata$r	SEGMENT
??_R2CBaseInputPin@@8 DD FLAT:??_R1A@?0A@EA@CBaseInputPin@@8 ; CBaseInputPin::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBasePin@@8
	DD	FLAT:??_R1A@?0A@EA@CUnknown@@8
	DD	FLAT:??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	FLAT:??_R13?0A@EA@CBaseObject@@8
	DD	FLAT:??_R1BA@?0A@EA@IPin@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@IQualityControl@@8
	DD	FLAT:??_R1BE@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1KA@?0A@EA@IMemInputPin@@8
	DD	FLAT:??_R1KA@?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CBaseInputPin@@8
rdata$r	SEGMENT
??_R3CBaseInputPin@@8 DD 00H				; CBaseInputPin::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	0bH
	DD	FLAT:??_R2CBaseInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseInputPin@@@8
_DATA	SEGMENT
??_R0?AVCBaseInputPin@@@8 DD FLAT:??_7type_info@@6B@	; CBaseInputPin `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseInputPin@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseInputPin@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseInputPin@@8 DD FLAT:??_R0?AVCBaseInputPin@@@8 ; CBaseInputPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRendererInputPin@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRendererInputPin@@8 DD FLAT:??_R0?AVCRendererInputPin@@@8 ; CRendererInputPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0bH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRendererInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R2CRendererInputPin@@8
rdata$r	SEGMENT
??_R2CRendererInputPin@@8 DD FLAT:??_R1A@?0A@EA@CRendererInputPin@@8 ; CRendererInputPin::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseInputPin@@8
	DD	FLAT:??_R1A@?0A@EA@CBasePin@@8
	DD	FLAT:??_R1A@?0A@EA@CUnknown@@8
	DD	FLAT:??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	FLAT:??_R13?0A@EA@CBaseObject@@8
	DD	FLAT:??_R1BA@?0A@EA@IPin@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@IQualityControl@@8
	DD	FLAT:??_R1BE@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1KA@?0A@EA@IMemInputPin@@8
	DD	FLAT:??_R1KA@?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CRendererInputPin@@8
rdata$r	SEGMENT
??_R3CRendererInputPin@@8 DD 00H			; CRendererInputPin::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0cH
	DD	FLAT:??_R2CRendererInputPin@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRendererInputPin@@@8
_DATA	SEGMENT
??_R0?AVCRendererInputPin@@@8 DD FLAT:??_7type_info@@6B@ ; CRendererInputPin `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRendererInputPin@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CRendererInputPin@@6BCUnknown@@@
rdata$r	SEGMENT
??_R4CRendererInputPin@@6BCUnknown@@@ DD 00H		; CRendererInputPin::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRendererInputPin@@@8
	DD	FLAT:??_R3CRendererInputPin@@8
rdata$r	ENDS
;	COMDAT ??_7CRendererInputPin@@6B@
CONST	SEGMENT
??_7CRendererInputPin@@6B@ DD FLAT:??_R4CRendererInputPin@@6B@ ; CRendererInputPin::`vftable'
	DD	FLAT:?QueryInterface@CBaseInputPin@@WJA@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CBaseInputPin@@WJA@AGKXZ
	DD	FLAT:?Release@CBaseInputPin@@WJA@AGKXZ
	DD	FLAT:?GetAllocator@CBaseInputPin@@UAGJPAPAUIMemAllocator@@@Z
	DD	FLAT:?NotifyAllocator@CBaseInputPin@@UAGJPAUIMemAllocator@@H@Z
	DD	FLAT:?GetAllocatorRequirements@CBaseInputPin@@UAGJPAU_AllocatorProperties@@@Z
	DD	FLAT:?Receive@CRendererInputPin@@UAGJPAUIMediaSample@@@Z
	DD	FLAT:?ReceiveMultiple@CBaseInputPin@@UAGJPAPAUIMediaSample@@JPAJ@Z
	DD	FLAT:?ReceiveCanBlock@CBaseInputPin@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7CRendererInputPin@@6BIQualityControl@@@
CONST	SEGMENT
??_7CRendererInputPin@@6BIQualityControl@@@ DD FLAT:??_R4CRendererInputPin@@6BIQualityControl@@@ ; CRendererInputPin::`vftable'
	DD	FLAT:?QueryInterface@CBaseInputPin@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CBaseInputPin@@W3AGKXZ
	DD	FLAT:?Release@CBaseInputPin@@W3AGKXZ
	DD	FLAT:?Notify@CBaseInputPin@@UAGJPAUIBaseFilter@@UtagQuality@@@Z
	DD	FLAT:?SetSink@CBasePin@@UAGJPAUIQualityControl@@@Z
CONST	ENDS
;	COMDAT ??_7CRendererInputPin@@6BIPin@@@
CONST	SEGMENT
??_7CRendererInputPin@@6BIPin@@@ DD FLAT:??_R4CRendererInputPin@@6BIPin@@@ ; CRendererInputPin::`vftable'
	DD	FLAT:?QueryInterface@CBaseInputPin@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CBaseInputPin@@UAGKXZ
	DD	FLAT:?Release@CBaseInputPin@@UAGKXZ
	DD	FLAT:?Connect@CBasePin@@UAGJPAUIPin@@PBU_AMMediaType@@@Z
	DD	FLAT:?ReceiveConnection@CBasePin@@UAGJPAUIPin@@PBU_AMMediaType@@@Z
	DD	FLAT:?Disconnect@CBasePin@@UAGJXZ
	DD	FLAT:?ConnectedTo@CBasePin@@UAGJPAPAUIPin@@@Z
	DD	FLAT:?ConnectionMediaType@CBasePin@@UAGJPAU_AMMediaType@@@Z
	DD	FLAT:?QueryPinInfo@CBasePin@@UAGJPAU_PinInfo@@@Z
	DD	FLAT:?QueryDirection@CBasePin@@UAGJPAW4_PinDirection@@@Z
	DD	FLAT:?QueryId@CRendererInputPin@@UAGJPAPA_W@Z
	DD	FLAT:?QueryAccept@CBasePin@@UAGJPBU_AMMediaType@@@Z
	DD	FLAT:?EnumMediaTypes@CBasePin@@UAGJPAPAUIEnumMediaTypes@@@Z
	DD	FLAT:?QueryInternalConnections@CBasePin@@UAGJPAPAUIPin@@PAK@Z
	DD	FLAT:?EndOfStream@CRendererInputPin@@UAGJXZ
	DD	FLAT:?BeginFlush@CRendererInputPin@@UAGJXZ
	DD	FLAT:?EndFlush@CRendererInputPin@@UAGJXZ
	DD	FLAT:?NewSegment@CBasePin@@UAGJ_J0N@Z
CONST	ENDS
;	COMDAT ??_7CRendererInputPin@@6BCUnknown@@@
CONST	SEGMENT
??_7CRendererInputPin@@6BCUnknown@@@ DD FLAT:??_R4CRendererInputPin@@6BCUnknown@@@ ; CRendererInputPin::`vftable'
	DD	FLAT:?NonDelegatingQueryInterface@CBaseInputPin@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?NonDelegatingAddRef@CBasePin@@UAGKXZ
	DD	FLAT:?NonDelegatingRelease@CBasePin@@UAGKXZ
	DD	FLAT:??_ECRendererInputPin@@UAEPAXI@Z
	DD	FLAT:?GetMediaTypeVersion@CBasePin@@UAEJXZ
	DD	FLAT:?Active@CRendererInputPin@@UAEJXZ
	DD	FLAT:?Inactive@CRendererInputPin@@UAEJXZ
	DD	FLAT:?Run@CBasePin@@UAEJ_J@Z
	DD	FLAT:?CheckMediaType@CRendererInputPin@@UAEJPBVCMediaType@@@Z
	DD	FLAT:?SetMediaType@CRendererInputPin@@UAEJPBVCMediaType@@@Z
	DD	FLAT:?CheckConnect@CBasePin@@UAEJPAUIPin@@@Z
	DD	FLAT:?BreakConnect@CRendererInputPin@@UAEJXZ
	DD	FLAT:?CompleteConnect@CRendererInputPin@@UAEJPAUIPin@@@Z
	DD	FLAT:?GetMediaType@CBasePin@@UAEJHPAVCMediaType@@@Z
	DD	FLAT:?CheckStreaming@CBaseInputPin@@UAEJXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CRendererInputPin@@QAE@PAVCBaseRenderer@@PAJPB_W@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CRendererInputPin@@QAE@PAVCBaseRenderer@@PAJPB_W@Z$0
__ehfuncinfo$??0CRendererInputPin@@QAE@PAVCBaseRenderer@@PAJPB_W@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CRendererInputPin@@QAE@PAVCBaseRenderer@@PAJPB_W@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CRendererInputPin@@QAE@PAVCBaseRenderer@@PAJPB_W@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pRenderer$ = 8						; size = 4
_phr$ = 12						; size = 4
_pPinName$ = 16						; size = 4
??0CRendererInputPin@@QAE@PAVCBaseRenderer@@PAJPB_W@Z PROC ; CRendererInputPin::CRendererInputPin, COMDAT
; _this$ = ecx
; Line 1555
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CRendererInputPin@@QAE@PAVCBaseRenderer@@PAJPB_W@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pPinName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _phr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pRenderer$[ebp]
	add	edx, 124				; 0000007cH
	push	edx
	mov	eax, DWORD PTR _pRenderer$[ebp]
	push	eax
	push	OFFSET $SG82235
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseInputPin@@QAE@PA_WPAVCBaseFilter@@PAVCCritSec@@PAJPB_W@Z ; CBaseInputPin::CBaseInputPin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7CRendererInputPin@@6BCUnknown@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], OFFSET ??_7CRendererInputPin@@6BIPin@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], OFFSET ??_7CRendererInputPin@@6BIQualityControl@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+160], OFFSET ??_7CRendererInputPin@@6B@
; Line 1556
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pRenderer$[ebp]
	mov	DWORD PTR [edx+224], eax
; Line 1557
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+224], 0
	jne	SHORT $LN2@CRendererI
	push	1557					; 00000615H
	push	OFFSET $SG82237
	push	OFFSET $SG82238
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@CRendererI:
; Line 1558
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CRendererInputPin@@QAE@PAVCBaseRenderer@@PAJPB_W@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseInputPin@@UAE@XZ		; CBaseInputPin::~CBaseInputPin
__ehhandler$??0CRendererInputPin@@QAE@PAVCBaseRenderer@@PAJPB_W@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CRendererInputPin@@QAE@PAVCBaseRenderer@@PAJPB_W@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CRendererInputPin@@QAE@PAVCBaseRenderer@@PAJPB_W@Z ENDP ; CRendererInputPin::CRendererInputPin
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInternalConnections@CBasePin@@UAGJPAPAUIPin@@PAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_apPin$ = 12						; size = 4
_nPin$ = 16						; size = 4
?QueryInternalConnections@CBasePin@@UAGJPAPAUIPin@@PAK@Z PROC ; CBasePin::QueryInternalConnections, COMDAT
; File c:\downloads\mediapoint\src\filters\baseclasses\amfilter.h
; Line 472
	push	ebp
	mov	ebp, esp
	mov	eax, -2147467263			; 80004001H
	pop	ebp
	ret	12					; 0000000cH
?QueryInternalConnections@CBasePin@@UAGJPAPAUIPin@@PAK@Z ENDP ; CBasePin::QueryInternalConnections
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CBaseInputPin@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv72 = -4						; size = 4
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?QueryInterface@CBaseInputPin@@UAGJABU_GUID@@PAPAX@Z PROC ; CBaseInputPin::QueryInterface, COMDAT
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CBaseInputPin@@UAGJABU_GUID@@PAPAX@Z ENDP ; CBaseInputPin::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CBaseInputPin@@UAGKXZ
_TEXT	SEGMENT
tv72 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CBaseInputPin@@UAGKXZ PROC			; CBaseInputPin::AddRef, COMDAT
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv72[ebp], eax
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CBaseInputPin@@UAGKXZ ENDP			; CBaseInputPin::AddRef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CBaseInputPin@@UAGKXZ
_TEXT	SEGMENT
tv72 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CBaseInputPin@@UAGKXZ PROC			; CBaseInputPin::Release, COMDAT
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv72[ebp], eax
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CBaseInputPin@@UAGKXZ ENDP			; CBaseInputPin::Release
_TEXT	ENDS
PUBLIC	??1CRendererInputPin@@UAE@XZ			; CRendererInputPin::~CRendererInputPin
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCRendererInputPin@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCRendererInputPin@@UAEPAXI@Z PROC			; CRendererInputPin::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CRendererInputPin@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCRendererInputPin@@UAEPAXI@Z ENDP			; CRendererInputPin::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??1CRendererInputPin@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CRendererInputPin@@UAE@XZ PROC			; CRendererInputPin::~CRendererInputPin, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBaseInputPin@@UAE@XZ		; CBaseInputPin::~CBaseInputPin
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CRendererInputPin@@UAE@XZ ENDP			; CRendererInputPin::~CRendererInputPin
_TEXT	ENDS
EXTRN	?EndOfStream@CBasePin@@UAGJXZ:PROC		; CBasePin::EndOfStream
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.cpp
xdata$x	SEGMENT
__unwindtable$?EndOfStream@CRendererInputPin@@UAGJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EndOfStream@CRendererInputPin@@UAGJXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?EndOfStream@CRendererInputPin@@UAGJXZ$1
__ehfuncinfo$?EndOfStream@CRendererInputPin@@UAGJXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?EndOfStream@CRendererInputPin@@UAGJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?EndOfStream@CRendererInputPin@@UAGJXZ
_TEXT	SEGMENT
$T83812 = -48						; size = 4
$T83811 = -44						; size = 4
_hr$ = -40						; size = 4
_cSampleLock$ = -32					; size = 4
_cRendererLock$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?EndOfStream@CRendererInputPin@@UAGJXZ PROC		; CRendererInputPin::EndOfStream, COMDAT
; Line 1564
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?EndOfStream@CRendererInputPin@@UAGJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1565
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	add	ecx, 124				; 0000007cH
	push	ecx
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1566
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+208]
	add	eax, 160				; 000000a0H
	push	eax
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1570
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx-16]
	mov	esi, esp
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1571
	cmp	DWORD PTR _hr$[ebp], 0
	je	SHORT $LN2@EndOfStrea@2
; Line 1572
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T83811[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83811[ebp]
	jmp	SHORT $LN3@EndOfStrea@2
$LN2@EndOfStrea@2:
; Line 1577
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+208]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+104]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1578
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN1@EndOfStrea@2
; Line 1579
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?EndOfStream@CBasePin@@UAGJXZ		; CBasePin::EndOfStream
	mov	DWORD PTR _hr$[ebp], eax
$LN1@EndOfStrea@2:
; Line 1581
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T83812[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83812[ebp]
$LN3@EndOfStrea@2:
; Line 1582
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@EndOfStrea@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN11@EndOfStrea@2:
	DD	2
	DD	$LN10@EndOfStrea@2
$LN10@EndOfStrea@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN7@EndOfStrea@2
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN8@EndOfStrea@2
$LN8@EndOfStrea@2:
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN7@EndOfStrea@2:
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?EndOfStream@CRendererInputPin@@UAGJXZ$0:
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__unwindfunclet$?EndOfStream@CRendererInputPin@@UAGJXZ$1:
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?EndOfStream@CRendererInputPin@@UAGJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?EndOfStream@CRendererInputPin@@UAGJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?EndOfStream@CRendererInputPin@@UAGJXZ ENDP		; CRendererInputPin::EndOfStream
EXTRN	?BeginFlush@CBaseInputPin@@UAGJXZ:PROC		; CBaseInputPin::BeginFlush
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?BeginFlush@CRendererInputPin@@UAGJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BeginFlush@CRendererInputPin@@UAGJXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?BeginFlush@CRendererInputPin@@UAGJXZ$1
__ehfuncinfo$?BeginFlush@CRendererInputPin@@UAGJXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?BeginFlush@CRendererInputPin@@UAGJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?BeginFlush@CRendererInputPin@@UAGJXZ
_TEXT	SEGMENT
$T83827 = -40						; size = 4
_cSampleLock$82260 = -32				; size = 4
_cRendererLock$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?BeginFlush@CRendererInputPin@@UAGJXZ PROC		; CRendererInputPin::BeginFlush, COMDAT
; Line 1592
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BeginFlush@CRendererInputPin@@UAGJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1593
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	add	ecx, 124				; 0000007cH
	push	ecx
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1595
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+208]
	add	eax, 160				; 000000a0H
	push	eax
	lea	ecx, DWORD PTR _cSampleLock$82260[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1596
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?BeginFlush@CBaseInputPin@@UAGJXZ	; CBaseInputPin::BeginFlush
; Line 1597
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+208]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+208]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+132]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1598
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _cSampleLock$82260[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
; Line 1599
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+208]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T83827[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83827[ebp]
; Line 1600
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@BeginFlush@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN9@BeginFlush@2:
	DD	2
	DD	$LN8@BeginFlush@2
$LN8@BeginFlush@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN5@BeginFlush@2
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN6@BeginFlush@2
$LN6@BeginFlush@2:
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN5@BeginFlush@2:
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?BeginFlush@CRendererInputPin@@UAGJXZ$0:
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__unwindfunclet$?BeginFlush@CRendererInputPin@@UAGJXZ$1:
	lea	ecx, DWORD PTR _cSampleLock$82260[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?BeginFlush@CRendererInputPin@@UAGJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BeginFlush@CRendererInputPin@@UAGJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?BeginFlush@CRendererInputPin@@UAGJXZ ENDP		; CRendererInputPin::BeginFlush
EXTRN	?EndFlush@CBaseInputPin@@UAGJXZ:PROC		; CBaseInputPin::EndFlush
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?EndFlush@CRendererInputPin@@UAGJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EndFlush@CRendererInputPin@@UAGJXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?EndFlush@CRendererInputPin@@UAGJXZ$1
__ehfuncinfo$?EndFlush@CRendererInputPin@@UAGJXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?EndFlush@CRendererInputPin@@UAGJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?EndFlush@CRendererInputPin@@UAGJXZ
_TEXT	SEGMENT
$T83842 = -44						; size = 4
_hr$ = -40						; size = 4
_cSampleLock$ = -32					; size = 4
_cRendererLock$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
?EndFlush@CRendererInputPin@@UAGJXZ PROC		; CRendererInputPin::EndFlush, COMDAT
; Line 1606
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?EndFlush@CRendererInputPin@@UAGJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1607
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	add	ecx, 124				; 0000007cH
	push	ecx
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1608
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+208]
	add	eax, 160				; 000000a0H
	push	eax
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1610
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+208]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+136]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1611
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN1@EndFlush@2
; Line 1612
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?EndFlush@CBaseInputPin@@UAGJXZ		; CBaseInputPin::EndFlush
	mov	DWORD PTR _hr$[ebp], eax
$LN1@EndFlush@2:
; Line 1614
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T83842[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83842[ebp]
; Line 1615
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@EndFlush@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN10@EndFlush@2:
	DD	2
	DD	$LN9@EndFlush@2
$LN9@EndFlush@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@EndFlush@2
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@EndFlush@2
$LN7@EndFlush@2:
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN6@EndFlush@2:
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?EndFlush@CRendererInputPin@@UAGJXZ$0:
	lea	ecx, DWORD PTR _cRendererLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__unwindfunclet$?EndFlush@CRendererInputPin@@UAGJXZ$1:
	lea	ecx, DWORD PTR _cSampleLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?EndFlush@CRendererInputPin@@UAGJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?EndFlush@CRendererInputPin@@UAGJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?EndFlush@CRendererInputPin@@UAGJXZ ENDP		; CRendererInputPin::EndFlush
PUBLIC	?IsEndOfStreamDelivered@CBaseRenderer@@QAEHXZ	; CBaseRenderer::IsEndOfStreamDelivered
PUBLIC	?IsStreaming@CBaseRenderer@@QAEHXZ		; CBaseRenderer::IsStreaming
PUBLIC	?IsStopped@CBasePin@@QAEHXZ			; CBasePin::IsStopped
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Receive@CRendererInputPin@@UAGJPAUIMediaSample@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Receive@CRendererInputPin@@UAGJPAUIMediaSample@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Receive@CRendererInputPin@@UAGJPAUIMediaSample@@@Z$1
__ehfuncinfo$?Receive@CRendererInputPin@@UAGJPAUIMediaSample@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Receive@CRendererInputPin@@UAGJPAUIMediaSample@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Receive@CRendererInputPin@@UAGJPAUIMediaSample@@@Z
_TEXT	SEGMENT
_alRendererLock$82283 = -36				; size = 4
_cRendererLock$82281 = -24				; size = 4
_hr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_pSample$ = 12						; size = 4
?Receive@CRendererInputPin@@UAGJPAUIMediaSample@@@Z PROC ; CRendererInputPin::Receive, COMDAT
; Line 1621
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Receive@CRendererInputPin@@UAGJPAUIMediaSample@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1622
	mov	esi, esp
	mov	eax, DWORD PTR _pSample$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+156]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1623
	cmp	DWORD PTR _hr$[ebp], 0
	jge	$LN4@Receive@2
; Line 1627
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	add	edx, 160				; 000000a0H
	push	edx
	call	?CritCheckOut@@YGHPAVCCritSec@@@Z	; CritCheckOut
	test	eax, eax
	jne	SHORT $LN3@Receive@2
	push	1627					; 0000065bH
	push	OFFSET $SG82279
	push	OFFSET $SG82280
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN3@Receive@2:
; Line 1633
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	add	ecx, 124				; 0000007cH
	push	ecx
	lea	ecx, DWORD PTR _cRendererLock$82281[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1639
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 160				; 000000a0H
	call	?IsStopped@CBasePin@@QAEHXZ		; CBasePin::IsStopped
	test	eax, eax
	jne	$LN2@Receive@2
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 160				; 000000a0H
	call	?IsFlushing@CBaseInputPin@@QAEHXZ	; CBaseInputPin::IsFlushing
	test	eax, eax
	jne	SHORT $LN2@Receive@2
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	cmp	DWORD PTR [eax+96], 0
	jne	SHORT $LN2@Receive@2
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx-120]
	test	edx, edx
	jne	SHORT $LN2@Receive@2
; Line 1644
	push	0
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+64]
	call	?NotifyEvent@CBaseFilter@@QAEJJJJ@Z	; CBaseFilter::NotifyEvent
; Line 1647
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	add	eax, 160				; 000000a0H
	push	eax
	lea	ecx, DWORD PTR _alRendererLock$82283[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1648
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+64]
	call	?IsStreaming@CBaseRenderer@@QAEHXZ	; CBaseRenderer::IsStreaming
	test	eax, eax
	je	SHORT $LN1@Receive@2
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+64]
	call	?IsEndOfStreamDelivered@CBaseRenderer@@QAEHXZ ; CBaseRenderer::IsEndOfStreamDelivered
	test	eax, eax
	jne	SHORT $LN1@Receive@2
; Line 1649
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	call	?NotifyEndOfStream@CBaseRenderer@@QAEJXZ ; CBaseRenderer::NotifyEndOfStream
$LN1@Receive@2:
; Line 1651
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _alRendererLock$82283[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
; Line 1653
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx-120], 1
$LN2@Receive@2:
; Line 1655
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cRendererLock$82281[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
$LN4@Receive@2:
; Line 1658
	mov	eax, DWORD PTR _hr$[ebp]
; Line 1659
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Receive@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN13@Receive@2:
	DD	2
	DD	$LN12@Receive@2
$LN12@Receive@2:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN9@Receive@2
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN10@Receive@2
$LN10@Receive@2:
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN9@Receive@2:
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Receive@CRendererInputPin@@UAGJPAUIMediaSample@@@Z$0:
	lea	ecx, DWORD PTR _cRendererLock$82281[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__unwindfunclet$?Receive@CRendererInputPin@@UAGJPAUIMediaSample@@@Z$1:
	lea	ecx, DWORD PTR _alRendererLock$82283[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?Receive@CRendererInputPin@@UAGJPAUIMediaSample@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Receive@CRendererInputPin@@UAGJPAUIMediaSample@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Receive@CRendererInputPin@@UAGJPAUIMediaSample@@@Z ENDP ; CRendererInputPin::Receive
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsStopped@CBasePin@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsStopped@CBasePin@@QAEHXZ PROC			; CBasePin::IsStopped, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\amfilter.h
; Line 504
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 505
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	xor	eax, eax
	cmp	DWORD PTR [ecx+24], 0
	sete	al
; Line 506
	mov	esp, ebp
	pop	ebp
	ret	0
?IsStopped@CBasePin@@QAEHXZ ENDP			; CBasePin::IsStopped
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsEndOfStreamDelivered@CBaseRenderer@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsEndOfStreamDelivered@CBaseRenderer@@QAEHXZ PROC	; CBaseRenderer::IsEndOfStreamDelivered, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.h
; Line 123
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+116]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEndOfStreamDelivered@CBaseRenderer@@QAEHXZ ENDP	; CBaseRenderer::IsEndOfStreamDelivered
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsStreaming@CBaseRenderer@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsStreaming@CBaseRenderer@@QAEHXZ PROC			; CBaseRenderer::IsStreaming, COMDAT
; _this$ = ecx
; Line 124
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+100]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsStreaming@CBaseRenderer@@QAEHXZ ENDP			; CBaseRenderer::IsStreaming
_TEXT	ENDS
EXTRN	?BreakConnect@CBaseInputPin@@UAEJXZ:PROC	; CBaseInputPin::BreakConnect
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?BreakConnect@CRendererInputPin@@UAEJXZ
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
?BreakConnect@CRendererInputPin@@UAEJXZ PROC		; CRendererInputPin::BreakConnect, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.cpp
; Line 1665
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1666
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+224]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+140]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1667
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@BreakConne@2
; Line 1668
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@BreakConne@2
$LN1@BreakConne@2:
; Line 1670
	mov	ecx, DWORD PTR _this$[ebp]
	call	?BreakConnect@CBaseInputPin@@UAEJXZ	; CBaseInputPin::BreakConnect
$LN2@BreakConne@2:
; Line 1671
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?BreakConnect@CRendererInputPin@@UAEJXZ ENDP		; CRendererInputPin::BreakConnect
_TEXT	ENDS
EXTRN	?CompleteConnect@CBasePin@@UAEJPAUIPin@@@Z:PROC	; CBasePin::CompleteConnect
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CompleteConnect@CRendererInputPin@@UAEJPAUIPin@@@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_pReceivePin$ = 8					; size = 4
?CompleteConnect@CRendererInputPin@@UAEJPAUIPin@@@Z PROC ; CRendererInputPin::CompleteConnect, COMDAT
; _this$ = ecx
; Line 1677
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1678
	mov	esi, esp
	mov	eax, DWORD PTR _pReceivePin$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+224]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+148]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1679
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CompleteCo@2
; Line 1680
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@CompleteCo@2
$LN1@CompleteCo@2:
; Line 1682
	mov	ecx, DWORD PTR _pReceivePin$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CompleteConnect@CBasePin@@UAEJPAUIPin@@@Z ; CBasePin::CompleteConnect
$LN2@CompleteCo@2:
; Line 1683
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CompleteConnect@CRendererInputPin@@UAEJPAUIPin@@@Z ENDP ; CRendererInputPin::CompleteConnect
_TEXT	ENDS
EXTRN	__imp__lstrcpyW@8:PROC
EXTRN	__imp__CoTaskMemAlloc@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryId@CRendererInputPin@@UAGJPAPA_W@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Id$ = 12						; size = 4
?QueryId@CRendererInputPin@@UAGJPAPA_W@Z PROC		; CRendererInputPin::QueryId, COMDAT
; Line 1689
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1690
	cmp	DWORD PTR _Id$[ebp], 0
	jne	SHORT $LN2@QueryId
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN3@QueryId
$LN2@QueryId:
; Line 1692
	mov	esi, esp
	push	8
	call	DWORD PTR __imp__CoTaskMemAlloc@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _Id$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1693
	mov	edx, DWORD PTR _Id$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN1@QueryId
; Line 1694
	mov	eax, -2147024882			; 8007000eH
	jmp	SHORT $LN3@QueryId
$LN1@QueryId:
; Line 1696
	mov	esi, esp
	push	OFFSET $SG82307
	mov	eax, DWORD PTR _Id$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__lstrcpyW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1697
	xor	eax, eax
$LN3@QueryId:
; Line 1698
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?QueryId@CRendererInputPin@@UAGJPAPA_W@Z ENDP		; CRendererInputPin::QueryId
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?CheckMediaType@CRendererInputPin@@UAEJPBVCMediaType@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pmt$ = 8						; size = 4
?CheckMediaType@CRendererInputPin@@UAEJPBVCMediaType@@@Z PROC ; CRendererInputPin::CheckMediaType, COMDAT
; _this$ = ecx
; Line 1704
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1705
	mov	esi, esp
	mov	eax, DWORD PTR _pmt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+224]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+176]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1706
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CheckMediaType@CRendererInputPin@@UAEJPBVCMediaType@@@Z ENDP ; CRendererInputPin::CheckMediaType
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Active@CRendererInputPin@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Active@CRendererInputPin@@UAEJXZ PROC			; CRendererInputPin::Active, COMDAT
; _this$ = ecx
; Line 1712
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1713
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+224]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+116]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1714
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Active@CRendererInputPin@@UAEJXZ ENDP			; CRendererInputPin::Active
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Inactive@CRendererInputPin@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Inactive@CRendererInputPin@@UAEJXZ PROC		; CRendererInputPin::Inactive, COMDAT
; _this$ = ecx
; Line 1720
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1723
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	add	ecx, 124				; 0000007cH
	push	ecx
	call	?CritCheckIn@@YGHPAVCCritSec@@@Z	; CritCheckIn
	test	eax, eax
	jne	SHORT $LN1@Inactive@2
	push	1723					; 000006bbH
	push	OFFSET $SG82319
	push	OFFSET $SG82320
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@Inactive@2:
; Line 1725
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+40], 0
; Line 1727
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+224]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+224]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+120]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1728
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Inactive@CRendererInputPin@@UAEJXZ ENDP		; CRendererInputPin::Inactive
_TEXT	ENDS
EXTRN	?SetMediaType@CBasePin@@UAEJPBVCMediaType@@@Z:PROC ; CBasePin::SetMediaType
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetMediaType@CRendererInputPin@@UAEJPBVCMediaType@@@Z
_TEXT	SEGMENT
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
_pmt$ = 8						; size = 4
?SetMediaType@CRendererInputPin@@UAEJPBVCMediaType@@@Z PROC ; CRendererInputPin::SetMediaType, COMDAT
; _this$ = ecx
; Line 1734
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1735
	mov	eax, DWORD PTR _pmt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetMediaType@CBasePin@@UAEJPBVCMediaType@@@Z ; CBasePin::SetMediaType
	mov	DWORD PTR _hr$[ebp], eax
; Line 1736
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@SetMediaTy
; Line 1737
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@SetMediaTy
$LN1@SetMediaTy:
; Line 1739
	mov	esi, esp
	mov	ecx, DWORD PTR _pmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+224]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+224]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+144]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@SetMediaTy:
; Line 1740
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetMediaType@CRendererInputPin@@UAEJPBVCMediaType@@@Z ENDP ; CRendererInputPin::SetMediaType
_TEXT	ENDS
PUBLIC	?ResetStreamingTimes@CBaseVideoRenderer@@UAEJXZ	; CBaseVideoRenderer::ResetStreamingTimes
PUBLIC	??_7CBaseVideoRenderer@@6BIQualityControl@@@	; CBaseVideoRenderer::`vftable'
PUBLIC	??_7CBaseVideoRenderer@@6BIQualProp@@@		; CBaseVideoRenderer::`vftable'
PUBLIC	??_7CBaseVideoRenderer@@6BIAMovieSetup@@@	; CBaseVideoRenderer::`vftable'
PUBLIC	??_7CBaseVideoRenderer@@6BIBaseFilter@@@	; CBaseVideoRenderer::`vftable'
PUBLIC	??_7CBaseVideoRenderer@@6BCUnknown@@@		; CBaseVideoRenderer::`vftable'
PUBLIC	??0IQualityControl@@QAE@XZ			; IQualityControl::IQualityControl
PUBLIC	??0IQualProp@@QAE@XZ				; IQualProp::IQualProp
PUBLIC	??0CBaseVideoRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z ; CBaseVideoRenderer::CBaseVideoRenderer
PUBLIC	??_R4CBaseVideoRenderer@@6BCUnknown@@@		; CBaseVideoRenderer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBaseVideoRenderer@@@8			; CBaseVideoRenderer `RTTI Type Descriptor'
PUBLIC	??_R3CBaseVideoRenderer@@8			; CBaseVideoRenderer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseVideoRenderer@@8			; CBaseVideoRenderer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseVideoRenderer@@8		; CBaseVideoRenderer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BAA@?0A@EA@IQualProp@@8			; IQualProp::`RTTI Base Class Descriptor at (256,-1,0,64)'
PUBLIC	??_R0?AUIQualProp@@@8				; IQualProp `RTTI Type Descriptor'
PUBLIC	??_R3IQualProp@@8				; IQualProp::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IQualProp@@8				; IQualProp::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IQualProp@@8			; IQualProp::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BAA@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (256,-1,0,66)'
PUBLIC	??_R1BAE@?0A@EA@IQualityControl@@8		; IQualityControl::`RTTI Base Class Descriptor at (260,-1,0,64)'
PUBLIC	??_R1BAE@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (260,-1,0,66)'
PUBLIC	?NonDelegatingQueryInterface@CBaseVideoRenderer@@UAGJABU_GUID@@PAPAX@Z ; CBaseVideoRenderer::NonDelegatingQueryInterface
PUBLIC	?OnRenderStart@CBaseVideoRenderer@@UAEXPAUIMediaSample@@@Z ; CBaseVideoRenderer::OnRenderStart
PUBLIC	?OnRenderEnd@CBaseVideoRenderer@@UAEXPAUIMediaSample@@@Z ; CBaseVideoRenderer::OnRenderEnd
PUBLIC	?OnStartStreaming@CBaseVideoRenderer@@UAEJXZ	; CBaseVideoRenderer::OnStartStreaming
PUBLIC	?OnStopStreaming@CBaseVideoRenderer@@UAEJXZ	; CBaseVideoRenderer::OnStopStreaming
PUBLIC	?OnWaitStart@CBaseVideoRenderer@@UAEXXZ		; CBaseVideoRenderer::OnWaitStart
PUBLIC	?OnWaitEnd@CBaseVideoRenderer@@UAEXXZ		; CBaseVideoRenderer::OnWaitEnd
PUBLIC	?ScheduleSample@CBaseVideoRenderer@@UAEHPAUIMediaSample@@@Z ; CBaseVideoRenderer::ScheduleSample
PUBLIC	?ShouldDrawSampleNow@CBaseVideoRenderer@@UAEJPAUIMediaSample@@PA_J1@Z ; CBaseVideoRenderer::ShouldDrawSampleNow
PUBLIC	?RecordFrameLateness@CBaseVideoRenderer@@UAEXHH@Z ; CBaseVideoRenderer::RecordFrameLateness
PUBLIC	?OnDirectRender@CBaseVideoRenderer@@UAEXPAUIMediaSample@@@Z ; CBaseVideoRenderer::OnDirectRender
PUBLIC	?SendQuality@CBaseVideoRenderer@@UAEJ_J0@Z	; CBaseVideoRenderer::SendQuality
PUBLIC	??_R4CBaseVideoRenderer@@6BIBaseFilter@@@	; CBaseVideoRenderer::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CBaseVideoRenderer@@UAGJABU_GUID@@PAPAX@Z ; CBaseVideoRenderer::QueryInterface
PUBLIC	?AddRef@CBaseVideoRenderer@@UAGKXZ		; CBaseVideoRenderer::AddRef
PUBLIC	?Release@CBaseVideoRenderer@@UAGKXZ		; CBaseVideoRenderer::Release
PUBLIC	?JoinFilterGraph@CBaseVideoRenderer@@UAGJPAUIFilterGraph@@PB_W@Z ; CBaseVideoRenderer::JoinFilterGraph
PUBLIC	??_R4CBaseVideoRenderer@@6BIAMovieSetup@@@	; CBaseVideoRenderer::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CBaseVideoRenderer@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:CBaseVideoRenderer::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CBaseVideoRenderer@@W3AGKXZ		; [thunk]:CBaseVideoRenderer::AddRef`adjustor{4}'
PUBLIC	?Release@CBaseVideoRenderer@@W3AGKXZ		; [thunk]:CBaseVideoRenderer::Release`adjustor{4}'
PUBLIC	??_R4CBaseVideoRenderer@@6BIQualProp@@@		; CBaseVideoRenderer::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CBaseVideoRenderer@@WPA@AGJABU_GUID@@PAPAX@Z ; [thunk]:CBaseVideoRenderer::QueryInterface`adjustor{240}'
PUBLIC	?AddRef@CBaseVideoRenderer@@WPA@AGKXZ		; [thunk]:CBaseVideoRenderer::AddRef`adjustor{240}'
PUBLIC	?Release@CBaseVideoRenderer@@WPA@AGKXZ		; [thunk]:CBaseVideoRenderer::Release`adjustor{240}'
PUBLIC	?get_FramesDroppedInRenderer@CBaseVideoRenderer@@UAGJPAH@Z ; CBaseVideoRenderer::get_FramesDroppedInRenderer
PUBLIC	?get_FramesDrawn@CBaseVideoRenderer@@UAGJPAH@Z	; CBaseVideoRenderer::get_FramesDrawn
PUBLIC	?get_AvgFrameRate@CBaseVideoRenderer@@UAGJPAH@Z	; CBaseVideoRenderer::get_AvgFrameRate
PUBLIC	?get_Jitter@CBaseVideoRenderer@@UAGJPAH@Z	; CBaseVideoRenderer::get_Jitter
PUBLIC	?get_AvgSyncOffset@CBaseVideoRenderer@@UAGJPAH@Z ; CBaseVideoRenderer::get_AvgSyncOffset
PUBLIC	?get_DevSyncOffset@CBaseVideoRenderer@@UAGJPAH@Z ; CBaseVideoRenderer::get_DevSyncOffset
PUBLIC	??_R4CBaseVideoRenderer@@6BIQualityControl@@@	; CBaseVideoRenderer::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CBaseVideoRenderer@@WPE@AGJABU_GUID@@PAPAX@Z ; [thunk]:CBaseVideoRenderer::QueryInterface`adjustor{244}'
PUBLIC	?AddRef@CBaseVideoRenderer@@WPE@AGKXZ		; [thunk]:CBaseVideoRenderer::AddRef`adjustor{244}'
PUBLIC	?Release@CBaseVideoRenderer@@WPE@AGKXZ		; [thunk]:CBaseVideoRenderer::Release`adjustor{244}'
PUBLIC	?Notify@CBaseVideoRenderer@@UAGJPAUIBaseFilter@@UtagQuality@@@Z ; CBaseVideoRenderer::Notify
PUBLIC	?SetSink@CBaseVideoRenderer@@UAGJPAUIQualityControl@@@Z ; CBaseVideoRenderer::SetSink
EXTRN	??_ECBaseVideoRenderer@@UAEPAXI@Z:PROC		; CBaseVideoRenderer::`vector deleting destructor'
;	COMDAT ??_R4CBaseVideoRenderer@@6BIQualityControl@@@
rdata$r	SEGMENT
??_R4CBaseVideoRenderer@@6BIQualityControl@@@ DD 00H	; CBaseVideoRenderer::`RTTI Complete Object Locator'
	DD	0104H
	DD	00H
	DD	FLAT:??_R0?AVCBaseVideoRenderer@@@8
	DD	FLAT:??_R3CBaseVideoRenderer@@8
rdata$r	ENDS
;	COMDAT ??_R4CBaseVideoRenderer@@6BIQualProp@@@
rdata$r	SEGMENT
??_R4CBaseVideoRenderer@@6BIQualProp@@@ DD 00H		; CBaseVideoRenderer::`RTTI Complete Object Locator'
	DD	0100H
	DD	00H
	DD	FLAT:??_R0?AVCBaseVideoRenderer@@@8
	DD	FLAT:??_R3CBaseVideoRenderer@@8
rdata$r	ENDS
;	COMDAT ??_R4CBaseVideoRenderer@@6BIAMovieSetup@@@
rdata$r	SEGMENT
??_R4CBaseVideoRenderer@@6BIAMovieSetup@@@ DD 00H	; CBaseVideoRenderer::`RTTI Complete Object Locator'
	DD	014H
	DD	00H
	DD	FLAT:??_R0?AVCBaseVideoRenderer@@@8
	DD	FLAT:??_R3CBaseVideoRenderer@@8
rdata$r	ENDS
;	COMDAT ??_R4CBaseVideoRenderer@@6BIBaseFilter@@@
rdata$r	SEGMENT
??_R4CBaseVideoRenderer@@6BIBaseFilter@@@ DD 00H	; CBaseVideoRenderer::`RTTI Complete Object Locator'
	DD	010H
	DD	00H
	DD	FLAT:??_R0?AVCBaseVideoRenderer@@@8
	DD	FLAT:??_R3CBaseVideoRenderer@@8
rdata$r	ENDS
;	COMDAT ??_R1BAE@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BAE@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8 ; IUnknown::`RTTI Base Class Descriptor at (260,-1,0,66)'
	DD	00H
	DD	0104H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1BAE@?0A@EA@IQualityControl@@8
rdata$r	SEGMENT
??_R1BAE@?0A@EA@IQualityControl@@8 DD FLAT:??_R0?AUIQualityControl@@@8 ; IQualityControl::`RTTI Base Class Descriptor at (260,-1,0,64)'
	DD	01H
	DD	0104H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IQualityControl@@8
rdata$r	ENDS
;	COMDAT ??_R1BAA@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1BAA@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8 ; IUnknown::`RTTI Base Class Descriptor at (256,-1,0,66)'
	DD	00H
	DD	0100H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IQualProp@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IQualProp@@8 DD FLAT:??_R0?AUIQualProp@@@8 ; IQualProp::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IQualProp@@8
rdata$r	ENDS
;	COMDAT ??_R2IQualProp@@8
rdata$r	SEGMENT
??_R2IQualProp@@8 DD FLAT:??_R1A@?0A@EA@IQualProp@@8	; IQualProp::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IQualProp@@8
rdata$r	SEGMENT
??_R3IQualProp@@8 DD 00H				; IQualProp::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IQualProp@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIQualProp@@@8
_DATA	SEGMENT
??_R0?AUIQualProp@@@8 DD FLAT:??_7type_info@@6B@	; IQualProp `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIQualProp@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BAA@?0A@EA@IQualProp@@8
rdata$r	SEGMENT
??_R1BAA@?0A@EA@IQualProp@@8 DD FLAT:??_R0?AUIQualProp@@@8 ; IQualProp::`RTTI Base Class Descriptor at (256,-1,0,64)'
	DD	01H
	DD	0100H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IQualProp@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseVideoRenderer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseVideoRenderer@@8 DD FLAT:??_R0?AVCBaseVideoRenderer@@@8 ; CBaseVideoRenderer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0fH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseVideoRenderer@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseVideoRenderer@@8
rdata$r	SEGMENT
??_R2CBaseVideoRenderer@@8 DD FLAT:??_R1A@?0A@EA@CBaseVideoRenderer@@8 ; CBaseVideoRenderer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseRenderer@@8
	DD	FLAT:??_R1A@?0A@EA@CBaseFilter@@8
	DD	FLAT:??_R1A@?0A@EA@CUnknown@@8
	DD	FLAT:??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	FLAT:??_R13?0A@EA@CBaseObject@@8
	DD	FLAT:??_R1BA@?0A@EA@IBaseFilter@@8
	DD	FLAT:??_R1BA@?0A@EA@IMediaFilter@@8
	DD	FLAT:??_R1BA@?0A@EA@IPersist@@8
	DD	FLAT:??_R1BA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BE@?0A@EA@IAMovieSetup@@8
	DD	FLAT:??_R1BE@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BAA@?0A@EA@IQualProp@@8
	DD	FLAT:??_R1BAA@?0A@EC@IUnknown@@8
	DD	FLAT:??_R1BAE@?0A@EA@IQualityControl@@8
	DD	FLAT:??_R1BAE@?0A@EC@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CBaseVideoRenderer@@8
rdata$r	SEGMENT
??_R3CBaseVideoRenderer@@8 DD 00H			; CBaseVideoRenderer::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	010H
	DD	FLAT:??_R2CBaseVideoRenderer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseVideoRenderer@@@8
_DATA	SEGMENT
??_R0?AVCBaseVideoRenderer@@@8 DD FLAT:??_7type_info@@6B@ ; CBaseVideoRenderer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseVideoRenderer@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CBaseVideoRenderer@@6BCUnknown@@@
rdata$r	SEGMENT
??_R4CBaseVideoRenderer@@6BCUnknown@@@ DD 00H		; CBaseVideoRenderer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBaseVideoRenderer@@@8
	DD	FLAT:??_R3CBaseVideoRenderer@@8
rdata$r	ENDS
;	COMDAT ??_7CBaseVideoRenderer@@6BIQualityControl@@@
CONST	SEGMENT
??_7CBaseVideoRenderer@@6BIQualityControl@@@ DD FLAT:??_R4CBaseVideoRenderer@@6BIQualityControl@@@ ; CBaseVideoRenderer::`vftable'
	DD	FLAT:?QueryInterface@CBaseVideoRenderer@@WPE@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CBaseVideoRenderer@@WPE@AGKXZ
	DD	FLAT:?Release@CBaseVideoRenderer@@WPE@AGKXZ
	DD	FLAT:?Notify@CBaseVideoRenderer@@UAGJPAUIBaseFilter@@UtagQuality@@@Z
	DD	FLAT:?SetSink@CBaseVideoRenderer@@UAGJPAUIQualityControl@@@Z
CONST	ENDS
;	COMDAT ??_7CBaseVideoRenderer@@6BIQualProp@@@
CONST	SEGMENT
??_7CBaseVideoRenderer@@6BIQualProp@@@ DD FLAT:??_R4CBaseVideoRenderer@@6BIQualProp@@@ ; CBaseVideoRenderer::`vftable'
	DD	FLAT:?QueryInterface@CBaseVideoRenderer@@WPA@AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CBaseVideoRenderer@@WPA@AGKXZ
	DD	FLAT:?Release@CBaseVideoRenderer@@WPA@AGKXZ
	DD	FLAT:?get_FramesDroppedInRenderer@CBaseVideoRenderer@@UAGJPAH@Z
	DD	FLAT:?get_FramesDrawn@CBaseVideoRenderer@@UAGJPAH@Z
	DD	FLAT:?get_AvgFrameRate@CBaseVideoRenderer@@UAGJPAH@Z
	DD	FLAT:?get_Jitter@CBaseVideoRenderer@@UAGJPAH@Z
	DD	FLAT:?get_AvgSyncOffset@CBaseVideoRenderer@@UAGJPAH@Z
	DD	FLAT:?get_DevSyncOffset@CBaseVideoRenderer@@UAGJPAH@Z
CONST	ENDS
;	COMDAT ??_7CBaseVideoRenderer@@6BIAMovieSetup@@@
CONST	SEGMENT
??_7CBaseVideoRenderer@@6BIAMovieSetup@@@ DD FLAT:??_R4CBaseVideoRenderer@@6BIAMovieSetup@@@ ; CBaseVideoRenderer::`vftable'
	DD	FLAT:?QueryInterface@CBaseVideoRenderer@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CBaseVideoRenderer@@W3AGKXZ
	DD	FLAT:?Release@CBaseVideoRenderer@@W3AGKXZ
	DD	FLAT:?Register@CBaseFilter@@UAGJXZ
	DD	FLAT:?Unregister@CBaseFilter@@UAGJXZ
CONST	ENDS
;	COMDAT ??_7CBaseVideoRenderer@@6BIBaseFilter@@@
CONST	SEGMENT
??_7CBaseVideoRenderer@@6BIBaseFilter@@@ DD FLAT:??_R4CBaseVideoRenderer@@6BIBaseFilter@@@ ; CBaseVideoRenderer::`vftable'
	DD	FLAT:?QueryInterface@CBaseVideoRenderer@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CBaseVideoRenderer@@UAGKXZ
	DD	FLAT:?Release@CBaseVideoRenderer@@UAGKXZ
	DD	FLAT:?GetClassID@CBaseFilter@@UAGJPAU_GUID@@@Z
	DD	FLAT:?Stop@CBaseRenderer@@UAGJXZ
	DD	FLAT:?Pause@CBaseRenderer@@UAGJXZ
	DD	FLAT:?Run@CBaseRenderer@@UAGJ_J@Z
	DD	FLAT:?GetState@CBaseRenderer@@UAGJKPAW4_FilterState@@@Z
	DD	FLAT:?SetSyncSource@CBaseFilter@@UAGJPAUIReferenceClock@@@Z
	DD	FLAT:?GetSyncSource@CBaseFilter@@UAGJPAPAUIReferenceClock@@@Z
	DD	FLAT:?EnumPins@CBaseFilter@@UAGJPAPAUIEnumPins@@@Z
	DD	FLAT:?FindPin@CBaseRenderer@@UAGJPB_WPAPAUIPin@@@Z
	DD	FLAT:?QueryFilterInfo@CBaseFilter@@UAGJPAU_FilterInfo@@@Z
	DD	FLAT:?JoinFilterGraph@CBaseVideoRenderer@@UAGJPAUIFilterGraph@@PB_W@Z
	DD	FLAT:?QueryVendorInfo@CBaseFilter@@UAGJPAPA_W@Z
CONST	ENDS
;	COMDAT ??_7CBaseVideoRenderer@@6BCUnknown@@@
CONST	SEGMENT
??_7CBaseVideoRenderer@@6BCUnknown@@@ DD FLAT:??_R4CBaseVideoRenderer@@6BCUnknown@@@ ; CBaseVideoRenderer::`vftable'
	DD	FLAT:?NonDelegatingQueryInterface@CBaseVideoRenderer@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?NonDelegatingAddRef@CUnknown@@UAGKXZ
	DD	FLAT:?NonDelegatingRelease@CBaseFilter@@UAGKXZ
	DD	FLAT:??_ECBaseVideoRenderer@@UAEPAXI@Z
	DD	FLAT:?StreamTime@CBaseFilter@@UAEJAAVCRefTime@@@Z
	DD	FLAT:?GetPinVersion@CBaseFilter@@UAEJXZ
	DD	FLAT:?GetPinCount@CBaseRenderer@@UAEHXZ
	DD	FLAT:?GetPin@CBaseRenderer@@UAEPAVCBasePin@@H@Z
	DD	FLAT:?GetSetupData@CBaseFilter@@UAEPAU_AMOVIESETUP_FILTER@@XZ
	DD	FLAT:?GetMediaPositionInterface@CBaseRenderer@@UAEJABU_GUID@@PAPAX@Z
	DD	FLAT:?SourceThreadCanWait@CBaseRenderer@@UAEJH@Z
	DD	FLAT:?WaitForRenderTime@CBaseRenderer@@UAEJXZ
	DD	FLAT:?CompleteStateChange@CBaseRenderer@@UAEJW4_FilterState@@@Z
	DD	FLAT:?OnReceiveFirstSample@CBaseRenderer@@UAEXPAUIMediaSample@@@Z
	DD	FLAT:?OnRenderStart@CBaseVideoRenderer@@UAEXPAUIMediaSample@@@Z
	DD	FLAT:?OnRenderEnd@CBaseVideoRenderer@@UAEXPAUIMediaSample@@@Z
	DD	FLAT:?OnStartStreaming@CBaseVideoRenderer@@UAEJXZ
	DD	FLAT:?OnStopStreaming@CBaseVideoRenderer@@UAEJXZ
	DD	FLAT:?OnWaitStart@CBaseVideoRenderer@@UAEXXZ
	DD	FLAT:?OnWaitEnd@CBaseVideoRenderer@@UAEXXZ
	DD	FLAT:?PrepareRender@CBaseRenderer@@UAEXXZ
	DD	FLAT:?ScheduleSample@CBaseVideoRenderer@@UAEHPAUIMediaSample@@@Z
	DD	FLAT:?GetSampleTimes@CBaseRenderer@@UAEJPAUIMediaSample@@PA_J1@Z
	DD	FLAT:?ShouldDrawSampleNow@CBaseVideoRenderer@@UAEJPAUIMediaSample@@PA_J1@Z
	DD	FLAT:?SendEndOfStream@CBaseRenderer@@UAEJXZ
	DD	FLAT:?ResetEndOfStream@CBaseRenderer@@UAEJXZ
	DD	FLAT:?EndOfStream@CBaseRenderer@@UAEJXZ
	DD	FLAT:?CancelNotification@CBaseRenderer@@UAEJXZ
	DD	FLAT:?ClearPendingSample@CBaseRenderer@@UAEJXZ
	DD	FLAT:?Active@CBaseRenderer@@UAEJXZ
	DD	FLAT:?Inactive@CBaseRenderer@@UAEJXZ
	DD	FLAT:?StartStreaming@CBaseRenderer@@UAEJXZ
	DD	FLAT:?StopStreaming@CBaseRenderer@@UAEJXZ
	DD	FLAT:?BeginFlush@CBaseRenderer@@UAEJXZ
	DD	FLAT:?EndFlush@CBaseRenderer@@UAEJXZ
	DD	FLAT:?BreakConnect@CBaseRenderer@@UAEJXZ
	DD	FLAT:?SetMediaType@CBaseRenderer@@UAEJPBVCMediaType@@@Z
	DD	FLAT:?CompleteConnect@CBaseRenderer@@UAEJPAUIPin@@@Z
	DD	FLAT:?PrepareReceive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z
	DD	FLAT:?Receive@CBaseRenderer@@UAEJPAUIMediaSample@@@Z
	DD	FLAT:?HaveCurrentSample@CBaseRenderer@@UAEHXZ
	DD	FLAT:?GetCurrentSample@CBaseRenderer@@UAEPAUIMediaSample@@XZ
	DD	FLAT:?Render@CBaseRenderer@@UAEJPAUIMediaSample@@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?RecordFrameLateness@CBaseVideoRenderer@@UAEXHH@Z
	DD	FLAT:?OnDirectRender@CBaseVideoRenderer@@UAEXPAUIMediaSample@@@Z
	DD	FLAT:?ResetStreamingTimes@CBaseVideoRenderer@@UAEJXZ
	DD	FLAT:?SendQuality@CBaseVideoRenderer@@UAEJ_J0@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CBaseVideoRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CBaseVideoRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z$0
__ehfuncinfo$??0CBaseVideoRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CBaseVideoRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CBaseVideoRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_RenderClass$ = 8					; size = 4
_pName$ = 12						; size = 4
_pUnk$ = 16						; size = 4
_phr$ = 20						; size = 4
??0CBaseVideoRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z PROC ; CBaseVideoRenderer::CBaseVideoRenderer, COMDAT
; _this$ = ecx
; Line 1763
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CBaseVideoRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _phr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pUnk$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pName$[ebp]
	push	edx
	mov	eax, DWORD PTR _RenderClass$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z ; CBaseRenderer::CBaseRenderer
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 256				; 00000100H
	call	??0IQualProp@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 260				; 00000104H
	call	??0IQualityControl@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7CBaseVideoRenderer@@6BCUnknown@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], OFFSET ??_7CBaseVideoRenderer@@6BIBaseFilter@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], OFFSET ??_7CBaseVideoRenderer@@6BIAMovieSetup@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+256], OFFSET ??_7CBaseVideoRenderer@@6BIQualProp@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+260], OFFSET ??_7CBaseVideoRenderer@@6BIQualityControl@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+268], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+320], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+324], 0
; Line 1764
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ResetStreamingTimes@CBaseVideoRenderer@@UAEJXZ ; CBaseVideoRenderer::ResetStreamingTimes
; Line 1787
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CBaseVideoRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseRenderer@@UAE@XZ		; CBaseRenderer::~CBaseRenderer
__ehhandler$??0CBaseVideoRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CBaseVideoRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CBaseVideoRenderer@@QAE@ABU_GUID@@PA_WPAUIUnknown@@PAJ@Z ENDP ; CBaseVideoRenderer::CBaseVideoRenderer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CBaseVideoRenderer@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv72 = -4						; size = 4
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?QueryInterface@CBaseVideoRenderer@@UAGJABU_GUID@@PAPAX@Z PROC ; CBaseVideoRenderer::QueryInterface, COMDAT
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.h
; Line 473
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CBaseVideoRenderer@@UAGJABU_GUID@@PAPAX@Z ENDP ; CBaseVideoRenderer::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CBaseVideoRenderer@@UAGKXZ
_TEXT	SEGMENT
tv72 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CBaseVideoRenderer@@UAGKXZ PROC			; CBaseVideoRenderer::AddRef, COMDAT
; Line 473
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv72[ebp], eax
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CBaseVideoRenderer@@UAGKXZ ENDP			; CBaseVideoRenderer::AddRef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CBaseVideoRenderer@@UAGKXZ
_TEXT	SEGMENT
tv72 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CBaseVideoRenderer@@UAGKXZ PROC		; CBaseVideoRenderer::Release, COMDAT
; Line 473
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv72[ebp], eax
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CBaseVideoRenderer@@UAGKXZ ENDP		; CBaseVideoRenderer::Release
_TEXT	ENDS
PUBLIC	??1CBaseVideoRenderer@@UAE@XZ			; CBaseVideoRenderer::~CBaseVideoRenderer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCBaseVideoRenderer@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCBaseVideoRenderer@@UAEPAXI@Z PROC			; CBaseVideoRenderer::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBaseVideoRenderer@@UAE@XZ		; CBaseVideoRenderer::~CBaseVideoRenderer
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCBaseVideoRenderer@@UAEPAXI@Z ENDP			; CBaseVideoRenderer::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IQualProp@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IQualProp@@QAE@XZ PROC				; IQualProp::IQualProp, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IQualProp@@QAE@XZ ENDP				; IQualProp::IQualProp
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IQualityControl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IQualityControl@@QAE@XZ PROC				; IQualityControl::IQualityControl, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IQualityControl@@QAE@XZ ENDP				; IQualityControl::IQualityControl
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.cpp
xdata$x	SEGMENT
__unwindtable$??1CBaseVideoRenderer@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CBaseVideoRenderer@@UAE@XZ$0
__ehfuncinfo$??1CBaseVideoRenderer@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CBaseVideoRenderer@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CBaseVideoRenderer@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CBaseVideoRenderer@@UAE@XZ PROC			; CBaseVideoRenderer::~CBaseVideoRenderer, COMDAT
; _this$ = ecx
; Line 1793
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CBaseVideoRenderer@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CBaseVideoRenderer@@6BCUnknown@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], OFFSET ??_7CBaseVideoRenderer@@6BIBaseFilter@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], OFFSET ??_7CBaseVideoRenderer@@6BIAMovieSetup@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+256], OFFSET ??_7CBaseVideoRenderer@@6BIQualProp@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+260], OFFSET ??_7CBaseVideoRenderer@@6BIQualityControl@@@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1794
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+104], 0
	je	SHORT $LN2@CBaseVideo
	push	1794					; 00000702H
	push	OFFSET $SG82349
	push	OFFSET $SG82350
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@CBaseVideo:
; Line 1795
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBaseRenderer@@UAE@XZ		; CBaseRenderer::~CBaseRenderer
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CBaseVideoRenderer@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CBaseRenderer@@UAE@XZ		; CBaseRenderer::~CBaseRenderer
__ehhandler$??1CBaseVideoRenderer@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CBaseVideoRenderer@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CBaseVideoRenderer@@UAE@XZ ENDP			; CBaseVideoRenderer::~CBaseVideoRenderer
EXTRN	__imp__timeGetTime@0:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ResetStreamingTimes@CBaseVideoRenderer@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ResetStreamingTimes@CBaseVideoRenderer@@UAEJXZ PROC	; CBaseVideoRenderer::ResetStreamingTimes, COMDAT
; _this$ = ecx
; Line 1822
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1823
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+344], -1000		; fffffc18H
	mov	DWORD PTR [eax+348], -1
; Line 1824
	mov	esi, esp
	call	DWORD PTR __imp__timeGetTime@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+376], eax
; Line 1825
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+276], 0
; Line 1826
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+300], -1
; Line 1827
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+304], 0
; Line 1828
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+280], 0
; Line 1829
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+296], 0
; Line 1830
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+284], 0
; Line 1831
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+324], 0
; Line 1832
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+320], 0
; Line 1833
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+328], 0
	mov	DWORD PTR [ecx+332], 0
; Line 1834
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+336], 0
	mov	DWORD PTR [edx+340], 0
; Line 1835
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+352], 0
	mov	DWORD PTR [eax+356], 0
; Line 1836
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+372], 0
; Line 1837
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+368], 0
; Line 1838
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+360], 0
	mov	DWORD PTR [eax+364], 0
; Line 1839
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+264], 0
; Line 1840
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+288], 0
; Line 1841
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+292], -300000		; fffb6c20H
; Line 1842
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+272], 0
; Line 1843
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+312], 0
	mov	DWORD PTR [edx+316], 0
; Line 1849
	xor	eax, eax
; Line 1850
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ResetStreamingTimes@CBaseVideoRenderer@@UAEJXZ ENDP	; CBaseVideoRenderer::ResetStreamingTimes
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnStartStreaming@CBaseVideoRenderer@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnStartStreaming@CBaseVideoRenderer@@UAEJXZ PROC	; CBaseVideoRenderer::OnStartStreaming, COMDAT
; _this$ = ecx
; Line 1860
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1861
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+188]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1862
	xor	eax, eax
; Line 1863
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnStartStreaming@CBaseVideoRenderer@@UAEJXZ ENDP	; CBaseVideoRenderer::OnStartStreaming
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnStopStreaming@CBaseVideoRenderer@@UAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnStopStreaming@CBaseVideoRenderer@@UAEJXZ PROC	; CBaseVideoRenderer::OnStopStreaming, COMDAT
; _this$ = ecx
; Line 1869
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1870
	mov	esi, esp
	call	DWORD PTR __imp__timeGetTime@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+376]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+376], eax
; Line 1871
	xor	eax, eax
; Line 1872
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OnStopStreaming@CBaseVideoRenderer@@UAEJXZ ENDP	; CBaseVideoRenderer::OnStopStreaming
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnWaitStart@CBaseVideoRenderer@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnWaitStart@CBaseVideoRenderer@@UAEXXZ PROC		; CBaseVideoRenderer::OnWaitStart, COMDAT
; _this$ = ecx
; Line 1879
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1881
	mov	esp, ebp
	pop	ebp
	ret	0
?OnWaitStart@CBaseVideoRenderer@@UAEXXZ ENDP		; CBaseVideoRenderer::OnWaitStart
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnWaitEnd@CBaseVideoRenderer@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnWaitEnd@CBaseVideoRenderer@@UAEXXZ PROC		; CBaseVideoRenderer::OnWaitEnd, COMDAT
; _this$ = ecx
; Line 1892
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1923
	mov	esp, ebp
	pop	ebp
	ret	0
?OnWaitEnd@CBaseVideoRenderer@@UAEXXZ ENDP		; CBaseVideoRenderer::OnWaitEnd
_TEXT	ENDS
PUBLIC	?PreparePerformanceData@CBaseVideoRenderer@@QAEXHH@Z ; CBaseVideoRenderer::PreparePerformanceData
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?PreparePerformanceData@CBaseVideoRenderer@@QAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_trLate$ = 8						; size = 4
_trFrame$ = 12						; size = 4
?PreparePerformanceData@CBaseVideoRenderer@@QAEXHH@Z PROC ; CBaseVideoRenderer::PreparePerformanceData, COMDAT
; _this$ = ecx
; Line 1934
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1935
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _trLate$[ebp]
	mov	DWORD PTR [eax+368], ecx
; Line 1936
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _trFrame$[ebp]
	mov	DWORD PTR [edx+372], eax
; Line 1937
	mov	esp, ebp
	pop	ebp
	ret	8
?PreparePerformanceData@CBaseVideoRenderer@@QAEXHH@Z ENDP ; CBaseVideoRenderer::PreparePerformanceData
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?RecordFrameLateness@CBaseVideoRenderer@@UAEXHH@Z
_TEXT	SEGMENT
tv191 = -16						; size = 4
_tFrame$82387 = -12					; size = 4
_tLate$ = -8						; size = 4
_this$ = -4						; size = 4
_trLate$ = 8						; size = 4
_trFrame$ = 12						; size = 4
?RecordFrameLateness@CBaseVideoRenderer@@UAEXHH@Z PROC	; CBaseVideoRenderer::RecordFrameLateness, COMDAT
; _this$ = ecx
; Line 1949
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1951
	mov	eax, DWORD PTR _trLate$[ebp]
	cdq
	mov	ecx, 10000				; 00002710H
	idiv	ecx
	mov	DWORD PTR _tLate$[ebp], eax
; Line 1962
	cmp	DWORD PTR _tLate$[ebp], 1000		; 000003e8H
	jg	SHORT $LN10@RecordFram
	cmp	DWORD PTR _tLate$[ebp], -1000		; fffffc18H
	jge	SHORT $LN11@RecordFram
$LN10@RecordFram:
; Line 1963
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+324], 1
	jg	SHORT $LN9@RecordFram
; Line 1964
	mov	DWORD PTR _tLate$[ebp], 0
	jmp	SHORT $LN11@RecordFram
$LN9@RecordFram:
; Line 1965
	cmp	DWORD PTR _tLate$[ebp], 0
	jle	SHORT $LN7@RecordFram
; Line 1966
	mov	DWORD PTR _tLate$[ebp], 1000		; 000003e8H
; Line 1967
	jmp	SHORT $LN11@RecordFram
$LN7@RecordFram:
; Line 1968
	mov	DWORD PTR _tLate$[ebp], -1000		; fffffc18H
$LN11@RecordFram:
; Line 1973
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+324], 1
	jle	SHORT $LN5@RecordFram
; Line 1974
	mov	eax, DWORD PTR _tLate$[ebp]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+328]
	adc	edx, DWORD PTR [ecx+332]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+328], eax
	mov	DWORD PTR [ecx+332], edx
; Line 1975
	mov	eax, DWORD PTR _tLate$[ebp]
	imul	eax, DWORD PTR _tLate$[ebp]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+336]
	adc	edx, DWORD PTR [ecx+340]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+336], eax
	mov	DWORD PTR [ecx+340], edx
$LN5@RecordFram:
; Line 1980
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+324], 2
	jle	$LN4@RecordFram
; Line 1981
	mov	eax, DWORD PTR _trFrame$[ebp]
	cdq
	mov	ecx, 10000				; 00002710H
	idiv	ecx
	mov	DWORD PTR _tFrame$82387[ebp], eax
; Line 1986
	cmp	DWORD PTR _tFrame$82387[ebp], 1000	; 000003e8H
	jg	SHORT $LN2@RecordFram
	cmp	DWORD PTR _tFrame$82387[ebp], 0
	jge	SHORT $LN3@RecordFram
$LN2@RecordFram:
	mov	DWORD PTR _tFrame$82387[ebp], 1000	; 000003e8H
$LN3@RecordFram:
; Line 1987
	mov	eax, DWORD PTR _tFrame$82387[ebp]
	imul	eax, DWORD PTR _tFrame$82387[ebp]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+352]
	adc	edx, DWORD PTR [ecx+356]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+352], eax
	mov	DWORD PTR [ecx+356], edx
; Line 1988
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv191[ebp], edx
	mov	eax, DWORD PTR tv191[ebp]
	cmp	DWORD PTR [eax+356], 0
	jg	SHORT $LN1@RecordFram
	jl	SHORT $LN14@RecordFram
	mov	ecx, DWORD PTR tv191[ebp]
	cmp	DWORD PTR [ecx+352], 0
	jae	SHORT $LN1@RecordFram
$LN14@RecordFram:
	push	1988					; 000007c4H
	push	OFFSET $SG82391
	push	OFFSET $SG82392
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@RecordFram:
; Line 1989
	mov	eax, DWORD PTR _tFrame$82387[ebp]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+360]
	adc	edx, DWORD PTR [ecx+364]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+360], eax
	mov	DWORD PTR [ecx+364], edx
$LN4@RecordFram:
; Line 1991
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+324]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+324], eax
; Line 1993
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?RecordFrameLateness@CBaseVideoRenderer@@UAEXHH@Z ENDP	; CBaseVideoRenderer::RecordFrameLateness
_TEXT	ENDS
PUBLIC	?ThrottleWait@CBaseVideoRenderer@@QAEXXZ	; CBaseVideoRenderer::ThrottleWait
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ThrottleWait@CBaseVideoRenderer@@QAEXXZ
_TEXT	SEGMENT
_iThrottle$82397 = -8					; size = 4
_this$ = -4						; size = 4
?ThrottleWait@CBaseVideoRenderer@@QAEXXZ PROC		; CBaseVideoRenderer::ThrottleWait, COMDAT
; _this$ = ecx
; Line 1997
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1998
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+272], 0
	jle	SHORT $LN2@ThrottleWa
; Line 1999
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+272]
	cdq
	mov	ecx, 10000				; 00002710H
	idiv	ecx
	mov	DWORD PTR _iThrottle$82397[ebp], eax
; Line 2001
	mov	edx, DWORD PTR _iThrottle$82397[ebp]
	push	edx
	push	OFFSET $SG82399
	push	0
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 2002
	mov	esi, esp
	mov	eax, DWORD PTR _iThrottle$82397[ebp]
	push	eax
	call	DWORD PTR __imp__Sleep@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2003
	jmp	SHORT $LN3@ThrottleWa
$LN2@ThrottleWa:
; Line 2004
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__Sleep@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@ThrottleWa:
; Line 2006
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ThrottleWait@CBaseVideoRenderer@@QAEXXZ ENDP		; CBaseVideoRenderer::ThrottleWait
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnDirectRender@CBaseVideoRenderer@@UAEXPAUIMediaSample@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMediaSample$ = 8					; size = 4
?OnDirectRender@CBaseVideoRenderer@@UAEXPAUIMediaSample@@@Z PROC ; CBaseVideoRenderer::OnDirectRender, COMDAT
; _this$ = ecx
; Line 2017
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2018
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+276], 0
; Line 2019
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+280], 5000000		; 004c4b40H
; Line 2023
	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+372]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+368]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+180]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2024
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ThrottleWait@CBaseVideoRenderer@@QAEXXZ ; CBaseVideoRenderer::ThrottleWait
; Line 2025
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnDirectRender@CBaseVideoRenderer@@UAEXPAUIMediaSample@@@Z ENDP ; CBaseVideoRenderer::OnDirectRender
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnRenderStart@CBaseVideoRenderer@@UAEXPAUIMediaSample@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMediaSample$ = 8					; size = 4
?OnRenderStart@CBaseVideoRenderer@@UAEXPAUIMediaSample@@@Z PROC ; CBaseVideoRenderer::OnRenderStart, COMDAT
; _this$ = ecx
; Line 2034
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2035
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+372]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+368]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+180]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2036
	mov	esi, esp
	call	DWORD PTR __imp__timeGetTime@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+284], eax
; Line 2037
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnRenderStart@CBaseVideoRenderer@@UAEXPAUIMediaSample@@@Z ENDP ; CBaseVideoRenderer::OnRenderStart
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?OnRenderEnd@CBaseVideoRenderer@@UAEXPAUIMediaSample@@@Z
_TEXT	SEGMENT
_tr$ = -8						; size = 4
_this$ = -4						; size = 4
_pMediaSample$ = 8					; size = 4
?OnRenderEnd@CBaseVideoRenderer@@UAEXPAUIMediaSample@@@Z PROC ; CBaseVideoRenderer::OnRenderEnd, COMDAT
; _this$ = ecx
; Line 2046
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2051
	mov	esi, esp
	call	DWORD PTR __imp__timeGetTime@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+284]
	imul	eax, 10000				; 00002710H
	mov	DWORD PTR _tr$[ebp], eax
; Line 2052
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+276]
	shl	eax, 1
	cmp	DWORD PTR _tr$[ebp], eax
	jl	SHORT $LN1@OnRenderEn
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+280]
	shl	edx, 1
	cmp	DWORD PTR _tr$[ebp], edx
	jge	SHORT $LN2@OnRenderEn
$LN1@OnRenderEn:
; Line 2054
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+276]
	imul	eax, 3
	add	eax, DWORD PTR _tr$[ebp]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+276], eax
$LN2@OnRenderEn:
; Line 2056
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _tr$[ebp]
	mov	DWORD PTR [edx+280], eax
; Line 2057
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ThrottleWait@CBaseVideoRenderer@@QAEXXZ ; CBaseVideoRenderer::ThrottleWait
; Line 2058
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?OnRenderEnd@CBaseVideoRenderer@@UAEXPAUIMediaSample@@@Z ENDP ; CBaseVideoRenderer::OnRenderEnd
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetSink@CBaseVideoRenderer@@UAGJPAUIQualityControl@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_piqc$ = 12						; size = 4
?SetSink@CBaseVideoRenderer@@UAGJPAUIQualityControl@@@Z PROC ; CBaseVideoRenderer::SetSink, COMDAT
; Line 2062
	push	ebp
	mov	ebp, esp
; Line 2064
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _piqc$[ebp]
	mov	DWORD PTR [eax-64], ecx
; Line 2066
	xor	eax, eax
; Line 2067
	pop	ebp
	ret	8
?SetSink@CBaseVideoRenderer@@UAGJPAUIQualityControl@@@Z ENDP ; CBaseVideoRenderer::SetSink
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Notify@CBaseVideoRenderer@@UAGJPAUIBaseFilter@@UtagQuality@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pSelf$ = 12						; size = 4
_q$ = 16						; size = 24
?Notify@CBaseVideoRenderer@@UAGJPAUIBaseFilter@@UtagQuality@@@Z PROC ; CBaseVideoRenderer::Notify, COMDAT
; Line 2071
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2107
	cmp	DWORD PTR _q$[ebp+4], 1000		; 000003e8H
	jl	SHORT $LN2@Notify
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 2108
	jmp	SHORT $LN1@Notify
$LN2@Notify:
; Line 2111
	mov	ecx, DWORD PTR _q$[ebp+4]
	add	ecx, 167				; 000000a7H
	mov	eax, 388880000				; 172dd680H
	cdq
	idiv	ecx
	sub	eax, 330000				; 00050910H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], eax
$LN1@Notify:
; Line 2113
	xor	eax, eax
; Line 2114
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Notify
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
	npad	3
$LN7@Notify:
	DD	1
	DD	$LN6@Notify
$LN6@Notify:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@Notify
$LN5@Notify:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
?Notify@CBaseVideoRenderer@@UAGJPAUIBaseFilter@@UtagQuality@@@Z ENDP ; CBaseVideoRenderer::Notify
_TEXT	ENDS
PUBLIC	?GetConnected@CBasePin@@QAEPAUIPin@@XZ		; CBasePin::GetConnected
PUBLIC	__$ArrayPad$
EXTRN	_IID_IQualityControl:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SendQuality@CBaseVideoRenderer@@UAEJ_J0@Z
_TEXT	SEGMENT
tv191 = -64						; size = 4
_pOutputPin$82456 = -60					; size = 4
_pQC$82455 = -52					; size = 4
_hr$ = -44						; size = 4
_q$ = -36						; size = 24
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_trLate$ = 8						; size = 8
_trRealStream$ = 16					; size = 8
?SendQuality@CBaseVideoRenderer@@UAEJ_J0@Z PROC		; CBaseVideoRenderer::SendQuality, COMDAT
; _this$ = ecx
; Line 2155
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2171
	mov	eax, DWORD PTR _trRealStream$[ebp]
	mov	DWORD PTR _q$[ebp+16], eax
	mov	ecx, DWORD PTR _trRealStream$[ebp+4]
	mov	DWORD PTR _q$[ebp+20], ecx
; Line 2173
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+300], 0
	jge	SHORT $LN20@SendQualit
; Line 2174
	mov	DWORD PTR _q$[ebp], 0
	jmp	SHORT $LN19@SendQualit
$LN20@SendQualit:
; Line 2177
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+276]
	shl	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+300], ecx
	jle	SHORT $LN18@SendQualit
; Line 2178
	mov	DWORD PTR _q$[ebp], 0
; Line 2179
	jmp	SHORT $LN19@SendQualit
$LN18@SendQualit:
; Line 2180
	mov	DWORD PTR _q$[ebp], 1
$LN19@SendQualit:
; Line 2183
	mov	DWORD PTR _q$[ebp+4], 1000		; 000003e8H
; Line 2185
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+300], 0
	jge	SHORT $LN16@SendQualit
	jmp	$LN15@SendQualit
$LN16@SendQualit:
; Line 2188
	cmp	DWORD PTR _trLate$[ebp+4], 0
	jl	SHORT $LN14@SendQualit
	jg	SHORT $LN25@SendQualit
	cmp	DWORD PTR _trLate$[ebp], 0
	jbe	SHORT $LN14@SendQualit
$LN25@SendQualit:
; Line 2193
	push	0
	push	10000					; 00002710H
	mov	ecx, DWORD PTR _trLate$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _trLate$[ebp]
	push	edx
	call	__alldiv
	mov	ecx, 1000				; 000003e8H
	sub	ecx, eax
	mov	DWORD PTR _q$[ebp+4], ecx
; Line 2194
	cmp	DWORD PTR _q$[ebp+4], 500		; 000001f4H
	jge	SHORT $LN12@SendQualit
; Line 2195
	mov	DWORD PTR _q$[ebp+4], 500		; 000001f4H
$LN12@SendQualit:
; Line 2199
	jmp	$LN15@SendQualit
$LN14@SendQualit:
; Line 2201
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+296], 20000		; 00004e20H
	jle	$LN15@SendQualit
	cmp	DWORD PTR _trLate$[ebp+4], -1
	jg	$LN15@SendQualit
	jl	SHORT $LN26@SendQualit
	cmp	DWORD PTR _trLate$[ebp], -20000		; ffffb1e0H
	jae	SHORT $LN15@SendQualit
$LN26@SendQualit:
; Line 2203
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+296]
	cmp	edx, DWORD PTR [ecx+300]
	jl	SHORT $LN9@SendQualit
; Line 2208
	mov	DWORD PTR _q$[ebp+4], 2000		; 000007d0H
; Line 2209
	jmp	SHORT $LN8@SendQualit
$LN9@SendQualit:
; Line 2210
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	add	ecx, 20000				; 00004e20H
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+296]
	jle	SHORT $LN7@SendQualit
; Line 2212
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	add	ecx, 20000				; 00004e20H
	mov	edx, DWORD PTR _this$[ebp]
	sub	ecx, DWORD PTR [edx+296]
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+300]
	cdq
	idiv	ecx
	imul	eax, 1000				; 000003e8H
	mov	DWORD PTR _q$[ebp+4], eax
; Line 2213
	jmp	SHORT $LN8@SendQualit
$LN7@SendQualit:
; Line 2218
	mov	DWORD PTR _q$[ebp+4], 2000		; 000007d0H
$LN8@SendQualit:
; Line 2222
	cmp	DWORD PTR _q$[ebp+4], 2000		; 000007d0H
	jle	SHORT $LN15@SendQualit
; Line 2223
	mov	DWORD PTR _q$[ebp+4], 2000		; 000007d0H
$LN15@SendQualit:
; Line 2240
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+276]
	cdq
	sub	eax, edx
	sar	eax, 1
	cdq
	add	eax, DWORD PTR _trLate$[ebp]
	adc	edx, DWORD PTR _trLate$[ebp+4]
	mov	DWORD PTR _q$[ebp+8], eax
	mov	DWORD PTR _q$[ebp+12], edx
; Line 2248
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+196], 0
	jne	SHORT $LN4@SendQualit
; Line 2253
	mov	DWORD PTR _pQC$82455[ebp], 0
; Line 2254
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	call	?GetConnected@CBasePin@@QAEPAUIPin@@XZ	; CBasePin::GetConnected
	mov	DWORD PTR _pOutputPin$82456[ebp], eax
; Line 2255
	cmp	DWORD PTR _pOutputPin$82456[ebp], 0
	jne	SHORT $LN3@SendQualit
	push	2255					; 000008cfH
	push	OFFSET $SG82458
	push	OFFSET $SG82459
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN3@SendQualit:
; Line 2259
	mov	esi, esp
	lea	ecx, DWORD PTR _pQC$82455[ebp]
	push	ecx
	push	OFFSET _IID_IQualityControl
	mov	edx, DWORD PTR _pOutputPin$82456[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pOutputPin$82456[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 2260
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN4@SendQualit
; Line 2261
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pQC$82455[ebp]
	mov	DWORD PTR [eax+196], ecx
$LN4@SendQualit:
; Line 2264
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+196], 0
	je	SHORT $LN1@SendQualit
; Line 2265
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN23@SendQualit
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv191[ebp], eax
	jmp	SHORT $LN24@SendQualit
$LN23@SendQualit:
	mov	DWORD PTR tv191[ebp], 0
$LN24@SendQualit:
	mov	esi, esp
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	mov	edx, DWORD PTR _q$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _q$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _q$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _q$[ebp+12]
	mov	DWORD PTR [ecx+12], eax
	mov	edx, DWORD PTR _q$[ebp+16]
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR _q$[ebp+20]
	mov	DWORD PTR [ecx+20], eax
	mov	ecx, DWORD PTR tv191[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+196]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+196]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN21@SendQualit
$LN1@SendQualit:
; Line 2268
	mov	eax, 1
$LN21@SendQualit:
; Line 2270
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN30@SendQualit
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN30@SendQualit:
	DD	2
	DD	$LN29@SendQualit
$LN29@SendQualit:
	DD	-36					; ffffffdcH
	DD	24					; 00000018H
	DD	$LN27@SendQualit
	DD	-52					; ffffffccH
	DD	4
	DD	$LN28@SendQualit
$LN28@SendQualit:
	DB	112					; 00000070H
	DB	81					; 00000051H
	DB	67					; 00000043H
	DB	0
$LN27@SendQualit:
	DB	113					; 00000071H
	DB	0
?SendQuality@CBaseVideoRenderer@@UAEJ_J0@Z ENDP		; CBaseVideoRenderer::SendQuality
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetConnected@CBasePin@@QAEPAUIPin@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetConnected@CBasePin@@QAEPAUIPin@@XZ PROC		; CBasePin::GetConnected, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\amfilter.h
; Line 501
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetConnected@CBasePin@@QAEPAUIPin@@XZ ENDP		; CBasePin::GetConnected
_TEXT	ENDS
PUBLIC	?TimeDiff@@YGH_J@Z				; TimeDiff
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ShouldDrawSampleNow@CBaseVideoRenderer@@UAEJPAUIMediaSample@@PA_J1@Z
_TEXT	SEGMENT
tv433 = -108						; size = 8
tv198 = -100						; size = 4
tv177 = -96						; size = 4
tv163 = -92						; size = 4
tv272 = -88						; size = 4
_iAccuracy$82529 = -84					; size = 4
_Delay$82523 = -80					; size = 4
_trE$82521 = -76					; size = 4
_bPlayASAP$82508 = -72					; size = 4
_Result$82507 = -68					; size = 4
_tr$82503 = -64						; size = 8
_trFrame$ = -56						; size = 4
_trL$82501 = -52					; size = 4
_trWaitAvg$ = -48					; size = 4
_bJustDroppedFrame$ = -44				; size = 4
_t$82485 = -40						; size = 4
_trDuration$ = -36					; size = 4
_hr$ = -32						; size = 4
_trLate$ = -28						; size = 4
_trTrueLate$ = -24					; size = 4
_trRealStream$ = -16					; size = 8
_this$ = -4						; size = 4
_pMediaSample$ = 8					; size = 4
_ptrStart$ = 12						; size = 4
_ptrEnd$ = 16						; size = 4
?ShouldDrawSampleNow@CBaseVideoRenderer@@UAEJPAUIMediaSample@@PA_J1@Z PROC ; CBaseVideoRenderer::ShouldDrawSampleNow, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\renbase.cpp
; Line 2286
	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-108]
	mov	ecx, 27					; 0000001bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2289
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	SHORT $LN24@ShouldDraw
	push	2289					; 000008f1H
	push	OFFSET $SG82472
	push	OFFSET $SG82473
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN24@ShouldDraw:
; Line 2299
	mov	ecx, DWORD PTR _ptrStart$[ebp]
	mov	DWORD PTR tv272[ebp], ecx
	mov	edx, DWORD PTR tv272[ebp]
	cmp	DWORD PTR [edx+4], 0
	jl	SHORT $LN23@ShouldDraw
	jg	SHORT $LN34@ShouldDraw
	mov	eax, DWORD PTR tv272[ebp]
	cmp	DWORD PTR [eax], 80000			; 00013880H
	jb	SHORT $LN23@ShouldDraw
$LN34@ShouldDraw:
; Line 2300
	mov	ecx, DWORD PTR _ptrStart$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, 80000				; 00013880H
	mov	eax, DWORD PTR [ecx+4]
	sbb	eax, 0
	mov	ecx, DWORD PTR _ptrStart$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
; Line 2301
	mov	edx, DWORD PTR _ptrEnd$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 80000				; 00013880H
	mov	ecx, DWORD PTR [edx+4]
	sbb	ecx, 0
	mov	edx, DWORD PTR _ptrEnd$[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
$LN23@ShouldDraw:
; Line 2306
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptrStart$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+312], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+316], ecx
; Line 2310
	mov	esi, esp
	lea	edx, DWORD PTR _trRealStream$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2318
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	ecx, DWORD PTR _trRealStream$[ebp]
	sub	ecx, eax
	mov	eax, DWORD PTR _trRealStream$[ebp+4]
	sbb	eax, edx
	mov	DWORD PTR _trRealStream$[ebp], ecx
	mov	DWORD PTR _trRealStream$[ebp+4], eax
; Line 2327
	mov	ecx, DWORD PTR _ptrStart$[ebp]
	mov	edx, DWORD PTR _trRealStream$[ebp]
	sub	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _trRealStream$[ebp+4]
	sbb	eax, DWORD PTR [ecx+4]
	push	eax
	push	edx
	call	?TimeDiff@@YGH_J@Z			; TimeDiff
	mov	DWORD PTR _trTrueLate$[ebp], eax
; Line 2328
	mov	ecx, DWORD PTR _trTrueLate$[ebp]
	mov	DWORD PTR _trLate$[ebp], ecx
; Line 2333
	mov	esi, esp
	mov	edx, DWORD PTR _trRealStream$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _trRealStream$[ebp]
	push	eax
	mov	eax, DWORD PTR _trLate$[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+192]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 2335
	xor	ecx, ecx
	cmp	DWORD PTR _hr$[ebp], 0
	sete	cl
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+268], ecx
; Line 2339
	mov	eax, DWORD PTR _ptrEnd$[ebp]
	mov	ecx, DWORD PTR _ptrStart$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+4]
	sbb	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _trDuration$[ebp], edx
; Line 2346
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+304]
	cdq
	and	edx, 31					; 0000001fH
	add	eax, edx
	sar	eax, 5
	mov	DWORD PTR _t$82485[ebp], eax
; Line 2349
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+304]
	add	eax, DWORD PTR _t$82485[ebp]
	cmp	DWORD PTR _trDuration$[ebp], eax
	jg	SHORT $LN21@ShouldDraw
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+304]
	sub	edx, DWORD PTR _t$82485[ebp]
	cmp	DWORD PTR _trDuration$[ebp], edx
	jge	SHORT $LN22@ShouldDraw
$LN21@ShouldDraw:
; Line 2353
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _trDuration$[ebp]
	mov	DWORD PTR [eax+300], ecx
; Line 2354
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _trDuration$[ebp]
	mov	DWORD PTR [edx+304], eax
$LN22@ShouldDraw:
; Line 2381
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+268], 0
	je	SHORT $LN27@ShouldDraw
	mov	edx, DWORD PTR _pMediaSample$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pMediaSample$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+60]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN28@ShouldDraw
$LN27@ShouldDraw:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+264], -1
	je	SHORT $LN28@ShouldDraw
	mov	DWORD PTR tv163[ebp], 0
	jmp	SHORT $LN29@ShouldDraw
$LN28@ShouldDraw:
	mov	DWORD PTR tv163[ebp], 1
$LN29@ShouldDraw:
	mov	ecx, DWORD PTR tv163[ebp]
	mov	DWORD PTR _bJustDroppedFrame$[ebp], ecx
; Line 2385
	cmp	DWORD PTR _trLate$[ebp], 0
	jle	SHORT $LN20@ShouldDraw
; Line 2386
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+288], 0
	jmp	SHORT $LN19@ShouldDraw
$LN20@ShouldDraw:
; Line 2387
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _trLate$[ebp]
	cmp	ecx, DWORD PTR [eax+288]
	jge	SHORT $LN17@ShouldDraw
	cmp	DWORD PTR _bJustDroppedFrame$[ebp], 0
	je	SHORT $LN18@ShouldDraw
$LN17@ShouldDraw:
; Line 2388
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _trLate$[ebp]
	mov	DWORD PTR [edx+288], eax
; Line 2389
	jmp	SHORT $LN19@ShouldDraw
$LN18@ShouldDraw:
; Line 2390
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+288]
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+288]
	sub	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+288], ecx
$LN19@ShouldDraw:
; Line 2399
	cmp	DWORD PTR _trLate$[ebp], 0
	jge	SHORT $LN30@ShouldDraw
	mov	eax, DWORD PTR _trLate$[ebp]
	neg	eax
	mov	DWORD PTR tv177[ebp], eax
	jmp	SHORT $LN31@ShouldDraw
$LN30@ShouldDraw:
	mov	DWORD PTR tv177[ebp], 0
$LN31@ShouldDraw:
	mov	ecx, DWORD PTR tv177[ebp]
	mov	DWORD PTR _trL$82501[ebp], ecx
; Line 2400
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+296]
	imul	eax, 3
	add	eax, DWORD PTR _trL$82501[ebp]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	mov	DWORD PTR _trWaitAvg$[ebp], eax
; Line 2406
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _trRealStream$[ebp]
	sub	ecx, DWORD PTR [eax+344]
	mov	edx, DWORD PTR _trRealStream$[ebp+4]
	sbb	edx, DWORD PTR [eax+348]
	mov	DWORD PTR _tr$82503[ebp], ecx
	mov	DWORD PTR _tr$82503[ebp+4], edx
; Line 2407
	cmp	DWORD PTR _tr$82503[ebp+4], 0
	jl	SHORT $LN15@ShouldDraw
	jg	SHORT $LN35@ShouldDraw
	cmp	DWORD PTR _tr$82503[ebp], 10000000	; 00989680H
	jbe	SHORT $LN15@ShouldDraw
$LN35@ShouldDraw:
; Line 2408
	mov	DWORD PTR _tr$82503[ebp], 10000000	; 00989680H
	mov	DWORD PTR _tr$82503[ebp+4], 0
$LN15@ShouldDraw:
; Line 2410
	mov	eax, DWORD PTR _tr$82503[ebp]
	mov	DWORD PTR _trFrame$[ebp], eax
; Line 2436
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+276]
	imul	edx, 3
	mov	eax, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR [eax+300]
	jle	SHORT $LN13@ShouldDraw
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+268], 0
	je	SHORT $LN32@ShouldDraw
	mov	edx, DWORD PTR _trDuration$[ebp]
	shl	edx, 2
	xor	eax, eax
	cmp	DWORD PTR _trLate$[ebp], edx
	setle	al
	mov	DWORD PTR tv198[ebp], eax
	jmp	SHORT $LN33@ShouldDraw
$LN32@ShouldDraw:
	mov	ecx, DWORD PTR _trLate$[ebp]
	add	ecx, DWORD PTR _trLate$[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR _trDuration$[ebp]
	setl	dl
	mov	DWORD PTR tv198[ebp], edx
$LN33@ShouldDraw:
	cmp	DWORD PTR tv198[ebp], 0
	jne	SHORT $LN13@ShouldDraw
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+296], 80000		; 00013880H
	jg	SHORT $LN13@ShouldDraw
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _trRealStream$[ebp]
	sub	edx, DWORD PTR [ecx+344]
	mov	eax, DWORD PTR _trRealStream$[ebp+4]
	sbb	eax, DWORD PTR [ecx+348]
	mov	DWORD PTR tv433[ebp], edx
	mov	DWORD PTR tv433[ebp+4], eax
	cmp	DWORD PTR tv433[ebp+4], 0
	jl	$LN14@ShouldDraw
	jg	SHORT $LN13@ShouldDraw
	cmp	DWORD PTR tv433[ebp], 10000000		; 00989680H
	jbe	$LN14@ShouldDraw
$LN13@ShouldDraw:
; Line 2445
	mov	DWORD PTR _bPlayASAP$82508[ebp], 0
; Line 2450
	cmp	DWORD PTR _bJustDroppedFrame$[ebp], 0
	je	SHORT $LN12@ShouldDraw
; Line 2451
	mov	DWORD PTR _bPlayASAP$82508[ebp], 1
; Line 2458
	jmp	SHORT $LN11@ShouldDraw
$LN12@ShouldDraw:
; Line 2464
	mov	eax, DWORD PTR _trDuration$[ebp]
	cdq
	and	edx, 15					; 0000000fH
	add	eax, edx
	sar	eax, 4
	add	eax, DWORD PTR _trDuration$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+300], eax
	jle	SHORT $LN11@ShouldDraw
	mov	edx, DWORD PTR _trDuration$[ebp]
	neg	edx
	imul	edx, 10					; 0000000aH
	cmp	DWORD PTR _trLate$[ebp], edx
	jle	SHORT $LN11@ShouldDraw
; Line 2465
	mov	DWORD PTR _bPlayASAP$82508[ebp], 1
$LN11@ShouldDraw:
; Line 2481
	cmp	DWORD PTR _trLate$[ebp], -9000000	; ff76abc0H
	jge	SHORT $LN9@ShouldDraw
; Line 2482
	mov	DWORD PTR _bPlayASAP$82508[ebp], 0
$LN9@ShouldDraw:
; Line 2485
	cmp	DWORD PTR _bPlayASAP$82508[ebp], 0
	je	$LN8@ShouldDraw
; Line 2487
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+264], 0
; Line 2494
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+296]
	imul	eax, 3
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+296], eax
; Line 2497
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+300]
	imul	eax, 3
	add	eax, DWORD PTR _trFrame$[ebp]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+300], eax
; Line 2505
	mov	edx, DWORD PTR _trFrame$[ebp]
	push	edx
	mov	eax, DWORD PTR _trTrueLate$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PreparePerformanceData@CBaseVideoRenderer@@QAEXHH@Z ; CBaseVideoRenderer::PreparePerformanceData
; Line 2507
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _trRealStream$[ebp]
	mov	DWORD PTR [ecx+344], edx
	mov	eax, DWORD PTR _trRealStream$[ebp+4]
	mov	DWORD PTR [ecx+348], eax
; Line 2508
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+288]
	cmp	edx, DWORD PTR _trLate$[ebp]
	jle	SHORT $LN7@ShouldDraw
; Line 2509
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _trLate$[ebp]
	mov	DWORD PTR [eax+288], ecx
$LN7@ShouldDraw:
; Line 2511
	mov	DWORD PTR _Result$82507[ebp], 0
; Line 2513
	jmp	$LN6@ShouldDraw
$LN8@ShouldDraw:
; Line 2514
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+264]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+264], eax
; Line 2521
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _trDuration$[ebp]
	mov	DWORD PTR [edx+300], eax
; Line 2527
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+288]
	mov	DWORD PTR _trE$82521[ebp], edx
; Line 2528
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+300]
	neg	ecx
	cmp	DWORD PTR _trE$82521[ebp], ecx
	jge	SHORT $LN5@ShouldDraw
; Line 2529
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+300]
	neg	eax
	mov	DWORD PTR _trE$82521[ebp], eax
$LN5@ShouldDraw:
; Line 2531
	mov	eax, DWORD PTR _trE$82521[ebp]
	cdq
	mov	ecx, DWORD PTR _ptrStart$[ebp]
	add	eax, DWORD PTR [ecx]
	adc	edx, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _ptrStart$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
; Line 2534
	mov	edx, DWORD PTR _trTrueLate$[ebp]
	neg	edx
	mov	DWORD PTR _Delay$82523[ebp], edx
; Line 2535
	xor	eax, eax
	cmp	DWORD PTR _Delay$82523[ebp], 0
	setg	al
	mov	DWORD PTR _Result$82507[ebp], eax
; Line 2537
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _trWaitAvg$[ebp]
	mov	DWORD PTR [ecx+296], edx
; Line 2541
	cmp	DWORD PTR _Result$82507[ebp], 1
	jne	SHORT $LN4@ShouldDraw
; Line 2542
	mov	eax, DWORD PTR _ptrStart$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx+344]
	mov	eax, DWORD PTR [eax+4]
	sbb	eax, DWORD PTR [ecx+348]
	push	eax
	push	edx
	call	?TimeDiff@@YGH_J@Z			; TimeDiff
	mov	DWORD PTR _trFrame$[ebp], eax
; Line 2543
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _ptrStart$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+344], eax
	mov	edx, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+348], edx
; Line 2544
	jmp	SHORT $LN3@ShouldDraw
$LN4@ShouldDraw:
; Line 2546
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _trRealStream$[ebp]
	mov	DWORD PTR [eax+344], ecx
	mov	edx, DWORD PTR _trRealStream$[ebp+4]
	mov	DWORD PTR [eax+348], edx
$LN3@ShouldDraw:
; Line 2550
	cmp	DWORD PTR _Delay$82523[ebp], 0
	jle	SHORT $LN2@ShouldDraw
; Line 2552
	mov	eax, DWORD PTR _ptrStart$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx+312]
	mov	eax, DWORD PTR [eax+4]
	sbb	eax, DWORD PTR [ecx+316]
	push	eax
	push	edx
	call	?TimeDiff@@YGH_J@Z			; TimeDiff
	mov	DWORD PTR _iAccuracy$82529[ebp], eax
; Line 2553
	jmp	SHORT $LN1@ShouldDraw
$LN2@ShouldDraw:
; Line 2555
	mov	ecx, DWORD PTR _trTrueLate$[ebp]
	mov	DWORD PTR _iAccuracy$82529[ebp], ecx
$LN1@ShouldDraw:
; Line 2557
	mov	edx, DWORD PTR _trFrame$[ebp]
	push	edx
	mov	eax, DWORD PTR _iAccuracy$82529[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PreparePerformanceData@CBaseVideoRenderer@@QAEXHH@Z ; CBaseVideoRenderer::PreparePerformanceData
$LN6@ShouldDraw:
; Line 2560
	mov	eax, DWORD PTR _Result$82507[ebp]
	jmp	SHORT $LN25@ShouldDraw
$LN14@ShouldDraw:
; Line 2567
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _trWaitAvg$[ebp]
	mov	DWORD PTR [ecx+296], edx
; Line 2581
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+264], -1
; Line 2582
	mov	eax, -2147467259			; 80004005H
$LN25@ShouldDraw:
; Line 2584
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN39@ShouldDraw
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 108				; 0000006cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN39@ShouldDraw:
	DD	1
	DD	$LN38@ShouldDraw
$LN38@ShouldDraw:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN37@ShouldDraw
$LN37@ShouldDraw:
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
?ShouldDrawSampleNow@CBaseVideoRenderer@@UAEJPAUIMediaSample@@PA_J1@Z ENDP ; CBaseVideoRenderer::ShouldDrawSampleNow
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?TimeDiff@@YGH_J@Z
_TEXT	SEGMENT
_rt$ = 8						; size = 8
?TimeDiff@@YGH_J@Z PROC					; TimeDiff, COMDAT
; Line 19
	push	ebp
	mov	ebp, esp
; Line 20
	cmp	DWORD PTR _rt$[ebp+4], -1
	jg	SHORT $LN4@TimeDiff
	jl	SHORT $LN7@TimeDiff
	cmp	DWORD PTR _rt$[ebp], -500000000		; e2329b00H
	jae	SHORT $LN4@TimeDiff
$LN7@TimeDiff:
; Line 21
	mov	eax, -500000000				; e2329b00H
	jmp	SHORT $LN5@TimeDiff
; Line 22
	jmp	SHORT $LN5@TimeDiff
$LN4@TimeDiff:
; Line 23
	cmp	DWORD PTR _rt$[ebp+4], 0
	jl	SHORT $LN2@TimeDiff
	jg	SHORT $LN8@TimeDiff
	cmp	DWORD PTR _rt$[ebp], 500000000		; 1dcd6500H
	jbe	SHORT $LN2@TimeDiff
$LN8@TimeDiff:
; Line 24
	mov	eax, 500000000				; 1dcd6500H
	jmp	SHORT $LN5@TimeDiff
	jmp	SHORT $LN5@TimeDiff
$LN2@TimeDiff:
; Line 25
	mov	eax, DWORD PTR _rt$[ebp]
$LN5@TimeDiff:
; Line 26
	pop	ebp
	ret	8
?TimeDiff@@YGH_J@Z ENDP					; TimeDiff
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ScheduleSample@CBaseVideoRenderer@@UAEHPAUIMediaSample@@@Z
_TEXT	SEGMENT
_bDrawImage$ = -8					; size = 4
_this$ = -4						; size = 4
_pMediaSample$ = 8					; size = 4
?ScheduleSample@CBaseVideoRenderer@@UAEHPAUIMediaSample@@@Z PROC ; CBaseVideoRenderer::ScheduleSample, COMDAT
; _this$ = ecx
; Line 2596
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2599
	mov	eax, DWORD PTR _pMediaSample$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ScheduleSample@CBaseRenderer@@UAEHPAUIMediaSample@@@Z ; CBaseRenderer::ScheduleSample
	mov	DWORD PTR _bDrawImage$[ebp], eax
; Line 2600
	cmp	DWORD PTR _bDrawImage$[ebp], 0
	jne	SHORT $LN1@ScheduleSa@2
; Line 2601
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+320]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+320], edx
; Line 2602
	xor	eax, eax
	jmp	SHORT $LN2@ScheduleSa@2
$LN1@ScheduleSa@2:
; Line 2607
	mov	eax, 1
$LN2@ScheduleSa@2:
; Line 2608
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ScheduleSample@CBaseVideoRenderer@@UAEHPAUIMediaSample@@@Z ENDP ; CBaseVideoRenderer::ScheduleSample
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?get_FramesDroppedInRenderer@CBaseVideoRenderer@@UAGJPAH@Z
_TEXT	SEGMENT
$T83988 = -16						; size = 4
_cVideoLock$ = -8					; size = 4
_this$ = 8						; size = 4
_pcFramesDropped$ = 12					; size = 4
?get_FramesDroppedInRenderer@CBaseVideoRenderer@@UAGJPAH@Z PROC ; CBaseVideoRenderer::get_FramesDroppedInRenderer, COMDAT
; Line 2621
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 2622
	cmp	DWORD PTR _pcFramesDropped$[ebp], 0
	jne	SHORT $LN1@get_Frames
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN2@get_Frames
$LN1@get_Frames:
; Line 2623
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 132				; 00000084H
	push	eax
	lea	ecx, DWORD PTR _cVideoLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
; Line 2624
	mov	ecx, DWORD PTR _pcFramesDropped$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+64]
	mov	DWORD PTR [ecx], eax
; Line 2625
	mov	DWORD PTR $T83988[ebp], 0
	lea	ecx, DWORD PTR _cVideoLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83988[ebp]
$LN2@get_Frames:
; Line 2626
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@get_Frames
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN7@get_Frames:
	DD	1
	DD	$LN6@get_Frames
$LN6@get_Frames:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@get_Frames
$LN5@get_Frames:
	DB	99					; 00000063H
	DB	86					; 00000056H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	111					; 0000006fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?get_FramesDroppedInRenderer@CBaseVideoRenderer@@UAGJPAH@Z ENDP ; CBaseVideoRenderer::get_FramesDroppedInRenderer
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?get_FramesDrawn@CBaseVideoRenderer@@UAGJPAH@Z
_TEXT	SEGMENT
$T83995 = -16						; size = 4
_cVideoLock$ = -8					; size = 4
_this$ = 8						; size = 4
_pcFramesDrawn$ = 12					; size = 4
?get_FramesDrawn@CBaseVideoRenderer@@UAGJPAH@Z PROC	; CBaseVideoRenderer::get_FramesDrawn, COMDAT
; Line 2633
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 2634
	cmp	DWORD PTR _pcFramesDrawn$[ebp], 0
	jne	SHORT $LN1@get_Frames@2
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN2@get_Frames@2
$LN1@get_Frames@2:
; Line 2635
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 132				; 00000084H
	push	eax
	lea	ecx, DWORD PTR _cVideoLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
; Line 2636
	mov	ecx, DWORD PTR _pcFramesDrawn$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	mov	DWORD PTR [ecx], eax
; Line 2637
	mov	DWORD PTR $T83995[ebp], 0
	lea	ecx, DWORD PTR _cVideoLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T83995[ebp]
$LN2@get_Frames@2:
; Line 2638
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@get_Frames@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN7@get_Frames@2:
	DD	1
	DD	$LN6@get_Frames@2
$LN6@get_Frames@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@get_Frames@2
$LN5@get_Frames@2:
	DB	99					; 00000063H
	DB	86					; 00000056H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	111					; 0000006fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?get_FramesDrawn@CBaseVideoRenderer@@UAGJPAH@Z ENDP	; CBaseVideoRenderer::get_FramesDrawn
_TEXT	ENDS
EXTRN	__imp__MulDiv@12:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?get_AvgFrameRate@CBaseVideoRenderer@@UAGJPAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?get_AvgFrameRate@CBaseVideoRenderer@@UAGJPAH@Z$0
__ehfuncinfo$?get_AvgFrameRate@CBaseVideoRenderer@@UAGJPAH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?get_AvgFrameRate@CBaseVideoRenderer@@UAGJPAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?get_AvgFrameRate@CBaseVideoRenderer@@UAGJPAH@Z
_TEXT	SEGMENT
$T84002 = -32						; size = 4
_t$ = -28						; size = 4
_cVideoLock$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_piAvgFrameRate$ = 12					; size = 4
?get_AvgFrameRate@CBaseVideoRenderer@@UAGJPAH@Z PROC	; CBaseVideoRenderer::get_AvgFrameRate, COMDAT
; Line 2645
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?get_AvgFrameRate@CBaseVideoRenderer@@UAGJPAH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 2646
	cmp	DWORD PTR _piAvgFrameRate$[ebp], 0
	jne	SHORT $LN6@get_AvgFra
	mov	eax, -2147467261			; 80004003H
	jmp	$LN7@get_AvgFra
$LN6@get_AvgFra:
; Line 2647
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 132				; 00000084H
	push	eax
	lea	ecx, DWORD PTR _cVideoLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2650
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx-156], 0
	je	SHORT $LN5@get_AvgFra
; Line 2651
	mov	esi, esp
	call	DWORD PTR __imp__timeGetTime@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [edx+120]
	mov	DWORD PTR _t$[ebp], eax
; Line 2652
	jmp	SHORT $LN4@get_AvgFra
$LN5@get_AvgFra:
; Line 2653
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	DWORD PTR _t$[ebp], ecx
$LN4@get_AvgFra:
; Line 2656
	cmp	DWORD PTR _t$[ebp], 0
	jg	SHORT $LN3@get_AvgFra
; Line 2657
	mov	edx, DWORD PTR _piAvgFrameRate$[ebp]
	mov	DWORD PTR [edx], 0
; Line 2658
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	je	SHORT $LN2@get_AvgFra
	push	2658					; 00000a62H
	push	OFFSET $SG82568
	push	OFFSET $SG82569
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@get_AvgFra:
; Line 2659
	jmp	SHORT $LN1@get_AvgFra
$LN3@get_AvgFra:
; Line 2661
	mov	esi, esp
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	push	eax
	push	100000					; 000186a0H
	call	DWORD PTR __imp__MulDiv@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _piAvgFrameRate$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@get_AvgFra:
; Line 2663
	mov	DWORD PTR $T84002[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cVideoLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84002[ebp]
$LN7@get_AvgFra:
; Line 2664
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@get_AvgFra
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN13@get_AvgFra:
	DD	1
	DD	$LN12@get_AvgFra
$LN12@get_AvgFra:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN10@get_AvgFra
$LN10@get_AvgFra:
	DB	99					; 00000063H
	DB	86					; 00000056H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	111					; 0000006fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?get_AvgFrameRate@CBaseVideoRenderer@@UAGJPAH@Z$0:
	lea	ecx, DWORD PTR _cVideoLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?get_AvgFrameRate@CBaseVideoRenderer@@UAGJPAH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?get_AvgFrameRate@CBaseVideoRenderer@@UAGJPAH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?get_AvgFrameRate@CBaseVideoRenderer@@UAGJPAH@Z ENDP	; CBaseVideoRenderer::get_AvgFrameRate
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?get_AvgSyncOffset@CBaseVideoRenderer@@UAGJPAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?get_AvgSyncOffset@CBaseVideoRenderer@@UAGJPAH@Z$0
__ehfuncinfo$?get_AvgSyncOffset@CBaseVideoRenderer@@UAGJPAH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?get_AvgSyncOffset@CBaseVideoRenderer@@UAGJPAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?get_AvgSyncOffset@CBaseVideoRenderer@@UAGJPAH@Z
_TEXT	SEGMENT
$T84016 = -32						; size = 4
$T84015 = -28						; size = 4
_cVideoLock$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_piAvg$ = 12						; size = 4
?get_AvgSyncOffset@CBaseVideoRenderer@@UAGJPAH@Z PROC	; CBaseVideoRenderer::get_AvgSyncOffset, COMDAT
; Line 2672
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?get_AvgSyncOffset@CBaseVideoRenderer@@UAGJPAH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 2673
	cmp	DWORD PTR _piAvg$[ebp], 0
	jne	SHORT $LN4@get_AvgSyn
	mov	eax, -2147467261			; 80004003H
	jmp	$LN5@get_AvgSyn
$LN4@get_AvgSyn:
; Line 2674
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 132				; 00000084H
	push	eax
	lea	ecx, DWORD PTR _cVideoLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2676
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx-228], 0
	jne	SHORT $LN3@get_AvgSyn
; Line 2677
	mov	edx, DWORD PTR _piAvg$[ebp]
	mov	DWORD PTR [edx], 0
; Line 2678
	mov	DWORD PTR $T84015[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cVideoLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84015[ebp]
	jmp	SHORT $LN5@get_AvgSyn
$LN3@get_AvgSyn:
; Line 2683
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 1
	jg	SHORT $LN2@get_AvgSyn
; Line 2684
	mov	ecx, DWORD PTR _piAvg$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 2685
	jmp	SHORT $LN1@get_AvgSyn
$LN2@get_AvgSyn:
; Line 2686
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+68]
	sub	eax, 1
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	push	edx
	push	eax
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	mov	eax, DWORD PTR [ecx+72]
	push	eax
	call	__alldiv
	mov	ecx, DWORD PTR _piAvg$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@get_AvgSyn:
; Line 2688
	mov	DWORD PTR $T84016[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cVideoLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84016[ebp]
$LN5@get_AvgSyn:
; Line 2689
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@get_AvgSyn
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN11@get_AvgSyn:
	DD	1
	DD	$LN10@get_AvgSyn
$LN10@get_AvgSyn:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@get_AvgSyn
$LN8@get_AvgSyn:
	DB	99					; 00000063H
	DB	86					; 00000056H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	111					; 0000006fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?get_AvgSyncOffset@CBaseVideoRenderer@@UAGJPAH@Z$0:
	lea	ecx, DWORD PTR _cVideoLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?get_AvgSyncOffset@CBaseVideoRenderer@@UAGJPAH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?get_AvgSyncOffset@CBaseVideoRenderer@@UAGJPAH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?get_AvgSyncOffset@CBaseVideoRenderer@@UAGJPAH@Z ENDP	; CBaseVideoRenderer::get_AvgSyncOffset
PUBLIC	?isqrt@@YGHH@Z					; isqrt
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?isqrt@@YGHH@Z
_TEXT	SEGMENT
_s$ = -4						; size = 4
_x$ = 8							; size = 4
?isqrt@@YGHH@Z PROC					; isqrt, COMDAT
; Line 2711
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2712
	mov	DWORD PTR _s$[ebp], 1
; Line 2714
	cmp	DWORD PTR _x$[ebp], 1073741824		; 40000000H
	jle	SHORT $LN6@isqrt
; Line 2715
	mov	DWORD PTR _s$[ebp], 32768		; 00008000H
; Line 2716
	jmp	SHORT $LN7@isqrt
$LN6@isqrt:
; Line 2717
	mov	eax, DWORD PTR _s$[ebp]
	imul	eax, DWORD PTR _s$[ebp]
	cmp	eax, DWORD PTR _x$[ebp]
	jge	SHORT $LN5@isqrt
; Line 2718
	mov	ecx, DWORD PTR _s$[ebp]
	shl	ecx, 1
	mov	DWORD PTR _s$[ebp], ecx
; Line 2719
	jmp	SHORT $LN6@isqrt
$LN5@isqrt:
; Line 2721
	cmp	DWORD PTR _x$[ebp], 0
	jne	SHORT $LN4@isqrt
; Line 2722
	mov	DWORD PTR _s$[ebp], 0
; Line 2724
	jmp	SHORT $LN7@isqrt
$LN4@isqrt:
; Line 2725
	mov	eax, DWORD PTR _s$[ebp]
	imul	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	shl	ecx, 1
	cdq
	idiv	ecx
	mov	DWORD PTR _s$[ebp], eax
; Line 2726
	cmp	DWORD PTR _s$[ebp], 0
	jl	SHORT $LN2@isqrt
	mov	eax, DWORD PTR _s$[ebp]
	imul	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	shl	ecx, 1
	cdq
	idiv	ecx
	mov	DWORD PTR _s$[ebp], eax
$LN2@isqrt:
; Line 2727
	cmp	DWORD PTR _s$[ebp], 0
	jl	SHORT $LN7@isqrt
	mov	eax, DWORD PTR _s$[ebp]
	imul	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	shl	ecx, 1
	cdq
	idiv	ecx
	mov	DWORD PTR _s$[ebp], eax
$LN7@isqrt:
; Line 2730
	mov	eax, DWORD PTR _s$[ebp]
; Line 2731
	mov	esp, ebp
	pop	ebp
	ret	4
?isqrt@@YGHH@Z ENDP					; isqrt
_TEXT	ENDS
PUBLIC	?GetStdDev@CBaseVideoRenderer@@QAEJHPAH_J1@Z	; CBaseVideoRenderer::GetStdDev
EXTRN	?llMulDiv@@YG_J_J000@Z:PROC			; llMulDiv
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetStdDev@CBaseVideoRenderer@@QAEJHPAH_J1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetStdDev@CBaseVideoRenderer@@QAEJHPAH_J1@Z$0
__ehfuncinfo$?GetStdDev@CBaseVideoRenderer@@QAEJHPAH_J1@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetStdDev@CBaseVideoRenderer@@QAEJHPAH_J1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?GetStdDev@CBaseVideoRenderer@@QAEJHPAH_J1@Z
_TEXT	SEGMENT
$T84032 = -44						; size = 4
$T84031 = -40						; size = 4
_x$82612 = -36						; size = 8
_cVideoLock$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_nSamples$ = 8						; size = 4
_piResult$ = 12						; size = 4
_llSumSq$ = 16						; size = 8
_iTot$ = 24						; size = 8
?GetStdDev@CBaseVideoRenderer@@QAEJHPAH_J1@Z PROC	; CBaseVideoRenderer::GetStdDev, COMDAT
; _this$ = ecx
; Line 2743
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetStdDev@CBaseVideoRenderer@@QAEJHPAH_J1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2744
	cmp	DWORD PTR _piResult$[ebp], 0
	jne	SHORT $LN5@GetStdDev
	mov	eax, -2147467261			; 80004003H
	jmp	$LN6@GetStdDev
$LN5@GetStdDev:
; Line 2745
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 124				; 0000007cH
	push	eax
	lea	ecx, DWORD PTR _cVideoLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2747
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+28], 0
	jne	SHORT $LN4@GetStdDev
; Line 2748
	mov	edx, DWORD PTR _piResult$[ebp]
	mov	DWORD PTR [edx], 0
; Line 2749
	mov	DWORD PTR $T84031[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cVideoLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84031[ebp]
	jmp	$LN6@GetStdDev
$LN4@GetStdDev:
; Line 2757
	cmp	DWORD PTR _nSamples$[ebp], 1
	jg	SHORT $LN3@GetStdDev
; Line 2758
	mov	eax, DWORD PTR _piResult$[ebp]
	mov	DWORD PTR [eax], 0
; Line 2759
	jmp	SHORT $LN2@GetStdDev
$LN3@GetStdDev:
; Line 2765
	push	0
	push	0
	mov	eax, DWORD PTR _nSamples$[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _iTot$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _iTot$[ebp]
	push	edx
	mov	eax, DWORD PTR _iTot$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _iTot$[ebp]
	push	ecx
	call	?llMulDiv@@YG_J_J000@Z			; llMulDiv
	mov	ecx, DWORD PTR _llSumSq$[ebp]
	sub	ecx, eax
	mov	eax, DWORD PTR _llSumSq$[ebp+4]
	sbb	eax, edx
	mov	DWORD PTR _x$82612[ebp], ecx
	mov	DWORD PTR _x$82612[ebp+4], eax
; Line 2766
	mov	eax, DWORD PTR _nSamples$[ebp]
	sub	eax, 1
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _x$82612[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _x$82612[ebp]
	push	edx
	call	__alldiv
	mov	DWORD PTR _x$82612[ebp], eax
	mov	DWORD PTR _x$82612[ebp+4], edx
; Line 2767
	cmp	DWORD PTR _x$82612[ebp+4], 0
	jg	SHORT $LN1@GetStdDev
	jl	SHORT $LN9@GetStdDev
	cmp	DWORD PTR _x$82612[ebp], 0
	jae	SHORT $LN1@GetStdDev
$LN9@GetStdDev:
	push	2767					; 00000acfH
	push	OFFSET $SG82614
	push	OFFSET $SG82615
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@GetStdDev:
; Line 2768
	mov	eax, DWORD PTR _x$82612[ebp]
	push	eax
	call	?isqrt@@YGHH@Z				; isqrt
	mov	ecx, DWORD PTR _piResult$[ebp]
	mov	DWORD PTR [ecx], eax
$LN2@GetStdDev:
; Line 2770
	mov	DWORD PTR $T84032[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cVideoLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84032[ebp]
$LN6@GetStdDev:
; Line 2771
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@GetStdDev
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$LN13@GetStdDev:
	DD	1
	DD	$LN12@GetStdDev
$LN12@GetStdDev:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@GetStdDev
$LN10@GetStdDev:
	DB	99					; 00000063H
	DB	86					; 00000056H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	111					; 0000006fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetStdDev@CBaseVideoRenderer@@QAEJHPAH_J1@Z$0:
	lea	ecx, DWORD PTR _cVideoLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?GetStdDev@CBaseVideoRenderer@@QAEJHPAH_J1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetStdDev@CBaseVideoRenderer@@QAEJHPAH_J1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetStdDev@CBaseVideoRenderer@@QAEJHPAH_J1@Z ENDP	; CBaseVideoRenderer::GetStdDev
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get_DevSyncOffset@CBaseVideoRenderer@@UAGJPAH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_piDev$ = 12						; size = 4
?get_DevSyncOffset@CBaseVideoRenderer@@UAGJPAH@Z PROC	; CBaseVideoRenderer::get_DevSyncOffset, COMDAT
; Line 2777
	push	ebp
	mov	ebp, esp
; Line 2783
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	mov	edx, DWORD PTR [eax+72]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	mov	edx, DWORD PTR [eax+80]
	push	edx
	mov	eax, DWORD PTR _piDev$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	sub	edx, 1
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 256				; 00000100H
	call	?GetStdDev@CBaseVideoRenderer@@QAEJHPAH_J1@Z ; CBaseVideoRenderer::GetStdDev
; Line 2784
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?get_DevSyncOffset@CBaseVideoRenderer@@UAGJPAH@Z ENDP	; CBaseVideoRenderer::get_DevSyncOffset
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?get_Jitter@CBaseVideoRenderer@@UAGJPAH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_piJitter$ = 12						; size = 4
?get_Jitter@CBaseVideoRenderer@@UAGJPAH@Z PROC		; CBaseVideoRenderer::get_Jitter, COMDAT
; Line 2791
	push	ebp
	mov	ebp, esp
; Line 2798
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	mov	edx, DWORD PTR [eax+104]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	push	ecx
	mov	edx, DWORD PTR [eax+96]
	push	edx
	mov	eax, DWORD PTR _piJitter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	sub	edx, 2
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 256				; 00000100H
	call	?GetStdDev@CBaseVideoRenderer@@QAEJHPAH_J1@Z ; CBaseVideoRenderer::GetStdDev
; Line 2799
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?get_Jitter@CBaseVideoRenderer@@UAGJPAH@Z ENDP		; CBaseVideoRenderer::get_Jitter
_TEXT	ENDS
EXTRN	_GetInterface@8:PROC
EXTRN	_IID_IQualProp:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?NonDelegatingQueryInterface@CBaseVideoRenderer@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv94 = -8						; size = 4
tv77 = -4						; size = 4
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?NonDelegatingQueryInterface@CBaseVideoRenderer@@UAGJABU_GUID@@PAPAX@Z PROC ; CBaseVideoRenderer::NonDelegatingQueryInterface, COMDAT
; Line 2806
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2809
	push	OFFSET _IID_IQualProp
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN3@NonDelegat@2
; Line 2810
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN6@NonDelegat@2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 256				; 00000100H
	mov	DWORD PTR tv77[ebp], ecx
	jmp	SHORT $LN7@NonDelegat@2
$LN6@NonDelegat@2:
	mov	DWORD PTR tv77[ebp], 0
$LN7@NonDelegat@2:
	mov	edx, DWORD PTR _ppv$[ebp]
	push	edx
	mov	eax, DWORD PTR tv77[ebp]
	push	eax
	call	_GetInterface@8
	jmp	SHORT $LN4@NonDelegat@2
	jmp	SHORT $LN2@NonDelegat@2
$LN3@NonDelegat@2:
; Line 2811
	push	OFFSET _IID_IQualityControl
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@NonDelegat@2
; Line 2812
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN8@NonDelegat@2
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 260				; 00000104H
	mov	DWORD PTR tv94[ebp], edx
	jmp	SHORT $LN9@NonDelegat@2
$LN8@NonDelegat@2:
	mov	DWORD PTR tv94[ebp], 0
$LN9@NonDelegat@2:
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv94[ebp]
	push	ecx
	call	_GetInterface@8
	jmp	SHORT $LN4@NonDelegat@2
$LN2@NonDelegat@2:
; Line 2814
	mov	edx, DWORD PTR _ppv$[ebp]
	push	edx
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?NonDelegatingQueryInterface@CBaseRenderer@@UAGJABU_GUID@@PAPAX@Z ; CBaseRenderer::NonDelegatingQueryInterface
$LN4@NonDelegat@2:
; Line 2815
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?NonDelegatingQueryInterface@CBaseVideoRenderer@@UAGJABU_GUID@@PAPAX@Z ENDP ; CBaseVideoRenderer::NonDelegatingQueryInterface
_TEXT	ENDS
EXTRN	_IID_IBaseFilter:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?JoinFilterGraph@CBaseVideoRenderer@@UAGJPAUIFilterGraph@@PB_W@Z
_TEXT	SEGMENT
_pFilter$82642 = -8					; size = 4
_this$ = 8						; size = 4
_pGraph$ = 12						; size = 4
_pName$ = 16						; size = 4
?JoinFilterGraph@CBaseVideoRenderer@@UAGJPAUIFilterGraph@@PB_W@Z PROC ; CBaseVideoRenderer::JoinFilterGraph, COMDAT
; Line 2823
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2827
	cmp	DWORD PTR _pGraph$[ebp], 0
	jne	SHORT $LN1@JoinFilter
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	SHORT $LN1@JoinFilter
; Line 2832
	mov	esi, esp
	lea	ecx, DWORD PTR _pFilter$82642[ebp]
	push	ecx
	push	OFFSET _IID_IBaseFilter
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	edx
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2833
	push	0
	mov	eax, DWORD PTR _pFilter$82642[ebp]
	push	eax
	push	21					; 00000015H
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?NotifyEvent@CBaseFilter@@QAEJJJJ@Z	; CBaseFilter::NotifyEvent
; Line 2834
	mov	ecx, DWORD PTR _pFilter$82642[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pFilter$82642[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@JoinFilter:
; Line 2836
	mov	edx, DWORD PTR _pName$[ebp]
	push	edx
	mov	eax, DWORD PTR _pGraph$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?JoinFilterGraph@CBaseFilter@@UAGJPAUIFilterGraph@@PB_W@Z ; CBaseFilter::JoinFilterGraph
; Line 2837
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@JoinFilter
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN6@JoinFilter:
	DD	1
	DD	$LN5@JoinFilter
$LN5@JoinFilter:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@JoinFilter
$LN4@JoinFilter:
	DB	112					; 00000070H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?JoinFilterGraph@CBaseVideoRenderer@@UAGJPAUIFilterGraph@@PB_W@Z ENDP ; CBaseVideoRenderer::JoinFilterGraph
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CBaseInputPin@@WJA@AGKXZ
_TEXT	SEGMENT
?AddRef@CBaseInputPin@@WJA@AGKXZ PROC			; [thunk]:CBaseInputPin::AddRef`adjustor{144}', COMDAT
	sub	DWORD PTR [esp+4], 144			; 00000090H
	jmp	?AddRef@CBaseInputPin@@UAGKXZ		; CBaseInputPin::AddRef
?AddRef@CBaseInputPin@@WJA@AGKXZ ENDP			; [thunk]:CBaseInputPin::AddRef`adjustor{144}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CBaseVideoRenderer@@WPE@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CBaseVideoRenderer@@WPE@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CBaseVideoRenderer::QueryInterface`adjustor{244}', COMDAT
	sub	DWORD PTR [esp+4], 244			; 000000f4H
	jmp	?QueryInterface@CBaseVideoRenderer@@UAGJABU_GUID@@PAPAX@Z ; CBaseVideoRenderer::QueryInterface
?QueryInterface@CBaseVideoRenderer@@WPE@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CBaseVideoRenderer::QueryInterface`adjustor{244}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CBaseVideoRenderer@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CBaseVideoRenderer@@W3AGKXZ PROC		; [thunk]:CBaseVideoRenderer::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CBaseVideoRenderer@@UAGKXZ	; CBaseVideoRenderer::AddRef
?AddRef@CBaseVideoRenderer@@W3AGKXZ ENDP		; [thunk]:CBaseVideoRenderer::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CBaseInputPin@@WJA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CBaseInputPin@@WJA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CBaseInputPin::QueryInterface`adjustor{144}', COMDAT
	sub	DWORD PTR [esp+4], 144			; 00000090H
	jmp	?QueryInterface@CBaseInputPin@@UAGJABU_GUID@@PAPAX@Z ; CBaseInputPin::QueryInterface
?QueryInterface@CBaseInputPin@@WJA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CBaseInputPin::QueryInterface`adjustor{144}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CBaseInputPin@@W3AGKXZ
_TEXT	SEGMENT
?Release@CBaseInputPin@@W3AGKXZ PROC			; [thunk]:CBaseInputPin::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CBaseInputPin@@UAGKXZ		; CBaseInputPin::Release
?Release@CBaseInputPin@@W3AGKXZ ENDP			; [thunk]:CBaseInputPin::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CBaseVideoRenderer@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CBaseVideoRenderer@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CBaseVideoRenderer::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CBaseVideoRenderer@@UAGJABU_GUID@@PAPAX@Z ; CBaseVideoRenderer::QueryInterface
?QueryInterface@CBaseVideoRenderer@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CBaseVideoRenderer::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CBaseFilter@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CBaseFilter@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CBaseFilter::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CBaseFilter@@UAGJABU_GUID@@PAPAX@Z ; CBaseFilter::QueryInterface
?QueryInterface@CBaseFilter@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CBaseFilter::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CBaseVideoRenderer@@WPA@AGKXZ
_TEXT	SEGMENT
?Release@CBaseVideoRenderer@@WPA@AGKXZ PROC		; [thunk]:CBaseVideoRenderer::Release`adjustor{240}', COMDAT
	sub	DWORD PTR [esp+4], 240			; 000000f0H
	jmp	?Release@CBaseVideoRenderer@@UAGKXZ	; CBaseVideoRenderer::Release
?Release@CBaseVideoRenderer@@WPA@AGKXZ ENDP		; [thunk]:CBaseVideoRenderer::Release`adjustor{240}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CBaseInputPin@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CBaseInputPin@@W3AGKXZ PROC			; [thunk]:CBaseInputPin::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CBaseInputPin@@UAGKXZ		; CBaseInputPin::AddRef
?AddRef@CBaseInputPin@@W3AGKXZ ENDP			; [thunk]:CBaseInputPin::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CBaseVideoRenderer@@WPE@AGKXZ
_TEXT	SEGMENT
?Release@CBaseVideoRenderer@@WPE@AGKXZ PROC		; [thunk]:CBaseVideoRenderer::Release`adjustor{244}', COMDAT
	sub	DWORD PTR [esp+4], 244			; 000000f4H
	jmp	?Release@CBaseVideoRenderer@@UAGKXZ	; CBaseVideoRenderer::Release
?Release@CBaseVideoRenderer@@WPE@AGKXZ ENDP		; [thunk]:CBaseVideoRenderer::Release`adjustor{244}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CBaseVideoRenderer@@WPA@AGKXZ
_TEXT	SEGMENT
?AddRef@CBaseVideoRenderer@@WPA@AGKXZ PROC		; [thunk]:CBaseVideoRenderer::AddRef`adjustor{240}', COMDAT
	sub	DWORD PTR [esp+4], 240			; 000000f0H
	jmp	?AddRef@CBaseVideoRenderer@@UAGKXZ	; CBaseVideoRenderer::AddRef
?AddRef@CBaseVideoRenderer@@WPA@AGKXZ ENDP		; [thunk]:CBaseVideoRenderer::AddRef`adjustor{240}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CBaseFilter@@W3AGKXZ
_TEXT	SEGMENT
?Release@CBaseFilter@@W3AGKXZ PROC			; [thunk]:CBaseFilter::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CBaseFilter@@UAGKXZ		; CBaseFilter::Release
?Release@CBaseFilter@@W3AGKXZ ENDP			; [thunk]:CBaseFilter::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CBaseInputPin@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CBaseInputPin@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CBaseInputPin::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CBaseInputPin@@UAGJABU_GUID@@PAPAX@Z ; CBaseInputPin::QueryInterface
?QueryInterface@CBaseInputPin@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CBaseInputPin::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CBaseInputPin@@WJA@AGKXZ
_TEXT	SEGMENT
?Release@CBaseInputPin@@WJA@AGKXZ PROC			; [thunk]:CBaseInputPin::Release`adjustor{144}', COMDAT
	sub	DWORD PTR [esp+4], 144			; 00000090H
	jmp	?Release@CBaseInputPin@@UAGKXZ		; CBaseInputPin::Release
?Release@CBaseInputPin@@WJA@AGKXZ ENDP			; [thunk]:CBaseInputPin::Release`adjustor{144}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CBaseVideoRenderer@@WPE@AGKXZ
_TEXT	SEGMENT
?AddRef@CBaseVideoRenderer@@WPE@AGKXZ PROC		; [thunk]:CBaseVideoRenderer::AddRef`adjustor{244}', COMDAT
	sub	DWORD PTR [esp+4], 244			; 000000f4H
	jmp	?AddRef@CBaseVideoRenderer@@UAGKXZ	; CBaseVideoRenderer::AddRef
?AddRef@CBaseVideoRenderer@@WPE@AGKXZ ENDP		; [thunk]:CBaseVideoRenderer::AddRef`adjustor{244}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CBaseVideoRenderer@@W3AGKXZ
_TEXT	SEGMENT
?Release@CBaseVideoRenderer@@W3AGKXZ PROC		; [thunk]:CBaseVideoRenderer::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CBaseVideoRenderer@@UAGKXZ	; CBaseVideoRenderer::Release
?Release@CBaseVideoRenderer@@W3AGKXZ ENDP		; [thunk]:CBaseVideoRenderer::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CBaseVideoRenderer@@WPA@AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CBaseVideoRenderer@@WPA@AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CBaseVideoRenderer::QueryInterface`adjustor{240}', COMDAT
	sub	DWORD PTR [esp+4], 240			; 000000f0H
	jmp	?QueryInterface@CBaseVideoRenderer@@UAGJABU_GUID@@PAPAX@Z ; CBaseVideoRenderer::QueryInterface
?QueryInterface@CBaseVideoRenderer@@WPA@AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CBaseVideoRenderer::QueryInterface`adjustor{240}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CBaseFilter@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CBaseFilter@@W3AGKXZ PROC			; [thunk]:CBaseFilter::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CBaseFilter@@UAGKXZ		; CBaseFilter::AddRef
?AddRef@CBaseFilter@@W3AGKXZ ENDP			; [thunk]:CBaseFilter::AddRef`adjustor{4}'
_TEXT	ENDS
END
