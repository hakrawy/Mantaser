; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Downloads\MediaPoint\src\filters\BaseClasses\pullpin.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_IID_IAMFilterGraphCallback
CONST	SEGMENT
$SG81697 DB	'.', 00H, '.', 00H, '\', 00H, 'p', 00H, 'u', 00H, 'l', 00H
	DB	'l', 00H, 'p', 00H, 'i', 00H, 'n', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81698 DB	'!', 00H, 'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 'a', 00H
	DB	'd', 00H, 'E', 00H, 'x', 00H, 'i', 00H, 's', 00H, 't', 00H, 's'
	DB	00H, '(', 00H, ')', 00H, 00H, 00H
CONST	ENDS
;	COMDAT _IID_IAMFilterGraphCallback
CONST	SEGMENT
_IID_IAMFilterGraphCallback DD 056a868fdH
	DW	0ad4H
	DW	011ceH
	DB	0b0H
	DB	0a3H
	DB	00H
	DB	020H
	DB	0afH
	DB	0bH
	DB	0a7H
	DB	070H
CONST	ENDS
PUBLIC	??_7CPullPin@@6B@				; CPullPin::`vftable'
PUBLIC	??0CPullPin@@QAE@XZ				; CPullPin::CPullPin
PUBLIC	??_R4CPullPin@@6B@				; CPullPin::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCPullPin@@@8				; CPullPin `RTTI Type Descriptor'
PUBLIC	??_R3CPullPin@@8				; CPullPin::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CPullPin@@8				; CPullPin::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CPullPin@@8			; CPullPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CAMThread@@8			; CAMThread::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCAMThread@@@8				; CAMThread `RTTI Type Descriptor'
PUBLIC	??_R3CAMThread@@8				; CAMThread::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CAMThread@@8				; CAMThread::`RTTI Base Class Array'
PUBLIC	?ThreadProc@CPullPin@@EAEKXZ			; CPullPin::ThreadProc
PUBLIC	?DecideAllocator@CPullPin@@UAEJPAUIMemAllocator@@PAU_AllocatorProperties@@@Z ; CPullPin::DecideAllocator
EXTRN	??0CAMThread@@QAE@XZ:PROC			; CAMThread::CAMThread
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ECPullPin@@UAEPAXI@Z:PROC			; CPullPin::`vector deleting destructor'
EXTRN	__purecall:PROC
;	COMDAT ??_R2CAMThread@@8
; File c:\downloads\mediapoint\src\filters\baseclasses\pullpin.cpp
rdata$r	SEGMENT
??_R2CAMThread@@8 DD FLAT:??_R1A@?0A@EA@CAMThread@@8	; CAMThread::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CAMThread@@8
rdata$r	SEGMENT
??_R3CAMThread@@8 DD 00H				; CAMThread::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CAMThread@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCAMThread@@@8
_DATA	SEGMENT
??_R0?AVCAMThread@@@8 DD FLAT:??_7type_info@@6B@	; CAMThread `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAMThread@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@CAMThread@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CAMThread@@8 DD FLAT:??_R0?AVCAMThread@@@8 ; CAMThread::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CAMThread@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CPullPin@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CPullPin@@8 DD FLAT:??_R0?AVCPullPin@@@8	; CPullPin::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CPullPin@@8
rdata$r	ENDS
;	COMDAT ??_R2CPullPin@@8
rdata$r	SEGMENT
??_R2CPullPin@@8 DD FLAT:??_R1A@?0A@EA@CPullPin@@8	; CPullPin::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CAMThread@@8
rdata$r	ENDS
;	COMDAT ??_R3CPullPin@@8
rdata$r	SEGMENT
??_R3CPullPin@@8 DD 00H					; CPullPin::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CPullPin@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCPullPin@@@8
_DATA	SEGMENT
??_R0?AVCPullPin@@@8 DD FLAT:??_7type_info@@6B@		; CPullPin `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCPullPin@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CPullPin@@6B@
rdata$r	SEGMENT
??_R4CPullPin@@6B@ DD 00H				; CPullPin::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCPullPin@@@8
	DD	FLAT:??_R3CPullPin@@8
rdata$r	ENDS
;	COMDAT ??_7CPullPin@@6B@
CONST	SEGMENT
??_7CPullPin@@6B@ DD FLAT:??_R4CPullPin@@6B@		; CPullPin::`vftable'
	DD	FLAT:?ThreadProc@CPullPin@@EAEKXZ
	DD	FLAT:??_ECPullPin@@UAEPAXI@Z
	DD	FLAT:?DecideAllocator@CPullPin@@UAEJPAUIMemAllocator@@PAU_AllocatorProperties@@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT ??0CPullPin@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPullPin@@QAE@XZ PROC				; CPullPin::CPullPin, COMDAT
; _this$ = ecx
; Line 20
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CAMThread@@QAE@XZ			; CAMThread::CAMThread
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CPullPin@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+96], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+132], 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+136], 0
; Line 21
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CPullPin@@QAE@XZ ENDP				; CPullPin::CPullPin
_TEXT	ENDS
PUBLIC	??1CPullPin@@UAE@XZ				; CPullPin::~CPullPin
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCPullPin@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCPullPin@@UAEPAXI@Z PROC				; CPullPin::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CPullPin@@UAE@XZ			; CPullPin::~CPullPin
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCPullPin@@UAEPAXI@Z ENDP				; CPullPin::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?Disconnect@CPullPin@@QAEJXZ			; CPullPin::Disconnect
EXTRN	??1CAMThread@@UAE@XZ:PROC			; CAMThread::~CAMThread
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CPullPin@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CPullPin@@UAE@XZ$0
__ehfuncinfo$??1CPullPin@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CPullPin@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CPullPin@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CPullPin@@UAE@XZ PROC				; CPullPin::~CPullPin, COMDAT
; _this$ = ecx
; Line 24
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CPullPin@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CPullPin@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 25
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Disconnect@CPullPin@@QAEJXZ		; CPullPin::Disconnect
; Line 26
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CAMThread@@UAE@XZ			; CAMThread::~CAMThread
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CPullPin@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CAMThread@@UAE@XZ			; CAMThread::~CAMThread
__ehhandler$??1CPullPin@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CPullPin@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CPullPin@@UAE@XZ ENDP				; CPullPin::~CPullPin
PUBLIC	??1CAutoLock@@QAE@XZ				; CAutoLock::~CAutoLock
PUBLIC	??0CAutoLock@@QAE@PAVCCritSec@@@Z		; CAutoLock::CAutoLock
PUBLIC	?Connect@CPullPin@@QAEJPAUIUnknown@@PAUIMemAllocator@@H@Z ; CPullPin::Connect
EXTRN	_IID_IAsyncReader:BYTE
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__allmul:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Connect@CPullPin@@QAEJPAUIUnknown@@PAUIMemAllocator@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Connect@CPullPin@@QAEJPAUIUnknown@@PAUIMemAllocator@@H@Z$0
__ehfuncinfo$?Connect@CPullPin@@QAEJPAUIUnknown@@PAUIMemAllocator@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Connect@CPullPin@@QAEJPAUIUnknown@@PAUIMemAllocator@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Connect@CPullPin@@QAEJPAUIUnknown@@PAUIMemAllocator@@H@Z
_TEXT	SEGMENT
$T82225 = -84						; size = 4
$T82224 = -80						; size = 4
$T82223 = -76						; size = 4
$T82222 = -72						; size = 4
$T82221 = -68						; size = 4
_llAvail$ = -60						; size = 8
_llTotal$ = -44						; size = 8
_hr$ = -32						; size = 4
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pUnk$ = 8						; size = 4
_pAlloc$ = 12						; size = 4
_bSync$ = 16						; size = 4
?Connect@CPullPin@@QAEJPAUIUnknown@@PAUIMemAllocator@@H@Z PROC ; CPullPin::Connect, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Connect@CPullPin@@QAEJPAUIUnknown@@PAUIMemAllocator@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-84]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 35
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 37
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+96], 0
	je	SHORT $LN4@Connect
; Line 38
	mov	DWORD PTR $T82221[ebp], -2147220988	; 80040204H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82221[ebp]
	jmp	$LN5@Connect
$LN4@Connect:
; Line 41
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 96					; 00000060H
	mov	esi, esp
	push	edx
	push	OFFSET _IID_IAsyncReader
	mov	eax, DWORD PTR _pUnk$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pUnk$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 42
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@Connect
; Line 43
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T82222[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82222[ebp]
	jmp	$LN5@Connect
$LN3@Connect:
; Line 46
	mov	esi, esp
	push	0
	mov	edx, DWORD PTR _pAlloc$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 47
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@Connect
; Line 48
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Disconnect@CPullPin@@QAEJXZ		; CPullPin::Disconnect
; Line 49
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T82223[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82223[ebp]
	jmp	$LN5@Connect
$LN2@Connect:
; Line 53
	mov	esi, esp
	lea	edx, DWORD PTR _llAvail$[ebp]
	push	edx
	lea	eax, DWORD PTR _llTotal$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 54
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@Connect
; Line 55
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Disconnect@CPullPin@@QAEJXZ		; CPullPin::Disconnect
; Line 56
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T82224[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82224[ebp]
	jmp	SHORT $LN5@Connect
$LN1@Connect:
; Line 60
	push	0
	push	10000000				; 00989680H
	mov	edx, DWORD PTR _llTotal$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _llTotal$[ebp]
	push	eax
	call	__allmul
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+120], eax
	mov	DWORD PTR [ecx+124], edx
; Line 61
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	DWORD PTR [edx+112], ecx
	mov	eax, DWORD PTR [eax+124]
	mov	DWORD PTR [edx+116], eax
; Line 62
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+104], 0
	mov	DWORD PTR [ecx+108], 0
; Line 64
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _bSync$[ebp]
	mov	DWORD PTR [edx+128], eax
; Line 66
	mov	DWORD PTR $T82225[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82225[ebp]
$LN5@Connect:
; Line 67
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Connect
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 84					; 00000054H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN13@Connect:
	DD	3
	DD	$LN12@Connect
$LN12@Connect:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@Connect
	DD	-44					; ffffffd4H
	DD	8
	DD	$LN9@Connect
	DD	-60					; ffffffc4H
	DD	8
	DD	$LN10@Connect
$LN10@Connect:
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	65					; 00000041H
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	0
$LN9@Connect:
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN8@Connect:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Connect@CPullPin@@QAEJPAUIUnknown@@PAUIMemAllocator@@H@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?Connect@CPullPin@@QAEJPAUIUnknown@@PAUIMemAllocator@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Connect@CPullPin@@QAEJPAUIUnknown@@PAUIMemAllocator@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Connect@CPullPin@@QAEJPAUIUnknown@@PAUIMemAllocator@@H@Z ENDP ; CPullPin::Connect
EXTRN	?Lock@CCritSec@@QAEXXZ:PROC			; CCritSec::Lock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CAutoLock@@QAE@PAVCCritSec@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_plock$ = 8						; size = 4
??0CAutoLock@@QAE@PAVCCritSec@@@Z PROC			; CAutoLock::CAutoLock, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxutil.h
; Line 94
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _plock$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 97
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?Lock@CCritSec@@QAEXXZ			; CCritSec::Lock
; Line 98
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CAutoLock@@QAE@PAVCCritSec@@@Z ENDP			; CAutoLock::CAutoLock
_TEXT	ENDS
EXTRN	?Unlock@CCritSec@@QAEXXZ:PROC			; CCritSec::Unlock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CAutoLock@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CAutoLock@@QAE@XZ PROC				; CAutoLock::~CAutoLock, COMDAT
; _this$ = ecx
; Line 100
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Unlock@CCritSec@@QAEXXZ		; CCritSec::Unlock
; Line 102
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CAutoLock@@QAE@XZ ENDP				; CAutoLock::~CAutoLock
_TEXT	ENDS
PUBLIC	?StopThread@CPullPin@@AAEJXZ			; CPullPin::StopThread
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\pullpin.cpp
xdata$x	SEGMENT
__unwindtable$?Disconnect@CPullPin@@QAEJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Disconnect@CPullPin@@QAEJXZ$0
__ehfuncinfo$?Disconnect@CPullPin@@QAEJXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Disconnect@CPullPin@@QAEJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Disconnect@CPullPin@@QAEJXZ
_TEXT	SEGMENT
$T82246 = -32						; size = 4
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Disconnect@CPullPin@@QAEJXZ PROC			; CPullPin::Disconnect, COMDAT
; _this$ = ecx
; Line 72
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Disconnect@CPullPin@@QAEJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 75
	mov	ecx, DWORD PTR _this$[ebp]
	call	?StopThread@CPullPin@@AAEJXZ		; CPullPin::StopThread
; Line 77
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+96], 0
	je	SHORT $LN2@Disconnect
; Line 78
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 79
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+96], 0
$LN2@Disconnect:
; Line 82
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+136], 0
	je	SHORT $LN1@Disconnect
; Line 83
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 84
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+136], 0
$LN1@Disconnect:
; Line 87
	mov	DWORD PTR $T82246[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82246[ebp]
; Line 88
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Disconnect
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@Disconnect:
	DD	1
	DD	$LN8@Disconnect
$LN8@Disconnect:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN6@Disconnect
$LN6@Disconnect:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Disconnect@CPullPin@@QAEJXZ$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?Disconnect@CPullPin@@QAEJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Disconnect@CPullPin@@QAEJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Disconnect@CPullPin@@QAEJXZ ENDP			; CPullPin::Disconnect
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DecideAllocator@CPullPin@@UAEJPAUIMemAllocator@@PAU_AllocatorProperties@@@Z
_TEXT	SEGMENT
_hr$ = -40						; size = 4
_Request$ = -32						; size = 16
_pRequest$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_pAlloc$ = 8						; size = 4
_pProps$ = 12						; size = 4
?DecideAllocator@CPullPin@@UAEJPAUIMemAllocator@@PAU_AllocatorProperties@@@Z PROC ; CPullPin::DecideAllocator, COMDAT
; _this$ = ecx
; Line 99
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 102
	cmp	DWORD PTR _pProps$[ebp], 0
	jne	SHORT $LN2@DecideAllo
; Line 103
	mov	DWORD PTR _Request$[ebp], 3
; Line 104
	mov	DWORD PTR _Request$[ebp+4], 65536	; 00010000H
; Line 105
	mov	DWORD PTR _Request$[ebp+8], 0
; Line 106
	mov	DWORD PTR _Request$[ebp+12], 0
; Line 107
	lea	eax, DWORD PTR _Request$[ebp]
	mov	DWORD PTR _pRequest$[ebp], eax
; Line 108
	jmp	SHORT $LN1@DecideAllo
$LN2@DecideAllo:
; Line 109
	mov	ecx, DWORD PTR _pProps$[ebp]
	mov	DWORD PTR _pRequest$[ebp], ecx
$LN1@DecideAllo:
; Line 114
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 136				; 00000088H
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _pRequest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pAlloc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 115
	mov	eax, DWORD PTR _hr$[ebp]
; Line 116
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@DecideAllo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN7@DecideAllo:
	DD	1
	DD	$LN6@DecideAllo
$LN6@DecideAllo:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN5@DecideAllo
$LN5@DecideAllo:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	113					; 00000071H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
?DecideAllocator@CPullPin@@UAEJPAUIMemAllocator@@PAU_AllocatorProperties@@@Z ENDP ; CPullPin::DecideAllocator
_TEXT	ENDS
PUBLIC	?StartThread@CPullPin@@AAEJXZ			; CPullPin::StartThread
PUBLIC	?ThreadExists@CAMThread@@QBEHXZ			; CAMThread::ThreadExists
PUBLIC	?Active@CPullPin@@QAEJXZ			; CPullPin::Active
EXTRN	?DbgAssert@@YGXPB_W0H@Z:PROC			; DbgAssert
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Active@CPullPin@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Active@CPullPin@@QAEJXZ PROC				; CPullPin::Active, COMDAT
; _this$ = ecx
; Line 121
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 122
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ThreadExists@CAMThread@@QBEHXZ		; CAMThread::ThreadExists
	test	eax, eax
	je	SHORT $LN1@Active
	push	122					; 0000007aH
	push	OFFSET $SG81697
	push	OFFSET $SG81698
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@Active:
; Line 123
	mov	ecx, DWORD PTR _this$[ebp]
	call	?StartThread@CPullPin@@AAEJXZ		; CPullPin::StartThread
; Line 124
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Active@CPullPin@@QAEJXZ ENDP				; CPullPin::Active
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ThreadExists@CAMThread@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ThreadExists@CAMThread@@QBEHXZ PROC			; CAMThread::ThreadExists, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxutil.h
; Line 205
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 206
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN2@ThreadExis
; Line 207
	xor	eax, eax
	jmp	SHORT $LN3@ThreadExis
; Line 208
	jmp	SHORT $LN3@ThreadExis
$LN2@ThreadExis:
; Line 209
	mov	eax, 1
$LN3@ThreadExis:
; Line 211
	mov	esp, ebp
	pop	ebp
	ret	0
?ThreadExists@CAMThread@@QBEHXZ ENDP			; CAMThread::ThreadExists
_TEXT	ENDS
PUBLIC	?Inactive@CPullPin@@QAEJXZ			; CPullPin::Inactive
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Inactive@CPullPin@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Inactive@CPullPin@@QAEJXZ PROC				; CPullPin::Inactive, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\pullpin.cpp
; Line 129
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	ecx, DWORD PTR _this$[ebp]
	call	?StopThread@CPullPin@@AAEJXZ		; CPullPin::StopThread
; Line 132
	xor	eax, eax
; Line 133
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Inactive@CPullPin@@QAEJXZ ENDP				; CPullPin::Inactive
_TEXT	ENDS
PUBLIC	?PauseThread@CPullPin@@AAEJXZ			; CPullPin::PauseThread
PUBLIC	?Seek@CPullPin@@QAEJ_J0@Z			; CPullPin::Seek
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Seek@CPullPin@@QAEJ_J0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Seek@CPullPin@@QAEJ_J0@Z$0
__ehfuncinfo$?Seek@CPullPin@@QAEJ_J0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Seek@CPullPin@@QAEJ_J0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Seek@CPullPin@@QAEJ_J0@Z
_TEXT	SEGMENT
$T82271 = -40						; size = 4
_hr$ = -36						; size = 4
_AtStart$ = -32						; size = 4
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_tStart$ = 8						; size = 8
_tStop$ = 16						; size = 8
?Seek@CPullPin@@QAEJ_J0@Z PROC				; CPullPin::Seek, COMDAT
; _this$ = ecx
; Line 137
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Seek@CPullPin@@QAEJ_J0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 138
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 140
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	mov	DWORD PTR _AtStart$[ebp], edx
; Line 142
	cmp	DWORD PTR _AtStart$[ebp], 1
	jne	SHORT $LN2@Seek
; Line 143
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 144
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PauseThread@CPullPin@@AAEJXZ		; CPullPin::PauseThread
; Line 145
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Seek:
; Line 148
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _tStart$[ebp]
	mov	DWORD PTR [ecx+104], edx
	mov	eax, DWORD PTR _tStart$[ebp+4]
	mov	DWORD PTR [ecx+108], eax
; Line 149
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _tStop$[ebp]
	mov	DWORD PTR [ecx+112], edx
	mov	eax, DWORD PTR _tStop$[ebp+4]
	mov	DWORD PTR [ecx+116], eax
; Line 151
	mov	DWORD PTR _hr$[ebp], 0
; Line 152
	cmp	DWORD PTR _AtStart$[ebp], 1
	jne	SHORT $LN1@Seek
; Line 153
	mov	ecx, DWORD PTR _this$[ebp]
	call	?StartThread@CPullPin@@AAEJXZ		; CPullPin::StartThread
	mov	DWORD PTR _hr$[ebp], eax
$LN1@Seek:
; Line 156
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T82271[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82271[ebp]
; Line 157
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Seek
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN9@Seek:
	DD	1
	DD	$LN8@Seek
$LN8@Seek:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN6@Seek
$LN6@Seek:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Seek@CPullPin@@QAEJ_J0@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?Seek@CPullPin@@QAEJ_J0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Seek@CPullPin@@QAEJ_J0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Seek@CPullPin@@QAEJ_J0@Z ENDP				; CPullPin::Seek
PUBLIC	?Duration@CPullPin@@QAEJPA_J@Z			; CPullPin::Duration
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Duration@CPullPin@@QAEJPA_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ptDuration$ = 8					; size = 4
?Duration@CPullPin@@QAEJPA_J@Z PROC			; CPullPin::Duration, COMDAT
; _this$ = ecx
; Line 161
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 162
	mov	eax, DWORD PTR _ptDuration$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+124]
	mov	DWORD PTR [eax+4], ecx
; Line 163
	xor	eax, eax
; Line 164
	mov	esp, ebp
	pop	ebp
	ret	4
?Duration@CPullPin@@QAEJPA_J@Z ENDP			; CPullPin::Duration
_TEXT	ENDS
EXTRN	?CallWorker@CAMThread@@QAEKK@Z:PROC		; CAMThread::CallWorker
EXTRN	?Create@CAMThread@@QAEHXZ:PROC			; CAMThread::Create
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?StartThread@CPullPin@@AAEJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StartThread@CPullPin@@AAEJXZ$0
__ehfuncinfo$?StartThread@CPullPin@@AAEJXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?StartThread@CPullPin@@AAEJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?StartThread@CPullPin@@AAEJXZ
_TEXT	SEGMENT
$T82289 = -48						; size = 4
$T82288 = -44						; size = 4
$T82287 = -40						; size = 4
$T82286 = -36						; size = 4
_hr$ = -32						; size = 4
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?StartThread@CPullPin@@AAEJXZ PROC			; CPullPin::StartThread, COMDAT
; _this$ = ecx
; Line 169
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?StartThread@CPullPin@@AAEJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 170
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 172
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+136], 0
	je	SHORT $LN4@StartThrea
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+96], 0
	jne	SHORT $LN5@StartThrea
$LN4@StartThrea:
; Line 173
	mov	DWORD PTR $T82286[ebp], -2147418113	; 8000ffffH
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82286[ebp]
	jmp	$LN6@StartThrea
$LN5@StartThrea:
; Line 177
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ThreadExists@CAMThread@@QBEHXZ		; CAMThread::ThreadExists
	test	eax, eax
	jne	SHORT $LN3@StartThrea
; Line 180
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+136]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 181
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@StartThrea
; Line 182
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T82287[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82287[ebp]
	jmp	SHORT $LN6@StartThrea
$LN2@StartThrea:
; Line 186
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Create@CAMThread@@QAEHXZ		; CAMThread::Create
	test	eax, eax
	jne	SHORT $LN3@StartThrea
; Line 187
	mov	DWORD PTR $T82288[ebp], -2147467259	; 80004005H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82288[ebp]
	jmp	SHORT $LN6@StartThrea
$LN3@StartThrea:
; Line 191
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+132], 1
; Line 192
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+132]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CallWorker@CAMThread@@QAEKK@Z		; CAMThread::CallWorker
	mov	DWORD PTR _hr$[ebp], eax
; Line 193
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T82289[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82289[ebp]
$LN6@StartThrea:
; Line 194
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@StartThrea
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@StartThrea:
	DD	1
	DD	$LN11@StartThrea
$LN11@StartThrea:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN9@StartThrea
$LN9@StartThrea:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?StartThread@CPullPin@@AAEJXZ$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?StartThread@CPullPin@@AAEJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?StartThread@CPullPin@@AAEJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?StartThread@CPullPin@@AAEJXZ ENDP			; CPullPin::StartThread
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PauseThread@CPullPin@@AAEJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PauseThread@CPullPin@@AAEJXZ$0
__ehfuncinfo$?PauseThread@CPullPin@@AAEJXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PauseThread@CPullPin@@AAEJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?PauseThread@CPullPin@@AAEJXZ
_TEXT	SEGMENT
$T82304 = -44						; size = 4
$T82303 = -40						; size = 4
$T82302 = -36						; size = 4
_hr$ = -32						; size = 4
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?PauseThread@CPullPin@@AAEJXZ PROC			; CPullPin::PauseThread, COMDAT
; _this$ = ecx
; Line 198
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PauseThread@CPullPin@@AAEJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 201
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ThreadExists@CAMThread@@QBEHXZ		; CAMThread::ThreadExists
	test	eax, eax
	jne	SHORT $LN2@PauseThrea
; Line 202
	mov	DWORD PTR $T82302[ebp], -2147418113	; 8000ffffH
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82302[ebp]
	jmp	$LN3@PauseThrea
$LN2@PauseThrea:
; Line 207
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 208
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@PauseThrea
; Line 209
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T82303[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82303[ebp]
	jmp	SHORT $LN3@PauseThrea
$LN1@PauseThrea:
; Line 212
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+132], 0
; Line 213
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CallWorker@CAMThread@@QAEKK@Z		; CAMThread::CallWorker
	mov	DWORD PTR _hr$[ebp], eax
; Line 215
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+40]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 216
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T82304[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82304[ebp]
$LN3@PauseThrea:
; Line 217
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@PauseThrea
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@PauseThrea:
	DD	1
	DD	$LN8@PauseThrea
$LN8@PauseThrea:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN6@PauseThrea
$LN6@PauseThrea:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PauseThread@CPullPin@@AAEJXZ$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?PauseThread@CPullPin@@AAEJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PauseThread@CPullPin@@AAEJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?PauseThread@CPullPin@@AAEJXZ ENDP			; CPullPin::PauseThread
PUBLIC	?Close@CAMThread@@QAEXXZ			; CAMThread::Close
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?StopThread@CPullPin@@AAEJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StopThread@CPullPin@@AAEJXZ$0
__ehfuncinfo$?StopThread@CPullPin@@AAEJXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?StopThread@CPullPin@@AAEJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?StopThread@CPullPin@@AAEJXZ
_TEXT	SEGMENT
$T82319 = -44						; size = 4
$T82318 = -40						; size = 4
$T82317 = -36						; size = 4
_hr$ = -32						; size = 4
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?StopThread@CPullPin@@AAEJXZ PROC			; CPullPin::StopThread, COMDAT
; _this$ = ecx
; Line 221
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?StopThread@CPullPin@@AAEJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 222
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 224
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ThreadExists@CAMThread@@QBEHXZ		; CAMThread::ThreadExists
	test	eax, eax
	jne	SHORT $LN3@StopThread
; Line 225
	mov	DWORD PTR $T82317[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82317[ebp]
	jmp	$LN4@StopThread
$LN3@StopThread:
; Line 230
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 231
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@StopThread
; Line 232
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T82318[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82318[ebp]
	jmp	$LN4@StopThread
$LN2@StopThread:
; Line 235
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+132], 2
; Line 236
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CallWorker@CAMThread@@QAEKK@Z		; CAMThread::CallWorker
	mov	DWORD PTR _hr$[ebp], eax
; Line 238
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+40]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 241
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Close@CAMThread@@QAEXXZ		; CAMThread::Close
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+136], 0
	je	SHORT $LN1@StopThread
; Line 245
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@StopThread:
; Line 248
	mov	DWORD PTR $T82319[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T82319[ebp]
$LN4@StopThread:
; Line 249
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@StopThread
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@StopThread:
	DD	1
	DD	$LN9@StopThread
$LN9@StopThread:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN7@StopThread
$LN7@StopThread:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?StopThread@CPullPin@@AAEJXZ$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?StopThread@CPullPin@@AAEJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?StopThread@CPullPin@@AAEJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?StopThread@CPullPin@@AAEJXZ ENDP			; CPullPin::StopThread
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__WaitForSingleObject@8:PROC
EXTRN	__imp__InterlockedExchange@8:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Close@CAMThread@@QAEXXZ
_TEXT	SEGMENT
_hThread$ = -8						; size = 4
_this$ = -4						; size = 4
?Close@CAMThread@@QAEXXZ PROC				; CAMThread::Close, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxutil.h
; Line 194
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 195
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	DWORD PTR __imp__InterlockedExchange@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hThread$[ebp], eax
; Line 196
	cmp	DWORD PTR _hThread$[ebp], 0
	je	SHORT $LN2@Close
; Line 197
	mov	esi, esp
	push	-1
	mov	ecx, DWORD PTR _hThread$[ebp]
	push	ecx
	call	DWORD PTR __imp__WaitForSingleObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 198
	mov	esi, esp
	mov	edx, DWORD PTR _hThread$[ebp]
	push	edx
	call	DWORD PTR __imp__CloseHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Close:
; Line 200
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Close@CAMThread@@QAEXXZ ENDP				; CAMThread::Close
_TEXT	ENDS
PUBLIC	?CleanupCancelled@CPullPin@@AAEXXZ		; CPullPin::CleanupCancelled
PUBLIC	?Process@CPullPin@@AAEXXZ			; CPullPin::Process
EXTRN	?Reply@CAMThread@@QAEXK@Z:PROC			; CAMThread::Reply
EXTRN	?GetRequest@CAMThread@@QAEKXZ:PROC		; CAMThread::GetRequest
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ThreadProc@CPullPin@@EAEKXZ
_TEXT	SEGMENT
tv71 = -12						; size = 4
_cmd$81772 = -8						; size = 4
_this$ = -4						; size = 4
?ThreadProc@CPullPin@@EAEKXZ PROC			; CPullPin::ThreadProc, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\pullpin.cpp
; Line 254
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN7@ThreadProc:
; Line 255
	mov	eax, 1
	test	eax, eax
	je	$LN8@ThreadProc
; Line 256
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetRequest@CAMThread@@QAEKXZ		; CAMThread::GetRequest
	mov	DWORD PTR _cmd$81772[ebp], eax
; Line 257
	mov	ecx, DWORD PTR _cmd$81772[ebp]
	mov	DWORD PTR tv71[ebp], ecx
	cmp	DWORD PTR tv71[ebp], 0
	je	SHORT $LN2@ThreadProc
	cmp	DWORD PTR tv71[ebp], 1
	je	SHORT $LN1@ThreadProc
	cmp	DWORD PTR tv71[ebp], 2
	je	SHORT $LN3@ThreadProc
	jmp	SHORT $LN4@ThreadProc
$LN3@ThreadProc:
; Line 259
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reply@CAMThread@@QAEXK@Z		; CAMThread::Reply
; Line 260
	xor	eax, eax
	jmp	SHORT $LN8@ThreadProc
$LN2@ThreadProc:
; Line 264
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reply@CAMThread@@QAEXK@Z		; CAMThread::Reply
; Line 265
	jmp	SHORT $LN4@ThreadProc
$LN1@ThreadProc:
; Line 268
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Reply@CAMThread@@QAEXK@Z		; CAMThread::Reply
; Line 269
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Process@CPullPin@@AAEXXZ		; CPullPin::Process
$LN4@ThreadProc:
; Line 279
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+36]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 280
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CleanupCancelled@CPullPin@@AAEXXZ	; CPullPin::CleanupCancelled
; Line 281
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+40]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 282
	jmp	$LN7@ThreadProc
$LN8@ThreadProc:
; Line 283
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ThreadProc@CPullPin@@EAEKXZ ENDP			; CPullPin::ThreadProc
_TEXT	ENDS
PUBLIC	?QueueSample@CPullPin@@AAEJAA_J_JH@Z		; CPullPin::QueueSample
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueueSample@CPullPin@@AAEJAA_J_JH@Z
_TEXT	SEGMENT
_tStopThis$ = -32					; size = 8
_hr$ = -20						; size = 4
_pSample$ = -12						; size = 4
_this$ = -4						; size = 4
_tCurrent$ = 8						; size = 4
_tAlignStop$ = 12					; size = 8
_bDiscontinuity$ = 20					; size = 4
?QueueSample@CPullPin@@AAEJAA_J_JH@Z PROC		; CPullPin::QueueSample, COMDAT
; _this$ = ecx
; Line 291
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 294
	mov	esi, esp
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _pSample$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 295
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@QueueSampl
; Line 296
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN4@QueueSampl
$LN3@QueueSampl:
; Line 299
	mov	ecx, DWORD PTR _pSample$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pSample$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+16]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	cdq
	push	0
	push	10000000				; 00989680H
	push	edx
	push	eax
	call	__allmul
	mov	ecx, DWORD PTR _tCurrent$[ebp]
	add	eax, DWORD PTR [ecx]
	adc	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _tStopThis$[ebp], eax
	mov	DWORD PTR _tStopThis$[ebp+4], edx
; Line 300
	mov	edx, DWORD PTR _tStopThis$[ebp+4]
	cmp	edx, DWORD PTR _tAlignStop$[ebp+4]
	jl	SHORT $LN2@QueueSampl
	jg	SHORT $LN6@QueueSampl
	mov	eax, DWORD PTR _tStopThis$[ebp]
	cmp	eax, DWORD PTR _tAlignStop$[ebp]
	jbe	SHORT $LN2@QueueSampl
$LN6@QueueSampl:
; Line 301
	mov	ecx, DWORD PTR _tAlignStop$[ebp]
	mov	DWORD PTR _tStopThis$[ebp], ecx
	mov	edx, DWORD PTR _tAlignStop$[ebp+4]
	mov	DWORD PTR _tStopThis$[ebp+4], edx
$LN2@QueueSampl:
; Line 303
	mov	esi, esp
	lea	eax, DWORD PTR _tStopThis$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tCurrent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pSample$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pSample$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 304
	mov	eax, DWORD PTR _tCurrent$[ebp]
	mov	ecx, DWORD PTR _tStopThis$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _tStopThis$[ebp+4]
	mov	DWORD PTR [eax+4], edx
; Line 306
	mov	esi, esp
	mov	eax, DWORD PTR _bDiscontinuity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSample$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pSample$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+64]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 310
	mov	esi, esp
	push	0
	mov	edx, DWORD PTR _pSample$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 311
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@QueueSampl
; Line 312
	mov	eax, DWORD PTR _pSample$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pSample$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 314
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CleanupCancelled@CPullPin@@AAEXXZ	; CPullPin::CleanupCancelled
; Line 315
	mov	esi, esp
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@QueueSampl:
; Line 317
	mov	eax, DWORD PTR _hr$[ebp]
$LN4@QueueSampl:
; Line 318
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@QueueSampl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN10@QueueSampl:
	DD	2
	DD	$LN9@QueueSampl
$LN9@QueueSampl:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN7@QueueSampl
	DD	-32					; ffffffe0H
	DD	8
	DD	$LN8@QueueSampl
$LN8@QueueSampl:
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	84					; 00000054H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	0
$LN7@QueueSampl:
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
?QueueSample@CPullPin@@AAEJAA_J_JH@Z ENDP		; CPullPin::QueueSample
_TEXT	ENDS
PUBLIC	?DeliverSample@CPullPin@@AAEJPAUIMediaSample@@_J1@Z ; CPullPin::DeliverSample
PUBLIC	?CollectAndDeliver@CPullPin@@AAEJ_J0@Z		; CPullPin::CollectAndDeliver
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CollectAndDeliver@CPullPin@@AAEJ_J0@Z
_TEXT	SEGMENT
_hr$ = -32						; size = 4
_dwUnused$ = -24					; size = 4
_pSample$ = -12						; size = 4
_this$ = -4						; size = 4
_tStart$ = 8						; size = 8
_tStop$ = 16						; size = 8
?CollectAndDeliver@CPullPin@@AAEJ_J0@Z PROC		; CPullPin::CollectAndDeliver, COMDAT
; _this$ = ecx
; Line 324
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 325
	mov	DWORD PTR _pSample$[ebp], 0
; Line 330
	mov	esi, esp
	lea	eax, DWORD PTR _dwUnused$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pSample$[ebp]
	push	ecx
	push	-1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+20]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 331
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN4@CollectAnd
; Line 332
	cmp	DWORD PTR _pSample$[ebp], 0
	je	SHORT $LN3@CollectAnd
; Line 333
	mov	edx, DWORD PTR _pSample$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pSample$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@CollectAnd:
; Line 335
	jmp	SHORT $LN2@CollectAnd
$LN4@CollectAnd:
; Line 336
	mov	eax, DWORD PTR _tStop$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _tStop$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tStart$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _tStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSample$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeliverSample@CPullPin@@AAEJPAUIMediaSample@@_J1@Z ; CPullPin::DeliverSample
	mov	DWORD PTR _hr$[ebp], eax
$LN2@CollectAnd:
; Line 338
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CollectAnd
; Line 339
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CleanupCancelled@CPullPin@@AAEXXZ	; CPullPin::CleanupCancelled
; Line 340
	mov	esi, esp
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@CollectAnd:
; Line 342
	mov	eax, DWORD PTR _hr$[ebp]
; Line 344
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@CollectAnd
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN10@CollectAnd:
	DD	2
	DD	$LN9@CollectAnd
$LN9@CollectAnd:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN7@CollectAnd
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@CollectAnd
$LN8@CollectAnd:
	DB	100					; 00000064H
	DB	119					; 00000077H
	DB	85					; 00000055H
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN7@CollectAnd:
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
?CollectAndDeliver@CPullPin@@AAEJ_J0@Z ENDP		; CPullPin::CollectAndDeliver
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?DeliverSample@CPullPin@@AAEJPAUIMediaSample@@_J1@Z
_TEXT	SEGMENT
_hr$ = -40						; size = 4
_t2$ = -32						; size = 8
_t1$ = -16						; size = 8
_this$ = -4						; size = 4
_pSample$ = 8						; size = 4
_tStart$ = 12						; size = 8
_tStop$ = 20						; size = 8
?DeliverSample@CPullPin@@AAEJPAUIMediaSample@@_J1@Z PROC ; CPullPin::DeliverSample, COMDAT
; _this$ = ecx
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 355
	mov	esi, esp
	lea	eax, DWORD PTR _t2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _t1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pSample$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pSample$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 356
	mov	eax, DWORD PTR _t2$[ebp+4]
	cmp	eax, DWORD PTR _tStop$[ebp+4]
	jl	SHORT $LN1@DeliverSam
	jg	SHORT $LN4@DeliverSam
	mov	ecx, DWORD PTR _t2$[ebp]
	cmp	ecx, DWORD PTR _tStop$[ebp]
	jbe	SHORT $LN1@DeliverSam
$LN4@DeliverSam:
; Line 357
	mov	edx, DWORD PTR _tStop$[ebp]
	mov	DWORD PTR _t2$[ebp], edx
	mov	eax, DWORD PTR _tStop$[ebp+4]
	mov	DWORD PTR _t2$[ebp+4], eax
$LN1@DeliverSam:
; Line 361
	mov	ecx, DWORD PTR _t1$[ebp]
	sub	ecx, DWORD PTR _tStart$[ebp]
	mov	edx, DWORD PTR _t1$[ebp+4]
	sbb	edx, DWORD PTR _tStart$[ebp+4]
	mov	DWORD PTR _t1$[ebp], ecx
	mov	DWORD PTR _t1$[ebp+4], edx
; Line 362
	mov	eax, DWORD PTR _t2$[ebp]
	sub	eax, DWORD PTR _tStart$[ebp]
	mov	ecx, DWORD PTR _t2$[ebp+4]
	sbb	ecx, DWORD PTR _tStart$[ebp+4]
	mov	DWORD PTR _t2$[ebp], eax
	mov	DWORD PTR _t2$[ebp+4], ecx
; Line 363
	mov	esi, esp
	lea	edx, DWORD PTR _t2$[ebp]
	push	edx
	lea	eax, DWORD PTR _t1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSample$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pSample$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 366
	mov	esi, esp
	mov	edx, DWORD PTR _pSample$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 367
	mov	ecx, DWORD PTR _pSample$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pSample$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 368
	mov	eax, DWORD PTR _hr$[ebp]
; Line 369
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@DeliverSam
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	2
$LN8@DeliverSam:
	DD	2
	DD	$LN7@DeliverSam
$LN7@DeliverSam:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN5@DeliverSam
	DD	-32					; ffffffe0H
	DD	8
	DD	$LN6@DeliverSam
$LN6@DeliverSam:
	DB	116					; 00000074H
	DB	50					; 00000032H
	DB	0
$LN5@DeliverSam:
	DB	116					; 00000074H
	DB	49					; 00000031H
	DB	0
?DeliverSample@CPullPin@@AAEJPAUIMediaSample@@_J1@Z ENDP ; CPullPin::DeliverSample
_TEXT	ENDS
PUBLIC	?AlignUp@CPullPin@@QAE_J_JJ@Z			; CPullPin::AlignUp
PUBLIC	?AlignDown@CPullPin@@QAE_J_JJ@Z			; CPullPin::AlignDown
PUBLIC	__$ArrayPad$
EXTRN	?CheckRequest@CAMThread@@QAEHPAK@Z:PROC		; CAMThread::CheckRequest
EXTRN	__alldiv:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Process@CPullPin@@AAEXXZ
_TEXT	SEGMENT
tv319 = -132						; size = 4
tv258 = -128						; size = 4
tv257 = -124						; size = 4
_tStopThis$81861 = -116					; size = 8
_pSample$81858 = -100					; size = 4
_dwRequest$ = -88					; size = 4
_tAlignStop$ = -80					; size = 8
_tStop$ = -72						; size = 8
_tCurrent$ = -60					; size = 8
_tStart$ = -48						; size = 8
_hr$ = -40						; size = 4
_Actual$ = -32						; size = 16
_bDiscontinuity$ = -12					; size = 4
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
?Process@CPullPin@@AAEXXZ PROC				; CPullPin::Process, COMDAT
; _this$ = ecx
; Line 373
	push	ebp
	mov	ebp, esp
	sub	esp, 132				; 00000084H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-132]
	mov	ecx, 33					; 00000021H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 375
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv257[ebp], eax
	mov	DWORD PTR tv258[ebp], ecx
	mov	edx, DWORD PTR tv257[ebp]
	mov	eax, DWORD PTR tv258[ebp]
	mov	ecx, DWORD PTR [edx+116]
	cmp	ecx, DWORD PTR [eax+108]
	jg	SHORT $LN24@Process
	jl	SHORT $LN27@Process
	mov	edx, DWORD PTR tv257[ebp]
	mov	eax, DWORD PTR tv258[ebp]
	mov	ecx, DWORD PTR [edx+112]
	cmp	ecx, DWORD PTR [eax+104]
	ja	SHORT $LN24@Process
$LN27@Process:
; Line 376
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 377
	jmp	$LN25@Process
$LN24@Process:
; Line 380
	mov	DWORD PTR _bDiscontinuity$[ebp], 1
; Line 386
	mov	esi, esp
	lea	eax, DWORD PTR _Actual$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 389
	mov	ecx, DWORD PTR _Actual$[ebp+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	0
	push	10000000				; 00989680H
	mov	eax, DWORD PTR [edx+108]
	push	eax
	mov	ecx, DWORD PTR [edx+104]
	push	ecx
	call	__alldiv
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AlignDown@CPullPin@@QAE_J_JJ@Z		; CPullPin::AlignDown
	push	0
	push	10000000				; 00989680H
	push	edx
	push	eax
	call	__allmul
	mov	DWORD PTR _tStart$[ebp], eax
	mov	DWORD PTR _tStart$[ebp+4], edx
; Line 390
	mov	edx, DWORD PTR _tStart$[ebp]
	mov	DWORD PTR _tCurrent$[ebp], edx
	mov	eax, DWORD PTR _tStart$[ebp+4]
	mov	DWORD PTR _tCurrent$[ebp+4], eax
; Line 392
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	mov	DWORD PTR _tStop$[ebp], edx
	mov	eax, DWORD PTR [ecx+116]
	mov	DWORD PTR _tStop$[ebp+4], eax
; Line 393
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv319[ebp], ecx
	mov	edx, DWORD PTR tv319[ebp]
	mov	eax, DWORD PTR _tStop$[ebp+4]
	cmp	eax, DWORD PTR [edx+124]
	jl	SHORT $LN23@Process
	jg	SHORT $LN28@Process
	mov	ecx, DWORD PTR tv319[ebp]
	mov	edx, DWORD PTR _tStop$[ebp]
	cmp	edx, DWORD PTR [ecx+120]
	jbe	SHORT $LN23@Process
$LN28@Process:
; Line 394
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	DWORD PTR _tStop$[ebp], ecx
	mov	edx, DWORD PTR [eax+124]
	mov	DWORD PTR _tStop$[ebp+4], edx
$LN23@Process:
; Line 399
	mov	eax, DWORD PTR _Actual$[ebp+8]
	push	eax
	push	0
	push	10000000				; 00989680H
	mov	ecx, DWORD PTR _tStop$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _tStop$[ebp]
	push	edx
	call	__alldiv
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AlignUp@CPullPin@@QAE_J_JJ@Z		; CPullPin::AlignUp
	push	0
	push	10000000				; 00989680H
	push	edx
	push	eax
	call	__allmul
	mov	DWORD PTR _tAlignStop$[ebp], eax
	mov	DWORD PTR _tAlignStop$[ebp+4], edx
; Line 404
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+128], 0
	jne	$LN9@Process
$LN21@Process:
; Line 408
	mov	ecx, DWORD PTR _tCurrent$[ebp+4]
	cmp	ecx, DWORD PTR _tAlignStop$[ebp+4]
	jg	$LN20@Process
	jl	SHORT $LN29@Process
	mov	edx, DWORD PTR _tCurrent$[ebp]
	cmp	edx, DWORD PTR _tAlignStop$[ebp]
	jae	$LN20@Process
$LN29@Process:
; Line 412
	lea	eax, DWORD PTR _dwRequest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CheckRequest@CAMThread@@QAEHPAK@Z	; CAMThread::CheckRequest
	test	eax, eax
	je	SHORT $LN19@Process
; Line 413
	jmp	$LN25@Process
$LN19@Process:
; Line 417
	cmp	DWORD PTR _Actual$[ebp], 1
	jle	SHORT $LN16@Process
; Line 419
	push	1
	mov	ecx, DWORD PTR _tAlignStop$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _tAlignStop$[ebp]
	push	edx
	lea	eax, DWORD PTR _tCurrent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?QueueSample@CPullPin@@AAEJAA_J_JH@Z	; CPullPin::QueueSample
	mov	DWORD PTR _hr$[ebp], eax
; Line 420
	mov	DWORD PTR _bDiscontinuity$[ebp], 0
; Line 422
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN16@Process
; Line 423
	jmp	$LN25@Process
$LN16@Process:
; Line 430
	mov	ecx, DWORD PTR _tCurrent$[ebp+4]
	cmp	ecx, DWORD PTR _tAlignStop$[ebp+4]
	jg	SHORT $LN15@Process
	jl	SHORT $LN30@Process
	mov	edx, DWORD PTR _tCurrent$[ebp]
	cmp	edx, DWORD PTR _tAlignStop$[ebp]
	jae	SHORT $LN15@Process
$LN30@Process:
; Line 432
	mov	eax, DWORD PTR _bDiscontinuity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tAlignStop$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _tAlignStop$[ebp]
	push	edx
	lea	eax, DWORD PTR _tCurrent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?QueueSample@CPullPin@@AAEJAA_J_JH@Z	; CPullPin::QueueSample
	mov	DWORD PTR _hr$[ebp], eax
; Line 433
	mov	DWORD PTR _bDiscontinuity$[ebp], 0
; Line 435
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN14@Process
; Line 436
	jmp	$LN25@Process
$LN14@Process:
; Line 439
	mov	ecx, DWORD PTR _tStop$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _tStop$[ebp]
	push	edx
	mov	eax, DWORD PTR _tStart$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _tStart$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CollectAndDeliver@CPullPin@@AAEJ_J0@Z	; CPullPin::CollectAndDeliver
	mov	DWORD PTR _hr$[ebp], eax
; Line 440
	cmp	DWORD PTR _hr$[ebp], 0
	je	SHORT $LN13@Process
; Line 444
	jmp	$LN25@Process
$LN13@Process:
; Line 446
	jmp	SHORT $LN16@Process
$LN15@Process:
; Line 448
	cmp	DWORD PTR _Actual$[ebp], 1
	jle	SHORT $LN12@Process
; Line 449
	mov	edx, DWORD PTR _tStop$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _tStop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tStart$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _tStart$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CollectAndDeliver@CPullPin@@AAEJ_J0@Z	; CPullPin::CollectAndDeliver
	mov	DWORD PTR _hr$[ebp], eax
; Line 450
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN12@Process
; Line 451
	jmp	$LN25@Process
$LN12@Process:
; Line 454
	jmp	$LN21@Process
$LN20@Process:
; Line 455
	jmp	$LN10@Process
$LN9@Process:
; Line 458
	mov	eax, DWORD PTR _tCurrent$[ebp+4]
	cmp	eax, DWORD PTR _tAlignStop$[ebp+4]
	jg	$LN10@Process
	jl	SHORT $LN31@Process
	mov	ecx, DWORD PTR _tCurrent$[ebp]
	cmp	ecx, DWORD PTR _tAlignStop$[ebp]
	jae	$LN10@Process
$LN31@Process:
; Line 462
	lea	edx, DWORD PTR _dwRequest$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CheckRequest@CAMThread@@QAEHPAK@Z	; CAMThread::CheckRequest
	test	eax, eax
	je	SHORT $LN7@Process
; Line 463
	jmp	$LN25@Process
$LN7@Process:
; Line 468
	mov	esi, esp
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _pSample$81858[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 469
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN6@Process
; Line 470
	mov	esi, esp
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 471
	jmp	$LN25@Process
$LN6@Process:
; Line 474
	mov	eax, DWORD PTR _pSample$81858[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pSample$81858[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cdq
	push	0
	push	10000000				; 00989680H
	push	edx
	push	eax
	call	__allmul
	add	eax, DWORD PTR _tCurrent$[ebp]
	adc	edx, DWORD PTR _tCurrent$[ebp+4]
	mov	DWORD PTR _tStopThis$81861[ebp], eax
	mov	DWORD PTR _tStopThis$81861[ebp+4], edx
; Line 475
	mov	ecx, DWORD PTR _tStopThis$81861[ebp+4]
	cmp	ecx, DWORD PTR _tAlignStop$[ebp+4]
	jl	SHORT $LN5@Process
	jg	SHORT $LN32@Process
	mov	edx, DWORD PTR _tStopThis$81861[ebp]
	cmp	edx, DWORD PTR _tAlignStop$[ebp]
	jbe	SHORT $LN5@Process
$LN32@Process:
; Line 476
	mov	eax, DWORD PTR _tAlignStop$[ebp]
	mov	DWORD PTR _tStopThis$81861[ebp], eax
	mov	ecx, DWORD PTR _tAlignStop$[ebp+4]
	mov	DWORD PTR _tStopThis$81861[ebp+4], ecx
$LN5@Process:
; Line 478
	mov	esi, esp
	lea	edx, DWORD PTR _tStopThis$81861[ebp]
	push	edx
	lea	eax, DWORD PTR _tCurrent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSample$81858[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pSample$81858[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 479
	mov	edx, DWORD PTR _tStopThis$81861[ebp]
	mov	DWORD PTR _tCurrent$[ebp], edx
	mov	eax, DWORD PTR _tStopThis$81861[ebp+4]
	mov	DWORD PTR _tCurrent$[ebp+4], eax
; Line 481
	cmp	DWORD PTR _bDiscontinuity$[ebp], 0
	je	SHORT $LN4@Process
; Line 482
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR _pSample$81858[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pSample$81858[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+64]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 483
	mov	DWORD PTR _bDiscontinuity$[ebp], 0
$LN4@Process:
; Line 486
	mov	esi, esp
	mov	edx, DWORD PTR _pSample$81858[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 488
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@Process
; Line 489
	mov	eax, DWORD PTR _pSample$81858[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pSample$81858[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 490
	mov	esi, esp
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 491
	jmp	SHORT $LN25@Process
$LN3@Process:
; Line 494
	mov	eax, DWORD PTR _tStop$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _tStop$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tStart$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _tStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSample$81858[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DeliverSample@CPullPin@@AAEJPAUIMediaSample@@_J1@Z ; CPullPin::DeliverSample
	mov	DWORD PTR _hr$[ebp], eax
; Line 495
	cmp	DWORD PTR _hr$[ebp], 0
	je	SHORT $LN2@Process
; Line 496
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@Process
; Line 497
	mov	esi, esp
	mov	edx, DWORD PTR _hr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Process:
; Line 499
	jmp	SHORT $LN25@Process
$LN2@Process:
; Line 501
	jmp	$LN9@Process
$LN10@Process:
; Line 504
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN25@Process:
; Line 505
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN39@Process
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 132				; 00000084H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN39@Process:
	DD	5
	DD	$LN38@Process
$LN38@Process:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN33@Process
	DD	-60					; ffffffc4H
	DD	8
	DD	$LN34@Process
	DD	-88					; ffffffa8H
	DD	4
	DD	$LN35@Process
	DD	-100					; ffffff9cH
	DD	4
	DD	$LN36@Process
	DD	-116					; ffffff8cH
	DD	8
	DD	$LN37@Process
$LN37@Process:
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	84					; 00000054H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	0
$LN36@Process:
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN35@Process:
	DB	100					; 00000064H
	DB	119					; 00000077H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	113					; 00000071H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN34@Process:
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN33@Process:
	DB	65					; 00000041H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
?Process@CPullPin@@AAEXXZ ENDP				; CPullPin::Process
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AlignDown@CPullPin@@QAE_J_JJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ll$ = 8						; size = 8
_lAlign$ = 16						; size = 4
?AlignDown@CPullPin@@QAE_J_JJ@Z PROC			; CPullPin::AlignDown, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\pullpin.h
; Line 114
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 116
	mov	eax, DWORD PTR _lAlign$[ebp]
	sub	eax, 1
	not	eax
	cdq
	and	eax, DWORD PTR _ll$[ebp]
	and	edx, DWORD PTR _ll$[ebp+4]
; Line 117
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?AlignDown@CPullPin@@QAE_J_JJ@Z ENDP			; CPullPin::AlignDown
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AlignUp@CPullPin@@QAE_J_JJ@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ll$ = 8						; size = 8
_lAlign$ = 16						; size = 4
?AlignUp@CPullPin@@QAE_J_JJ@Z PROC			; CPullPin::AlignUp, COMDAT
; _this$ = ecx
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _lAlign$[ebp]
	sub	eax, 1
	cdq
	mov	ecx, eax
	mov	esi, edx
	add	ecx, DWORD PTR _ll$[ebp]
	adc	esi, DWORD PTR _ll$[ebp+4]
	mov	eax, DWORD PTR _lAlign$[ebp]
	sub	eax, 1
	not	eax
	cdq
	and	ecx, eax
	and	esi, edx
	mov	eax, ecx
	mov	edx, esi
; Line 122
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?AlignUp@CPullPin@@QAE_J_JJ@Z ENDP			; CPullPin::AlignUp
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?CleanupCancelled@CPullPin@@AAEXXZ
_TEXT	SEGMENT
_hr$81879 = -32						; size = 4
_dwUnused$81878 = -24					; size = 4
_pSample$81877 = -12					; size = 4
_this$ = -4						; size = 4
?CleanupCancelled@CPullPin@@AAEXXZ PROC			; CPullPin::CleanupCancelled, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\pullpin.cpp
; Line 511
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
$LN4@CleanupCan:
; Line 512
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@CleanupCan
; Line 519
	mov	esi, esp
	lea	ecx, DWORD PTR _dwUnused$81878[ebp]
	push	ecx
	lea	edx, DWORD PTR _pSample$81877[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$81879[ebp], eax
; Line 520
	cmp	DWORD PTR _pSample$81877[ebp], 0
	je	SHORT $LN2@CleanupCan
; Line 521
	mov	eax, DWORD PTR _pSample$81877[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pSample$81877[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 522
	jmp	SHORT $LN1@CleanupCan
$LN2@CleanupCan:
; Line 524
	jmp	SHORT $LN5@CleanupCan
$LN1@CleanupCan:
; Line 526
	jmp	SHORT $LN4@CleanupCan
$LN5@CleanupCan:
; Line 527
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@CleanupCan
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@CleanupCan:
	DD	2
	DD	$LN9@CleanupCan
$LN9@CleanupCan:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN7@CleanupCan
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@CleanupCan
$LN8@CleanupCan:
	DB	100					; 00000064H
	DB	119					; 00000077H
	DB	85					; 00000055H
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN7@CleanupCan:
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
?CleanupCancelled@CPullPin@@AAEXXZ ENDP			; CPullPin::CleanupCancelled
_TEXT	ENDS
END
