; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Downloads\MediaPoint\src\filters\BaseClasses\ctlutil.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_IID_IAMFilterGraphCallback
CONST	SEGMENT
$SG81608 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81609 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG81613 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81614 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
$SG81637 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81638 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG81642 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81643 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
$SG81722 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81723 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG81727 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81728 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
$SG81791 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81792 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG81796 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81797 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
$SG81865 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81866 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG81870 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG81871 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
$SG82223 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82224 DB	'p', 00H, 'M', 00H, 'e', 00H, 'd', 00H, 'i', 00H, 'a', 00H
	DB	'S', 00H, 'a', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 00H
	DB	00H
	ORG $+2
$SG82233 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82494 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
$SG82845 DB	'0', 00H, 00H, 00H
$SG82234 DB	'h', 00H, 'r', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	'V', 00H, 'F', 00H, 'W', 00H, '_', 00H, 'E', 00H, '_', 00H, 'S'
	DB	00H, 'A', 00H, 'M', 00H, 'P', 00H, 'L', 00H, 'E', 00H, '_', 00H
	DB	'T', 00H, 'I', 00H, 'M', 00H, 'E', 00H, '_', 00H, 'N', 00H, 'O'
	DB	00H, 'T', 00H, '_', 00H, 'S', 00H, 'E', 00H, 'T', 00H, 00H, 00H
$SG82250 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82251 DB	'p', 00H, 'S', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H
	DB	'T', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG82488 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82489 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG82493 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82511 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82512 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG82516 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82517 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
$SG82534 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82535 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG82539 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82540 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
$SG82556 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82557 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG82561 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82562 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
$SG82605 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82606 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG82610 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82611 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
$SG82672 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82673 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG82677 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82678 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
$SG82741 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82742 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG82746 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82747 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
$SG82844 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82884 DB	'D', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'r', 00H
	DB	'e', 00H, 'd', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'a'
	DB	00H, 'n', 00H, 'd', 00H, 00H, 00H
$SG82913 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82914 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG82918 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82919 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
$SG82946 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82947 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG82951 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG82952 DB	'"', 00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '"', 00H, 00H, 00H
$SG82985 DB	'P', 00H, 'r', 00H, 'e', 00H, 's', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' '
	DB	00H, 't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, ' ', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'd', 00H, ' '
	DB	00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG82986 DB	'S', 00H, 't', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'm', 00H
	DB	' ', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, ' ', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'd', 00H
	DB	' ', 00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG83104 DB	'.', 00H, '.', 00H, '\', 00H, 'c', 00H, 't', 00H, 'l', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'c', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG83105 DB	'S', 00H, 'U', 00H, 'C', 00H, 'C', 00H, 'E', 00H, 'E', 00H
	DB	'D', 00H, 'E', 00H, 'D', 00H, '(', 00H, 'h', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
CONST	ENDS
;	COMDAT _IID_IAMFilterGraphCallback
CONST	SEGMENT
_IID_IAMFilterGraphCallback DD 056a868fdH
	DW	0ad4H
	DW	011ceH
	DB	0b0H
	DB	0a3H
	DB	00H
	DB	020H
	DB	0afH
	DB	0bH
	DB	0a7H
	DB	070H
CONST	ENDS
PUBLIC	??1CBaseDispatch@@QAE@XZ			; CBaseDispatch::~CBaseDispatch
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT ??1CBaseDispatch@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CBaseDispatch@@QAE@XZ PROC				; CBaseDispatch::~CBaseDispatch, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 27
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@CBaseDispa
; Line 28
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CBaseDispa:
; Line 30
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CBaseDispatch@@QAE@XZ ENDP				; CBaseDispatch::~CBaseDispatch
_TEXT	ENDS
PUBLIC	?GetTypeInfoCount@CBaseDispatch@@QAGJPAI@Z	; CBaseDispatch::GetTypeInfoCount
EXTRN	__imp__IsBadWritePtr@8:PROC
EXTRN	?DbgBreakPoint@@YGXPB_W0H@Z:PROC		; DbgBreakPoint
EXTRN	__imp__IsBadReadPtr@8:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTypeInfoCount@CBaseDispatch@@QAGJPAI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pctinfo$ = 12						; size = 4
?GetTypeInfoCount@CBaseDispatch@@QAGJPAI@Z PROC		; CBaseDispatch::GetTypeInfoCount, COMDAT
; Line 37
	push	ebp
	mov	ebp, esp
	push	esi
; Line 38
	cmp	DWORD PTR _pctinfo$[ebp], 0
	jne	SHORT $LN3@GetTypeInf
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN4@GetTypeInf
$LN3@GetTypeInf:
; Line 39
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _pctinfo$[ebp]
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN2@GetTypeInf
	push	39					; 00000027H
	push	OFFSET $SG81608
	push	OFFSET $SG81609
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN2@GetTypeInf:
	mov	esi, esp
	push	4
	mov	ecx, DWORD PTR _pctinfo$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsBadWritePtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN1@GetTypeInf
	push	39					; 00000027H
	push	OFFSET $SG81613
	push	OFFSET $SG81614
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN1@GetTypeInf:
; Line 40
	mov	edx, DWORD PTR _pctinfo$[ebp]
	mov	DWORD PTR [edx], 1
; Line 41
	xor	eax, eax
$LN4@GetTypeInf:
; Line 42
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?GetTypeInfoCount@CBaseDispatch@@QAGJPAI@Z ENDP		; CBaseDispatch::GetTypeInfoCount
_TEXT	ENDS
PUBLIC	?GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z ; CBaseDispatch::GetTypeInfo
EXTRN	_LIBID_QuartzTypeLib:BYTE
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	?LoadOLEAut32@@YGPAUHINSTANCE__@@XZ:PROC	; LoadOLEAut32
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ?szControl@?BF@??GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z@4QB_WB
CONST	SEGMENT
?szControl@?BF@??GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z@4QB_WB DB 'c'
	DB	00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H
	DB	'.', 00H, 't', 00H, 'l', 00H, 'b', 00H, 00H, 00H ; `CBaseDispatch::GetTypeInfo'::`21'::szControl
CONST	ENDS
;	COMDAT ?szTypeLib@?BF@??GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z@4QBDB
CONST	SEGMENT
?szTypeLib@?BF@??GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z@4QBDB DB 'L'
	DB	'oadTypeLib', 00H				; `CBaseDispatch::GetTypeInfo'::`21'::szTypeLib
CONST	ENDS
;	COMDAT ?szRegTypeLib@?BF@??GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z@4QBDB
CONST	SEGMENT
?szRegTypeLib@?BF@??GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z@4QBDB DB 'L'
	DB	'oadRegTypeLib', 00H				; `CBaseDispatch::GetTypeInfo'::`21'::szRegTypeLib
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT
_dwError$81677 = -40					; size = 4
_dwError$81668 = -36					; size = 4
_dwError$81661 = -32					; size = 4
_hInst$81653 = -28					; size = 4
_ptlib$81652 = -20					; size = 4
_lpfnLoadRegTypeLib$81651 = -12				; size = 4
_lpfnLoadTypeLib$81650 = -8				; size = 4
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_itinfo$ = 16						; size = 4
_lcid$ = 20						; size = 4
_pptinfo$ = 24						; size = 4
?GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z PROC ; CBaseDispatch::GetTypeInfo, COMDAT
; Line 63
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 64
	cmp	DWORD PTR _pptinfo$[ebp], 0
	jne	SHORT $LN12@GetTypeInf@2
	mov	eax, -2147467261			; 80004003H
	jmp	$LN13@GetTypeInf@2
$LN12@GetTypeInf@2:
; Line 65
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _pptinfo$[ebp]
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN11@GetTypeInf@2
	push	65					; 00000041H
	push	OFFSET $SG81637
	push	OFFSET $SG81638
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN11@GetTypeInf@2:
	mov	esi, esp
	push	4
	mov	ecx, DWORD PTR _pptinfo$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsBadWritePtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN10@GetTypeInf@2
	push	65					; 00000041H
	push	OFFSET $SG81642
	push	OFFSET $SG81643
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN10@GetTypeInf@2:
; Line 68
	mov	edx, DWORD PTR _pptinfo$[ebp]
	mov	DWORD PTR [edx], 0
; Line 71
	cmp	DWORD PTR _itinfo$[ebp], 0
	je	SHORT $LN9@GetTypeInf@2
; Line 72
	mov	eax, -2147319765			; 8002802bH
	jmp	$LN13@GetTypeInf@2
$LN9@GetTypeInf@2:
; Line 75
	cmp	DWORD PTR _pptinfo$[ebp], 0
	jne	SHORT $LN8@GetTypeInf@2
; Line 76
	mov	eax, -2147467261			; 80004003H
	jmp	$LN13@GetTypeInf@2
$LN8@GetTypeInf@2:
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	$LN7@GetTypeInf@2
; Line 95
	call	?LoadOLEAut32@@YGPAUHINSTANCE__@@XZ	; LoadOLEAut32
	mov	DWORD PTR _hInst$81653[ebp], eax
; Line 96
	cmp	DWORD PTR _hInst$81653[ebp], 0
	jne	SHORT $LN6@GetTypeInf@2
; Line 97
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwError$81661[ebp], eax
; Line 98
	mov	eax, DWORD PTR _dwError$81661[ebp]
	or	eax, -2147024896			; 80070000H
	jmp	$LN13@GetTypeInf@2
$LN6@GetTypeInf@2:
; Line 101
	mov	esi, esp
	push	OFFSET ?szRegTypeLib@?BF@??GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z@4QBDB
	mov	ecx, DWORD PTR _hInst$81653[ebp]
	push	ecx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lpfnLoadRegTypeLib$81651[ebp], eax
; Line 102
	cmp	DWORD PTR _lpfnLoadRegTypeLib$81651[ebp], 0
	jne	SHORT $LN5@GetTypeInf@2
; Line 103
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwError$81668[ebp], eax
; Line 104
	mov	eax, DWORD PTR _dwError$81668[ebp]
	or	eax, -2147024896			; 80070000H
	jmp	$LN13@GetTypeInf@2
$LN5@GetTypeInf@2:
; Line 108
	mov	esi, esp
	lea	edx, DWORD PTR _ptlib$81652[ebp]
	push	edx
	mov	eax, DWORD PTR _lcid$[ebp]
	push	eax
	push	0
	push	1
	push	OFFSET _LIBID_QuartzTypeLib
	call	DWORD PTR _lpfnLoadRegTypeLib$81651[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 110
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN4@GetTypeInf@2
; Line 115
	mov	esi, esp
	push	OFFSET ?szTypeLib@?BF@??GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z@4QBDB
	mov	ecx, DWORD PTR _hInst$81653[ebp]
	push	ecx
	call	DWORD PTR __imp__GetProcAddress@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lpfnLoadTypeLib$81650[ebp], eax
; Line 116
	cmp	DWORD PTR _lpfnLoadTypeLib$81650[ebp], 0
	jne	SHORT $LN3@GetTypeInf@2
; Line 117
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwError$81677[ebp], eax
; Line 118
	mov	eax, DWORD PTR _dwError$81677[ebp]
	or	eax, -2147024896			; 80070000H
	jmp	$LN13@GetTypeInf@2
$LN3@GetTypeInf@2:
; Line 121
	mov	esi, esp
	lea	edx, DWORD PTR _ptlib$81652[ebp]
	push	edx
	push	OFFSET ?szControl@?BF@??GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z@4QB_WB
	call	DWORD PTR _lpfnLoadTypeLib$81650[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 122
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN4@GetTypeInf@2
; Line 123
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN13@GetTypeInf@2
$LN4@GetTypeInf@2:
; Line 129
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ptlib$81652[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _ptlib$81652[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 131
	mov	eax, DWORD PTR _ptlib$81652[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _ptlib$81652[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 133
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN7@GetTypeInf@2
; Line 134
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN13@GetTypeInf@2
$LN7@GetTypeInf@2:
; Line 138
	mov	ecx, DWORD PTR _pptinfo$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
; Line 139
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 140
	xor	eax, eax
$LN13@GetTypeInf@2:
; Line 141
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@GetTypeInf@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	2
$LN17@GetTypeInf@2:
	DD	1
	DD	$LN16@GetTypeInf@2
$LN16@GetTypeInf@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN15@GetTypeInf@2
$LN15@GetTypeInf@2:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	98					; 00000062H
	DB	0
?GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z ENDP ; CBaseDispatch::GetTypeInfo
_TEXT	ENDS
PUBLIC	?GetIDsOfNames@CBaseDispatch@@QAGJABU_GUID@@PAPA_WIKPAJ@Z ; CBaseDispatch::GetIDsOfNames
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetIDsOfNames@CBaseDispatch@@QAGJABU_GUID@@PAPA_WIKPAJ@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pti$ = -8						; size = 4
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_rgszNames$ = 16					; size = 4
_cNames$ = 20						; size = 4
_lcid$ = 24						; size = 4
_rgdispid$ = 28						; size = 4
?GetIDsOfNames@CBaseDispatch@@QAGJABU_GUID@@PAPA_WIKPAJ@Z PROC ; CBaseDispatch::GetIDsOfNames, COMDAT
; Line 151
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 156
	lea	eax, DWORD PTR _pti$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lcid$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _riid$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z ; CBaseDispatch::GetTypeInfo
	mov	DWORD PTR _hr$[ebp], eax
; Line 158
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN1@GetIDsOfNa
; Line 159
	mov	esi, esp
	mov	ecx, DWORD PTR _rgdispid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cNames$[ebp]
	push	edx
	mov	eax, DWORD PTR _rgszNames$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pti$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pti$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+40]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 161
	mov	edx, DWORD PTR _pti$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pti$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@GetIDsOfNa:
; Line 163
	mov	eax, DWORD PTR _hr$[ebp]
; Line 164
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetIDsOfNa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	2
$LN6@GetIDsOfNa:
	DD	1
	DD	$LN5@GetIDsOfNa
$LN5@GetIDsOfNa:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@GetIDsOfNa
$LN4@GetIDsOfNa:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	0
?GetIDsOfNames@CBaseDispatch@@QAGJABU_GUID@@PAPA_WIKPAJ@Z ENDP ; CBaseDispatch::GetIDsOfNames
_TEXT	ENDS
PUBLIC	??1CUnknown@@UAE@XZ				; CUnknown::~CUnknown
PUBLIC	??0CBaseDispatch@@QAE@XZ			; CBaseDispatch::CBaseDispatch
PUBLIC	??0IMediaControl@@QAE@XZ			; IMediaControl::IMediaControl
PUBLIC	??0CMediaControl@@QAE@PB_WPAUIUnknown@@@Z	; CMediaControl::CMediaControl
EXTRN	??0CUnknown@@QAE@PB_WPAUIUnknown@@@Z:PROC	; CUnknown::CUnknown
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CMediaControl@@QAE@PB_WPAUIUnknown@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CMediaControl@@QAE@PB_WPAUIUnknown@@@Z$0
__ehfuncinfo$??0CMediaControl@@QAE@PB_WPAUIUnknown@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CMediaControl@@QAE@PB_WPAUIUnknown@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CMediaControl@@QAE@PB_WPAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
_pUnk$ = 12						; size = 4
??0CMediaControl@@QAE@PB_WPAUIUnknown@@@Z PROC		; CMediaControl::CMediaControl, COMDAT
; _this$ = ecx
; Line 171
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CMediaControl@@QAE@PB_WPAUIUnknown@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IMediaControl@@QAE@XZ
	mov	eax, DWORD PTR _pUnk$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CUnknown@@QAE@PB_WPAUIUnknown@@@Z	; CUnknown::CUnknown
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0CBaseDispatch@@QAE@XZ		; CBaseDispatch::CBaseDispatch
; Line 172
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CMediaControl@@QAE@PB_WPAUIUnknown@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1CUnknown@@UAE@XZ			; CUnknown::~CUnknown
__ehhandler$??0CMediaControl@@QAE@PB_WPAUIUnknown@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CMediaControl@@QAE@PB_WPAUIUnknown@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CMediaControl@@QAE@PB_WPAUIUnknown@@@Z ENDP		; CMediaControl::CMediaControl
EXTRN	??1CBaseObject@@QAE@XZ:PROC			; CBaseObject::~CBaseObject
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CUnknown@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CUnknown@@UAE@XZ PROC				; CUnknown::~CUnknown, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\combase.h
; Line 212
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1CBaseObject@@QAE@XZ			; CBaseObject::~CBaseObject
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CUnknown@@UAE@XZ ENDP				; CUnknown::~CUnknown
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0CBaseDispatch@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBaseDispatch@@QAE@XZ PROC				; CBaseDispatch::CBaseDispatch, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.h
; Line 32
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CBaseDispatch@@QAE@XZ ENDP				; CBaseDispatch::CBaseDispatch
_TEXT	ENDS
PUBLIC	??0IDispatch@@QAE@XZ				; IDispatch::IDispatch
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IMediaControl@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IMediaControl@@QAE@XZ PROC				; IMediaControl::IMediaControl, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IDispatch@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IMediaControl@@QAE@XZ ENDP				; IMediaControl::IMediaControl
_TEXT	ENDS
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IDispatch@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IDispatch@@QAE@XZ PROC				; IDispatch::IDispatch, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IDispatch@@QAE@XZ ENDP				; IDispatch::IDispatch
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	_==@8
PUBLIC	?NonDelegatingQueryInterface@CMediaControl@@UAGJABU_GUID@@PAPAX@Z ; CMediaControl::NonDelegatingQueryInterface
EXTRN	?NonDelegatingQueryInterface@CUnknown@@UAGJABU_GUID@@PAPAX@Z:PROC ; CUnknown::NonDelegatingQueryInterface
EXTRN	_GetInterface@8:PROC
EXTRN	_IID_IMediaControl:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?NonDelegatingQueryInterface@CMediaControl@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?NonDelegatingQueryInterface@CMediaControl@@UAGJABU_GUID@@PAPAX@Z PROC ; CMediaControl::NonDelegatingQueryInterface, COMDAT
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.cpp
; Line 178
	push	ebp
	mov	ebp, esp
	push	esi
; Line 179
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN4@NonDelegat
	push	179					; 000000b3H
	push	OFFSET $SG81722
	push	OFFSET $SG81723
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN4@NonDelegat:
	mov	esi, esp
	push	4
	mov	ecx, DWORD PTR _ppv$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsBadWritePtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@NonDelegat
	push	179					; 000000b3H
	push	OFFSET $SG81727
	push	OFFSET $SG81728
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN3@NonDelegat:
; Line 180
	push	OFFSET _IID_IMediaControl
	mov	edx, DWORD PTR _riid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@NonDelegat
; Line 181
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	push	ecx
	call	_GetInterface@8
	jmp	SHORT $LN5@NonDelegat
; Line 182
	jmp	SHORT $LN5@NonDelegat
$LN2@NonDelegat:
; Line 183
	mov	edx, DWORD PTR _ppv$[ebp]
	push	edx
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?NonDelegatingQueryInterface@CUnknown@@UAGJABU_GUID@@PAPAX@Z ; CUnknown::NonDelegatingQueryInterface
$LN5@NonDelegat:
; Line 185
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?NonDelegatingQueryInterface@CMediaControl@@UAGJABU_GUID@@PAPAX@Z ENDP ; CMediaControl::NonDelegatingQueryInterface
_TEXT	ENDS
PUBLIC	_IsEqualGUID@8
; Function compile flags: /Odtp /RTCsu
;	COMDAT _==@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 193
	push	ebp
	mov	ebp, esp
; Line 194
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_IsEqualGUID@8
; Line 195
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_==@8	ENDP
_TEXT	ENDS
EXTRN	_memcmp:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _IsEqualGUID@8
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID@8 PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
; Line 161
	push	16					; 00000010H
	mov	eax, DWORD PTR _rguid2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid1$[ebp]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 162
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_IsEqualGUID@8 ENDP
_TEXT	ENDS
PUBLIC	?GetTypeInfoCount@CMediaControl@@UAGJPAI@Z	; CMediaControl::GetTypeInfoCount
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTypeInfoCount@CMediaControl@@UAGJPAI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pctinfo$ = 12						; size = 4
?GetTypeInfoCount@CMediaControl@@UAGJPAI@Z PROC		; CMediaControl::GetTypeInfoCount, COMDAT
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.cpp
; Line 192
	push	ebp
	mov	ebp, esp
; Line 193
	mov	eax, DWORD PTR _pctinfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	?GetTypeInfoCount@CBaseDispatch@@QAGJPAI@Z ; CBaseDispatch::GetTypeInfoCount
; Line 194
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?GetTypeInfoCount@CMediaControl@@UAGJPAI@Z ENDP		; CMediaControl::GetTypeInfoCount
_TEXT	ENDS
PUBLIC	?GetTypeInfo@CMediaControl@@UAGJIKPAPAUITypeInfo@@@Z ; CMediaControl::GetTypeInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTypeInfo@CMediaControl@@UAGJIKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_itinfo$ = 12						; size = 4
_lcid$ = 16						; size = 4
_pptinfo$ = 20						; size = 4
?GetTypeInfo@CMediaControl@@UAGJIKPAPAUITypeInfo@@@Z PROC ; CMediaControl::GetTypeInfo, COMDAT
; Line 204
	push	ebp
	mov	ebp, esp
; Line 209
	mov	eax, DWORD PTR _pptinfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lcid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _itinfo$[ebp]
	push	edx
	push	OFFSET _IID_IMediaControl
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	?GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z ; CBaseDispatch::GetTypeInfo
; Line 210
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
?GetTypeInfo@CMediaControl@@UAGJIKPAPAUITypeInfo@@@Z ENDP ; CMediaControl::GetTypeInfo
_TEXT	ENDS
PUBLIC	?GetIDsOfNames@CMediaControl@@UAGJABU_GUID@@PAPA_WIKPAJ@Z ; CMediaControl::GetIDsOfNames
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetIDsOfNames@CMediaControl@@UAGJABU_GUID@@PAPA_WIKPAJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_rgszNames$ = 16					; size = 4
_cNames$ = 20						; size = 4
_lcid$ = 24						; size = 4
_rgdispid$ = 28						; size = 4
?GetIDsOfNames@CMediaControl@@UAGJABU_GUID@@PAPA_WIKPAJ@Z PROC ; CMediaControl::GetIDsOfNames, COMDAT
; Line 220
	push	ebp
	mov	ebp, esp
; Line 226
	mov	eax, DWORD PTR _rgdispid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lcid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cNames$[ebp]
	push	edx
	mov	eax, DWORD PTR _rgszNames$[ebp]
	push	eax
	push	OFFSET _IID_IMediaControl
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	?GetIDsOfNames@CBaseDispatch@@QAGJABU_GUID@@PAPA_WIKPAJ@Z ; CBaseDispatch::GetIDsOfNames
; Line 227
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	24					; 00000018H
?GetIDsOfNames@CMediaControl@@UAGJABU_GUID@@PAPA_WIKPAJ@Z ENDP ; CMediaControl::GetIDsOfNames
_TEXT	ENDS
PUBLIC	_!=@8
PUBLIC	?Invoke@CMediaControl@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ; CMediaControl::Invoke
EXTRN	_GUID_NULL:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Invoke@CMediaControl@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pti$ = -8						; size = 4
_this$ = 8						; size = 4
_dispidMember$ = 12					; size = 4
_riid$ = 16						; size = 4
_lcid$ = 20						; size = 4
_wFlags$ = 24						; size = 2
_pdispparams$ = 28					; size = 4
_pvarResult$ = 32					; size = 4
_pexcepinfo$ = 36					; size = 4
_puArgErr$ = 40						; size = 4
?Invoke@CMediaControl@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z PROC ; CMediaControl::Invoke, COMDAT
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 242
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	push	OFFSET _GUID_NULL
	call	_!=@8
	test	eax, eax
	je	SHORT $LN2@Invoke
; Line 243
	mov	eax, -2147352575			; 80020001H
	jmp	$LN3@Invoke
$LN2@Invoke:
; Line 247
	mov	esi, esp
	lea	ecx, DWORD PTR _pti$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lcid$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 249
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@Invoke
; Line 250
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN3@Invoke
$LN1@Invoke:
; Line 260
	mov	esi, esp
	mov	ecx, DWORD PTR _puArgErr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pexcepinfo$[ebp]
	push	edx
	mov	eax, DWORD PTR _pvarResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pdispparams$[ebp]
	push	ecx
	movzx	edx, WORD PTR _wFlags$[ebp]
	push	edx
	mov	eax, DWORD PTR _dispidMember$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pti$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pti$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 262
	mov	eax, DWORD PTR _pti$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pti$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 263
	mov	eax, DWORD PTR _hr$[ebp]
$LN3@Invoke:
; Line 264
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Invoke
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
	npad	2
$LN7@Invoke:
	DD	1
	DD	$LN6@Invoke
$LN6@Invoke:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@Invoke
$LN5@Invoke:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	0
?Invoke@CMediaControl@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ENDP ; CMediaControl::Invoke
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT _!=@8
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_!=@8	PROC						; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\guiddef.h
; Line 198
	push	ebp
	mov	ebp, esp
; Line 199
	mov	eax, DWORD PTR _guidOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _guidOne$[ebp]
	push	ecx
	call	_==@8
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 200
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
_!=@8	ENDP
_TEXT	ENDS
PUBLIC	??0IMediaEventEx@@QAE@XZ			; IMediaEventEx::IMediaEventEx
PUBLIC	??0CMediaEvent@@QAE@PB_WPAUIUnknown@@@Z		; CMediaEvent::CMediaEvent
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.cpp
xdata$x	SEGMENT
__unwindtable$??0CMediaEvent@@QAE@PB_WPAUIUnknown@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CMediaEvent@@QAE@PB_WPAUIUnknown@@@Z$0
__ehfuncinfo$??0CMediaEvent@@QAE@PB_WPAUIUnknown@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CMediaEvent@@QAE@PB_WPAUIUnknown@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CMediaEvent@@QAE@PB_WPAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
_pUnk$ = 12						; size = 4
??0CMediaEvent@@QAE@PB_WPAUIUnknown@@@Z PROC		; CMediaEvent::CMediaEvent, COMDAT
; _this$ = ecx
; Line 272
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CMediaEvent@@QAE@PB_WPAUIUnknown@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IMediaEventEx@@QAE@XZ
	mov	eax, DWORD PTR _pUnk$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CUnknown@@QAE@PB_WPAUIUnknown@@@Z	; CUnknown::CUnknown
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0CBaseDispatch@@QAE@XZ		; CBaseDispatch::CBaseDispatch
; Line 273
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CMediaEvent@@QAE@PB_WPAUIUnknown@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1CUnknown@@UAE@XZ			; CUnknown::~CUnknown
__ehhandler$??0CMediaEvent@@QAE@PB_WPAUIUnknown@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CMediaEvent@@QAE@PB_WPAUIUnknown@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CMediaEvent@@QAE@PB_WPAUIUnknown@@@Z ENDP		; CMediaEvent::CMediaEvent
PUBLIC	??0IMediaEvent@@QAE@XZ				; IMediaEvent::IMediaEvent
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IMediaEventEx@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IMediaEventEx@@QAE@XZ PROC				; IMediaEventEx::IMediaEventEx, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IMediaEvent@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IMediaEventEx@@QAE@XZ ENDP				; IMediaEventEx::IMediaEventEx
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IMediaEvent@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IMediaEvent@@QAE@XZ PROC				; IMediaEvent::IMediaEvent, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IDispatch@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IMediaEvent@@QAE@XZ ENDP				; IMediaEvent::IMediaEvent
_TEXT	ENDS
PUBLIC	?NonDelegatingQueryInterface@CMediaEvent@@UAGJABU_GUID@@PAPAX@Z ; CMediaEvent::NonDelegatingQueryInterface
EXTRN	_IID_IMediaEventEx:BYTE
EXTRN	_IID_IMediaEvent:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?NonDelegatingQueryInterface@CMediaEvent@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?NonDelegatingQueryInterface@CMediaEvent@@UAGJABU_GUID@@PAPAX@Z PROC ; CMediaEvent::NonDelegatingQueryInterface, COMDAT
; Line 280
	push	ebp
	mov	ebp, esp
	push	esi
; Line 281
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN5@NonDelegat@2
	push	281					; 00000119H
	push	OFFSET $SG81791
	push	OFFSET $SG81792
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN5@NonDelegat@2:
	mov	esi, esp
	push	4
	mov	ecx, DWORD PTR _ppv$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsBadWritePtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN4@NonDelegat@2
	push	281					; 00000119H
	push	OFFSET $SG81796
	push	OFFSET $SG81797
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN4@NonDelegat@2:
; Line 282
	push	OFFSET _IID_IMediaEvent
	mov	edx, DWORD PTR _riid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	jne	SHORT $LN2@NonDelegat@2
	push	OFFSET _IID_IMediaEventEx
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN3@NonDelegat@2
$LN2@NonDelegat@2:
; Line 283
	mov	ecx, DWORD PTR _ppv$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 4
	push	edx
	call	_GetInterface@8
	jmp	SHORT $LN6@NonDelegat@2
; Line 284
	jmp	SHORT $LN6@NonDelegat@2
$LN3@NonDelegat@2:
; Line 285
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?NonDelegatingQueryInterface@CUnknown@@UAGJABU_GUID@@PAPAX@Z ; CUnknown::NonDelegatingQueryInterface
$LN6@NonDelegat@2:
; Line 287
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?NonDelegatingQueryInterface@CMediaEvent@@UAGJABU_GUID@@PAPAX@Z ENDP ; CMediaEvent::NonDelegatingQueryInterface
_TEXT	ENDS
PUBLIC	?GetTypeInfoCount@CMediaEvent@@UAGJPAI@Z	; CMediaEvent::GetTypeInfoCount
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTypeInfoCount@CMediaEvent@@UAGJPAI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pctinfo$ = 12						; size = 4
?GetTypeInfoCount@CMediaEvent@@UAGJPAI@Z PROC		; CMediaEvent::GetTypeInfoCount, COMDAT
; Line 294
	push	ebp
	mov	ebp, esp
; Line 295
	mov	eax, DWORD PTR _pctinfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	?GetTypeInfoCount@CBaseDispatch@@QAGJPAI@Z ; CBaseDispatch::GetTypeInfoCount
; Line 296
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?GetTypeInfoCount@CMediaEvent@@UAGJPAI@Z ENDP		; CMediaEvent::GetTypeInfoCount
_TEXT	ENDS
PUBLIC	?GetTypeInfo@CMediaEvent@@UAGJIKPAPAUITypeInfo@@@Z ; CMediaEvent::GetTypeInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTypeInfo@CMediaEvent@@UAGJIKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_itinfo$ = 12						; size = 4
_lcid$ = 16						; size = 4
_pptinfo$ = 20						; size = 4
?GetTypeInfo@CMediaEvent@@UAGJIKPAPAUITypeInfo@@@Z PROC	; CMediaEvent::GetTypeInfo, COMDAT
; Line 306
	push	ebp
	mov	ebp, esp
; Line 311
	mov	eax, DWORD PTR _pptinfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lcid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _itinfo$[ebp]
	push	edx
	push	OFFSET _IID_IMediaEvent
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	?GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z ; CBaseDispatch::GetTypeInfo
; Line 312
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
?GetTypeInfo@CMediaEvent@@UAGJIKPAPAUITypeInfo@@@Z ENDP	; CMediaEvent::GetTypeInfo
_TEXT	ENDS
PUBLIC	?GetIDsOfNames@CMediaEvent@@UAGJABU_GUID@@PAPA_WIKPAJ@Z ; CMediaEvent::GetIDsOfNames
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetIDsOfNames@CMediaEvent@@UAGJABU_GUID@@PAPA_WIKPAJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_rgszNames$ = 16					; size = 4
_cNames$ = 20						; size = 4
_lcid$ = 24						; size = 4
_rgdispid$ = 28						; size = 4
?GetIDsOfNames@CMediaEvent@@UAGJABU_GUID@@PAPA_WIKPAJ@Z PROC ; CMediaEvent::GetIDsOfNames, COMDAT
; Line 322
	push	ebp
	mov	ebp, esp
; Line 328
	mov	eax, DWORD PTR _rgdispid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lcid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cNames$[ebp]
	push	edx
	mov	eax, DWORD PTR _rgszNames$[ebp]
	push	eax
	push	OFFSET _IID_IMediaEvent
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	?GetIDsOfNames@CBaseDispatch@@QAGJABU_GUID@@PAPA_WIKPAJ@Z ; CBaseDispatch::GetIDsOfNames
; Line 329
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	24					; 00000018H
?GetIDsOfNames@CMediaEvent@@UAGJABU_GUID@@PAPA_WIKPAJ@Z ENDP ; CMediaEvent::GetIDsOfNames
_TEXT	ENDS
PUBLIC	?Invoke@CMediaEvent@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ; CMediaEvent::Invoke
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Invoke@CMediaEvent@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pti$ = -8						; size = 4
_this$ = 8						; size = 4
_dispidMember$ = 12					; size = 4
_riid$ = 16						; size = 4
_lcid$ = 20						; size = 4
_wFlags$ = 24						; size = 2
_pdispparams$ = 28					; size = 4
_pvarResult$ = 32					; size = 4
_pexcepinfo$ = 36					; size = 4
_puArgErr$ = 40						; size = 4
?Invoke@CMediaEvent@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z PROC ; CMediaEvent::Invoke, COMDAT
; Line 342
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 344
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	push	OFFSET _GUID_NULL
	call	_!=@8
	test	eax, eax
	je	SHORT $LN2@Invoke@2
; Line 345
	mov	eax, -2147352575			; 80020001H
	jmp	$LN3@Invoke@2
$LN2@Invoke@2:
; Line 349
	mov	esi, esp
	lea	ecx, DWORD PTR _pti$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lcid$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 351
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@Invoke@2
; Line 352
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN3@Invoke@2
$LN1@Invoke@2:
; Line 362
	mov	esi, esp
	mov	ecx, DWORD PTR _puArgErr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pexcepinfo$[ebp]
	push	edx
	mov	eax, DWORD PTR _pvarResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pdispparams$[ebp]
	push	ecx
	movzx	edx, WORD PTR _wFlags$[ebp]
	push	edx
	mov	eax, DWORD PTR _dispidMember$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pti$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pti$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 364
	mov	eax, DWORD PTR _pti$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pti$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 365
	mov	eax, DWORD PTR _hr$[ebp]
$LN3@Invoke@2:
; Line 366
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Invoke@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
	npad	2
$LN7@Invoke@2:
	DD	1
	DD	$LN6@Invoke@2
$LN6@Invoke@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@Invoke@2
$LN5@Invoke@2:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	0
?Invoke@CMediaEvent@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ENDP ; CMediaEvent::Invoke
_TEXT	ENDS
PUBLIC	??0IMediaPosition@@QAE@XZ			; IMediaPosition::IMediaPosition
PUBLIC	??0CMediaPosition@@QAE@PB_WPAUIUnknown@@@Z	; CMediaPosition::CMediaPosition
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CMediaPosition@@QAE@PB_WPAUIUnknown@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CMediaPosition@@QAE@PB_WPAUIUnknown@@@Z$0
__ehfuncinfo$??0CMediaPosition@@QAE@PB_WPAUIUnknown@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CMediaPosition@@QAE@PB_WPAUIUnknown@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CMediaPosition@@QAE@PB_WPAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
_pUnk$ = 12						; size = 4
??0CMediaPosition@@QAE@PB_WPAUIUnknown@@@Z PROC		; CMediaPosition::CMediaPosition, COMDAT
; _this$ = ecx
; Line 374
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CMediaPosition@@QAE@PB_WPAUIUnknown@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IMediaPosition@@QAE@XZ
	mov	eax, DWORD PTR _pUnk$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CUnknown@@QAE@PB_WPAUIUnknown@@@Z	; CUnknown::CUnknown
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0CBaseDispatch@@QAE@XZ		; CBaseDispatch::CBaseDispatch
; Line 375
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CMediaPosition@@QAE@PB_WPAUIUnknown@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1CUnknown@@UAE@XZ			; CUnknown::~CUnknown
__ehhandler$??0CMediaPosition@@QAE@PB_WPAUIUnknown@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CMediaPosition@@QAE@PB_WPAUIUnknown@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CMediaPosition@@QAE@PB_WPAUIUnknown@@@Z ENDP		; CMediaPosition::CMediaPosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IMediaPosition@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IMediaPosition@@QAE@XZ PROC				; IMediaPosition::IMediaPosition, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IDispatch@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IMediaPosition@@QAE@XZ ENDP				; IMediaPosition::IMediaPosition
_TEXT	ENDS
PUBLIC	??0CMediaPosition@@QAE@PB_WPAUIUnknown@@PAJ@Z	; CMediaPosition::CMediaPosition
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CMediaPosition@@QAE@PB_WPAUIUnknown@@PAJ@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CMediaPosition@@QAE@PB_WPAUIUnknown@@PAJ@Z$0
__ehfuncinfo$??0CMediaPosition@@QAE@PB_WPAUIUnknown@@PAJ@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CMediaPosition@@QAE@PB_WPAUIUnknown@@PAJ@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CMediaPosition@@QAE@PB_WPAUIUnknown@@PAJ@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
_pUnk$ = 12						; size = 4
_phr$ = 16						; size = 4
??0CMediaPosition@@QAE@PB_WPAUIUnknown@@PAJ@Z PROC	; CMediaPosition::CMediaPosition, COMDAT
; _this$ = ecx
; Line 381
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CMediaPosition@@QAE@PB_WPAUIUnknown@@PAJ@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IMediaPosition@@QAE@XZ
	mov	eax, DWORD PTR _pUnk$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CUnknown@@QAE@PB_WPAUIUnknown@@@Z	; CUnknown::CUnknown
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0CBaseDispatch@@QAE@XZ		; CBaseDispatch::CBaseDispatch
; Line 383
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CMediaPosition@@QAE@PB_WPAUIUnknown@@PAJ@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1CUnknown@@UAE@XZ			; CUnknown::~CUnknown
__ehhandler$??0CMediaPosition@@QAE@PB_WPAUIUnknown@@PAJ@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CMediaPosition@@QAE@PB_WPAUIUnknown@@PAJ@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CMediaPosition@@QAE@PB_WPAUIUnknown@@PAJ@Z ENDP	; CMediaPosition::CMediaPosition
PUBLIC	?NonDelegatingQueryInterface@CMediaPosition@@UAGJABU_GUID@@PAPAX@Z ; CMediaPosition::NonDelegatingQueryInterface
EXTRN	_IID_IMediaPosition:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?NonDelegatingQueryInterface@CMediaPosition@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?NonDelegatingQueryInterface@CMediaPosition@@UAGJABU_GUID@@PAPAX@Z PROC ; CMediaPosition::NonDelegatingQueryInterface, COMDAT
; Line 390
	push	ebp
	mov	ebp, esp
	push	esi
; Line 391
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN4@NonDelegat@3
	push	391					; 00000187H
	push	OFFSET $SG81865
	push	OFFSET $SG81866
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN4@NonDelegat@3:
	mov	esi, esp
	push	4
	mov	ecx, DWORD PTR _ppv$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsBadWritePtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@NonDelegat@3
	push	391					; 00000187H
	push	OFFSET $SG81870
	push	OFFSET $SG81871
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN3@NonDelegat@3:
; Line 392
	push	OFFSET _IID_IMediaPosition
	mov	edx, DWORD PTR _riid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@NonDelegat@3
; Line 393
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	push	ecx
	call	_GetInterface@8
	jmp	SHORT $LN5@NonDelegat@3
; Line 394
	jmp	SHORT $LN5@NonDelegat@3
$LN2@NonDelegat@3:
; Line 395
	mov	edx, DWORD PTR _ppv$[ebp]
	push	edx
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?NonDelegatingQueryInterface@CUnknown@@UAGJABU_GUID@@PAPAX@Z ; CUnknown::NonDelegatingQueryInterface
$LN5@NonDelegat@3:
; Line 397
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?NonDelegatingQueryInterface@CMediaPosition@@UAGJABU_GUID@@PAPAX@Z ENDP ; CMediaPosition::NonDelegatingQueryInterface
_TEXT	ENDS
PUBLIC	?GetTypeInfoCount@CMediaPosition@@UAGJPAI@Z	; CMediaPosition::GetTypeInfoCount
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTypeInfoCount@CMediaPosition@@UAGJPAI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pctinfo$ = 12						; size = 4
?GetTypeInfoCount@CMediaPosition@@UAGJPAI@Z PROC	; CMediaPosition::GetTypeInfoCount, COMDAT
; Line 404
	push	ebp
	mov	ebp, esp
; Line 405
	mov	eax, DWORD PTR _pctinfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	?GetTypeInfoCount@CBaseDispatch@@QAGJPAI@Z ; CBaseDispatch::GetTypeInfoCount
; Line 406
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?GetTypeInfoCount@CMediaPosition@@UAGJPAI@Z ENDP	; CMediaPosition::GetTypeInfoCount
_TEXT	ENDS
PUBLIC	?GetTypeInfo@CMediaPosition@@UAGJIKPAPAUITypeInfo@@@Z ; CMediaPosition::GetTypeInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTypeInfo@CMediaPosition@@UAGJIKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_itinfo$ = 12						; size = 4
_lcid$ = 16						; size = 4
_pptinfo$ = 20						; size = 4
?GetTypeInfo@CMediaPosition@@UAGJIKPAPAUITypeInfo@@@Z PROC ; CMediaPosition::GetTypeInfo, COMDAT
; Line 416
	push	ebp
	mov	ebp, esp
; Line 421
	mov	eax, DWORD PTR _pptinfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lcid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _itinfo$[ebp]
	push	edx
	push	OFFSET _IID_IMediaPosition
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	?GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z ; CBaseDispatch::GetTypeInfo
; Line 422
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
?GetTypeInfo@CMediaPosition@@UAGJIKPAPAUITypeInfo@@@Z ENDP ; CMediaPosition::GetTypeInfo
_TEXT	ENDS
PUBLIC	?GetIDsOfNames@CMediaPosition@@UAGJABU_GUID@@PAPA_WIKPAJ@Z ; CMediaPosition::GetIDsOfNames
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetIDsOfNames@CMediaPosition@@UAGJABU_GUID@@PAPA_WIKPAJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_rgszNames$ = 16					; size = 4
_cNames$ = 20						; size = 4
_lcid$ = 24						; size = 4
_rgdispid$ = 28						; size = 4
?GetIDsOfNames@CMediaPosition@@UAGJABU_GUID@@PAPA_WIKPAJ@Z PROC ; CMediaPosition::GetIDsOfNames, COMDAT
; Line 432
	push	ebp
	mov	ebp, esp
; Line 438
	mov	eax, DWORD PTR _rgdispid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lcid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cNames$[ebp]
	push	edx
	mov	eax, DWORD PTR _rgszNames$[ebp]
	push	eax
	push	OFFSET _IID_IMediaPosition
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	?GetIDsOfNames@CBaseDispatch@@QAGJABU_GUID@@PAPA_WIKPAJ@Z ; CBaseDispatch::GetIDsOfNames
; Line 439
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	24					; 00000018H
?GetIDsOfNames@CMediaPosition@@UAGJABU_GUID@@PAPA_WIKPAJ@Z ENDP ; CMediaPosition::GetIDsOfNames
_TEXT	ENDS
PUBLIC	?Invoke@CMediaPosition@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ; CMediaPosition::Invoke
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Invoke@CMediaPosition@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pti$ = -8						; size = 4
_this$ = 8						; size = 4
_dispidMember$ = 12					; size = 4
_riid$ = 16						; size = 4
_lcid$ = 20						; size = 4
_wFlags$ = 24						; size = 2
_pdispparams$ = 28					; size = 4
_pvarResult$ = 32					; size = 4
_pexcepinfo$ = 36					; size = 4
_puArgErr$ = 40						; size = 4
?Invoke@CMediaPosition@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z PROC ; CMediaPosition::Invoke, COMDAT
; Line 452
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 454
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	push	OFFSET _GUID_NULL
	call	_!=@8
	test	eax, eax
	je	SHORT $LN2@Invoke@3
; Line 455
	mov	eax, -2147352575			; 80020001H
	jmp	$LN3@Invoke@3
$LN2@Invoke@3:
; Line 459
	mov	esi, esp
	lea	ecx, DWORD PTR _pti$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lcid$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 461
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@Invoke@3
; Line 462
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN3@Invoke@3
$LN1@Invoke@3:
; Line 472
	mov	esi, esp
	mov	ecx, DWORD PTR _puArgErr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pexcepinfo$[ebp]
	push	edx
	mov	eax, DWORD PTR _pvarResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pdispparams$[ebp]
	push	ecx
	movzx	edx, WORD PTR _wFlags$[ebp]
	push	edx
	mov	eax, DWORD PTR _dispidMember$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pti$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pti$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 474
	mov	eax, DWORD PTR _pti$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pti$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 475
	mov	eax, DWORD PTR _hr$[ebp]
$LN3@Invoke@3:
; Line 476
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Invoke@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
	npad	2
$LN7@Invoke@3:
	DD	1
	DD	$LN6@Invoke@3
$LN6@Invoke@3:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@Invoke@3
$LN5@Invoke@3:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	0
?Invoke@CMediaPosition@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ENDP ; CMediaPosition::Invoke
_TEXT	ENDS
PUBLIC	??_7CPosPassThru@@6BCUnknown@@@			; CPosPassThru::`vftable'
PUBLIC	??_7CPosPassThru@@6BIMediaPosition@@@		; CPosPassThru::`vftable'
PUBLIC	??_7CPosPassThru@@6B@				; CPosPassThru::`vftable'
PUBLIC	??0IMediaSeeking@@QAE@XZ			; IMediaSeeking::IMediaSeeking
PUBLIC	??0CPosPassThru@@QAE@PB_WPAUIUnknown@@PAJPAUIPin@@@Z ; CPosPassThru::CPosPassThru
PUBLIC	??_R4CPosPassThru@@6B@				; CPosPassThru::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCPosPassThru@@@8			; CPosPassThru `RTTI Type Descriptor'
PUBLIC	??_R3CPosPassThru@@8				; CPosPassThru::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CPosPassThru@@8				; CPosPassThru::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CPosPassThru@@8			; CPosPassThru::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IMediaSeeking@@8			; IMediaSeeking::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIMediaSeeking@@@8			; IMediaSeeking `RTTI Type Descriptor'
PUBLIC	??_R3IMediaSeeking@@8				; IMediaSeeking::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IMediaSeeking@@8				; IMediaSeeking::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
PUBLIC	??_R13?0A@EA@CMediaPosition@@8			; CMediaPosition::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVCMediaPosition@@@8			; CMediaPosition `RTTI Type Descriptor'
PUBLIC	??_R3CMediaPosition@@8				; CMediaPosition::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CMediaPosition@@8				; CMediaPosition::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CMediaPosition@@8			; CMediaPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IMediaPosition@@8			; IMediaPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIMediaPosition@@@8			; IMediaPosition `RTTI Type Descriptor'
PUBLIC	??_R3IMediaPosition@@8				; IMediaPosition::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IMediaPosition@@8				; IMediaPosition::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IDispatch@@8			; IDispatch::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIDispatch@@@8				; IDispatch `RTTI Type Descriptor'
PUBLIC	??_R3IDispatch@@8				; IDispatch::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IDispatch@@8				; IDispatch::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@CUnknown@@8			; CUnknown::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVCUnknown@@@8				; CUnknown `RTTI Type Descriptor'
PUBLIC	??_R3CUnknown@@8				; CUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CUnknown@@8				; CUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CUnknown@@8			; CUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@INonDelegatingUnknown@@8		; INonDelegatingUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUINonDelegatingUnknown@@@8		; INonDelegatingUnknown `RTTI Type Descriptor'
PUBLIC	??_R3INonDelegatingUnknown@@8			; INonDelegatingUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2INonDelegatingUnknown@@8			; INonDelegatingUnknown::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@CBaseObject@@8			; CBaseObject::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVCBaseObject@@@8				; CBaseObject `RTTI Type Descriptor'
PUBLIC	??_R3CBaseObject@@8				; CBaseObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseObject@@8				; CBaseObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseObject@@8			; CBaseObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@INonDelegatingUnknown@@8		; INonDelegatingUnknown::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R17?0A@EA@CBaseObject@@8			; CBaseObject::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R13?0A@EA@IMediaPosition@@8			; IMediaPosition::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R13?0A@EA@IDispatch@@8			; IDispatch::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R13?0A@EC@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
PUBLIC	??_R17?0A@EA@CUnknown@@8			; CUnknown::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R17?0A@EA@INonDelegatingUnknown@@8		; INonDelegatingUnknown::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R1M@?0A@EA@CBaseObject@@8			; CBaseObject::`RTTI Base Class Descriptor at (12,-1,0,64)'
PUBLIC	?QueryInterface@CPosPassThru@@UAGJABU_GUID@@PAPAX@Z ; CPosPassThru::QueryInterface
PUBLIC	?AddRef@CPosPassThru@@UAGKXZ			; CPosPassThru::AddRef
PUBLIC	?Release@CPosPassThru@@UAGKXZ			; CPosPassThru::Release
PUBLIC	?GetCapabilities@CPosPassThru@@UAGJPAK@Z	; CPosPassThru::GetCapabilities
PUBLIC	?CheckCapabilities@CPosPassThru@@UAGJPAK@Z	; CPosPassThru::CheckCapabilities
PUBLIC	?IsFormatSupported@CPosPassThru@@UAGJPBU_GUID@@@Z ; CPosPassThru::IsFormatSupported
PUBLIC	?QueryPreferredFormat@CPosPassThru@@UAGJPAU_GUID@@@Z ; CPosPassThru::QueryPreferredFormat
PUBLIC	?GetTimeFormatW@CPosPassThru@@UAGJPAU_GUID@@@Z	; CPosPassThru::GetTimeFormatW
PUBLIC	?IsUsingTimeFormat@CPosPassThru@@UAGJPBU_GUID@@@Z ; CPosPassThru::IsUsingTimeFormat
PUBLIC	?SetTimeFormat@CPosPassThru@@UAGJPBU_GUID@@@Z	; CPosPassThru::SetTimeFormat
PUBLIC	?GetDuration@CPosPassThru@@UAGJPA_J@Z		; CPosPassThru::GetDuration
PUBLIC	?GetStopPosition@CPosPassThru@@UAGJPA_J@Z	; CPosPassThru::GetStopPosition
PUBLIC	?GetCurrentPosition@CPosPassThru@@UAGJPA_J@Z	; CPosPassThru::GetCurrentPosition
PUBLIC	?ConvertTimeFormat@CPosPassThru@@UAGJPA_JPBU_GUID@@_J1@Z ; CPosPassThru::ConvertTimeFormat
PUBLIC	?SetPositions@CPosPassThru@@UAGJPA_JK0K@Z	; CPosPassThru::SetPositions
PUBLIC	?GetPositions@CPosPassThru@@UAGJPA_J0@Z		; CPosPassThru::GetPositions
PUBLIC	?GetAvailable@CPosPassThru@@UAGJPA_J0@Z		; CPosPassThru::GetAvailable
PUBLIC	?SetRate@CPosPassThru@@UAGJN@Z			; CPosPassThru::SetRate
PUBLIC	?GetRate@CPosPassThru@@UAGJPAN@Z		; CPosPassThru::GetRate
PUBLIC	?GetPreroll@CPosPassThru@@UAGJPA_J@Z		; CPosPassThru::GetPreroll
PUBLIC	?GetMediaTime@CPosPassThru@@UAEJPA_J0@Z		; CPosPassThru::GetMediaTime
PUBLIC	??_R4CPosPassThru@@6BIMediaPosition@@@		; CPosPassThru::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CPosPassThru@@W3AGJABU_GUID@@PAPAX@Z ; [thunk]:CPosPassThru::QueryInterface`adjustor{4}'
PUBLIC	?AddRef@CPosPassThru@@W3AGKXZ			; [thunk]:CPosPassThru::AddRef`adjustor{4}'
PUBLIC	?Release@CPosPassThru@@W3AGKXZ			; [thunk]:CPosPassThru::Release`adjustor{4}'
PUBLIC	?get_Duration@CPosPassThru@@UAGJPAN@Z		; CPosPassThru::get_Duration
PUBLIC	?put_CurrentPosition@CPosPassThru@@UAGJN@Z	; CPosPassThru::put_CurrentPosition
PUBLIC	?get_CurrentPosition@CPosPassThru@@UAGJPAN@Z	; CPosPassThru::get_CurrentPosition
PUBLIC	?get_StopTime@CPosPassThru@@UAGJPAN@Z		; CPosPassThru::get_StopTime
PUBLIC	?put_StopTime@CPosPassThru@@UAGJN@Z		; CPosPassThru::put_StopTime
PUBLIC	?get_PrerollTime@CPosPassThru@@UAGJPAN@Z	; CPosPassThru::get_PrerollTime
PUBLIC	?put_PrerollTime@CPosPassThru@@UAGJN@Z		; CPosPassThru::put_PrerollTime
PUBLIC	?put_Rate@CPosPassThru@@UAGJN@Z			; CPosPassThru::put_Rate
PUBLIC	?get_Rate@CPosPassThru@@UAGJPAN@Z		; CPosPassThru::get_Rate
PUBLIC	?CanSeekForward@CPosPassThru@@UAGJPAJ@Z		; CPosPassThru::CanSeekForward
PUBLIC	?CanSeekBackward@CPosPassThru@@UAGJPAJ@Z	; CPosPassThru::CanSeekBackward
PUBLIC	??_R4CPosPassThru@@6BCUnknown@@@		; CPosPassThru::`RTTI Complete Object Locator'
PUBLIC	?NonDelegatingQueryInterface@CPosPassThru@@UAGJABU_GUID@@PAPAX@Z ; CPosPassThru::NonDelegatingQueryInterface
PUBLIC	??_ECPosPassThru@@W7AEPAXI@Z			; [thunk]:CPosPassThru::`vector deleting destructor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?NonDelegatingAddRef@CUnknown@@UAGKXZ:PROC	; CUnknown::NonDelegatingAddRef
EXTRN	?NonDelegatingRelease@CUnknown@@UAGKXZ:PROC	; CUnknown::NonDelegatingRelease
;	COMDAT ??_R4CPosPassThru@@6BCUnknown@@@
rdata$r	SEGMENT
??_R4CPosPassThru@@6BCUnknown@@@ DD 00H			; CPosPassThru::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCPosPassThru@@@8
	DD	FLAT:??_R3CPosPassThru@@8
rdata$r	ENDS
;	COMDAT ??_R4CPosPassThru@@6BIMediaPosition@@@
rdata$r	SEGMENT
??_R4CPosPassThru@@6BIMediaPosition@@@ DD 00H		; CPosPassThru::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCPosPassThru@@@8
	DD	FLAT:??_R3CPosPassThru@@8
rdata$r	ENDS
;	COMDAT ??_R1M@?0A@EA@CBaseObject@@8
rdata$r	SEGMENT
??_R1M@?0A@EA@CBaseObject@@8 DD FLAT:??_R0?AVCBaseObject@@@8 ; CBaseObject::`RTTI Base Class Descriptor at (12,-1,0,64)'
	DD	00H
	DD	0cH
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R17?0A@EA@INonDelegatingUnknown@@8 DD FLAT:??_R0?AUINonDelegatingUnknown@@@8 ; INonDelegatingUnknown::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3INonDelegatingUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@CUnknown@@8
rdata$r	SEGMENT
??_R17?0A@EA@CUnknown@@8 DD FLAT:??_R0?AVCUnknown@@@8	; CUnknown::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	02H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R13?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (4,-1,0,66)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@IDispatch@@8
rdata$r	SEGMENT
??_R13?0A@EA@IDispatch@@8 DD FLAT:??_R0?AUIDispatch@@@8	; IDispatch::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDispatch@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@IMediaPosition@@8
rdata$r	SEGMENT
??_R13?0A@EA@IMediaPosition@@8 DD FLAT:??_R0?AUIMediaPosition@@@8 ; IMediaPosition::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	02H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IMediaPosition@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@CBaseObject@@8
rdata$r	SEGMENT
??_R17?0A@EA@CBaseObject@@8 DD FLAT:??_R0?AVCBaseObject@@@8 ; CBaseObject::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R13?0A@EA@INonDelegatingUnknown@@8 DD FLAT:??_R0?AUINonDelegatingUnknown@@@8 ; INonDelegatingUnknown::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3INonDelegatingUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseObject@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseObject@@8 DD FLAT:??_R0?AVCBaseObject@@@8 ; CBaseObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseObject@@8
rdata$r	SEGMENT
??_R2CBaseObject@@8 DD FLAT:??_R1A@?0A@EA@CBaseObject@@8 ; CBaseObject::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CBaseObject@@8
rdata$r	SEGMENT
??_R3CBaseObject@@8 DD 00H				; CBaseObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseObject@@@8
_DATA	SEGMENT
??_R0?AVCBaseObject@@@8 DD FLAT:??_7type_info@@6B@	; CBaseObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseObject@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@CBaseObject@@8
rdata$r	SEGMENT
??_R13?0A@EA@CBaseObject@@8 DD FLAT:??_R0?AVCBaseObject@@@8 ; CBaseObject::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R2INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R2INonDelegatingUnknown@@8 DD FLAT:??_R1A@?0A@EA@INonDelegatingUnknown@@8 ; INonDelegatingUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R3INonDelegatingUnknown@@8 DD 00H			; INonDelegatingUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2INonDelegatingUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUINonDelegatingUnknown@@@8
_DATA	SEGMENT
??_R0?AUINonDelegatingUnknown@@@8 DD FLAT:??_7type_info@@6B@ ; INonDelegatingUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUINonDelegatingUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@INonDelegatingUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@INonDelegatingUnknown@@8 DD FLAT:??_R0?AUINonDelegatingUnknown@@@8 ; INonDelegatingUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3INonDelegatingUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CUnknown@@8 DD FLAT:??_R0?AVCUnknown@@@8	; CUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2CUnknown@@8
rdata$r	SEGMENT
??_R2CUnknown@@8 DD FLAT:??_R1A@?0A@EA@CUnknown@@8	; CUnknown::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	FLAT:??_R13?0A@EA@CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CUnknown@@8
rdata$r	SEGMENT
??_R3CUnknown@@8 DD 00H					; CUnknown::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2CUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCUnknown@@@8
_DATA	SEGMENT
??_R0?AVCUnknown@@@8 DD FLAT:??_7type_info@@6B@		; CUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@CUnknown@@8
rdata$r	SEGMENT
??_R13?0A@EA@CUnknown@@8 DD FLAT:??_R0?AVCUnknown@@@8	; CUnknown::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	02H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IDispatch@@8
rdata$r	SEGMENT
??_R2IDispatch@@8 DD FLAT:??_R1A@?0A@EA@IDispatch@@8	; IDispatch::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IDispatch@@8
rdata$r	SEGMENT
??_R3IDispatch@@8 DD 00H				; IDispatch::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IDispatch@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIDispatch@@@8
_DATA	SEGMENT
??_R0?AUIDispatch@@@8 DD FLAT:??_7type_info@@6B@	; IDispatch `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIDispatch@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IDispatch@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IDispatch@@8 DD FLAT:??_R0?AUIDispatch@@@8 ; IDispatch::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDispatch@@8
rdata$r	ENDS
;	COMDAT ??_R2IMediaPosition@@8
rdata$r	SEGMENT
??_R2IMediaPosition@@8 DD FLAT:??_R1A@?0A@EA@IMediaPosition@@8 ; IMediaPosition::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IDispatch@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IMediaPosition@@8
rdata$r	SEGMENT
??_R3IMediaPosition@@8 DD 00H				; IMediaPosition::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2IMediaPosition@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIMediaPosition@@@8
_DATA	SEGMENT
??_R0?AUIMediaPosition@@@8 DD FLAT:??_7type_info@@6B@	; IMediaPosition `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIMediaPosition@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IMediaPosition@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IMediaPosition@@8 DD FLAT:??_R0?AUIMediaPosition@@@8 ; IMediaPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IMediaPosition@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CMediaPosition@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CMediaPosition@@8 DD FLAT:??_R0?AVCMediaPosition@@@8 ; CMediaPosition::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	06H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMediaPosition@@8
rdata$r	ENDS
;	COMDAT ??_R2CMediaPosition@@8
rdata$r	SEGMENT
??_R2CMediaPosition@@8 DD FLAT:??_R1A@?0A@EA@CMediaPosition@@8 ; CMediaPosition::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IMediaPosition@@8
	DD	FLAT:??_R1A@?0A@EA@IDispatch@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@CUnknown@@8
	DD	FLAT:??_R13?0A@EA@INonDelegatingUnknown@@8
	DD	FLAT:??_R17?0A@EA@CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CMediaPosition@@8
rdata$r	SEGMENT
??_R3CMediaPosition@@8 DD 00H				; CMediaPosition::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	07H
	DD	FLAT:??_R2CMediaPosition@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCMediaPosition@@@8
_DATA	SEGMENT
??_R0?AVCMediaPosition@@@8 DD FLAT:??_7type_info@@6B@	; CMediaPosition `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCMediaPosition@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@CMediaPosition@@8
rdata$r	SEGMENT
??_R13?0A@EA@CMediaPosition@@8 DD FLAT:??_R0?AVCMediaPosition@@@8 ; CMediaPosition::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	06H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CMediaPosition@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EC@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EC@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,66)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IUnknown@@8
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IMediaSeeking@@8
rdata$r	SEGMENT
??_R2IMediaSeeking@@8 DD FLAT:??_R1A@?0A@EA@IMediaSeeking@@8 ; IMediaSeeking::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IMediaSeeking@@8
rdata$r	SEGMENT
??_R3IMediaSeeking@@8 DD 00H				; IMediaSeeking::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IMediaSeeking@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIMediaSeeking@@@8
_DATA	SEGMENT
??_R0?AUIMediaSeeking@@@8 DD FLAT:??_7type_info@@6B@	; IMediaSeeking `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIMediaSeeking@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IMediaSeeking@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IMediaSeeking@@8 DD FLAT:??_R0?AUIMediaSeeking@@@8 ; IMediaSeeking::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IMediaSeeking@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CPosPassThru@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CPosPassThru@@8 DD FLAT:??_R0?AVCPosPassThru@@@8 ; CPosPassThru::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CPosPassThru@@8
rdata$r	ENDS
;	COMDAT ??_R2CPosPassThru@@8
rdata$r	SEGMENT
??_R2CPosPassThru@@8 DD FLAT:??_R1A@?0A@EA@CPosPassThru@@8 ; CPosPassThru::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IMediaSeeking@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@CMediaPosition@@8
	DD	FLAT:??_R13?0A@EA@IMediaPosition@@8
	DD	FLAT:??_R13?0A@EA@IDispatch@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@CUnknown@@8
	DD	FLAT:??_R17?0A@EA@INonDelegatingUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CPosPassThru@@8
rdata$r	SEGMENT
??_R3CPosPassThru@@8 DD 00H				; CPosPassThru::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	0aH
	DD	FLAT:??_R2CPosPassThru@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCPosPassThru@@@8
_DATA	SEGMENT
??_R0?AVCPosPassThru@@@8 DD FLAT:??_7type_info@@6B@	; CPosPassThru `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCPosPassThru@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CPosPassThru@@6B@
rdata$r	SEGMENT
??_R4CPosPassThru@@6B@ DD 00H				; CPosPassThru::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCPosPassThru@@@8
	DD	FLAT:??_R3CPosPassThru@@8
rdata$r	ENDS
;	COMDAT ??_7CPosPassThru@@6BCUnknown@@@
CONST	SEGMENT
??_7CPosPassThru@@6BCUnknown@@@ DD FLAT:??_R4CPosPassThru@@6BCUnknown@@@ ; CPosPassThru::`vftable'
	DD	FLAT:?NonDelegatingQueryInterface@CPosPassThru@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?NonDelegatingAddRef@CUnknown@@UAGKXZ
	DD	FLAT:?NonDelegatingRelease@CUnknown@@UAGKXZ
	DD	FLAT:??_ECPosPassThru@@W7AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CPosPassThru@@6BIMediaPosition@@@
CONST	SEGMENT
??_7CPosPassThru@@6BIMediaPosition@@@ DD FLAT:??_R4CPosPassThru@@6BIMediaPosition@@@ ; CPosPassThru::`vftable'
	DD	FLAT:?QueryInterface@CPosPassThru@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CPosPassThru@@W3AGKXZ
	DD	FLAT:?Release@CPosPassThru@@W3AGKXZ
	DD	FLAT:?GetTypeInfoCount@CMediaPosition@@UAGJPAI@Z
	DD	FLAT:?GetTypeInfo@CMediaPosition@@UAGJIKPAPAUITypeInfo@@@Z
	DD	FLAT:?GetIDsOfNames@CMediaPosition@@UAGJABU_GUID@@PAPA_WIKPAJ@Z
	DD	FLAT:?Invoke@CMediaPosition@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
	DD	FLAT:?get_Duration@CPosPassThru@@UAGJPAN@Z
	DD	FLAT:?put_CurrentPosition@CPosPassThru@@UAGJN@Z
	DD	FLAT:?get_CurrentPosition@CPosPassThru@@UAGJPAN@Z
	DD	FLAT:?get_StopTime@CPosPassThru@@UAGJPAN@Z
	DD	FLAT:?put_StopTime@CPosPassThru@@UAGJN@Z
	DD	FLAT:?get_PrerollTime@CPosPassThru@@UAGJPAN@Z
	DD	FLAT:?put_PrerollTime@CPosPassThru@@UAGJN@Z
	DD	FLAT:?put_Rate@CPosPassThru@@UAGJN@Z
	DD	FLAT:?get_Rate@CPosPassThru@@UAGJPAN@Z
	DD	FLAT:?CanSeekForward@CPosPassThru@@UAGJPAJ@Z
	DD	FLAT:?CanSeekBackward@CPosPassThru@@UAGJPAJ@Z
CONST	ENDS
;	COMDAT ??_7CPosPassThru@@6B@
CONST	SEGMENT
??_7CPosPassThru@@6B@ DD FLAT:??_R4CPosPassThru@@6B@	; CPosPassThru::`vftable'
	DD	FLAT:?QueryInterface@CPosPassThru@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CPosPassThru@@UAGKXZ
	DD	FLAT:?Release@CPosPassThru@@UAGKXZ
	DD	FLAT:?GetCapabilities@CPosPassThru@@UAGJPAK@Z
	DD	FLAT:?CheckCapabilities@CPosPassThru@@UAGJPAK@Z
	DD	FLAT:?IsFormatSupported@CPosPassThru@@UAGJPBU_GUID@@@Z
	DD	FLAT:?QueryPreferredFormat@CPosPassThru@@UAGJPAU_GUID@@@Z
	DD	FLAT:?GetTimeFormatW@CPosPassThru@@UAGJPAU_GUID@@@Z
	DD	FLAT:?IsUsingTimeFormat@CPosPassThru@@UAGJPBU_GUID@@@Z
	DD	FLAT:?SetTimeFormat@CPosPassThru@@UAGJPBU_GUID@@@Z
	DD	FLAT:?GetDuration@CPosPassThru@@UAGJPA_J@Z
	DD	FLAT:?GetStopPosition@CPosPassThru@@UAGJPA_J@Z
	DD	FLAT:?GetCurrentPosition@CPosPassThru@@UAGJPA_J@Z
	DD	FLAT:?ConvertTimeFormat@CPosPassThru@@UAGJPA_JPBU_GUID@@_J1@Z
	DD	FLAT:?SetPositions@CPosPassThru@@UAGJPA_JK0K@Z
	DD	FLAT:?GetPositions@CPosPassThru@@UAGJPA_J0@Z
	DD	FLAT:?GetAvailable@CPosPassThru@@UAGJPA_J0@Z
	DD	FLAT:?SetRate@CPosPassThru@@UAGJN@Z
	DD	FLAT:?GetRate@CPosPassThru@@UAGJPAN@Z
	DD	FLAT:?GetPreroll@CPosPassThru@@UAGJPA_J@Z
	DD	FLAT:?GetMediaTime@CPosPassThru@@UAEJPA_J0@Z
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??0CPosPassThru@@QAE@PB_WPAUIUnknown@@PAJPAUIPin@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pName$ = 8						; size = 4
_pUnk$ = 12						; size = 4
_phr$ = 16						; size = 4
_pPin$ = 20						; size = 4
??0CPosPassThru@@QAE@PB_WPAUIUnknown@@PAJPAUIPin@@@Z PROC ; CPosPassThru::CPosPassThru, COMDAT
; _this$ = ecx
; Line 488
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IMediaSeeking@@QAE@XZ
	mov	eax, DWORD PTR _pUnk$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CMediaPosition@@QAE@PB_WPAUIUnknown@@@Z ; CMediaPosition::CMediaPosition
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7CPosPassThru@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], OFFSET ??_7CPosPassThru@@6BIMediaPosition@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], OFFSET ??_7CPosPassThru@@6BCUnknown@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pPin$[ebp]
	mov	DWORD PTR [edx+28], eax
; Line 489
	cmp	DWORD PTR _pPin$[ebp], 0
	jne	SHORT $LN2@CPosPassTh
; Line 490
	mov	ecx, DWORD PTR _phr$[ebp]
	mov	DWORD PTR [ecx], -2147467261		; 80004003H
$LN2@CPosPassTh:
; Line 493
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0CPosPassThru@@QAE@PB_WPAUIUnknown@@PAJPAUIPin@@@Z ENDP ; CPosPassThru::CPosPassThru
_TEXT	ENDS
PUBLIC	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ		; CUnknown::GetOwner
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryInterface@CPosPassThru@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv71 = -4						; size = 4
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?QueryInterface@CPosPassThru@@UAGJABU_GUID@@PAPAX@Z PROC ; CPosPassThru::QueryInterface, COMDAT
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.h
; Line 309
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv71[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv71[ebp]
	push	edx
	mov	eax, DWORD PTR tv71[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CPosPassThru@@UAGJABU_GUID@@PAPAX@Z ENDP ; CPosPassThru::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ PROC		; CUnknown::GetOwner, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\combase.h
; Line 224
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 225
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 226
	mov	esp, ebp
	pop	ebp
	ret	0
?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ ENDP		; CUnknown::GetOwner
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CPosPassThru@@UAGKXZ
_TEXT	SEGMENT
tv71 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CPosPassThru@@UAGKXZ PROC			; CPosPassThru::AddRef, COMDAT
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.h
; Line 309
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv71[ebp], eax
	mov	eax, DWORD PTR tv71[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv71[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CPosPassThru@@UAGKXZ ENDP			; CPosPassThru::AddRef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CPosPassThru@@UAGKXZ
_TEXT	SEGMENT
tv71 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CPosPassThru@@UAGKXZ PROC			; CPosPassThru::Release, COMDAT
; Line 309
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv71[ebp], eax
	mov	eax, DWORD PTR tv71[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv71[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CPosPassThru@@UAGKXZ ENDP			; CPosPassThru::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetMediaTime@CPosPassThru@@UAEJPA_J0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pStartTime$ = 8					; size = 4
_pEndTime$ = 12						; size = 4
?GetMediaTime@CPosPassThru@@UAEJPA_J0@Z PROC		; CPosPassThru::GetMediaTime, COMDAT
; _this$ = ecx
; Line 316
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 317
	mov	eax, -2147467259			; 80004005H
; Line 318
	mov	esp, ebp
	pop	ebp
	ret	8
?GetMediaTime@CPosPassThru@@UAEJPA_J0@Z ENDP		; CPosPassThru::GetMediaTime
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IMediaSeeking@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IMediaSeeking@@QAE@XZ PROC				; IMediaSeeking::IMediaSeeking, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IMediaSeeking@@QAE@XZ ENDP				; IMediaSeeking::IMediaSeeking
_TEXT	ENDS
EXTRN	_IID_IMediaSeeking:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?NonDelegatingQueryInterface@CPosPassThru@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?NonDelegatingQueryInterface@CPosPassThru@@UAGJABU_GUID@@PAPAX@Z PROC ; CPosPassThru::NonDelegatingQueryInterface, COMDAT
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.cpp
; Line 500
	push	ebp
	mov	ebp, esp
; Line 501
	cmp	DWORD PTR _ppv$[ebp], 0
	jne	SHORT $LN2@NonDelegat@4
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN3@NonDelegat@4
$LN2@NonDelegat@4:
; Line 502
	mov	eax, DWORD PTR _ppv$[ebp]
	mov	DWORD PTR [eax], 0
; Line 504
	push	OFFSET _IID_IMediaSeeking
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN1@NonDelegat@4
; Line 505
	mov	edx, DWORD PTR _ppv$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 8
	push	eax
	call	_GetInterface@8
	jmp	SHORT $LN3@NonDelegat@4
$LN1@NonDelegat@4:
; Line 507
	mov	ecx, DWORD PTR _ppv$[ebp]
	push	ecx
	mov	edx, DWORD PTR _riid$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?NonDelegatingQueryInterface@CMediaPosition@@UAGJABU_GUID@@PAPAX@Z ; CMediaPosition::NonDelegatingQueryInterface
$LN3@NonDelegat@4:
; Line 508
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?NonDelegatingQueryInterface@CPosPassThru@@UAGJABU_GUID@@PAPAX@Z ENDP ; CPosPassThru::NonDelegatingQueryInterface
_TEXT	ENDS
PUBLIC	?GetPeer@CPosPassThru@@AAEJPAPAUIMediaPosition@@@Z ; CPosPassThru::GetPeer
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetPeer@CPosPassThru@@AAEJPAPAUIMediaPosition@@@Z
_TEXT	SEGMENT
_pMP$ = -28						; size = 4
_hr$ = -20						; size = 4
_pConnected$ = -12					; size = 4
_this$ = -4						; size = 4
_ppMP$ = 8						; size = 4
?GetPeer@CPosPassThru@@AAEJPAPAUIMediaPosition@@@Z PROC	; CPosPassThru::GetPeer, COMDAT
; _this$ = ecx
; Line 515
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 516
	mov	eax, DWORD PTR _ppMP$[ebp]
	mov	DWORD PTR [eax], 0
; Line 519
	mov	esi, esp
	lea	ecx, DWORD PTR _pConnected$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 520
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@GetPeer
; Line 521
	mov	eax, -2147467263			; 80004001H
	jmp	SHORT $LN3@GetPeer
$LN2@GetPeer:
; Line 524
	mov	esi, esp
	lea	edx, DWORD PTR _pMP$[ebp]
	push	edx
	push	OFFSET _IID_IMediaPosition
	mov	eax, DWORD PTR _pConnected$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pConnected$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 525
	mov	ecx, DWORD PTR _pConnected$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pConnected$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 526
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@GetPeer
; Line 527
	mov	eax, -2147467263			; 80004001H
	jmp	SHORT $LN3@GetPeer
$LN1@GetPeer:
; Line 530
	mov	edx, DWORD PTR _ppMP$[ebp]
	mov	eax, DWORD PTR _pMP$[ebp]
	mov	DWORD PTR [edx], eax
; Line 531
	xor	eax, eax
$LN3@GetPeer:
; Line 532
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@GetPeer
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN8@GetPeer:
	DD	2
	DD	$LN7@GetPeer
$LN7@GetPeer:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN5@GetPeer
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN6@GetPeer
$LN6@GetPeer:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	80					; 00000050H
	DB	0
$LN5@GetPeer:
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?GetPeer@CPosPassThru@@AAEJPAPAUIMediaPosition@@@Z ENDP	; CPosPassThru::GetPeer
_TEXT	ENDS
PUBLIC	?GetPeerSeeking@CPosPassThru@@AAEJPAPAUIMediaSeeking@@@Z ; CPosPassThru::GetPeerSeeking
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetPeerSeeking@CPosPassThru@@AAEJPAPAUIMediaSeeking@@@Z
_TEXT	SEGMENT
_pMS$ = -28						; size = 4
_hr$ = -20						; size = 4
_pConnected$ = -12					; size = 4
_this$ = -4						; size = 4
_ppMS$ = 8						; size = 4
?GetPeerSeeking@CPosPassThru@@AAEJPAPAUIMediaSeeking@@@Z PROC ; CPosPassThru::GetPeerSeeking, COMDAT
; _this$ = ecx
; Line 539
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 540
	mov	eax, DWORD PTR _ppMS$[ebp]
	mov	DWORD PTR [eax], 0
; Line 543
	mov	esi, esp
	lea	ecx, DWORD PTR _pConnected$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 544
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@GetPeerSee
; Line 545
	mov	eax, -2147467263			; 80004001H
	jmp	SHORT $LN3@GetPeerSee
$LN2@GetPeerSee:
; Line 548
	mov	esi, esp
	lea	edx, DWORD PTR _pMS$[ebp]
	push	edx
	push	OFFSET _IID_IMediaSeeking
	mov	eax, DWORD PTR _pConnected$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pConnected$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 549
	mov	ecx, DWORD PTR _pConnected$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pConnected$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 550
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@GetPeerSee
; Line 551
	mov	eax, -2147467263			; 80004001H
	jmp	SHORT $LN3@GetPeerSee
$LN1@GetPeerSee:
; Line 554
	mov	edx, DWORD PTR _ppMS$[ebp]
	mov	eax, DWORD PTR _pMS$[ebp]
	mov	DWORD PTR [edx], eax
; Line 555
	xor	eax, eax
$LN3@GetPeerSee:
; Line 556
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@GetPeerSee
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN8@GetPeerSee:
	DD	2
	DD	$LN7@GetPeerSee
$LN7@GetPeerSee:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN5@GetPeerSee
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN6@GetPeerSee
$LN6@GetPeerSee:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	83					; 00000053H
	DB	0
$LN5@GetPeerSee:
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?GetPeerSeeking@CPosPassThru@@AAEJPAPAUIMediaSeeking@@@Z ENDP ; CPosPassThru::GetPeerSeeking
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetCapabilities@CPosPassThru@@UAGJPAK@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMS$ = -8						; size = 4
_this$ = 8						; size = 4
_pCaps$ = 12						; size = 4
?GetCapabilities@CPosPassThru@@UAGJPAK@Z PROC		; CPosPassThru::GetCapabilities, COMDAT
; Line 564
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 566
	lea	eax, DWORD PTR _pMS$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPeerSeeking@CPosPassThru@@AAEJPAPAUIMediaSeeking@@@Z ; CPosPassThru::GetPeerSeeking
	mov	DWORD PTR _hr$[ebp], eax
; Line 567
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@GetCapabil
; Line 568
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@GetCapabil
$LN1@GetCapabil:
; Line 571
	mov	esi, esp
	mov	ecx, DWORD PTR _pCaps$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMS$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pMS$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 572
	mov	eax, DWORD PTR _pMS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pMS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 573
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@GetCapabil:
; Line 574
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetCapabil
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN6@GetCapabil:
	DD	1
	DD	$LN5@GetCapabil
$LN5@GetCapabil:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@GetCapabil
$LN4@GetCapabil:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	83					; 00000053H
	DB	0
?GetCapabilities@CPosPassThru@@UAGJPAK@Z ENDP		; CPosPassThru::GetCapabilities
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?CheckCapabilities@CPosPassThru@@UAGJPAK@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMS$ = -8						; size = 4
_this$ = 8						; size = 4
_pCaps$ = 12						; size = 4
?CheckCapabilities@CPosPassThru@@UAGJPAK@Z PROC		; CPosPassThru::CheckCapabilities, COMDAT
; Line 578
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 580
	lea	eax, DWORD PTR _pMS$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPeerSeeking@CPosPassThru@@AAEJPAPAUIMediaSeeking@@@Z ; CPosPassThru::GetPeerSeeking
	mov	DWORD PTR _hr$[ebp], eax
; Line 581
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CheckCapab
; Line 582
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@CheckCapab
$LN1@CheckCapab:
; Line 585
	mov	esi, esp
	mov	ecx, DWORD PTR _pCaps$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMS$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pMS$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 586
	mov	eax, DWORD PTR _pMS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pMS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 587
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@CheckCapab:
; Line 588
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@CheckCapab
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN6@CheckCapab:
	DD	1
	DD	$LN5@CheckCapab
$LN5@CheckCapab:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@CheckCapab
$LN4@CheckCapab:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	83					; 00000053H
	DB	0
?CheckCapabilities@CPosPassThru@@UAGJPAK@Z ENDP		; CPosPassThru::CheckCapabilities
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsFormatSupported@CPosPassThru@@UAGJPBU_GUID@@@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMS$ = -8						; size = 4
_this$ = 8						; size = 4
_pFormat$ = 12						; size = 4
?IsFormatSupported@CPosPassThru@@UAGJPBU_GUID@@@Z PROC	; CPosPassThru::IsFormatSupported, COMDAT
; Line 592
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 594
	lea	eax, DWORD PTR _pMS$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPeerSeeking@CPosPassThru@@AAEJPAPAUIMediaSeeking@@@Z ; CPosPassThru::GetPeerSeeking
	mov	DWORD PTR _hr$[ebp], eax
; Line 595
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@IsFormatSu
; Line 596
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@IsFormatSu
$LN1@IsFormatSu:
; Line 599
	mov	esi, esp
	mov	ecx, DWORD PTR _pFormat$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMS$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pMS$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 600
	mov	eax, DWORD PTR _pMS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pMS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 601
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@IsFormatSu:
; Line 602
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@IsFormatSu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN6@IsFormatSu:
	DD	1
	DD	$LN5@IsFormatSu
$LN5@IsFormatSu:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@IsFormatSu
$LN4@IsFormatSu:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	83					; 00000053H
	DB	0
?IsFormatSupported@CPosPassThru@@UAGJPBU_GUID@@@Z ENDP	; CPosPassThru::IsFormatSupported
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryPreferredFormat@CPosPassThru@@UAGJPAU_GUID@@@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMS$ = -8						; size = 4
_this$ = 8						; size = 4
_pFormat$ = 12						; size = 4
?QueryPreferredFormat@CPosPassThru@@UAGJPAU_GUID@@@Z PROC ; CPosPassThru::QueryPreferredFormat, COMDAT
; Line 607
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 609
	lea	eax, DWORD PTR _pMS$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPeerSeeking@CPosPassThru@@AAEJPAPAUIMediaSeeking@@@Z ; CPosPassThru::GetPeerSeeking
	mov	DWORD PTR _hr$[ebp], eax
; Line 610
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@QueryPrefe
; Line 611
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@QueryPrefe
$LN1@QueryPrefe:
; Line 614
	mov	esi, esp
	mov	ecx, DWORD PTR _pFormat$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMS$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pMS$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 615
	mov	eax, DWORD PTR _pMS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pMS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 616
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@QueryPrefe:
; Line 617
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@QueryPrefe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN6@QueryPrefe:
	DD	1
	DD	$LN5@QueryPrefe
$LN5@QueryPrefe:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@QueryPrefe
$LN4@QueryPrefe:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	83					; 00000053H
	DB	0
?QueryPreferredFormat@CPosPassThru@@UAGJPAU_GUID@@@Z ENDP ; CPosPassThru::QueryPreferredFormat
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetTimeFormat@CPosPassThru@@UAGJPBU_GUID@@@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMS$ = -8						; size = 4
_this$ = 8						; size = 4
_pFormat$ = 12						; size = 4
?SetTimeFormat@CPosPassThru@@UAGJPBU_GUID@@@Z PROC	; CPosPassThru::SetTimeFormat, COMDAT
; Line 622
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 624
	lea	eax, DWORD PTR _pMS$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPeerSeeking@CPosPassThru@@AAEJPAPAUIMediaSeeking@@@Z ; CPosPassThru::GetPeerSeeking
	mov	DWORD PTR _hr$[ebp], eax
; Line 625
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@SetTimeFor
; Line 626
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@SetTimeFor
$LN1@SetTimeFor:
; Line 629
	mov	esi, esp
	mov	ecx, DWORD PTR _pFormat$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMS$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pMS$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+36]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 630
	mov	eax, DWORD PTR _pMS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pMS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 631
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@SetTimeFor:
; Line 632
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetTimeFor
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN6@SetTimeFor:
	DD	1
	DD	$LN5@SetTimeFor
$LN5@SetTimeFor:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@SetTimeFor
$LN4@SetTimeFor:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	83					; 00000053H
	DB	0
?SetTimeFormat@CPosPassThru@@UAGJPBU_GUID@@@Z ENDP	; CPosPassThru::SetTimeFormat
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetTimeFormatW@CPosPassThru@@UAGJPAU_GUID@@@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMS$ = -8						; size = 4
_this$ = 8						; size = 4
_pFormat$ = 12						; size = 4
?GetTimeFormatW@CPosPassThru@@UAGJPAU_GUID@@@Z PROC	; CPosPassThru::GetTimeFormatW, COMDAT
; Line 637
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 639
	lea	eax, DWORD PTR _pMS$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPeerSeeking@CPosPassThru@@AAEJPAPAUIMediaSeeking@@@Z ; CPosPassThru::GetPeerSeeking
	mov	DWORD PTR _hr$[ebp], eax
; Line 640
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@GetTimeFor
; Line 641
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@GetTimeFor
$LN1@GetTimeFor:
; Line 644
	mov	esi, esp
	mov	ecx, DWORD PTR _pFormat$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMS$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pMS$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 645
	mov	eax, DWORD PTR _pMS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pMS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 646
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@GetTimeFor:
; Line 647
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetTimeFor
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN6@GetTimeFor:
	DD	1
	DD	$LN5@GetTimeFor
$LN5@GetTimeFor:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@GetTimeFor
$LN4@GetTimeFor:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	83					; 00000053H
	DB	0
?GetTimeFormatW@CPosPassThru@@UAGJPAU_GUID@@@Z ENDP	; CPosPassThru::GetTimeFormatW
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsUsingTimeFormat@CPosPassThru@@UAGJPBU_GUID@@@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMS$ = -8						; size = 4
_this$ = 8						; size = 4
_pFormat$ = 12						; size = 4
?IsUsingTimeFormat@CPosPassThru@@UAGJPBU_GUID@@@Z PROC	; CPosPassThru::IsUsingTimeFormat, COMDAT
; Line 652
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 654
	lea	eax, DWORD PTR _pMS$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPeerSeeking@CPosPassThru@@AAEJPAPAUIMediaSeeking@@@Z ; CPosPassThru::GetPeerSeeking
	mov	DWORD PTR _hr$[ebp], eax
; Line 655
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@IsUsingTim
; Line 656
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@IsUsingTim
$LN1@IsUsingTim:
; Line 659
	mov	esi, esp
	mov	ecx, DWORD PTR _pFormat$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMS$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pMS$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+32]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 660
	mov	eax, DWORD PTR _pMS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pMS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 661
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@IsUsingTim:
; Line 662
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@IsUsingTim
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN6@IsUsingTim:
	DD	1
	DD	$LN5@IsUsingTim
$LN5@IsUsingTim:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@IsUsingTim
$LN4@IsUsingTim:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	83					; 00000053H
	DB	0
?IsUsingTimeFormat@CPosPassThru@@UAGJPBU_GUID@@@Z ENDP	; CPosPassThru::IsUsingTimeFormat
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?ConvertTimeFormat@CPosPassThru@@UAGJPA_JPBU_GUID@@_J1@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMS$ = -8						; size = 4
_this$ = 8						; size = 4
_pTarget$ = 12						; size = 4
_pTargetFormat$ = 16					; size = 4
_Source$ = 20						; size = 8
_pSourceFormat$ = 28					; size = 4
?ConvertTimeFormat@CPosPassThru@@UAGJPA_JPBU_GUID@@_J1@Z PROC ; CPosPassThru::ConvertTimeFormat, COMDAT
; Line 668
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 670
	lea	eax, DWORD PTR _pMS$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPeerSeeking@CPosPassThru@@AAEJPAPAUIMediaSeeking@@@Z ; CPosPassThru::GetPeerSeeking
	mov	DWORD PTR _hr$[ebp], eax
; Line 671
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@ConvertTim
; Line 672
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@ConvertTim
$LN1@ConvertTim:
; Line 675
	mov	esi, esp
	mov	ecx, DWORD PTR _pSourceFormat$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Source$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _Source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTargetFormat$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pTarget$[ebp]
	push	edx
	mov	eax, DWORD PTR _pMS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pMS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 676
	mov	ecx, DWORD PTR _pMS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pMS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 677
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@ConvertTim:
; Line 678
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ConvertTim
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$LN6@ConvertTim:
	DD	1
	DD	$LN5@ConvertTim
$LN5@ConvertTim:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@ConvertTim
$LN4@ConvertTim:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	83					; 00000053H
	DB	0
?ConvertTimeFormat@CPosPassThru@@UAGJPA_JPBU_GUID@@_J1@Z ENDP ; CPosPassThru::ConvertTimeFormat
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?SetPositions@CPosPassThru@@UAGJPA_JK0K@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMS$ = -8						; size = 4
_this$ = 8						; size = 4
_pCurrent$ = 12						; size = 4
_CurrentFlags$ = 16					; size = 4
_pStop$ = 20						; size = 4
_StopFlags$ = 24					; size = 4
?SetPositions@CPosPassThru@@UAGJPA_JK0K@Z PROC		; CPosPassThru::SetPositions, COMDAT
; Line 684
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 686
	lea	eax, DWORD PTR _pMS$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPeerSeeking@CPosPassThru@@AAEJPAPAUIMediaSeeking@@@Z ; CPosPassThru::GetPeerSeeking
	mov	DWORD PTR _hr$[ebp], eax
; Line 687
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@SetPositio
; Line 688
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@SetPositio
$LN1@SetPositio:
; Line 691
	mov	esi, esp
	mov	ecx, DWORD PTR _StopFlags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pStop$[ebp]
	push	edx
	mov	eax, DWORD PTR _CurrentFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pCurrent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMS$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pMS$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 692
	mov	eax, DWORD PTR _pMS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pMS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 693
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@SetPositio:
; Line 694
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetPositio
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN6@SetPositio:
	DD	1
	DD	$LN5@SetPositio
$LN5@SetPositio:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@SetPositio
$LN4@SetPositio:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	83					; 00000053H
	DB	0
?SetPositions@CPosPassThru@@UAGJPA_JK0K@Z ENDP		; CPosPassThru::SetPositions
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetPositions@CPosPassThru@@UAGJPA_J0@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMS$ = -8						; size = 4
_this$ = 8						; size = 4
_pCurrent$ = 12						; size = 4
_pStop$ = 16						; size = 4
?GetPositions@CPosPassThru@@UAGJPA_J0@Z PROC		; CPosPassThru::GetPositions, COMDAT
; Line 698
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 700
	lea	eax, DWORD PTR _pMS$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPeerSeeking@CPosPassThru@@AAEJPAPAUIMediaSeeking@@@Z ; CPosPassThru::GetPeerSeeking
	mov	DWORD PTR _hr$[ebp], eax
; Line 701
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@GetPositio
; Line 702
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@GetPositio
$LN1@GetPositio:
; Line 705
	mov	esi, esp
	mov	ecx, DWORD PTR _pStop$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pCurrent$[ebp]
	push	edx
	mov	eax, DWORD PTR _pMS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pMS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 706
	mov	ecx, DWORD PTR _pMS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pMS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 707
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@GetPositio:
; Line 708
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetPositio
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN6@GetPositio:
	DD	1
	DD	$LN5@GetPositio
$LN5@GetPositio:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@GetPositio
$LN4@GetPositio:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	83					; 00000053H
	DB	0
?GetPositions@CPosPassThru@@UAGJPA_J0@Z ENDP		; CPosPassThru::GetPositions
_TEXT	ENDS
PUBLIC	?GetSeekingLongLong@CPosPassThru@@AAEJP8IMediaSeeking@@AGJPA_J@Z0@Z ; CPosPassThru::GetSeekingLongLong
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetSeekingLongLong@CPosPassThru@@AAEJP8IMediaSeeking@@AGJPA_J@Z0@Z
_TEXT	SEGMENT
_hr$ = -20						; size = 4
_pMS$ = -12						; size = 4
_this$ = -4						; size = 4
_pMethod$ = 8						; size = 4
_pll$ = 12						; size = 4
?GetSeekingLongLong@CPosPassThru@@AAEJP8IMediaSeeking@@AGJPA_J@Z0@Z PROC ; CPosPassThru::GetSeekingLongLong, COMDAT
; _this$ = ecx
; Line 715
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 717
	lea	eax, DWORD PTR _pMS$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPeerSeeking@CPosPassThru@@AAEJPAPAUIMediaSeeking@@@Z ; CPosPassThru::GetPeerSeeking
	mov	DWORD PTR _hr$[ebp], eax
; Line 718
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN1@GetSeeking
; Line 720
	mov	esi, esp
	mov	ecx, DWORD PTR _pll$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMS$[ebp]
	push	edx
	call	DWORD PTR _pMethod$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 721
	mov	eax, DWORD PTR _pMS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pMS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@GetSeeking:
; Line 723
	mov	eax, DWORD PTR _hr$[ebp]
; Line 724
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetSeeking
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN6@GetSeeking:
	DD	1
	DD	$LN5@GetSeeking
$LN5@GetSeeking:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN4@GetSeeking
$LN4@GetSeeking:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	83					; 00000053H
	DB	0
?GetSeekingLongLong@CPosPassThru@@AAEJP8IMediaSeeking@@AGJPA_J@Z0@Z ENDP ; CPosPassThru::GetSeekingLongLong
_TEXT	ENDS
PUBLIC	??_9IMediaSeeking@@$BDA@AG			; IMediaSeeking::`vcall'{48}'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetCurrentPosition@CPosPassThru@@UAGJPA_J@Z
_TEXT	SEGMENT
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
_pCurrent$ = 12						; size = 4
?GetCurrentPosition@CPosPassThru@@UAGJPA_J@Z PROC	; CPosPassThru::GetCurrentPosition, COMDAT
; Line 730
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 732
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _pCurrent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 733
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN2@GetCurrent
	mov	DWORD PTR _hr$[ebp], 0
	jmp	SHORT $LN1@GetCurrent
$LN2@GetCurrent:
; Line 734
	mov	ecx, DWORD PTR _pCurrent$[ebp]
	push	ecx
	push	OFFSET ??_9IMediaSeeking@@$BDA@AG	; IMediaSeeking::`vcall'{48}'
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSeekingLongLong@CPosPassThru@@AAEJP8IMediaSeeking@@AGJPA_J@Z0@Z ; CPosPassThru::GetSeekingLongLong
	mov	DWORD PTR _hr$[ebp], eax
$LN1@GetCurrent:
; Line 735
	mov	eax, DWORD PTR _hr$[ebp]
; Line 736
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetCurrentPosition@CPosPassThru@@UAGJPA_J@Z ENDP	; CPosPassThru::GetCurrentPosition
_TEXT	ENDS
PUBLIC	??_9IMediaSeeking@@$BCM@AG			; IMediaSeeking::`vcall'{44}'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetStopPosition@CPosPassThru@@UAGJPA_J@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pStop$ = 12						; size = 4
?GetStopPosition@CPosPassThru@@UAGJPA_J@Z PROC		; CPosPassThru::GetStopPosition, COMDAT
; Line 741
	push	ebp
	mov	ebp, esp
; Line 742
	mov	eax, DWORD PTR _pStop$[ebp]
	push	eax
	push	OFFSET ??_9IMediaSeeking@@$BCM@AG	; IMediaSeeking::`vcall'{44}'
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSeekingLongLong@CPosPassThru@@AAEJP8IMediaSeeking@@AGJPA_J@Z0@Z ; CPosPassThru::GetSeekingLongLong
; Line 743
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?GetStopPosition@CPosPassThru@@UAGJPA_J@Z ENDP		; CPosPassThru::GetStopPosition
_TEXT	ENDS
PUBLIC	??_9IMediaSeeking@@$BCI@AG			; IMediaSeeking::`vcall'{40}'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDuration@CPosPassThru@@UAGJPA_J@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pDuration$ = 12					; size = 4
?GetDuration@CPosPassThru@@UAGJPA_J@Z PROC		; CPosPassThru::GetDuration, COMDAT
; Line 747
	push	ebp
	mov	ebp, esp
; Line 748
	mov	eax, DWORD PTR _pDuration$[ebp]
	push	eax
	push	OFFSET ??_9IMediaSeeking@@$BCI@AG	; IMediaSeeking::`vcall'{40}'
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSeekingLongLong@CPosPassThru@@AAEJP8IMediaSeeking@@AGJPA_J@Z0@Z ; CPosPassThru::GetSeekingLongLong
; Line 749
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?GetDuration@CPosPassThru@@UAGJPA_J@Z ENDP		; CPosPassThru::GetDuration
_TEXT	ENDS
PUBLIC	??_9IMediaSeeking@@$BEM@AG			; IMediaSeeking::`vcall'{76}'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetPreroll@CPosPassThru@@UAGJPA_J@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pllPreroll$ = 12					; size = 4
?GetPreroll@CPosPassThru@@UAGJPA_J@Z PROC		; CPosPassThru::GetPreroll, COMDAT
; Line 754
	push	ebp
	mov	ebp, esp
; Line 755
	mov	eax, DWORD PTR _pllPreroll$[ebp]
	push	eax
	push	OFFSET ??_9IMediaSeeking@@$BEM@AG	; IMediaSeeking::`vcall'{76}'
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSeekingLongLong@CPosPassThru@@AAEJP8IMediaSeeking@@AGJPA_J@Z0@Z ; CPosPassThru::GetSeekingLongLong
; Line 756
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?GetPreroll@CPosPassThru@@UAGJPA_J@Z ENDP		; CPosPassThru::GetPreroll
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetAvailable@CPosPassThru@@UAGJPA_J0@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMS$ = -8						; size = 4
_this$ = 8						; size = 4
_pEarliest$ = 12					; size = 4
_pLatest$ = 16						; size = 4
?GetAvailable@CPosPassThru@@UAGJPA_J0@Z PROC		; CPosPassThru::GetAvailable, COMDAT
; Line 761
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 763
	lea	eax, DWORD PTR _pMS$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPeerSeeking@CPosPassThru@@AAEJPAPAUIMediaSeeking@@@Z ; CPosPassThru::GetPeerSeeking
	mov	DWORD PTR _hr$[ebp], eax
; Line 764
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@GetAvailab
; Line 765
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@GetAvailab
$LN1@GetAvailab:
; Line 768
	mov	esi, esp
	mov	ecx, DWORD PTR _pLatest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pEarliest$[ebp]
	push	edx
	mov	eax, DWORD PTR _pMS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pMS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 769
	mov	ecx, DWORD PTR _pMS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pMS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 770
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@GetAvailab:
; Line 771
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetAvailab
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN6@GetAvailab:
	DD	1
	DD	$LN5@GetAvailab
$LN5@GetAvailab:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@GetAvailab
$LN4@GetAvailab:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	83					; 00000053H
	DB	0
?GetAvailable@CPosPassThru@@UAGJPA_J0@Z ENDP		; CPosPassThru::GetAvailable
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetRate@CPosPassThru@@UAGJPAN@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMS$ = -8						; size = 4
_this$ = 8						; size = 4
_pdRate$ = 12						; size = 4
?GetRate@CPosPassThru@@UAGJPAN@Z PROC			; CPosPassThru::GetRate, COMDAT
; Line 776
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 778
	lea	eax, DWORD PTR _pMS$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPeerSeeking@CPosPassThru@@AAEJPAPAUIMediaSeeking@@@Z ; CPosPassThru::GetPeerSeeking
	mov	DWORD PTR _hr$[ebp], eax
; Line 779
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@GetRate
; Line 780
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@GetRate
$LN1@GetRate:
; Line 782
	mov	esi, esp
	mov	ecx, DWORD PTR _pdRate$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMS$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pMS$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+72]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 783
	mov	eax, DWORD PTR _pMS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pMS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 784
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@GetRate:
; Line 785
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetRate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN6@GetRate:
	DD	1
	DD	$LN5@GetRate
$LN5@GetRate:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@GetRate
$LN4@GetRate:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	83					; 00000053H
	DB	0
?GetRate@CPosPassThru@@UAGJPAN@Z ENDP			; CPosPassThru::GetRate
_TEXT	ENDS
PUBLIC	__real@0000000000000000
EXTRN	__fltused:DWORD
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ?SetRate@CPosPassThru@@UAGJN@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMS$ = -8						; size = 4
_this$ = 8						; size = 4
_dRate$ = 12						; size = 8
?SetRate@CPosPassThru@@UAGJN@Z PROC			; CPosPassThru::SetRate, COMDAT
; Line 790
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 791
	fldz
	fld	QWORD PTR _dRate$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN2@SetRate
; Line 792
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN3@SetRate
$LN2@SetRate:
; Line 796
	lea	eax, DWORD PTR _pMS$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPeerSeeking@CPosPassThru@@AAEJPAPAUIMediaSeeking@@@Z ; CPosPassThru::GetPeerSeeking
	mov	DWORD PTR _hr$[ebp], eax
; Line 797
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@SetRate
; Line 798
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN3@SetRate
$LN1@SetRate:
; Line 800
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _dRate$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _pMS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pMS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+68]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 801
	mov	edx, DWORD PTR _pMS$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pMS$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 802
	mov	eax, DWORD PTR _hr$[ebp]
$LN3@SetRate:
; Line 803
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@SetRate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN7@SetRate:
	DD	1
	DD	$LN6@SetRate
$LN6@SetRate:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@SetRate
$LN5@SetRate:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	83					; 00000053H
	DB	0
?SetRate@CPosPassThru@@UAGJN@Z ENDP			; CPosPassThru::SetRate
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?get_Duration@CPosPassThru@@UAGJPAN@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMP$ = -8						; size = 4
_this$ = 8						; size = 4
_plength$ = 12						; size = 4
?get_Duration@CPosPassThru@@UAGJPAN@Z PROC		; CPosPassThru::get_Duration, COMDAT
; Line 813
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 815
	lea	eax, DWORD PTR _pMP$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	call	?GetPeer@CPosPassThru@@AAEJPAPAUIMediaPosition@@@Z ; CPosPassThru::GetPeer
	mov	DWORD PTR _hr$[ebp], eax
; Line 816
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@get_Durati
; Line 817
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@get_Durati
$LN1@get_Durati:
; Line 820
	mov	esi, esp
	mov	ecx, DWORD PTR _plength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMP$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pMP$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 821
	mov	eax, DWORD PTR _pMP$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pMP$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 822
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@get_Durati:
; Line 823
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@get_Durati
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN6@get_Durati:
	DD	1
	DD	$LN5@get_Durati
$LN5@get_Durati:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@get_Durati
$LN4@get_Durati:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	80					; 00000050H
	DB	0
?get_Duration@CPosPassThru@@UAGJPAN@Z ENDP		; CPosPassThru::get_Duration
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?get_CurrentPosition@CPosPassThru@@UAGJPAN@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMP$ = -8						; size = 4
_this$ = 8						; size = 4
_pllTime$ = 12						; size = 4
?get_CurrentPosition@CPosPassThru@@UAGJPAN@Z PROC	; CPosPassThru::get_CurrentPosition, COMDAT
; Line 828
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 830
	lea	eax, DWORD PTR _pMP$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	call	?GetPeer@CPosPassThru@@AAEJPAPAUIMediaPosition@@@Z ; CPosPassThru::GetPeer
	mov	DWORD PTR _hr$[ebp], eax
; Line 831
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@get_Curren
; Line 832
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@get_Curren
$LN1@get_Curren:
; Line 834
	mov	esi, esp
	mov	ecx, DWORD PTR _pllTime$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMP$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pMP$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+36]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 835
	mov	eax, DWORD PTR _pMP$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pMP$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 836
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@get_Curren:
; Line 837
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@get_Curren
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN6@get_Curren:
	DD	1
	DD	$LN5@get_Curren
$LN5@get_Curren:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@get_Curren
$LN4@get_Curren:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	80					; 00000050H
	DB	0
?get_CurrentPosition@CPosPassThru@@UAGJPAN@Z ENDP	; CPosPassThru::get_CurrentPosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?put_CurrentPosition@CPosPassThru@@UAGJN@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMP$ = -8						; size = 4
_this$ = 8						; size = 4
_llTime$ = 12						; size = 8
?put_CurrentPosition@CPosPassThru@@UAGJN@Z PROC		; CPosPassThru::put_CurrentPosition, COMDAT
; Line 842
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 844
	lea	eax, DWORD PTR _pMP$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	call	?GetPeer@CPosPassThru@@AAEJPAPAUIMediaPosition@@@Z ; CPosPassThru::GetPeer
	mov	DWORD PTR _hr$[ebp], eax
; Line 845
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@put_Curren
; Line 846
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@put_Curren
$LN1@put_Curren:
; Line 848
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _llTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _pMP$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pMP$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+32]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 849
	mov	edx, DWORD PTR _pMP$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pMP$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 850
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@put_Curren:
; Line 851
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@put_Curren
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN6@put_Curren:
	DD	1
	DD	$LN5@put_Curren
$LN5@put_Curren:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@put_Curren
$LN4@put_Curren:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	80					; 00000050H
	DB	0
?put_CurrentPosition@CPosPassThru@@UAGJN@Z ENDP		; CPosPassThru::put_CurrentPosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?get_StopTime@CPosPassThru@@UAGJPAN@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMP$ = -8						; size = 4
_this$ = 8						; size = 4
_pllTime$ = 12						; size = 4
?get_StopTime@CPosPassThru@@UAGJPAN@Z PROC		; CPosPassThru::get_StopTime, COMDAT
; Line 856
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 858
	lea	eax, DWORD PTR _pMP$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	call	?GetPeer@CPosPassThru@@AAEJPAPAUIMediaPosition@@@Z ; CPosPassThru::GetPeer
	mov	DWORD PTR _hr$[ebp], eax
; Line 859
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@get_StopTi
; Line 860
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@get_StopTi
$LN1@get_StopTi:
; Line 862
	mov	esi, esp
	mov	ecx, DWORD PTR _pllTime$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMP$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pMP$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+40]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 863
	mov	eax, DWORD PTR _pMP$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pMP$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 864
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@get_StopTi:
; Line 865
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@get_StopTi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN6@get_StopTi:
	DD	1
	DD	$LN5@get_StopTi
$LN5@get_StopTi:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@get_StopTi
$LN4@get_StopTi:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	80					; 00000050H
	DB	0
?get_StopTime@CPosPassThru@@UAGJPAN@Z ENDP		; CPosPassThru::get_StopTime
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?put_StopTime@CPosPassThru@@UAGJN@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMP$ = -8						; size = 4
_this$ = 8						; size = 4
_llTime$ = 12						; size = 8
?put_StopTime@CPosPassThru@@UAGJN@Z PROC		; CPosPassThru::put_StopTime, COMDAT
; Line 870
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 872
	lea	eax, DWORD PTR _pMP$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	call	?GetPeer@CPosPassThru@@AAEJPAPAUIMediaPosition@@@Z ; CPosPassThru::GetPeer
	mov	DWORD PTR _hr$[ebp], eax
; Line 873
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@put_StopTi
; Line 874
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@put_StopTi
$LN1@put_StopTi:
; Line 876
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _llTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _pMP$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pMP$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+44]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 877
	mov	edx, DWORD PTR _pMP$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pMP$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 878
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@put_StopTi:
; Line 879
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@put_StopTi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN6@put_StopTi:
	DD	1
	DD	$LN5@put_StopTi
$LN5@put_StopTi:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@put_StopTi
$LN4@put_StopTi:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	80					; 00000050H
	DB	0
?put_StopTime@CPosPassThru@@UAGJN@Z ENDP		; CPosPassThru::put_StopTime
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?get_PrerollTime@CPosPassThru@@UAGJPAN@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMP$ = -8						; size = 4
_this$ = 8						; size = 4
_pllTime$ = 12						; size = 4
?get_PrerollTime@CPosPassThru@@UAGJPAN@Z PROC		; CPosPassThru::get_PrerollTime, COMDAT
; Line 884
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 886
	lea	eax, DWORD PTR _pMP$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	call	?GetPeer@CPosPassThru@@AAEJPAPAUIMediaPosition@@@Z ; CPosPassThru::GetPeer
	mov	DWORD PTR _hr$[ebp], eax
; Line 887
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@get_Prerol
; Line 888
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@get_Prerol
$LN1@get_Prerol:
; Line 890
	mov	esi, esp
	mov	ecx, DWORD PTR _pllTime$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMP$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pMP$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 891
	mov	eax, DWORD PTR _pMP$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pMP$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 892
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@get_Prerol:
; Line 893
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@get_Prerol
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN6@get_Prerol:
	DD	1
	DD	$LN5@get_Prerol
$LN5@get_Prerol:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@get_Prerol
$LN4@get_Prerol:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	80					; 00000050H
	DB	0
?get_PrerollTime@CPosPassThru@@UAGJPAN@Z ENDP		; CPosPassThru::get_PrerollTime
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?put_PrerollTime@CPosPassThru@@UAGJN@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMP$ = -8						; size = 4
_this$ = 8						; size = 4
_llTime$ = 12						; size = 8
?put_PrerollTime@CPosPassThru@@UAGJN@Z PROC		; CPosPassThru::put_PrerollTime, COMDAT
; Line 898
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 900
	lea	eax, DWORD PTR _pMP$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	call	?GetPeer@CPosPassThru@@AAEJPAPAUIMediaPosition@@@Z ; CPosPassThru::GetPeer
	mov	DWORD PTR _hr$[ebp], eax
; Line 901
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@put_Prerol
; Line 902
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@put_Prerol
$LN1@put_Prerol:
; Line 904
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _llTime$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _pMP$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pMP$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+52]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 905
	mov	edx, DWORD PTR _pMP$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pMP$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 906
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@put_Prerol:
; Line 907
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@put_Prerol
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN6@put_Prerol:
	DD	1
	DD	$LN5@put_Prerol
$LN5@put_Prerol:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@put_Prerol
$LN4@put_Prerol:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	80					; 00000050H
	DB	0
?put_PrerollTime@CPosPassThru@@UAGJN@Z ENDP		; CPosPassThru::put_PrerollTime
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?get_Rate@CPosPassThru@@UAGJPAN@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMP$ = -8						; size = 4
_this$ = 8						; size = 4
_pdRate$ = 12						; size = 4
?get_Rate@CPosPassThru@@UAGJPAN@Z PROC			; CPosPassThru::get_Rate, COMDAT
; Line 912
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 914
	lea	eax, DWORD PTR _pMP$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	call	?GetPeer@CPosPassThru@@AAEJPAPAUIMediaPosition@@@Z ; CPosPassThru::GetPeer
	mov	DWORD PTR _hr$[ebp], eax
; Line 915
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@get_Rate
; Line 916
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@get_Rate
$LN1@get_Rate:
; Line 918
	mov	esi, esp
	mov	ecx, DWORD PTR _pdRate$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMP$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pMP$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+60]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 919
	mov	eax, DWORD PTR _pMP$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pMP$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 920
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@get_Rate:
; Line 921
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@get_Rate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN6@get_Rate:
	DD	1
	DD	$LN5@get_Rate
$LN5@get_Rate:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@get_Rate
$LN4@get_Rate:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	80					; 00000050H
	DB	0
?get_Rate@CPosPassThru@@UAGJPAN@Z ENDP			; CPosPassThru::get_Rate
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?put_Rate@CPosPassThru@@UAGJN@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMP$ = -8						; size = 4
_this$ = 8						; size = 4
_dRate$ = 12						; size = 8
?put_Rate@CPosPassThru@@UAGJN@Z PROC			; CPosPassThru::put_Rate, COMDAT
; Line 926
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 927
	fldz
	fld	QWORD PTR _dRate$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN2@put_Rate
; Line 928
	mov	eax, -2147024809			; 80070057H
	jmp	SHORT $LN3@put_Rate
$LN2@put_Rate:
; Line 932
	lea	eax, DWORD PTR _pMP$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	call	?GetPeer@CPosPassThru@@AAEJPAPAUIMediaPosition@@@Z ; CPosPassThru::GetPeer
	mov	DWORD PTR _hr$[ebp], eax
; Line 933
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@put_Rate
; Line 934
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN3@put_Rate
$LN1@put_Rate:
; Line 936
	mov	esi, esp
	sub	esp, 8
	fld	QWORD PTR _dRate$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _pMP$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pMP$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+56]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 937
	mov	edx, DWORD PTR _pMP$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pMP$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 938
	mov	eax, DWORD PTR _hr$[ebp]
$LN3@put_Rate:
; Line 939
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@put_Rate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN7@put_Rate:
	DD	1
	DD	$LN6@put_Rate
$LN6@put_Rate:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@put_Rate
$LN5@put_Rate:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	80					; 00000050H
	DB	0
?put_Rate@CPosPassThru@@UAGJN@Z ENDP			; CPosPassThru::put_Rate
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?CanSeekForward@CPosPassThru@@UAGJPAJ@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMP$ = -8						; size = 4
_this$ = 8						; size = 4
_pCanSeekForward$ = 12					; size = 4
?CanSeekForward@CPosPassThru@@UAGJPAJ@Z PROC		; CPosPassThru::CanSeekForward, COMDAT
; Line 944
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 946
	lea	eax, DWORD PTR _pMP$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	call	?GetPeer@CPosPassThru@@AAEJPAPAUIMediaPosition@@@Z ; CPosPassThru::GetPeer
	mov	DWORD PTR _hr$[ebp], eax
; Line 947
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CanSeekFor
; Line 948
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@CanSeekFor
$LN1@CanSeekFor:
; Line 950
	mov	esi, esp
	mov	ecx, DWORD PTR _pCanSeekForward$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMP$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pMP$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+64]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 951
	mov	eax, DWORD PTR _pMP$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pMP$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 952
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@CanSeekFor:
; Line 953
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@CanSeekFor
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN6@CanSeekFor:
	DD	1
	DD	$LN5@CanSeekFor
$LN5@CanSeekFor:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@CanSeekFor
$LN4@CanSeekFor:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	80					; 00000050H
	DB	0
?CanSeekForward@CPosPassThru@@UAGJPAJ@Z ENDP		; CPosPassThru::CanSeekForward
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?CanSeekBackward@CPosPassThru@@UAGJPAJ@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pMP$ = -8						; size = 4
_this$ = 8						; size = 4
_pCanSeekBackward$ = 12					; size = 4
?CanSeekBackward@CPosPassThru@@UAGJPAJ@Z PROC		; CPosPassThru::CanSeekBackward, COMDAT
; Line 958
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 960
	lea	eax, DWORD PTR _pMP$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	call	?GetPeer@CPosPassThru@@AAEJPAPAUIMediaPosition@@@Z ; CPosPassThru::GetPeer
	mov	DWORD PTR _hr$[ebp], eax
; Line 961
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CanSeekBac
; Line 962
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN2@CanSeekBac
$LN1@CanSeekBac:
; Line 964
	mov	esi, esp
	mov	ecx, DWORD PTR _pCanSeekBackward$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMP$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pMP$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+68]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 965
	mov	eax, DWORD PTR _pMP$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pMP$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 966
	mov	eax, DWORD PTR _hr$[ebp]
$LN2@CanSeekBac:
; Line 967
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@CanSeekBac
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN6@CanSeekBac:
	DD	1
	DD	$LN5@CanSeekBac
$LN5@CanSeekBac:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@CanSeekBac
$LN4@CanSeekBac:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	80					; 00000050H
	DB	0
?CanSeekBackward@CPosPassThru@@UAGJPAJ@Z ENDP		; CPosPassThru::CanSeekBackward
_TEXT	ENDS
PUBLIC	??1CPosPassThru@@UAE@XZ				; CPosPassThru::~CPosPassThru
PUBLIC	??_7CRendererPosPassThru@@6BCUnknown@@@		; CRendererPosPassThru::`vftable'
PUBLIC	??_7CRendererPosPassThru@@6BIMediaPosition@@@	; CRendererPosPassThru::`vftable'
PUBLIC	??_7CRendererPosPassThru@@6B@			; CRendererPosPassThru::`vftable'
PUBLIC	??0CRendererPosPassThru@@QAE@PB_WPAUIUnknown@@PAJPAUIPin@@@Z ; CRendererPosPassThru::CRendererPosPassThru
PUBLIC	??_R4CRendererPosPassThru@@6B@			; CRendererPosPassThru::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCRendererPosPassThru@@@8		; CRendererPosPassThru `RTTI Type Descriptor'
PUBLIC	??_R3CRendererPosPassThru@@8			; CRendererPosPassThru::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRendererPosPassThru@@8			; CRendererPosPassThru::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CRendererPosPassThru@@8		; CRendererPosPassThru::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?GetMediaTime@CRendererPosPassThru@@UAEJPA_J0@Z	; CRendererPosPassThru::GetMediaTime
PUBLIC	??_R4CRendererPosPassThru@@6BIMediaPosition@@@	; CRendererPosPassThru::`RTTI Complete Object Locator'
PUBLIC	??_R4CRendererPosPassThru@@6BCUnknown@@@	; CRendererPosPassThru::`RTTI Complete Object Locator'
PUBLIC	??_ECRendererPosPassThru@@W7AEPAXI@Z		; [thunk]:CRendererPosPassThru::`vector deleting destructor'
EXTRN	??0CCritSec@@QAE@XZ:PROC			; CCritSec::CCritSec
;	COMDAT ??_R4CRendererPosPassThru@@6BCUnknown@@@
rdata$r	SEGMENT
??_R4CRendererPosPassThru@@6BCUnknown@@@ DD 00H		; CRendererPosPassThru::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVCRendererPosPassThru@@@8
	DD	FLAT:??_R3CRendererPosPassThru@@8
rdata$r	ENDS
;	COMDAT ??_R4CRendererPosPassThru@@6BIMediaPosition@@@
rdata$r	SEGMENT
??_R4CRendererPosPassThru@@6BIMediaPosition@@@ DD 00H	; CRendererPosPassThru::`RTTI Complete Object Locator'
	DD	04H
	DD	00H
	DD	FLAT:??_R0?AVCRendererPosPassThru@@@8
	DD	FLAT:??_R3CRendererPosPassThru@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRendererPosPassThru@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRendererPosPassThru@@8 DD FLAT:??_R0?AVCRendererPosPassThru@@@8 ; CRendererPosPassThru::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRendererPosPassThru@@8
rdata$r	ENDS
;	COMDAT ??_R2CRendererPosPassThru@@8
rdata$r	SEGMENT
??_R2CRendererPosPassThru@@8 DD FLAT:??_R1A@?0A@EA@CRendererPosPassThru@@8 ; CRendererPosPassThru::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CPosPassThru@@8
	DD	FLAT:??_R1A@?0A@EA@IMediaSeeking@@8
	DD	FLAT:??_R1A@?0A@EC@IUnknown@@8
	DD	FLAT:??_R13?0A@EA@CMediaPosition@@8
	DD	FLAT:??_R13?0A@EA@IMediaPosition@@8
	DD	FLAT:??_R13?0A@EA@IDispatch@@8
	DD	FLAT:??_R13?0A@EC@IUnknown@@8
	DD	FLAT:??_R17?0A@EA@CUnknown@@8
	DD	FLAT:??_R17?0A@EA@INonDelegatingUnknown@@8
	DD	FLAT:??_R1M@?0A@EA@CBaseObject@@8
rdata$r	ENDS
;	COMDAT ??_R3CRendererPosPassThru@@8
rdata$r	SEGMENT
??_R3CRendererPosPassThru@@8 DD 00H			; CRendererPosPassThru::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0bH
	DD	FLAT:??_R2CRendererPosPassThru@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRendererPosPassThru@@@8
_DATA	SEGMENT
??_R0?AVCRendererPosPassThru@@@8 DD FLAT:??_7type_info@@6B@ ; CRendererPosPassThru `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRendererPosPassThru@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CRendererPosPassThru@@6B@
rdata$r	SEGMENT
??_R4CRendererPosPassThru@@6B@ DD 00H			; CRendererPosPassThru::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCRendererPosPassThru@@@8
	DD	FLAT:??_R3CRendererPosPassThru@@8
rdata$r	ENDS
;	COMDAT ??_7CRendererPosPassThru@@6BCUnknown@@@
CONST	SEGMENT
??_7CRendererPosPassThru@@6BCUnknown@@@ DD FLAT:??_R4CRendererPosPassThru@@6BCUnknown@@@ ; CRendererPosPassThru::`vftable'
	DD	FLAT:?NonDelegatingQueryInterface@CPosPassThru@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?NonDelegatingAddRef@CUnknown@@UAGKXZ
	DD	FLAT:?NonDelegatingRelease@CUnknown@@UAGKXZ
	DD	FLAT:??_ECRendererPosPassThru@@W7AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7CRendererPosPassThru@@6BIMediaPosition@@@
CONST	SEGMENT
??_7CRendererPosPassThru@@6BIMediaPosition@@@ DD FLAT:??_R4CRendererPosPassThru@@6BIMediaPosition@@@ ; CRendererPosPassThru::`vftable'
	DD	FLAT:?QueryInterface@CPosPassThru@@W3AGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CPosPassThru@@W3AGKXZ
	DD	FLAT:?Release@CPosPassThru@@W3AGKXZ
	DD	FLAT:?GetTypeInfoCount@CMediaPosition@@UAGJPAI@Z
	DD	FLAT:?GetTypeInfo@CMediaPosition@@UAGJIKPAPAUITypeInfo@@@Z
	DD	FLAT:?GetIDsOfNames@CMediaPosition@@UAGJABU_GUID@@PAPA_WIKPAJ@Z
	DD	FLAT:?Invoke@CMediaPosition@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
	DD	FLAT:?get_Duration@CPosPassThru@@UAGJPAN@Z
	DD	FLAT:?put_CurrentPosition@CPosPassThru@@UAGJN@Z
	DD	FLAT:?get_CurrentPosition@CPosPassThru@@UAGJPAN@Z
	DD	FLAT:?get_StopTime@CPosPassThru@@UAGJPAN@Z
	DD	FLAT:?put_StopTime@CPosPassThru@@UAGJN@Z
	DD	FLAT:?get_PrerollTime@CPosPassThru@@UAGJPAN@Z
	DD	FLAT:?put_PrerollTime@CPosPassThru@@UAGJN@Z
	DD	FLAT:?put_Rate@CPosPassThru@@UAGJN@Z
	DD	FLAT:?get_Rate@CPosPassThru@@UAGJPAN@Z
	DD	FLAT:?CanSeekForward@CPosPassThru@@UAGJPAJ@Z
	DD	FLAT:?CanSeekBackward@CPosPassThru@@UAGJPAJ@Z
CONST	ENDS
;	COMDAT ??_7CRendererPosPassThru@@6B@
CONST	SEGMENT
??_7CRendererPosPassThru@@6B@ DD FLAT:??_R4CRendererPosPassThru@@6B@ ; CRendererPosPassThru::`vftable'
	DD	FLAT:?QueryInterface@CPosPassThru@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CPosPassThru@@UAGKXZ
	DD	FLAT:?Release@CPosPassThru@@UAGKXZ
	DD	FLAT:?GetCapabilities@CPosPassThru@@UAGJPAK@Z
	DD	FLAT:?CheckCapabilities@CPosPassThru@@UAGJPAK@Z
	DD	FLAT:?IsFormatSupported@CPosPassThru@@UAGJPBU_GUID@@@Z
	DD	FLAT:?QueryPreferredFormat@CPosPassThru@@UAGJPAU_GUID@@@Z
	DD	FLAT:?GetTimeFormatW@CPosPassThru@@UAGJPAU_GUID@@@Z
	DD	FLAT:?IsUsingTimeFormat@CPosPassThru@@UAGJPBU_GUID@@@Z
	DD	FLAT:?SetTimeFormat@CPosPassThru@@UAGJPBU_GUID@@@Z
	DD	FLAT:?GetDuration@CPosPassThru@@UAGJPA_J@Z
	DD	FLAT:?GetStopPosition@CPosPassThru@@UAGJPA_J@Z
	DD	FLAT:?GetCurrentPosition@CPosPassThru@@UAGJPA_J@Z
	DD	FLAT:?ConvertTimeFormat@CPosPassThru@@UAGJPA_JPBU_GUID@@_J1@Z
	DD	FLAT:?SetPositions@CPosPassThru@@UAGJPA_JK0K@Z
	DD	FLAT:?GetPositions@CPosPassThru@@UAGJPA_J0@Z
	DD	FLAT:?GetAvailable@CPosPassThru@@UAGJPA_J0@Z
	DD	FLAT:?SetRate@CPosPassThru@@UAGJN@Z
	DD	FLAT:?GetRate@CPosPassThru@@UAGJPAN@Z
	DD	FLAT:?GetPreroll@CPosPassThru@@UAGJPA_J@Z
	DD	FLAT:?GetMediaTime@CRendererPosPassThru@@UAEJPA_J0@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CRendererPosPassThru@@QAE@PB_WPAUIUnknown@@PAJPAUIPin@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CRendererPosPassThru@@QAE@PB_WPAUIUnknown@@PAJPAUIPin@@@Z$0
__ehfuncinfo$??0CRendererPosPassThru@@QAE@PB_WPAUIUnknown@@PAJPAUIPin@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CRendererPosPassThru@@QAE@PB_WPAUIUnknown@@PAJPAUIPin@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CRendererPosPassThru@@QAE@PB_WPAUIUnknown@@PAJPAUIPin@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pName$ = 8						; size = 4
_pUnk$ = 12						; size = 4
_phr$ = 16						; size = 4
_pPin$ = 20						; size = 4
??0CRendererPosPassThru@@QAE@PB_WPAUIUnknown@@PAJPAUIPin@@@Z PROC ; CRendererPosPassThru::CRendererPosPassThru, COMDAT
; _this$ = ecx
; Line 987
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CRendererPosPassThru@@QAE@PB_WPAUIUnknown@@PAJPAUIPin@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pPin$[ebp]
	push	eax
	mov	ecx, DWORD PTR _phr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pUnk$[ebp]
	push	edx
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CPosPassThru@@QAE@PB_WPAUIUnknown@@PAJPAUIPin@@@Z ; CPosPassThru::CPosPassThru
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7CRendererPosPassThru@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], OFFSET ??_7CRendererPosPassThru@@6BIMediaPosition@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], OFFSET ??_7CRendererPosPassThru@@6BCUnknown@@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0CCritSec@@QAE@XZ			; CCritSec::CCritSec
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+72], 0
	mov	DWORD PTR [ecx+76], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+80], 0
	mov	DWORD PTR [edx+84], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 1
; Line 988
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CRendererPosPassThru@@QAE@PB_WPAUIUnknown@@PAJPAUIPin@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CPosPassThru@@UAE@XZ
__ehhandler$??0CRendererPosPassThru@@QAE@PB_WPAUIUnknown@@PAJPAUIPin@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CRendererPosPassThru@@QAE@PB_WPAUIUnknown@@PAJPAUIPin@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CRendererPosPassThru@@QAE@PB_WPAUIUnknown@@PAJPAUIPin@@@Z ENDP ; CRendererPosPassThru::CRendererPosPassThru
PUBLIC	??1CMediaPosition@@UAE@XZ			; CMediaPosition::~CMediaPosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CPosPassThru@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CPosPassThru@@UAE@XZ PROC				; CPosPassThru::~CPosPassThru, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1CMediaPosition@@UAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CPosPassThru@@UAE@XZ ENDP				; CPosPassThru::~CPosPassThru
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CMediaPosition@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CMediaPosition@@UAE@XZ$0
__ehfuncinfo$??1CMediaPosition@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CMediaPosition@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CMediaPosition@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CMediaPosition@@UAE@XZ PROC				; CMediaPosition::~CMediaPosition, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CMediaPosition@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??1CBaseDispatch@@QAE@XZ		; CBaseDispatch::~CBaseDispatch
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1CUnknown@@UAE@XZ			; CUnknown::~CUnknown
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CMediaPosition@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1CUnknown@@UAE@XZ			; CUnknown::~CUnknown
__ehhandler$??1CMediaPosition@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CMediaPosition@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CMediaPosition@@UAE@XZ ENDP				; CMediaPosition::~CMediaPosition
PUBLIC	??1CAutoLock@@QAE@XZ				; CAutoLock::~CAutoLock
PUBLIC	??0CAutoLock@@QAE@PAVCCritSec@@@Z		; CAutoLock::CAutoLock
PUBLIC	?RegisterMediaTime@CRendererPosPassThru@@QAEJPAUIMediaSample@@@Z ; CRendererPosPassThru::RegisterMediaTime
EXTRN	?DbgAssert@@YGXPB_W0H@Z:PROC			; DbgAssert
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RegisterMediaTime@CRendererPosPassThru@@QAEJPAUIMediaSample@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RegisterMediaTime@CRendererPosPassThru@@QAEJPAUIMediaSample@@@Z$0
__ehfuncinfo$?RegisterMediaTime@CRendererPosPassThru@@QAEJPAUIMediaSample@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RegisterMediaTime@CRendererPosPassThru@@QAEJPAUIMediaSample@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?RegisterMediaTime@CRendererPosPassThru@@QAEJPAUIMediaSample@@@Z
_TEXT	SEGMENT
$T84355 = -72						; size = 4
$T84354 = -68						; size = 4
_hr$ = -64						; size = 4
_cAutoLock$ = -56					; size = 4
_EndMedia$ = -44					; size = 8
_StartMedia$ = -28					; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pMediaSample$ = 8					; size = 4
?RegisterMediaTime@CRendererPosPassThru@@QAEJPAUIMediaSample@@@Z PROC ; CRendererPosPassThru::RegisterMediaTime, COMDAT
; _this$ = ecx
; Line 995
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RegisterMediaTime@CRendererPosPassThru@@QAEJPAUIMediaSample@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-72]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 996
	cmp	DWORD PTR _pMediaSample$[ebp], 0
	jne	SHORT $LN3@RegisterMe
	push	996					; 000003e4H
	push	OFFSET $SG82223
	push	OFFSET $SG82224
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN3@RegisterMe:
; Line 1000
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	lea	ecx, DWORD PTR _cAutoLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1004
	mov	esi, esp
	lea	ecx, DWORD PTR _EndMedia$[ebp]
	push	ecx
	lea	edx, DWORD PTR _StartMedia$[ebp]
	push	edx
	mov	eax, DWORD PTR _pMediaSample$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pMediaSample$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1005
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@RegisterMe
; Line 1007
	cmp	DWORD PTR _hr$[ebp], -2147220919	; 80040249H
	je	SHORT $LN1@RegisterMe
	push	1007					; 000003efH
	push	OFFSET $SG82233
	push	OFFSET $SG82234
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@RegisterMe:
; Line 1008
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T84354[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cAutoLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84354[ebp]
	jmp	SHORT $LN4@RegisterMe
$LN2@RegisterMe:
; Line 1011
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _StartMedia$[ebp]
	mov	DWORD PTR [edx+72], eax
	mov	ecx, DWORD PTR _StartMedia$[ebp+4]
	mov	DWORD PTR [edx+76], ecx
; Line 1012
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _EndMedia$[ebp]
	mov	DWORD PTR [edx+80], eax
	mov	ecx, DWORD PTR _EndMedia$[ebp+4]
	mov	DWORD PTR [edx+84], ecx
; Line 1013
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+88], 0
; Line 1014
	mov	DWORD PTR $T84355[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cAutoLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84355[ebp]
$LN4@RegisterMe:
; Line 1015
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@RegisterMe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 72					; 00000048H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN12@RegisterMe:
	DD	3
	DD	$LN11@RegisterMe
$LN11@RegisterMe:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN7@RegisterMe
	DD	-44					; ffffffd4H
	DD	8
	DD	$LN8@RegisterMe
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN9@RegisterMe
$LN9@RegisterMe:
	DB	99					; 00000063H
	DB	65					; 00000041H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN8@RegisterMe:
	DB	69					; 00000045H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	77					; 0000004dH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	0
$LN7@RegisterMe:
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	77					; 0000004dH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RegisterMediaTime@CRendererPosPassThru@@QAEJPAUIMediaSample@@@Z$0:
	lea	ecx, DWORD PTR _cAutoLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?RegisterMediaTime@CRendererPosPassThru@@QAEJPAUIMediaSample@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RegisterMediaTime@CRendererPosPassThru@@QAEJPAUIMediaSample@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RegisterMediaTime@CRendererPosPassThru@@QAEJPAUIMediaSample@@@Z ENDP ; CRendererPosPassThru::RegisterMediaTime
EXTRN	?Lock@CCritSec@@QAEXXZ:PROC			; CCritSec::Lock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CAutoLock@@QAE@PAVCCritSec@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_plock$ = 8						; size = 4
??0CAutoLock@@QAE@PAVCCritSec@@@Z PROC			; CAutoLock::CAutoLock, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxutil.h
; Line 94
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _plock$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 97
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?Lock@CCritSec@@QAEXXZ			; CCritSec::Lock
; Line 98
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CAutoLock@@QAE@PAVCCritSec@@@Z ENDP			; CAutoLock::CAutoLock
_TEXT	ENDS
EXTRN	?Unlock@CCritSec@@QAEXXZ:PROC			; CCritSec::Unlock
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CAutoLock@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CAutoLock@@QAE@XZ PROC				; CAutoLock::~CAutoLock, COMDAT
; _this$ = ecx
; Line 100
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Unlock@CCritSec@@QAEXXZ		; CCritSec::Unlock
; Line 102
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CAutoLock@@QAE@XZ ENDP				; CAutoLock::~CAutoLock
_TEXT	ENDS
PUBLIC	?RegisterMediaTime@CRendererPosPassThru@@QAEJ_J0@Z ; CRendererPosPassThru::RegisterMediaTime
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?RegisterMediaTime@CRendererPosPassThru@@QAEJ_J0@Z
_TEXT	SEGMENT
$T84374 = -20						; size = 4
_cAutoLock$ = -12					; size = 4
_this$ = -4						; size = 4
_StartTime$ = 8						; size = 8
_EndTime$ = 16						; size = 8
?RegisterMediaTime@CRendererPosPassThru@@QAEJ_J0@Z PROC	; CRendererPosPassThru::RegisterMediaTime, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.cpp
; Line 1022
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1023
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	lea	ecx, DWORD PTR _cAutoLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
; Line 1024
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _StartTime$[ebp]
	mov	DWORD PTR [ecx+72], edx
	mov	eax, DWORD PTR _StartTime$[ebp+4]
	mov	DWORD PTR [ecx+76], eax
; Line 1025
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _EndTime$[ebp]
	mov	DWORD PTR [ecx+80], edx
	mov	eax, DWORD PTR _EndTime$[ebp+4]
	mov	DWORD PTR [ecx+84], eax
; Line 1026
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+88], 0
; Line 1027
	mov	DWORD PTR $T84374[ebp], 0
	lea	ecx, DWORD PTR _cAutoLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84374[ebp]
; Line 1028
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@RegisterMe@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN6@RegisterMe@2:
	DD	1
	DD	$LN5@RegisterMe@2
$LN5@RegisterMe@2:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN4@RegisterMe@2
$LN4@RegisterMe@2:
	DB	99					; 00000063H
	DB	65					; 00000041H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?RegisterMediaTime@CRendererPosPassThru@@QAEJ_J0@Z ENDP	; CRendererPosPassThru::RegisterMediaTime
_TEXT	ENDS
EXTRN	_TIME_FORMAT_MEDIA_TIME:BYTE
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetMediaTime@CRendererPosPassThru@@UAEJPA_J0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetMediaTime@CRendererPosPassThru@@UAEJPA_J0@Z$0
__ehfuncinfo$?GetMediaTime@CRendererPosPassThru@@UAEJPA_J0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetMediaTime@CRendererPosPassThru@@UAEJPA_J0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?GetMediaTime@CRendererPosPassThru@@UAEJPA_J0@Z
_TEXT	SEGMENT
$T84382 = -40						; size = 4
$T84381 = -36						; size = 4
_hr$ = -32						; size = 4
_cAutoLock$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pStartTime$ = 8					; size = 4
_pEndTime$ = 12						; size = 4
?GetMediaTime@CRendererPosPassThru@@UAEJPA_J0@Z PROC	; CRendererPosPassThru::GetMediaTime, COMDAT
; _this$ = ecx
; Line 1035
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetMediaTime@CRendererPosPassThru@@UAEJPA_J0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1036
	cmp	DWORD PTR _pStartTime$[ebp], 0
	jne	SHORT $LN3@GetMediaTi
	push	1036					; 0000040cH
	push	OFFSET $SG82250
	push	OFFSET $SG82251
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN3@GetMediaTi:
; Line 1038
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	lea	ecx, DWORD PTR _cAutoLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1039
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+88], 1
	jne	SHORT $LN2@GetMediaTi
; Line 1040
	mov	DWORD PTR $T84381[ebp], -2147467259	; 80004005H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cAutoLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84381[ebp]
	jmp	$LN4@GetMediaTi
$LN2@GetMediaTi:
; Line 1045
	mov	esi, esp
	push	OFFSET _TIME_FORMAT_MEDIA_TIME
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	mov	ecx, DWORD PTR [edx+72]
	push	ecx
	push	0
	mov	edx, DWORD PTR _pStartTime$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1046
	cmp	DWORD PTR _pEndTime$[ebp], 0
	je	SHORT $LN1@GetMediaTi
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN1@GetMediaTi
; Line 1047
	mov	esi, esp
	push	OFFSET _TIME_FORMAT_MEDIA_TIME
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	push	edx
	mov	eax, DWORD PTR [ecx+80]
	push	eax
	push	0
	mov	ecx, DWORD PTR _pEndTime$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+52]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$LN1@GetMediaTi:
; Line 1049
	mov	eax, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T84382[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cAutoLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84382[ebp]
$LN4@GetMediaTi:
; Line 1050
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@GetMediaTi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN10@GetMediaTi:
	DD	1
	DD	$LN9@GetMediaTi
$LN9@GetMediaTi:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN7@GetMediaTi
$LN7@GetMediaTi:
	DB	99					; 00000063H
	DB	65					; 00000041H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetMediaTime@CRendererPosPassThru@@UAEJPA_J0@Z$0:
	lea	ecx, DWORD PTR _cAutoLock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?GetMediaTime@CRendererPosPassThru@@UAEJPA_J0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetMediaTime@CRendererPosPassThru@@UAEJPA_J0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetMediaTime@CRendererPosPassThru@@UAEJPA_J0@Z ENDP	; CRendererPosPassThru::GetMediaTime
PUBLIC	?ResetMediaTime@CRendererPosPassThru@@QAEJXZ	; CRendererPosPassThru::ResetMediaTime
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ResetMediaTime@CRendererPosPassThru@@QAEJXZ
_TEXT	SEGMENT
$T84395 = -20						; size = 4
_cAutoLock$ = -12					; size = 4
_this$ = -4						; size = 4
?ResetMediaTime@CRendererPosPassThru@@QAEJXZ PROC	; CRendererPosPassThru::ResetMediaTime, COMDAT
; _this$ = ecx
; Line 1057
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1058
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	lea	ecx, DWORD PTR _cAutoLock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
; Line 1059
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+72], 0
	mov	DWORD PTR [ecx+76], 0
; Line 1060
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+80], 0
	mov	DWORD PTR [edx+84], 0
; Line 1061
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+88], 1
; Line 1062
	mov	DWORD PTR $T84395[ebp], 0
	lea	ecx, DWORD PTR _cAutoLock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84395[ebp]
; Line 1063
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ResetMedia
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@ResetMedia:
	DD	1
	DD	$LN5@ResetMedia
$LN5@ResetMedia:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN4@ResetMedia
$LN4@ResetMedia:
	DB	99					; 00000063H
	DB	65					; 00000041H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?ResetMediaTime@CRendererPosPassThru@@QAEJXZ ENDP	; CRendererPosPassThru::ResetMediaTime
_TEXT	ENDS
PUBLIC	?EOS@CRendererPosPassThru@@QAEJXZ		; CRendererPosPassThru::EOS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?EOS@CRendererPosPassThru@@QAEJXZ
_TEXT	SEGMENT
_cAutoLock$82275 = -32					; size = 4
_llStop$82272 = -20					; size = 8
_hr$ = -8						; size = 4
_this$ = -4						; size = 4
?EOS@CRendererPosPassThru@@QAEJXZ PROC			; CRendererPosPassThru::EOS, COMDAT
; _this$ = ecx
; Line 1070
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1073
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+88], 1
	jne	SHORT $LN3@EOS
	mov	DWORD PTR _hr$[ebp], -2147467259	; 80004005H
; Line 1074
	jmp	SHORT $LN2@EOS
$LN3@EOS:
; Line 1077
	mov	esi, esp
	lea	ecx, DWORD PTR _llStop$82272[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN2@EOS
; Line 1079
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	lea	ecx, DWORD PTR _cAutoLock$82275[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
; Line 1081
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _llStop$82272[ebp]
	mov	DWORD PTR [ecx+80], edx
	mov	eax, DWORD PTR _llStop$82272[ebp+4]
	mov	DWORD PTR [ecx+84], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _llStop$82272[ebp]
	mov	DWORD PTR [ecx+72], edx
	mov	eax, DWORD PTR _llStop$82272[ebp+4]
	mov	DWORD PTR [ecx+76], eax
; Line 1082
	lea	ecx, DWORD PTR _cAutoLock$82275[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
$LN2@EOS:
; Line 1084
	mov	eax, DWORD PTR _hr$[ebp]
; Line 1085
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@EOS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@EOS:
	DD	2
	DD	$LN9@EOS
$LN9@EOS:
	DD	-20					; ffffffecH
	DD	8
	DD	$LN7@EOS
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN8@EOS
$LN8@EOS:
	DB	99					; 00000063H
	DB	65					; 00000041H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN7@EOS:
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
?EOS@CRendererPosPassThru@@QAEJXZ ENDP			; CRendererPosPassThru::EOS
_TEXT	ENDS
PUBLIC	__real@3ff0000000000000
PUBLIC	??4CRefTime@@QAEAAV0@ABV0@@Z			; CRefTime::operator=
PUBLIC	??4CRefTime@@QAEAAV0@_J@Z			; CRefTime::operator=
PUBLIC	??0CRefTime@@QAE@J@Z				; CRefTime::CRefTime
PUBLIC	??0CRefTime@@QAE@XZ				; CRefTime::CRefTime
PUBLIC	??0CSourceSeeking@@IAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z ; CSourceSeeking::CSourceSeeking
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CSourceSeeking@@IAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CSourceSeeking@@IAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z$0
__ehfuncinfo$??0CSourceSeeking@@IAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CSourceSeeking@@IAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CSourceSeeking@@IAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pName$ = 8						; size = 4
_pUnk$ = 12						; size = 4
_phr$ = 16						; size = 4
_pLock$ = 20						; size = 4
??0CSourceSeeking@@IAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z PROC ; CSourceSeeking::CSourceSeeking, COMDAT
; _this$ = ecx
; Line 1097
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CSourceSeeking@@IAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IMediaSeeking@@QAE@XZ
	mov	eax, DWORD PTR _pUnk$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CUnknown@@QAE@PB_WPAUIUnknown@@@Z	; CUnknown::CUnknown
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0CRefTime@@QAE@XZ			; CRefTime::CRefTime
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0CRefTime@@QAE@J@Z			; CRefTime::CRefTime
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0CRefTime@@QAE@XZ			; CRefTime::CRefTime
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pLock$[ebp]
	mov	DWORD PTR [edx+60], eax
; Line 1098
	push	1073741823				; 3fffffffH
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??4CRefTime@@QAEAAV0@_J@Z		; CRefTime::operator=
; Line 1099
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??4CRefTime@@QAEAAV0@ABV0@@Z		; CRefTime::operator=
; Line 1100
	mov	edx, DWORD PTR _this$[ebp]
	fld1
	fstp	QWORD PTR [edx+48]
; Line 1106
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 55			; 00000037H
; Line 1107
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CSourceSeeking@@IAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1CUnknown@@UAE@XZ			; CUnknown::~CUnknown
__ehhandler$??0CSourceSeeking@@IAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CSourceSeeking@@IAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CSourceSeeking@@IAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z ENDP ; CSourceSeeking::CSourceSeeking
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CRefTime@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CRefTime@@QAE@XZ PROC				; CRefTime::CRefTime, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\reftime.h
; Line 59
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CRefTime@@QAE@XZ ENDP				; CRefTime::CRefTime
_TEXT	ENDS
EXTRN	__allmul:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CRefTime@@QAE@J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_msecs$ = 8						; size = 4
??0CRefTime@@QAE@J@Z PROC				; CRefTime::CRefTime, COMDAT
; _this$ = ecx
; Line 65
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 67
	mov	eax, DWORD PTR _msecs$[ebp]
	cdq
	push	0
	push	10000					; 00002710H
	push	edx
	push	eax
	call	__allmul
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0CRefTime@@QAE@J@Z ENDP				; CRefTime::CRefTime
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4CRefTime@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rt$ = 8						; size = 4
??4CRefTime@@QAEAAV0@ABV0@@Z PROC			; CRefTime::operator=, COMDAT
; _this$ = ecx
; Line 81
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 82
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
; Line 83
	mov	eax, DWORD PTR _this$[ebp]
; Line 84
	mov	esp, ebp
	pop	ebp
	ret	4
??4CRefTime@@QAEAAV0@ABV0@@Z ENDP			; CRefTime::operator=
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4CRefTime@@QAEAAV0@_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ll$ = 8						; size = 8
??4CRefTime@@QAEAAV0@_J@Z PROC				; CRefTime::operator=, COMDAT
; _this$ = ecx
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 88
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ll$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _ll$[ebp+4]
	mov	DWORD PTR [eax+4], edx
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
; Line 90
	mov	esp, ebp
	pop	ebp
	ret	8
??4CRefTime@@QAEAAV0@_J@Z ENDP				; CRefTime::operator=
_TEXT	ENDS
PUBLIC	?NonDelegatingQueryInterface@CSourceSeeking@@UAGJABU_GUID@@PAPAX@Z ; CSourceSeeking::NonDelegatingQueryInterface
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?NonDelegatingQueryInterface@CSourceSeeking@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?NonDelegatingQueryInterface@CSourceSeeking@@UAGJABU_GUID@@PAPAX@Z PROC ; CSourceSeeking::NonDelegatingQueryInterface, COMDAT
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.cpp
; Line 1110
	push	ebp
	mov	ebp, esp
; Line 1111
	push	OFFSET _IID_IMediaSeeking
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN3@NonDelegat@5
; Line 1112
	cmp	DWORD PTR _ppv$[ebp], 0
	jne	SHORT $LN2@NonDelegat@5
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN4@NonDelegat@5
$LN2@NonDelegat@5:
; Line 1113
	mov	ecx, DWORD PTR _ppv$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 4
	push	edx
	call	_GetInterface@8
	jmp	SHORT $LN4@NonDelegat@5
; Line 1115
	jmp	SHORT $LN4@NonDelegat@5
$LN3@NonDelegat@5:
; Line 1116
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?NonDelegatingQueryInterface@CUnknown@@UAGJABU_GUID@@PAPAX@Z ; CUnknown::NonDelegatingQueryInterface
$LN4@NonDelegat@5:
; Line 1118
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?NonDelegatingQueryInterface@CSourceSeeking@@UAGJABU_GUID@@PAPAX@Z ENDP ; CSourceSeeking::NonDelegatingQueryInterface
_TEXT	ENDS
PUBLIC	?IsFormatSupported@CSourceSeeking@@UAGJPBU_GUID@@@Z ; CSourceSeeking::IsFormatSupported
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsFormatSupported@CSourceSeeking@@UAGJPBU_GUID@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pFormat$ = 12						; size = 4
?IsFormatSupported@CSourceSeeking@@UAGJPBU_GUID@@@Z PROC ; CSourceSeeking::IsFormatSupported, COMDAT
; Line 1122
	push	ebp
	mov	ebp, esp
; Line 1123
	cmp	DWORD PTR _pFormat$[ebp], 0
	jne	SHORT $LN1@IsFormatSu@2
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN2@IsFormatSu@2
$LN1@IsFormatSu@2:
; Line 1125
	push	OFFSET _TIME_FORMAT_MEDIA_TIME
	mov	eax, DWORD PTR _pFormat$[ebp]
	push	eax
	call	_==@8
	neg	eax
	sbb	eax, eax
	add	eax, 1
$LN2@IsFormatSu@2:
; Line 1126
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?IsFormatSupported@CSourceSeeking@@UAGJPBU_GUID@@@Z ENDP ; CSourceSeeking::IsFormatSupported
_TEXT	ENDS
PUBLIC	?QueryPreferredFormat@CSourceSeeking@@UAGJPAU_GUID@@@Z ; CSourceSeeking::QueryPreferredFormat
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?QueryPreferredFormat@CSourceSeeking@@UAGJPAU_GUID@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pFormat$ = 12						; size = 4
?QueryPreferredFormat@CSourceSeeking@@UAGJPAU_GUID@@@Z PROC ; CSourceSeeking::QueryPreferredFormat, COMDAT
; Line 1129
	push	ebp
	mov	ebp, esp
; Line 1130
	cmp	DWORD PTR _pFormat$[ebp], 0
	jne	SHORT $LN1@QueryPrefe@2
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN2@QueryPrefe@2
$LN1@QueryPrefe@2:
; Line 1131
	mov	eax, DWORD PTR _pFormat$[ebp]
	mov	ecx, DWORD PTR _TIME_FORMAT_MEDIA_TIME
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _TIME_FORMAT_MEDIA_TIME+4
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _TIME_FORMAT_MEDIA_TIME+8
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _TIME_FORMAT_MEDIA_TIME+12
	mov	DWORD PTR [eax+12], edx
; Line 1132
	xor	eax, eax
$LN2@QueryPrefe@2:
; Line 1133
	pop	ebp
	ret	8
?QueryPreferredFormat@CSourceSeeking@@UAGJPAU_GUID@@@Z ENDP ; CSourceSeeking::QueryPreferredFormat
_TEXT	ENDS
PUBLIC	?SetTimeFormat@CSourceSeeking@@UAGJPBU_GUID@@@Z	; CSourceSeeking::SetTimeFormat
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetTimeFormat@CSourceSeeking@@UAGJPBU_GUID@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pFormat$ = 12						; size = 4
?SetTimeFormat@CSourceSeeking@@UAGJPBU_GUID@@@Z PROC	; CSourceSeeking::SetTimeFormat, COMDAT
; Line 1136
	push	ebp
	mov	ebp, esp
; Line 1137
	cmp	DWORD PTR _pFormat$[ebp], 0
	jne	SHORT $LN1@SetTimeFor@2
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN2@SetTimeFor@2
$LN1@SetTimeFor@2:
; Line 1140
	push	OFFSET _TIME_FORMAT_MEDIA_TIME
	mov	eax, DWORD PTR _pFormat$[ebp]
	push	eax
	call	_==@8
	neg	eax
	sbb	eax, eax
	and	eax, 2147024809				; 7ff8ffa9H
	add	eax, -2147024809			; 80070057H
$LN2@SetTimeFor@2:
; Line 1141
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?SetTimeFormat@CSourceSeeking@@UAGJPBU_GUID@@@Z ENDP	; CSourceSeeking::SetTimeFormat
_TEXT	ENDS
PUBLIC	?IsUsingTimeFormat@CSourceSeeking@@UAGJPBU_GUID@@@Z ; CSourceSeeking::IsUsingTimeFormat
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsUsingTimeFormat@CSourceSeeking@@UAGJPBU_GUID@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pFormat$ = 12						; size = 4
?IsUsingTimeFormat@CSourceSeeking@@UAGJPBU_GUID@@@Z PROC ; CSourceSeeking::IsUsingTimeFormat, COMDAT
; Line 1144
	push	ebp
	mov	ebp, esp
; Line 1145
	cmp	DWORD PTR _pFormat$[ebp], 0
	jne	SHORT $LN1@IsUsingTim@2
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN2@IsUsingTim@2
$LN1@IsUsingTim@2:
; Line 1146
	push	OFFSET _TIME_FORMAT_MEDIA_TIME
	mov	eax, DWORD PTR _pFormat$[ebp]
	push	eax
	call	_==@8
	neg	eax
	sbb	eax, eax
	add	eax, 1
$LN2@IsUsingTim@2:
; Line 1147
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?IsUsingTimeFormat@CSourceSeeking@@UAGJPBU_GUID@@@Z ENDP ; CSourceSeeking::IsUsingTimeFormat
_TEXT	ENDS
PUBLIC	?GetTimeFormatW@CSourceSeeking@@UAGJPAU_GUID@@@Z ; CSourceSeeking::GetTimeFormatW
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTimeFormatW@CSourceSeeking@@UAGJPAU_GUID@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pFormat$ = 12						; size = 4
?GetTimeFormatW@CSourceSeeking@@UAGJPAU_GUID@@@Z PROC	; CSourceSeeking::GetTimeFormatW, COMDAT
; Line 1150
	push	ebp
	mov	ebp, esp
; Line 1151
	cmp	DWORD PTR _pFormat$[ebp], 0
	jne	SHORT $LN1@GetTimeFor@2
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN2@GetTimeFor@2
$LN1@GetTimeFor@2:
; Line 1152
	mov	eax, DWORD PTR _pFormat$[ebp]
	mov	ecx, DWORD PTR _TIME_FORMAT_MEDIA_TIME
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _TIME_FORMAT_MEDIA_TIME+4
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _TIME_FORMAT_MEDIA_TIME+8
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _TIME_FORMAT_MEDIA_TIME+12
	mov	DWORD PTR [eax+12], edx
; Line 1153
	xor	eax, eax
$LN2@GetTimeFor@2:
; Line 1154
	pop	ebp
	ret	8
?GetTimeFormatW@CSourceSeeking@@UAGJPAU_GUID@@@Z ENDP	; CSourceSeeking::GetTimeFormatW
_TEXT	ENDS
PUBLIC	??BCRefTime@@QBE_JXZ				; CRefTime::operator __int64
PUBLIC	?GetDuration@CSourceSeeking@@UAGJPA_J@Z		; CSourceSeeking::GetDuration
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetDuration@CSourceSeeking@@UAGJPA_J@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetDuration@CSourceSeeking@@UAGJPA_J@Z$0
__ehfuncinfo$?GetDuration@CSourceSeeking@@UAGJPA_J@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetDuration@CSourceSeeking@@UAGJPA_J@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?GetDuration@CSourceSeeking@@UAGJPA_J@Z
_TEXT	SEGMENT
$T84441 = -28						; size = 4
_lock$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_pDuration$ = 12					; size = 4
?GetDuration@CSourceSeeking@@UAGJPA_J@Z PROC		; CSourceSeeking::GetDuration, COMDAT
; Line 1157
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetDuration@CSourceSeeking@@UAGJPA_J@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1158
	cmp	DWORD PTR _pDuration$[ebp], 0
	jne	SHORT $LN1@GetDuratio
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN2@GetDuratio
$LN1@GetDuratio:
; Line 1159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1160
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	ecx, DWORD PTR _pDuration$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
; Line 1161
	mov	DWORD PTR $T84441[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84441[ebp]
$LN2@GetDuratio:
; Line 1162
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@GetDuratio
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN8@GetDuratio:
	DD	1
	DD	$LN7@GetDuratio
$LN7@GetDuratio:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN5@GetDuratio
$LN5@GetDuratio:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetDuration@CSourceSeeking@@UAGJPA_J@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?GetDuration@CSourceSeeking@@UAGJPA_J@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetDuration@CSourceSeeking@@UAGJPA_J@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetDuration@CSourceSeeking@@UAGJPA_J@Z ENDP		; CSourceSeeking::GetDuration
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??BCRefTime@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCRefTime@@QBE_JXZ PROC				; CRefTime::operator __int64, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\reftime.h
; Line 76
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 77
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
; Line 78
	mov	esp, ebp
	pop	ebp
	ret	0
??BCRefTime@@QBE_JXZ ENDP				; CRefTime::operator __int64
_TEXT	ENDS
PUBLIC	?GetStopPosition@CSourceSeeking@@UAGJPA_J@Z	; CSourceSeeking::GetStopPosition
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.cpp
xdata$x	SEGMENT
__unwindtable$?GetStopPosition@CSourceSeeking@@UAGJPA_J@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetStopPosition@CSourceSeeking@@UAGJPA_J@Z$0
__ehfuncinfo$?GetStopPosition@CSourceSeeking@@UAGJPA_J@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetStopPosition@CSourceSeeking@@UAGJPA_J@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?GetStopPosition@CSourceSeeking@@UAGJPA_J@Z
_TEXT	SEGMENT
$T84456 = -28						; size = 4
_lock$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_pStop$ = 12						; size = 4
?GetStopPosition@CSourceSeeking@@UAGJPA_J@Z PROC	; CSourceSeeking::GetStopPosition, COMDAT
; Line 1165
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetStopPosition@CSourceSeeking@@UAGJPA_J@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1166
	cmp	DWORD PTR _pStop$[ebp], 0
	jne	SHORT $LN1@GetStopPos
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN2@GetStopPos
$LN1@GetStopPos:
; Line 1167
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1168
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	ecx, DWORD PTR _pStop$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
; Line 1169
	mov	DWORD PTR $T84456[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84456[ebp]
$LN2@GetStopPos:
; Line 1170
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@GetStopPos
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN8@GetStopPos:
	DD	1
	DD	$LN7@GetStopPos
$LN7@GetStopPos:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN5@GetStopPos
$LN5@GetStopPos:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetStopPosition@CSourceSeeking@@UAGJPA_J@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?GetStopPosition@CSourceSeeking@@UAGJPA_J@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetStopPosition@CSourceSeeking@@UAGJPA_J@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetStopPosition@CSourceSeeking@@UAGJPA_J@Z ENDP	; CSourceSeeking::GetStopPosition
PUBLIC	?GetCurrentPosition@CSourceSeeking@@UAGJPA_J@Z	; CSourceSeeking::GetCurrentPosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetCurrentPosition@CSourceSeeking@@UAGJPA_J@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pCurrent$ = 12						; size = 4
?GetCurrentPosition@CSourceSeeking@@UAGJPA_J@Z PROC	; CSourceSeeking::GetCurrentPosition, COMDAT
; Line 1173
	push	ebp
	mov	ebp, esp
; Line 1176
	mov	eax, -2147467263			; 80004001H
; Line 1177
	pop	ebp
	ret	8
?GetCurrentPosition@CSourceSeeking@@UAGJPA_J@Z ENDP	; CSourceSeeking::GetCurrentPosition
_TEXT	ENDS
PUBLIC	?GetCapabilities@CSourceSeeking@@UAGJPAK@Z	; CSourceSeeking::GetCapabilities
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetCapabilities@CSourceSeeking@@UAGJPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pCapabilities$ = 12					; size = 4
?GetCapabilities@CSourceSeeking@@UAGJPAK@Z PROC		; CSourceSeeking::GetCapabilities, COMDAT
; Line 1180
	push	ebp
	mov	ebp, esp
; Line 1181
	cmp	DWORD PTR _pCapabilities$[ebp], 0
	jne	SHORT $LN1@GetCapabil@2
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN2@GetCapabil@2
$LN1@GetCapabil@2:
; Line 1182
	mov	eax, DWORD PTR _pCapabilities$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	DWORD PTR [eax], edx
; Line 1183
	xor	eax, eax
$LN2@GetCapabil@2:
; Line 1184
	pop	ebp
	ret	8
?GetCapabilities@CSourceSeeking@@UAGJPAK@Z ENDP		; CSourceSeeking::GetCapabilities
_TEXT	ENDS
PUBLIC	?CheckCapabilities@CSourceSeeking@@UAGJPAK@Z	; CSourceSeeking::CheckCapabilities
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CheckCapabilities@CSourceSeeking@@UAGJPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pCapabilities$ = 12					; size = 4
?CheckCapabilities@CSourceSeeking@@UAGJPAK@Z PROC	; CSourceSeeking::CheckCapabilities, COMDAT
; Line 1187
	push	ebp
	mov	ebp, esp
; Line 1188
	cmp	DWORD PTR _pCapabilities$[ebp], 0
	jne	SHORT $LN1@CheckCapab@2
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN2@CheckCapab@2
$LN1@CheckCapab@2:
; Line 1191
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+56]
	not	eax
	mov	ecx, DWORD PTR _pCapabilities$[ebp]
	and	eax, DWORD PTR [ecx]
	neg	eax
	sbb	eax, eax
	neg	eax
$LN2@CheckCapab@2:
; Line 1192
	pop	ebp
	ret	8
?CheckCapabilities@CSourceSeeking@@UAGJPAK@Z ENDP	; CSourceSeeking::CheckCapabilities
_TEXT	ENDS
PUBLIC	?ConvertTimeFormat@CSourceSeeking@@UAGJPA_JPBU_GUID@@_J1@Z ; CSourceSeeking::ConvertTimeFormat
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ConvertTimeFormat@CSourceSeeking@@UAGJPA_JPBU_GUID@@_J1@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pTarget$ = 12						; size = 4
_pTargetFormat$ = 16					; size = 4
_Source$ = 20						; size = 8
_pSourceFormat$ = 28					; size = 4
?ConvertTimeFormat@CSourceSeeking@@UAGJPA_JPBU_GUID@@_J1@Z PROC ; CSourceSeeking::ConvertTimeFormat, COMDAT
; Line 1196
	push	ebp
	mov	ebp, esp
; Line 1197
	cmp	DWORD PTR _pTarget$[ebp], 0
	jne	SHORT $LN5@ConvertTim@2
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN6@ConvertTim@2
$LN5@ConvertTim@2:
; Line 1202
	cmp	DWORD PTR _pTargetFormat$[ebp], 0
	je	SHORT $LN3@ConvertTim@2
	push	OFFSET _TIME_FORMAT_MEDIA_TIME
	mov	eax, DWORD PTR _pTargetFormat$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@ConvertTim@2
$LN3@ConvertTim@2:
; Line 1204
	cmp	DWORD PTR _pSourceFormat$[ebp], 0
	je	SHORT $LN1@ConvertTim@2
	push	OFFSET _TIME_FORMAT_MEDIA_TIME
	mov	ecx, DWORD PTR _pSourceFormat$[ebp]
	push	ecx
	call	_==@8
	test	eax, eax
	je	SHORT $LN4@ConvertTim@2
$LN1@ConvertTim@2:
; Line 1206
	mov	edx, DWORD PTR _pTarget$[ebp]
	mov	eax, DWORD PTR _Source$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _Source$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
; Line 1207
	xor	eax, eax
	jmp	SHORT $LN6@ConvertTim@2
$LN4@ConvertTim@2:
; Line 1211
	mov	eax, -2147024809			; 80070057H
$LN6@ConvertTim@2:
; Line 1212
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	24					; 00000018H
?ConvertTimeFormat@CSourceSeeking@@UAGJPA_JPBU_GUID@@_J1@Z ENDP ; CSourceSeeking::ConvertTimeFormat
_TEXT	ENDS
PUBLIC	??YCRefTime@@QAEAAV0@ABV0@@Z			; CRefTime::operator+=
PUBLIC	??0CRefTime@@QAE@_J@Z				; CRefTime::CRefTime
PUBLIC	?SetPositions@CSourceSeeking@@UAGJPA_JK0K@Z	; CSourceSeeking::SetPositions
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetPositions@CSourceSeeking@@UAGJPA_JK0K@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetPositions@CSourceSeeking@@UAGJPA_JK0K@Z$0
__ehfuncinfo$?SetPositions@CSourceSeeking@@UAGJPA_JK0K@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetPositions@CSourceSeeking@@UAGJPA_JK0K@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?SetPositions@CSourceSeeking@@UAGJPA_JK0K@Z
_TEXT	SEGMENT
$T84477 = -44						; size = 8
_hr$ = -36						; size = 4
_lock$82410 = -28					; size = 4
_StartPosBits$ = -20					; size = 4
_StopPosBits$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_pCurrent$ = 12						; size = 4
_CurrentFlags$ = 16					; size = 4
_pStop$ = 20						; size = 4
_StopFlags$ = 24					; size = 4
?SetPositions@CSourceSeeking@@UAGJPA_JK0K@Z PROC	; CSourceSeeking::SetPositions, COMDAT
; Line 1217
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetPositions@CSourceSeeking@@UAGJPA_JK0K@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1218
	mov	eax, DWORD PTR _StopFlags$[ebp]
	and	eax, 3
	mov	DWORD PTR _StopPosBits$[ebp], eax
; Line 1219
	mov	ecx, DWORD PTR _CurrentFlags$[ebp]
	and	ecx, 3
	mov	DWORD PTR _StartPosBits$[ebp], ecx
; Line 1221
	cmp	DWORD PTR _StopFlags$[ebp], 0
	je	SHORT $LN16@SetPositio@2
; Line 1222
	cmp	DWORD PTR _pStop$[ebp], 0
	jne	SHORT $LN15@SetPositio@2
	mov	eax, -2147467261			; 80004003H
	jmp	$LN17@SetPositio@2
$LN15@SetPositio@2:
; Line 1225
	mov	edx, DWORD PTR _StopPosBits$[ebp]
	cmp	edx, DWORD PTR _StopFlags$[ebp]
	je	SHORT $LN16@SetPositio@2
; Line 1226
	mov	eax, -2147024809			; 80070057H
	jmp	$LN17@SetPositio@2
$LN16@SetPositio@2:
; Line 1230
	cmp	DWORD PTR _CurrentFlags$[ebp], 0
	je	SHORT $LN13@SetPositio@2
; Line 1231
	cmp	DWORD PTR _pCurrent$[ebp], 0
	jne	SHORT $LN12@SetPositio@2
	mov	eax, -2147467261			; 80004003H
	jmp	$LN17@SetPositio@2
$LN12@SetPositio@2:
; Line 1233
	cmp	DWORD PTR _StartPosBits$[ebp], 1
	je	SHORT $LN13@SetPositio@2
	cmp	DWORD PTR _StartPosBits$[ebp], 2
	je	SHORT $LN13@SetPositio@2
; Line 1234
	mov	eax, -2147024809			; 80070057H
	jmp	$LN17@SetPositio@2
$LN13@SetPositio@2:
; Line 1241
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	lea	ecx, DWORD PTR _lock$82410[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1244
	cmp	DWORD PTR _StartPosBits$[ebp], 1
	jne	SHORT $LN10@SetPositio@2
; Line 1246
	mov	edx, DWORD PTR _pCurrent$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR [edx]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??4CRefTime@@QAEAAV0@_J@Z		; CRefTime::operator=
	jmp	SHORT $LN9@SetPositio@2
$LN10@SetPositio@2:
; Line 1248
	cmp	DWORD PTR _StartPosBits$[ebp], 2
	jne	SHORT $LN9@SetPositio@2
; Line 1250
	mov	edx, DWORD PTR _pCurrent$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR [edx]
	push	ecx
	lea	ecx, DWORD PTR $T84477[ebp]
	call	??0CRefTime@@QAE@_J@Z			; CRefTime::CRefTime
	lea	edx, DWORD PTR $T84477[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??YCRefTime@@QAEAAV0@ABV0@@Z		; CRefTime::operator+=
$LN9@SetPositio@2:
; Line 1254
	cmp	DWORD PTR _StopPosBits$[ebp], 1
	jne	SHORT $LN7@SetPositio@2
; Line 1256
	mov	eax, DWORD PTR _pStop$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??4CRefTime@@QAEAAV0@_J@Z		; CRefTime::operator=
	jmp	SHORT $LN6@SetPositio@2
$LN7@SetPositio@2:
; Line 1258
	cmp	DWORD PTR _StopPosBits$[ebp], 3
	jne	SHORT $LN5@SetPositio@2
; Line 1260
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	ecx, DWORD PTR _pStop$[ebp]
	add	eax, DWORD PTR [ecx]
	adc	edx, DWORD PTR [ecx+4]
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??4CRefTime@@QAEAAV0@_J@Z		; CRefTime::operator=
	jmp	SHORT $LN6@SetPositio@2
$LN5@SetPositio@2:
; Line 1262
	cmp	DWORD PTR _StopPosBits$[ebp], 2
	jne	SHORT $LN6@SetPositio@2
; Line 1264
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	ecx, DWORD PTR _pStop$[ebp]
	add	eax, DWORD PTR [ecx]
	adc	edx, DWORD PTR [ecx+4]
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??4CRefTime@@QAEAAV0@_J@Z		; CRefTime::operator=
$LN6@SetPositio@2:
; Line 1266
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$82410[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
; Line 1269
	mov	DWORD PTR _hr$[ebp], 0
; Line 1270
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN2@SetPositio@2
	cmp	DWORD PTR _StopPosBits$[ebp], 0
	je	SHORT $LN2@SetPositio@2
; Line 1271
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+84]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$LN2@SetPositio@2:
; Line 1273
	cmp	DWORD PTR _StartPosBits$[ebp], 0
	je	SHORT $LN1@SetPositio@2
; Line 1274
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$LN1@SetPositio@2:
; Line 1277
	mov	eax, DWORD PTR _hr$[ebp]
$LN17@SetPositio@2:
; Line 1278
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@SetPositio@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN23@SetPositio@2:
	DD	1
	DD	$LN22@SetPositio@2
$LN22@SetPositio@2:
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN20@SetPositio@2
$LN20@SetPositio@2:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetPositions@CSourceSeeking@@UAGJPA_JK0K@Z$0:
	lea	ecx, DWORD PTR _lock$82410[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?SetPositions@CSourceSeeking@@UAGJPA_JK0K@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetPositions@CSourceSeeking@@UAGJPA_JK0K@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetPositions@CSourceSeeking@@UAGJPA_JK0K@Z ENDP	; CSourceSeeking::SetPositions
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CRefTime@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rt$ = 8						; size = 8
??0CRefTime@@QAE@_J@Z PROC				; CRefTime::CRefTime, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\reftime.h
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _rt$[ebp+4]
	mov	DWORD PTR [eax+4], edx
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0CRefTime@@QAE@_J@Z ENDP				; CRefTime::CRefTime
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??YCRefTime@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rt$ = 8						; size = 4
??YCRefTime@@QAEAAV0@ABV0@@Z PROC			; CRefTime::operator+=, COMDAT
; _this$ = ecx
; Line 93
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 94
	mov	ecx, DWORD PTR _this$[ebp]
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	esi, eax
	mov	edi, edx
	mov	ecx, DWORD PTR _rt$[ebp]
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	add	esi, eax
	adc	edi, edx
	push	edi
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4CRefTime@@QAEAAV0@_J@Z		; CRefTime::operator=
; Line 95
	pop	edi
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YCRefTime@@QAEAAV0@ABV0@@Z ENDP			; CRefTime::operator+=
_TEXT	ENDS
PUBLIC	?GetPositions@CSourceSeeking@@UAGJPA_J0@Z	; CSourceSeeking::GetPositions
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetPositions@CSourceSeeking@@UAGJPA_J0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pCurrent$ = 12						; size = 4
_pStop$ = 16						; size = 4
?GetPositions@CSourceSeeking@@UAGJPA_J0@Z PROC		; CSourceSeeking::GetPositions, COMDAT
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.cpp
; Line 1282
	push	ebp
	mov	ebp, esp
; Line 1283
	cmp	DWORD PTR _pCurrent$[ebp], 0
	je	SHORT $LN2@GetPositio@2
; Line 1284
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	ecx, DWORD PTR _pCurrent$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
$LN2@GetPositio@2:
; Line 1286
	cmp	DWORD PTR _pStop$[ebp], 0
	je	SHORT $LN1@GetPositio@2
; Line 1287
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	ecx, DWORD PTR _pStop$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
$LN1@GetPositio@2:
; Line 1290
	xor	eax, eax
; Line 1291
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?GetPositions@CSourceSeeking@@UAGJPA_J0@Z ENDP		; CSourceSeeking::GetPositions
_TEXT	ENDS
PUBLIC	?GetAvailable@CSourceSeeking@@UAGJPA_J0@Z	; CSourceSeeking::GetAvailable
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetAvailable@CSourceSeeking@@UAGJPA_J0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetAvailable@CSourceSeeking@@UAGJPA_J0@Z$0
__ehfuncinfo$?GetAvailable@CSourceSeeking@@UAGJPA_J0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetAvailable@CSourceSeeking@@UAGJPA_J0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?GetAvailable@CSourceSeeking@@UAGJPA_J0@Z
_TEXT	SEGMENT
_lock$82440 = -20					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_pEarliest$ = 12					; size = 4
_pLatest$ = 16						; size = 4
?GetAvailable@CSourceSeeking@@UAGJPA_J0@Z PROC		; CSourceSeeking::GetAvailable, COMDAT
; Line 1295
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetAvailable@CSourceSeeking@@UAGJPA_J0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1296
	cmp	DWORD PTR _pEarliest$[ebp], 0
	je	SHORT $LN2@GetAvailab@2
; Line 1297
	mov	eax, DWORD PTR _pEarliest$[ebp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
$LN2@GetAvailab@2:
; Line 1299
	cmp	DWORD PTR _pLatest$[ebp], 0
	je	SHORT $LN1@GetAvailab@2
; Line 1300
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	lea	ecx, DWORD PTR _lock$82440[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1301
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	ecx, DWORD PTR _pLatest$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
; Line 1302
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$82440[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
$LN1@GetAvailab@2:
; Line 1303
	xor	eax, eax
; Line 1304
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GetAvailab@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN9@GetAvailab@2:
	DD	1
	DD	$LN8@GetAvailab@2
$LN8@GetAvailab@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@GetAvailab@2
$LN6@GetAvailab@2:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetAvailable@CSourceSeeking@@UAGJPA_J0@Z$0:
	lea	ecx, DWORD PTR _lock$82440[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?GetAvailable@CSourceSeeking@@UAGJPA_J0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetAvailable@CSourceSeeking@@UAGJPA_J0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetAvailable@CSourceSeeking@@UAGJPA_J0@Z ENDP		; CSourceSeeking::GetAvailable
PUBLIC	?SetRate@CSourceSeeking@@UAGJN@Z		; CSourceSeeking::SetRate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetRate@CSourceSeeking@@UAGJN@Z
_TEXT	SEGMENT
_lock$82446 = -8					; size = 4
_this$ = 8						; size = 4
_dRate$ = 12						; size = 8
?SetRate@CSourceSeeking@@UAGJN@Z PROC			; CSourceSeeking::SetRate, COMDAT
; Line 1307
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1309
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	lea	ecx, DWORD PTR _lock$82446[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
; Line 1310
	mov	edx, DWORD PTR _this$[ebp]
	fld	QWORD PTR _dRate$[ebp]
	fstp	QWORD PTR [edx+48]
; Line 1311
	lea	ecx, DWORD PTR _lock$82446[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
; Line 1312
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1313
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetRate@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN6@SetRate@2:
	DD	1
	DD	$LN5@SetRate@2
$LN5@SetRate@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@SetRate@2
$LN4@SetRate@2:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?SetRate@CSourceSeeking@@UAGJN@Z ENDP			; CSourceSeeking::SetRate
_TEXT	ENDS
PUBLIC	?GetRate@CSourceSeeking@@UAGJPAN@Z		; CSourceSeeking::GetRate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetRate@CSourceSeeking@@UAGJPAN@Z
_TEXT	SEGMENT
$T84514 = -16						; size = 4
_lock$ = -8						; size = 4
_this$ = 8						; size = 4
_pdRate$ = 12						; size = 4
?GetRate@CSourceSeeking@@UAGJPAN@Z PROC			; CSourceSeeking::GetRate, COMDAT
; Line 1316
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1317
	cmp	DWORD PTR _pdRate$[ebp], 0
	jne	SHORT $LN1@GetRate@2
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN2@GetRate@2
$LN1@GetRate@2:
; Line 1318
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
; Line 1319
	mov	edx, DWORD PTR _pdRate$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	fld	QWORD PTR [eax+48]
	fstp	QWORD PTR [edx]
; Line 1320
	mov	DWORD PTR $T84514[ebp], 0
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84514[ebp]
$LN2@GetRate@2:
; Line 1321
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@GetRate@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN7@GetRate@2:
	DD	1
	DD	$LN6@GetRate@2
$LN6@GetRate@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@GetRate@2
$LN5@GetRate@2:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?GetRate@CSourceSeeking@@UAGJPAN@Z ENDP			; CSourceSeeking::GetRate
_TEXT	ENDS
PUBLIC	?GetPreroll@CSourceSeeking@@UAGJPA_J@Z		; CSourceSeeking::GetPreroll
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetPreroll@CSourceSeeking@@UAGJPA_J@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pPreroll$ = 12						; size = 4
?GetPreroll@CSourceSeeking@@UAGJPA_J@Z PROC		; CSourceSeeking::GetPreroll, COMDAT
; Line 1324
	push	ebp
	mov	ebp, esp
; Line 1325
	cmp	DWORD PTR _pPreroll$[ebp], 0
	jne	SHORT $LN1@GetPreroll
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN2@GetPreroll
$LN1@GetPreroll:
; Line 1326
	mov	eax, DWORD PTR _pPreroll$[ebp]
	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
; Line 1327
	xor	eax, eax
$LN2@GetPreroll:
; Line 1328
	pop	ebp
	ret	8
?GetPreroll@CSourceSeeking@@UAGJPA_J@Z ENDP		; CSourceSeeking::GetPreroll
_TEXT	ENDS
PUBLIC	??4COARefTime@@QAEAAV0@AB_J@Z			; COARefTime::operator=
PUBLIC	??0COARefTime@@QAE@VCRefTime@@@Z		; COARefTime::COARefTime
PUBLIC	??0COARefTime@@QAE@XZ				; COARefTime::COARefTime
PUBLIC	??0CSourcePosition@@QAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z ; CSourcePosition::CSourcePosition
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CSourcePosition@@QAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CSourcePosition@@QAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z$0
__ehfuncinfo$??0CSourcePosition@@QAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CSourcePosition@@QAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CSourcePosition@@QAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z
_TEXT	SEGMENT
$T84524 = -32						; size = 8
$T84523 = -24						; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pName$ = 8						; size = 4
_pUnk$ = 12						; size = 4
_phr$ = 16						; size = 4
_pLock$ = 20						; size = 4
??0CSourcePosition@@QAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z PROC ; CSourcePosition::CSourcePosition, COMDAT
; _this$ = ecx
; Line 1344
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CSourcePosition@@QAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pUnk$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CMediaPosition@@QAE@PB_WPAUIUnknown@@@Z ; CMediaPosition::CMediaPosition
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0COARefTime@@QAE@XZ			; COARefTime::COARefTime
	push	0
	push	0
	lea	ecx, DWORD PTR $T84523[ebp]
	call	??0CRefTime@@QAE@_J@Z			; CRefTime::CRefTime
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0COARefTime@@QAE@VCRefTime@@@Z	; COARefTime::COARefTime
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0COARefTime@@QAE@XZ			; COARefTime::COARefTime
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pLock$[ebp]
	mov	DWORD PTR [ecx+56], edx
; Line 1345
	mov	DWORD PTR $T84524[ebp], -1
	mov	DWORD PTR $T84524[ebp+4], 2147483647	; 7fffffffH
	lea	eax, DWORD PTR $T84524[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??4COARefTime@@QAEAAV0@AB_J@Z		; COARefTime::operator=
; Line 1346
	mov	ecx, DWORD PTR _this$[ebp]
	fld1
	fstp	QWORD PTR [ecx+48]
; Line 1347
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CSourcePosition@@QAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CMediaPosition@@UAE@XZ
__ehhandler$??0CSourcePosition@@QAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CSourcePosition@@QAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CSourcePosition@@QAE@PB_WPAUIUnknown@@PAJPAVCCritSec@@@Z ENDP ; CSourcePosition::CSourcePosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0COARefTime@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0COARefTime@@QAE@XZ PROC				; COARefTime::COARefTime, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.h
; Line 189
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CRefTime@@QAE@XZ			; CRefTime::CRefTime
; Line 190
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0COARefTime@@QAE@XZ ENDP				; COARefTime::COARefTime
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0COARefTime@@QAE@VCRefTime@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t$ = 8							; size = 8
??0COARefTime@@QAE@VCRefTime@@@Z PROC			; COARefTime::COARefTime, COMDAT
; _this$ = ecx
; Line 194
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _t$[ebp+4]
	mov	DWORD PTR [eax+4], edx
; Line 195
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0COARefTime@@QAE@VCRefTime@@@Z ENDP			; COARefTime::COARefTime
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??4COARefTime@@QAEAAV0@AB_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rt$ = 8						; size = 4
??4COARefTime@@QAEAAV0@AB_J@Z PROC			; COARefTime::operator=, COMDAT
; _this$ = ecx
; Line 219
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 220
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx
; Line 221
	mov	eax, DWORD PTR _this$[ebp]
; Line 222
	mov	esp, ebp
	pop	ebp
	ret	4
??4COARefTime@@QAEAAV0@AB_J@Z ENDP			; COARefTime::operator=
_TEXT	ENDS
PUBLIC	??BCOARefTime@@QAENXZ				; COARefTime::operator double
PUBLIC	?get_Duration@CSourcePosition@@UAGJPAN@Z	; CSourcePosition::get_Duration
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.cpp
xdata$x	SEGMENT
__unwindtable$?get_Duration@CSourcePosition@@UAGJPAN@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?get_Duration@CSourcePosition@@UAGJPAN@Z$0
__ehfuncinfo$?get_Duration@CSourcePosition@@UAGJPAN@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?get_Duration@CSourcePosition@@UAGJPAN@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?get_Duration@CSourcePosition@@UAGJPAN@Z
_TEXT	SEGMENT
$T84540 = -28						; size = 4
_lock$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_plength$ = 12						; size = 4
?get_Duration@CSourcePosition@@UAGJPAN@Z PROC		; CSourcePosition::get_Duration, COMDAT
; Line 1352
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?get_Duration@CSourcePosition@@UAGJPAN@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1353
	cmp	DWORD PTR _plength$[ebp], 0
	jne	SHORT $LN3@get_Durati@2
	mov	eax, -2147467261			; 80004003H
	jmp	$LN4@get_Durati@2
$LN3@get_Durati@2:
; Line 1354
	mov	esi, esp
	push	8
	mov	eax, DWORD PTR _plength$[ebp]
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN2@get_Durati@2
	push	1354					; 0000054aH
	push	OFFSET $SG82488
	push	OFFSET $SG82489
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN2@get_Durati@2:
	mov	esi, esp
	push	8
	mov	ecx, DWORD PTR _plength$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsBadWritePtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN1@get_Durati@2
	push	1354					; 0000054aH
	push	OFFSET $SG82493
	push	OFFSET $SG82494
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN1@get_Durati@2:
; Line 1355
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1357
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??BCOARefTime@@QAENXZ			; COARefTime::operator double
	mov	ecx, DWORD PTR _plength$[ebp]
	fstp	QWORD PTR [ecx]
; Line 1358
	mov	DWORD PTR $T84540[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84540[ebp]
$LN4@get_Durati@2:
; Line 1359
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@get_Durati@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN10@get_Durati@2:
	DD	1
	DD	$LN9@get_Durati@2
$LN9@get_Durati@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN7@get_Durati@2
$LN7@get_Durati@2:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?get_Duration@CSourcePosition@@UAGJPAN@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?get_Duration@CSourcePosition@@UAGJPAN@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?get_Duration@CSourcePosition@@UAGJPAN@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?get_Duration@CSourcePosition@@UAGJPAN@Z ENDP		; CSourcePosition::get_Duration
PUBLIC	__real@416312d000000000
;	COMDAT __real@416312d000000000
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.h
CONST	SEGMENT
__real@416312d000000000 DQ 0416312d000000000r	; 1e+007
; Function compile flags: /Odtp /RTCsu
CONST	ENDS
;	COMDAT ??BCOARefTime@@QAENXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCOARefTime@@QAENXZ PROC				; COARefTime::operator double, COMDAT
; _this$ = ecx
; Line 206
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 207
	mov	eax, DWORD PTR _this$[ebp]
	fild	QWORD PTR [eax]
	fdiv	QWORD PTR __real@416312d000000000
; Line 208
	mov	esp, ebp
	pop	ebp
	ret	0
??BCOARefTime@@QAENXZ ENDP				; COARefTime::operator double
_TEXT	ENDS
PUBLIC	??4COARefTime@@QAEAAV0@ABN@Z			; COARefTime::operator=
PUBLIC	?put_CurrentPosition@CSourcePosition@@UAGJN@Z	; CSourcePosition::put_CurrentPosition
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?put_CurrentPosition@CSourcePosition@@UAGJN@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_llTime$ = 12						; size = 8
?put_CurrentPosition@CSourcePosition@@UAGJN@Z PROC	; CSourcePosition::put_CurrentPosition, COMDAT
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.cpp
; Line 1364
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1365
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	call	?Lock@CCritSec@@QAEXXZ			; CCritSec::Lock
; Line 1366
	lea	ecx, DWORD PTR _llTime$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??4COARefTime@@QAEAAV0@ABN@Z		; COARefTime::operator=
; Line 1367
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+56]
	call	?Unlock@CCritSec@@QAEXXZ		; CCritSec::Unlock
; Line 1369
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+72]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1370
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?put_CurrentPosition@CSourcePosition@@UAGJN@Z ENDP	; CSourcePosition::put_CurrentPosition
_TEXT	ENDS
EXTRN	__ftol2:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4COARefTime@@QAEAAV0@ABN@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rd$ = 8						; size = 4
??4COARefTime@@QAEAAV0@ABN@Z PROC			; COARefTime::operator=, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.h
; Line 214
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 215
	mov	eax, DWORD PTR _rd$[ebp]
	fld	QWORD PTR [eax]
	fmul	QWORD PTR __real@416312d000000000
	call	__ftol2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
; Line 216
	mov	eax, DWORD PTR _this$[ebp]
; Line 217
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4COARefTime@@QAEAAV0@ABN@Z ENDP			; COARefTime::operator=
_TEXT	ENDS
PUBLIC	?get_StopTime@CSourcePosition@@UAGJPAN@Z	; CSourcePosition::get_StopTime
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.cpp
xdata$x	SEGMENT
__unwindtable$?get_StopTime@CSourcePosition@@UAGJPAN@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?get_StopTime@CSourcePosition@@UAGJPAN@Z$0
__ehfuncinfo$?get_StopTime@CSourcePosition@@UAGJPAN@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?get_StopTime@CSourcePosition@@UAGJPAN@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?get_StopTime@CSourcePosition@@UAGJPAN@Z
_TEXT	SEGMENT
$T84562 = -28						; size = 4
_lock$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_pllTime$ = 12						; size = 4
?get_StopTime@CSourcePosition@@UAGJPAN@Z PROC		; CSourcePosition::get_StopTime, COMDAT
; Line 1375
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?get_StopTime@CSourcePosition@@UAGJPAN@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1376
	cmp	DWORD PTR _pllTime$[ebp], 0
	jne	SHORT $LN3@get_StopTi@2
	mov	eax, -2147467261			; 80004003H
	jmp	$LN4@get_StopTi@2
$LN3@get_StopTi@2:
; Line 1377
	mov	esi, esp
	push	8
	mov	eax, DWORD PTR _pllTime$[ebp]
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN2@get_StopTi@2
	push	1377					; 00000561H
	push	OFFSET $SG82511
	push	OFFSET $SG82512
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN2@get_StopTi@2:
	mov	esi, esp
	push	8
	mov	ecx, DWORD PTR _pllTime$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsBadWritePtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN1@get_StopTi@2
	push	1377					; 00000561H
	push	OFFSET $SG82516
	push	OFFSET $SG82517
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN1@get_StopTi@2:
; Line 1378
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1380
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??BCOARefTime@@QAENXZ			; COARefTime::operator double
	mov	ecx, DWORD PTR _pllTime$[ebp]
	fstp	QWORD PTR [ecx]
; Line 1381
	mov	DWORD PTR $T84562[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84562[ebp]
$LN4@get_StopTi@2:
; Line 1382
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@get_StopTi@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN10@get_StopTi@2:
	DD	1
	DD	$LN9@get_StopTi@2
$LN9@get_StopTi@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN7@get_StopTi@2
$LN7@get_StopTi@2:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?get_StopTime@CSourcePosition@@UAGJPAN@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?get_StopTime@CSourcePosition@@UAGJPAN@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?get_StopTime@CSourcePosition@@UAGJPAN@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?get_StopTime@CSourcePosition@@UAGJPAN@Z ENDP		; CSourcePosition::get_StopTime
PUBLIC	?put_StopTime@CSourcePosition@@UAGJN@Z		; CSourcePosition::put_StopTime
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?put_StopTime@CSourcePosition@@UAGJN@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_llTime$ = 12						; size = 8
?put_StopTime@CSourcePosition@@UAGJN@Z PROC		; CSourcePosition::put_StopTime, COMDAT
; Line 1387
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1388
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	call	?Lock@CCritSec@@QAEXXZ			; CCritSec::Lock
; Line 1389
	lea	ecx, DWORD PTR _llTime$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??4COARefTime@@QAEAAV0@ABN@Z		; COARefTime::operator=
; Line 1390
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+56]
	call	?Unlock@CCritSec@@QAEXXZ		; CCritSec::Unlock
; Line 1392
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1393
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?put_StopTime@CSourcePosition@@UAGJN@Z ENDP		; CSourcePosition::put_StopTime
_TEXT	ENDS
PUBLIC	?get_PrerollTime@CSourcePosition@@UAGJPAN@Z	; CSourcePosition::get_PrerollTime
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get_PrerollTime@CSourcePosition@@UAGJPAN@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pllTime$ = 12						; size = 4
?get_PrerollTime@CSourcePosition@@UAGJPAN@Z PROC	; CSourcePosition::get_PrerollTime, COMDAT
; Line 1398
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1399
	cmp	DWORD PTR _pllTime$[ebp], 0
	jne	SHORT $LN3@get_Prerol@2
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN4@get_Prerol@2
$LN3@get_Prerol@2:
; Line 1400
	mov	esi, esp
	push	8
	mov	eax, DWORD PTR _pllTime$[ebp]
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN2@get_Prerol@2
	push	1400					; 00000578H
	push	OFFSET $SG82534
	push	OFFSET $SG82535
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN2@get_Prerol@2:
	mov	esi, esp
	push	8
	mov	ecx, DWORD PTR _pllTime$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsBadWritePtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN1@get_Prerol@2
	push	1400					; 00000578H
	push	OFFSET $SG82539
	push	OFFSET $SG82540
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN1@get_Prerol@2:
; Line 1401
	mov	eax, -2147467263			; 80004001H
$LN4@get_Prerol@2:
; Line 1402
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?get_PrerollTime@CSourcePosition@@UAGJPAN@Z ENDP	; CSourcePosition::get_PrerollTime
_TEXT	ENDS
PUBLIC	?put_PrerollTime@CSourcePosition@@UAGJN@Z	; CSourcePosition::put_PrerollTime
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?put_PrerollTime@CSourcePosition@@UAGJN@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_llTime$ = 12						; size = 8
?put_PrerollTime@CSourcePosition@@UAGJN@Z PROC		; CSourcePosition::put_PrerollTime, COMDAT
; Line 1407
	push	ebp
	mov	ebp, esp
; Line 1408
	mov	eax, -2147467263			; 80004001H
; Line 1409
	pop	ebp
	ret	12					; 0000000cH
?put_PrerollTime@CSourcePosition@@UAGJN@Z ENDP		; CSourcePosition::put_PrerollTime
_TEXT	ENDS
PUBLIC	?get_Rate@CSourcePosition@@UAGJPAN@Z		; CSourcePosition::get_Rate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get_Rate@CSourcePosition@@UAGJPAN@Z
_TEXT	SEGMENT
$T84581 = -16						; size = 4
_lock$ = -8						; size = 4
_this$ = 8						; size = 4
_pdRate$ = 12						; size = 4
?get_Rate@CSourcePosition@@UAGJPAN@Z PROC		; CSourcePosition::get_Rate, COMDAT
; Line 1414
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1415
	cmp	DWORD PTR _pdRate$[ebp], 0
	jne	SHORT $LN3@get_Rate@2
	mov	eax, -2147467261			; 80004003H
	jmp	$LN4@get_Rate@2
$LN3@get_Rate@2:
; Line 1416
	mov	esi, esp
	push	8
	mov	eax, DWORD PTR _pdRate$[ebp]
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN2@get_Rate@2
	push	1416					; 00000588H
	push	OFFSET $SG82556
	push	OFFSET $SG82557
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN2@get_Rate@2:
	mov	esi, esp
	push	8
	mov	ecx, DWORD PTR _pdRate$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsBadWritePtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN1@get_Rate@2
	push	1416					; 00000588H
	push	OFFSET $SG82561
	push	OFFSET $SG82562
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN1@get_Rate@2:
; Line 1417
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
; Line 1419
	mov	ecx, DWORD PTR _pdRate$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	fld	QWORD PTR [edx+48]
	fstp	QWORD PTR [ecx]
; Line 1420
	mov	DWORD PTR $T84581[ebp], 0
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84581[ebp]
$LN4@get_Rate@2:
; Line 1421
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@get_Rate@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN9@get_Rate@2:
	DD	1
	DD	$LN8@get_Rate@2
$LN8@get_Rate@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN7@get_Rate@2
$LN7@get_Rate@2:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?get_Rate@CSourcePosition@@UAGJPAN@Z ENDP		; CSourcePosition::get_Rate
_TEXT	ENDS
PUBLIC	?put_Rate@CSourcePosition@@UAGJN@Z		; CSourcePosition::put_Rate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?put_Rate@CSourcePosition@@UAGJN@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_dRate$ = 12						; size = 8
?put_Rate@CSourcePosition@@UAGJN@Z PROC			; CSourcePosition::put_Rate, COMDAT
; Line 1426
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1427
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	call	?Lock@CCritSec@@QAEXXZ			; CCritSec::Lock
; Line 1428
	mov	ecx, DWORD PTR _this$[ebp]
	fld	QWORD PTR _dRate$[ebp]
	fstp	QWORD PTR [ecx+48]
; Line 1429
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+56]
	call	?Unlock@CCritSec@@QAEXXZ		; CCritSec::Unlock
; Line 1431
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1432
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?put_Rate@CSourcePosition@@UAGJN@Z ENDP			; CSourcePosition::put_Rate
_TEXT	ENDS
PUBLIC	?CanSeekForward@CSourcePosition@@UAGJPAJ@Z	; CSourcePosition::CanSeekForward
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CanSeekForward@CSourcePosition@@UAGJPAJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pCanSeekForward$ = 12					; size = 4
?CanSeekForward@CSourcePosition@@UAGJPAJ@Z PROC		; CSourcePosition::CanSeekForward, COMDAT
; Line 1439
	push	ebp
	mov	ebp, esp
; Line 1440
	cmp	DWORD PTR _pCanSeekForward$[ebp], 0
	jne	SHORT $LN1@CanSeekFor@2
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN2@CanSeekFor@2
$LN1@CanSeekFor@2:
; Line 1441
	mov	eax, DWORD PTR _pCanSeekForward$[ebp]
	mov	DWORD PTR [eax], -1
; Line 1442
	xor	eax, eax
$LN2@CanSeekFor@2:
; Line 1443
	pop	ebp
	ret	8
?CanSeekForward@CSourcePosition@@UAGJPAJ@Z ENDP		; CSourcePosition::CanSeekForward
_TEXT	ENDS
PUBLIC	?CanSeekBackward@CSourcePosition@@UAGJPAJ@Z	; CSourcePosition::CanSeekBackward
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CanSeekBackward@CSourcePosition@@UAGJPAJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pCanSeekBackward$ = 12					; size = 4
?CanSeekBackward@CSourcePosition@@UAGJPAJ@Z PROC	; CSourcePosition::CanSeekBackward, COMDAT
; Line 1450
	push	ebp
	mov	ebp, esp
; Line 1451
	cmp	DWORD PTR _pCanSeekBackward$[ebp], 0
	jne	SHORT $LN1@CanSeekBac@2
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN2@CanSeekBac@2
$LN1@CanSeekBac@2:
; Line 1452
	mov	eax, DWORD PTR _pCanSeekBackward$[ebp]
	mov	DWORD PTR [eax], -1
; Line 1453
	xor	eax, eax
$LN2@CanSeekBac@2:
; Line 1454
	pop	ebp
	ret	8
?CanSeekBackward@CSourcePosition@@UAGJPAJ@Z ENDP	; CSourcePosition::CanSeekBackward
_TEXT	ENDS
PUBLIC	??0IBasicAudio@@QAE@XZ				; IBasicAudio::IBasicAudio
PUBLIC	??0CBasicAudio@@QAE@PB_WPAUIUnknown@@@Z		; CBasicAudio::CBasicAudio
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CBasicAudio@@QAE@PB_WPAUIUnknown@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CBasicAudio@@QAE@PB_WPAUIUnknown@@@Z$0
__ehfuncinfo$??0CBasicAudio@@QAE@PB_WPAUIUnknown@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CBasicAudio@@QAE@PB_WPAUIUnknown@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CBasicAudio@@QAE@PB_WPAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pName$ = 8						; size = 4
_punk$ = 12						; size = 4
??0CBasicAudio@@QAE@PB_WPAUIUnknown@@@Z PROC		; CBasicAudio::CBasicAudio, COMDAT
; _this$ = ecx
; Line 1462
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CBasicAudio@@QAE@PB_WPAUIUnknown@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IBasicAudio@@QAE@XZ
	mov	eax, DWORD PTR _punk$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CUnknown@@QAE@PB_WPAUIUnknown@@@Z	; CUnknown::CUnknown
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0CBaseDispatch@@QAE@XZ		; CBaseDispatch::CBaseDispatch
; Line 1463
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CBasicAudio@@QAE@PB_WPAUIUnknown@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1CUnknown@@UAE@XZ			; CUnknown::~CUnknown
__ehhandler$??0CBasicAudio@@QAE@PB_WPAUIUnknown@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CBasicAudio@@QAE@PB_WPAUIUnknown@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CBasicAudio@@QAE@PB_WPAUIUnknown@@@Z ENDP		; CBasicAudio::CBasicAudio
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IBasicAudio@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IBasicAudio@@QAE@XZ PROC				; IBasicAudio::IBasicAudio, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IDispatch@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IBasicAudio@@QAE@XZ ENDP				; IBasicAudio::IBasicAudio
_TEXT	ENDS
PUBLIC	?NonDelegatingQueryInterface@CBasicAudio@@UAGJABU_GUID@@PAPAX@Z ; CBasicAudio::NonDelegatingQueryInterface
EXTRN	_IID_IBasicAudio:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?NonDelegatingQueryInterface@CBasicAudio@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?NonDelegatingQueryInterface@CBasicAudio@@UAGJABU_GUID@@PAPAX@Z PROC ; CBasicAudio::NonDelegatingQueryInterface, COMDAT
; Line 1469
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1470
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN4@NonDelegat@6
	push	1470					; 000005beH
	push	OFFSET $SG82605
	push	OFFSET $SG82606
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN4@NonDelegat@6:
	mov	esi, esp
	push	4
	mov	ecx, DWORD PTR _ppv$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsBadWritePtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@NonDelegat@6
	push	1470					; 000005beH
	push	OFFSET $SG82610
	push	OFFSET $SG82611
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN3@NonDelegat@6:
; Line 1471
	push	OFFSET _IID_IBasicAudio
	mov	edx, DWORD PTR _riid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@NonDelegat@6
; Line 1472
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	push	ecx
	call	_GetInterface@8
	jmp	SHORT $LN5@NonDelegat@6
; Line 1473
	jmp	SHORT $LN5@NonDelegat@6
$LN2@NonDelegat@6:
; Line 1474
	mov	edx, DWORD PTR _ppv$[ebp]
	push	edx
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?NonDelegatingQueryInterface@CUnknown@@UAGJABU_GUID@@PAPAX@Z ; CUnknown::NonDelegatingQueryInterface
$LN5@NonDelegat@6:
; Line 1476
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?NonDelegatingQueryInterface@CBasicAudio@@UAGJABU_GUID@@PAPAX@Z ENDP ; CBasicAudio::NonDelegatingQueryInterface
_TEXT	ENDS
PUBLIC	?GetTypeInfoCount@CBasicAudio@@UAGJPAI@Z	; CBasicAudio::GetTypeInfoCount
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTypeInfoCount@CBasicAudio@@UAGJPAI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pctinfo$ = 12						; size = 4
?GetTypeInfoCount@CBasicAudio@@UAGJPAI@Z PROC		; CBasicAudio::GetTypeInfoCount, COMDAT
; Line 1481
	push	ebp
	mov	ebp, esp
; Line 1482
	mov	eax, DWORD PTR _pctinfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	?GetTypeInfoCount@CBaseDispatch@@QAGJPAI@Z ; CBaseDispatch::GetTypeInfoCount
; Line 1483
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?GetTypeInfoCount@CBasicAudio@@UAGJPAI@Z ENDP		; CBasicAudio::GetTypeInfoCount
_TEXT	ENDS
PUBLIC	?GetTypeInfo@CBasicAudio@@UAGJIKPAPAUITypeInfo@@@Z ; CBasicAudio::GetTypeInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTypeInfo@CBasicAudio@@UAGJIKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_itinfo$ = 12						; size = 4
_lcid$ = 16						; size = 4
_pptinfo$ = 20						; size = 4
?GetTypeInfo@CBasicAudio@@UAGJIKPAPAUITypeInfo@@@Z PROC	; CBasicAudio::GetTypeInfo, COMDAT
; Line 1491
	push	ebp
	mov	ebp, esp
; Line 1496
	mov	eax, DWORD PTR _pptinfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lcid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _itinfo$[ebp]
	push	edx
	push	OFFSET _IID_IBasicAudio
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	?GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z ; CBaseDispatch::GetTypeInfo
; Line 1497
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
?GetTypeInfo@CBasicAudio@@UAGJIKPAPAUITypeInfo@@@Z ENDP	; CBasicAudio::GetTypeInfo
_TEXT	ENDS
PUBLIC	?GetIDsOfNames@CBasicAudio@@UAGJABU_GUID@@PAPA_WIKPAJ@Z ; CBasicAudio::GetIDsOfNames
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetIDsOfNames@CBasicAudio@@UAGJABU_GUID@@PAPA_WIKPAJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_rgszNames$ = 16					; size = 4
_cNames$ = 20						; size = 4
_lcid$ = 24						; size = 4
_rgdispid$ = 28						; size = 4
?GetIDsOfNames@CBasicAudio@@UAGJABU_GUID@@PAPA_WIKPAJ@Z PROC ; CBasicAudio::GetIDsOfNames, COMDAT
; Line 1507
	push	ebp
	mov	ebp, esp
; Line 1513
	mov	eax, DWORD PTR _rgdispid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lcid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cNames$[ebp]
	push	edx
	mov	eax, DWORD PTR _rgszNames$[ebp]
	push	eax
	push	OFFSET _IID_IBasicAudio
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	?GetIDsOfNames@CBaseDispatch@@QAGJABU_GUID@@PAPA_WIKPAJ@Z ; CBaseDispatch::GetIDsOfNames
; Line 1514
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	24					; 00000018H
?GetIDsOfNames@CBasicAudio@@UAGJABU_GUID@@PAPA_WIKPAJ@Z ENDP ; CBasicAudio::GetIDsOfNames
_TEXT	ENDS
PUBLIC	?Invoke@CBasicAudio@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ; CBasicAudio::Invoke
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Invoke@CBasicAudio@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pti$ = -8						; size = 4
_this$ = 8						; size = 4
_dispidMember$ = 12					; size = 4
_riid$ = 16						; size = 4
_lcid$ = 20						; size = 4
_wFlags$ = 24						; size = 2
_pdispparams$ = 28					; size = 4
_pvarResult$ = 32					; size = 4
_pexcepinfo$ = 36					; size = 4
_puArgErr$ = 40						; size = 4
?Invoke@CBasicAudio@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z PROC ; CBasicAudio::Invoke, COMDAT
; Line 1527
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1529
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	push	OFFSET _GUID_NULL
	call	_!=@8
	test	eax, eax
	je	SHORT $LN2@Invoke@4
; Line 1530
	mov	eax, -2147352575			; 80020001H
	jmp	$LN3@Invoke@4
$LN2@Invoke@4:
; Line 1534
	mov	esi, esp
	lea	ecx, DWORD PTR _pti$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lcid$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1536
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@Invoke@4
; Line 1537
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN3@Invoke@4
$LN1@Invoke@4:
; Line 1547
	mov	esi, esp
	mov	ecx, DWORD PTR _puArgErr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pexcepinfo$[ebp]
	push	edx
	mov	eax, DWORD PTR _pvarResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pdispparams$[ebp]
	push	ecx
	movzx	edx, WORD PTR _wFlags$[ebp]
	push	edx
	mov	eax, DWORD PTR _dispidMember$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pti$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pti$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1549
	mov	eax, DWORD PTR _pti$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pti$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1550
	mov	eax, DWORD PTR _hr$[ebp]
$LN3@Invoke@4:
; Line 1551
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Invoke@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
	npad	2
$LN7@Invoke@4:
	DD	1
	DD	$LN6@Invoke@4
$LN6@Invoke@4:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@Invoke@4
$LN5@Invoke@4:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	0
?Invoke@CBasicAudio@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ENDP ; CBasicAudio::Invoke
_TEXT	ENDS
PUBLIC	??0IVideoWindow@@QAE@XZ				; IVideoWindow::IVideoWindow
PUBLIC	??0CBaseVideoWindow@@QAE@PB_WPAUIUnknown@@@Z	; CBaseVideoWindow::CBaseVideoWindow
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CBaseVideoWindow@@QAE@PB_WPAUIUnknown@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CBaseVideoWindow@@QAE@PB_WPAUIUnknown@@@Z$0
__ehfuncinfo$??0CBaseVideoWindow@@QAE@PB_WPAUIUnknown@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CBaseVideoWindow@@QAE@PB_WPAUIUnknown@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CBaseVideoWindow@@QAE@PB_WPAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pName$ = 8						; size = 4
_punk$ = 12						; size = 4
??0CBaseVideoWindow@@QAE@PB_WPAUIUnknown@@@Z PROC	; CBaseVideoWindow::CBaseVideoWindow, COMDAT
; _this$ = ecx
; Line 1558
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CBaseVideoWindow@@QAE@PB_WPAUIUnknown@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IVideoWindow@@QAE@XZ
	mov	eax, DWORD PTR _punk$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CUnknown@@QAE@PB_WPAUIUnknown@@@Z	; CUnknown::CUnknown
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0CBaseDispatch@@QAE@XZ		; CBaseDispatch::CBaseDispatch
; Line 1559
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CBaseVideoWindow@@QAE@PB_WPAUIUnknown@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1CUnknown@@UAE@XZ			; CUnknown::~CUnknown
__ehhandler$??0CBaseVideoWindow@@QAE@PB_WPAUIUnknown@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CBaseVideoWindow@@QAE@PB_WPAUIUnknown@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CBaseVideoWindow@@QAE@PB_WPAUIUnknown@@@Z ENDP	; CBaseVideoWindow::CBaseVideoWindow
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IVideoWindow@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IVideoWindow@@QAE@XZ PROC				; IVideoWindow::IVideoWindow, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IDispatch@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IVideoWindow@@QAE@XZ ENDP				; IVideoWindow::IVideoWindow
_TEXT	ENDS
PUBLIC	?NonDelegatingQueryInterface@CBaseVideoWindow@@UAGJABU_GUID@@PAPAX@Z ; CBaseVideoWindow::NonDelegatingQueryInterface
EXTRN	_IID_IVideoWindow:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?NonDelegatingQueryInterface@CBaseVideoWindow@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?NonDelegatingQueryInterface@CBaseVideoWindow@@UAGJABU_GUID@@PAPAX@Z PROC ; CBaseVideoWindow::NonDelegatingQueryInterface, COMDAT
; Line 1566
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1567
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN4@NonDelegat@7
	push	1567					; 0000061fH
	push	OFFSET $SG82672
	push	OFFSET $SG82673
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN4@NonDelegat@7:
	mov	esi, esp
	push	4
	mov	ecx, DWORD PTR _ppv$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsBadWritePtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@NonDelegat@7
	push	1567					; 0000061fH
	push	OFFSET $SG82677
	push	OFFSET $SG82678
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN3@NonDelegat@7:
; Line 1568
	push	OFFSET _IID_IVideoWindow
	mov	edx, DWORD PTR _riid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@NonDelegat@7
; Line 1569
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	push	ecx
	call	_GetInterface@8
	jmp	SHORT $LN5@NonDelegat@7
; Line 1570
	jmp	SHORT $LN5@NonDelegat@7
$LN2@NonDelegat@7:
; Line 1571
	mov	edx, DWORD PTR _ppv$[ebp]
	push	edx
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?NonDelegatingQueryInterface@CUnknown@@UAGJABU_GUID@@PAPAX@Z ; CUnknown::NonDelegatingQueryInterface
$LN5@NonDelegat@7:
; Line 1573
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?NonDelegatingQueryInterface@CBaseVideoWindow@@UAGJABU_GUID@@PAPAX@Z ENDP ; CBaseVideoWindow::NonDelegatingQueryInterface
_TEXT	ENDS
PUBLIC	?GetTypeInfoCount@CBaseVideoWindow@@UAGJPAI@Z	; CBaseVideoWindow::GetTypeInfoCount
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTypeInfoCount@CBaseVideoWindow@@UAGJPAI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pctinfo$ = 12						; size = 4
?GetTypeInfoCount@CBaseVideoWindow@@UAGJPAI@Z PROC	; CBaseVideoWindow::GetTypeInfoCount, COMDAT
; Line 1578
	push	ebp
	mov	ebp, esp
; Line 1579
	mov	eax, DWORD PTR _pctinfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	?GetTypeInfoCount@CBaseDispatch@@QAGJPAI@Z ; CBaseDispatch::GetTypeInfoCount
; Line 1580
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?GetTypeInfoCount@CBaseVideoWindow@@UAGJPAI@Z ENDP	; CBaseVideoWindow::GetTypeInfoCount
_TEXT	ENDS
PUBLIC	?GetTypeInfo@CBaseVideoWindow@@UAGJIKPAPAUITypeInfo@@@Z ; CBaseVideoWindow::GetTypeInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTypeInfo@CBaseVideoWindow@@UAGJIKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_itinfo$ = 12						; size = 4
_lcid$ = 16						; size = 4
_pptinfo$ = 20						; size = 4
?GetTypeInfo@CBaseVideoWindow@@UAGJIKPAPAUITypeInfo@@@Z PROC ; CBaseVideoWindow::GetTypeInfo, COMDAT
; Line 1588
	push	ebp
	mov	ebp, esp
; Line 1593
	mov	eax, DWORD PTR _pptinfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lcid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _itinfo$[ebp]
	push	edx
	push	OFFSET _IID_IVideoWindow
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	?GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z ; CBaseDispatch::GetTypeInfo
; Line 1594
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
?GetTypeInfo@CBaseVideoWindow@@UAGJIKPAPAUITypeInfo@@@Z ENDP ; CBaseVideoWindow::GetTypeInfo
_TEXT	ENDS
PUBLIC	?GetIDsOfNames@CBaseVideoWindow@@UAGJABU_GUID@@PAPA_WIKPAJ@Z ; CBaseVideoWindow::GetIDsOfNames
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetIDsOfNames@CBaseVideoWindow@@UAGJABU_GUID@@PAPA_WIKPAJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_rgszNames$ = 16					; size = 4
_cNames$ = 20						; size = 4
_lcid$ = 24						; size = 4
_rgdispid$ = 28						; size = 4
?GetIDsOfNames@CBaseVideoWindow@@UAGJABU_GUID@@PAPA_WIKPAJ@Z PROC ; CBaseVideoWindow::GetIDsOfNames, COMDAT
; Line 1604
	push	ebp
	mov	ebp, esp
; Line 1610
	mov	eax, DWORD PTR _rgdispid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lcid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cNames$[ebp]
	push	edx
	mov	eax, DWORD PTR _rgszNames$[ebp]
	push	eax
	push	OFFSET _IID_IVideoWindow
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	?GetIDsOfNames@CBaseDispatch@@QAGJABU_GUID@@PAPA_WIKPAJ@Z ; CBaseDispatch::GetIDsOfNames
; Line 1611
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	24					; 00000018H
?GetIDsOfNames@CBaseVideoWindow@@UAGJABU_GUID@@PAPA_WIKPAJ@Z ENDP ; CBaseVideoWindow::GetIDsOfNames
_TEXT	ENDS
PUBLIC	?Invoke@CBaseVideoWindow@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ; CBaseVideoWindow::Invoke
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Invoke@CBaseVideoWindow@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pti$ = -8						; size = 4
_this$ = 8						; size = 4
_dispidMember$ = 12					; size = 4
_riid$ = 16						; size = 4
_lcid$ = 20						; size = 4
_wFlags$ = 24						; size = 2
_pdispparams$ = 28					; size = 4
_pvarResult$ = 32					; size = 4
_pexcepinfo$ = 36					; size = 4
_puArgErr$ = 40						; size = 4
?Invoke@CBaseVideoWindow@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z PROC ; CBaseVideoWindow::Invoke, COMDAT
; Line 1624
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1626
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	push	OFFSET _GUID_NULL
	call	_!=@8
	test	eax, eax
	je	SHORT $LN2@Invoke@5
; Line 1627
	mov	eax, -2147352575			; 80020001H
	jmp	$LN3@Invoke@5
$LN2@Invoke@5:
; Line 1631
	mov	esi, esp
	lea	ecx, DWORD PTR _pti$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lcid$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1633
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@Invoke@5
; Line 1634
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN3@Invoke@5
$LN1@Invoke@5:
; Line 1644
	mov	esi, esp
	mov	ecx, DWORD PTR _puArgErr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pexcepinfo$[ebp]
	push	edx
	mov	eax, DWORD PTR _pvarResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pdispparams$[ebp]
	push	ecx
	movzx	edx, WORD PTR _wFlags$[ebp]
	push	edx
	mov	eax, DWORD PTR _dispidMember$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pti$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pti$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1646
	mov	eax, DWORD PTR _pti$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pti$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1647
	mov	eax, DWORD PTR _hr$[ebp]
$LN3@Invoke@5:
; Line 1648
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Invoke@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
	npad	2
$LN7@Invoke@5:
	DD	1
	DD	$LN6@Invoke@5
$LN6@Invoke@5:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@Invoke@5
$LN5@Invoke@5:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	0
?Invoke@CBaseVideoWindow@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ENDP ; CBaseVideoWindow::Invoke
_TEXT	ENDS
PUBLIC	??0IBasicVideo2@@QAE@XZ				; IBasicVideo2::IBasicVideo2
PUBLIC	??0CBaseBasicVideo@@QAE@PB_WPAUIUnknown@@@Z	; CBaseBasicVideo::CBaseBasicVideo
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CBaseBasicVideo@@QAE@PB_WPAUIUnknown@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CBaseBasicVideo@@QAE@PB_WPAUIUnknown@@@Z$0
__ehfuncinfo$??0CBaseBasicVideo@@QAE@PB_WPAUIUnknown@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0CBaseBasicVideo@@QAE@PB_WPAUIUnknown@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CBaseBasicVideo@@QAE@PB_WPAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pName$ = 8						; size = 4
_punk$ = 12						; size = 4
??0CBaseBasicVideo@@QAE@PB_WPAUIUnknown@@@Z PROC	; CBaseBasicVideo::CBaseBasicVideo, COMDAT
; _this$ = ecx
; Line 1656
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CBaseBasicVideo@@QAE@PB_WPAUIUnknown@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IBasicVideo2@@QAE@XZ
	mov	eax, DWORD PTR _punk$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0CUnknown@@QAE@PB_WPAUIUnknown@@@Z	; CUnknown::CUnknown
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0CBaseDispatch@@QAE@XZ		; CBaseDispatch::CBaseDispatch
; Line 1657
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CBaseBasicVideo@@QAE@PB_WPAUIUnknown@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1CUnknown@@UAE@XZ			; CUnknown::~CUnknown
__ehhandler$??0CBaseBasicVideo@@QAE@PB_WPAUIUnknown@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CBaseBasicVideo@@QAE@PB_WPAUIUnknown@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CBaseBasicVideo@@QAE@PB_WPAUIUnknown@@@Z ENDP	; CBaseBasicVideo::CBaseBasicVideo
PUBLIC	??0IBasicVideo@@QAE@XZ				; IBasicVideo::IBasicVideo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0IBasicVideo2@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IBasicVideo2@@QAE@XZ PROC				; IBasicVideo2::IBasicVideo2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IBasicVideo@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IBasicVideo2@@QAE@XZ ENDP				; IBasicVideo2::IBasicVideo2
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IBasicVideo@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IBasicVideo@@QAE@XZ PROC				; IBasicVideo::IBasicVideo, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IDispatch@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IBasicVideo@@QAE@XZ ENDP				; IBasicVideo::IBasicVideo
_TEXT	ENDS
PUBLIC	?NonDelegatingQueryInterface@CBaseBasicVideo@@UAGJABU_GUID@@PAPAX@Z ; CBaseBasicVideo::NonDelegatingQueryInterface
EXTRN	_IID_IBasicVideo2:BYTE
EXTRN	_IID_IBasicVideo:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?NonDelegatingQueryInterface@CBaseBasicVideo@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?NonDelegatingQueryInterface@CBaseBasicVideo@@UAGJABU_GUID@@PAPAX@Z PROC ; CBaseBasicVideo::NonDelegatingQueryInterface, COMDAT
; Line 1664
	push	ebp
	mov	ebp, esp
	push	esi
; Line 1665
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN5@NonDelegat@8
	push	1665					; 00000681H
	push	OFFSET $SG82741
	push	OFFSET $SG82742
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN5@NonDelegat@8:
	mov	esi, esp
	push	4
	mov	ecx, DWORD PTR _ppv$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsBadWritePtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN4@NonDelegat@8
	push	1665					; 00000681H
	push	OFFSET $SG82746
	push	OFFSET $SG82747
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN4@NonDelegat@8:
; Line 1666
	push	OFFSET _IID_IBasicVideo
	mov	edx, DWORD PTR _riid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	jne	SHORT $LN2@NonDelegat@8
	push	OFFSET _IID_IBasicVideo2
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	call	_==@8
	test	eax, eax
	je	SHORT $LN3@NonDelegat@8
$LN2@NonDelegat@8:
; Line 1667
	mov	ecx, DWORD PTR _ppv$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 4
	push	edx
	call	_GetInterface@8
	jmp	SHORT $LN6@NonDelegat@8
; Line 1668
	jmp	SHORT $LN6@NonDelegat@8
$LN3@NonDelegat@8:
; Line 1669
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?NonDelegatingQueryInterface@CUnknown@@UAGJABU_GUID@@PAPAX@Z ; CUnknown::NonDelegatingQueryInterface
$LN6@NonDelegat@8:
; Line 1671
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	12					; 0000000cH
?NonDelegatingQueryInterface@CBaseBasicVideo@@UAGJABU_GUID@@PAPAX@Z ENDP ; CBaseBasicVideo::NonDelegatingQueryInterface
_TEXT	ENDS
PUBLIC	?GetTypeInfoCount@CBaseBasicVideo@@UAGJPAI@Z	; CBaseBasicVideo::GetTypeInfoCount
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTypeInfoCount@CBaseBasicVideo@@UAGJPAI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pctinfo$ = 12						; size = 4
?GetTypeInfoCount@CBaseBasicVideo@@UAGJPAI@Z PROC	; CBaseBasicVideo::GetTypeInfoCount, COMDAT
; Line 1676
	push	ebp
	mov	ebp, esp
; Line 1677
	mov	eax, DWORD PTR _pctinfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	?GetTypeInfoCount@CBaseDispatch@@QAGJPAI@Z ; CBaseDispatch::GetTypeInfoCount
; Line 1678
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?GetTypeInfoCount@CBaseBasicVideo@@UAGJPAI@Z ENDP	; CBaseBasicVideo::GetTypeInfoCount
_TEXT	ENDS
PUBLIC	?GetTypeInfo@CBaseBasicVideo@@UAGJIKPAPAUITypeInfo@@@Z ; CBaseBasicVideo::GetTypeInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTypeInfo@CBaseBasicVideo@@UAGJIKPAPAUITypeInfo@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_itinfo$ = 12						; size = 4
_lcid$ = 16						; size = 4
_pptinfo$ = 20						; size = 4
?GetTypeInfo@CBaseBasicVideo@@UAGJIKPAPAUITypeInfo@@@Z PROC ; CBaseBasicVideo::GetTypeInfo, COMDAT
; Line 1686
	push	ebp
	mov	ebp, esp
; Line 1691
	mov	eax, DWORD PTR _pptinfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lcid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _itinfo$[ebp]
	push	edx
	push	OFFSET _IID_IBasicVideo
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	?GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z ; CBaseDispatch::GetTypeInfo
; Line 1692
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
?GetTypeInfo@CBaseBasicVideo@@UAGJIKPAPAUITypeInfo@@@Z ENDP ; CBaseBasicVideo::GetTypeInfo
_TEXT	ENDS
PUBLIC	?GetIDsOfNames@CBaseBasicVideo@@UAGJABU_GUID@@PAPA_WIKPAJ@Z ; CBaseBasicVideo::GetIDsOfNames
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetIDsOfNames@CBaseBasicVideo@@UAGJABU_GUID@@PAPA_WIKPAJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_rgszNames$ = 16					; size = 4
_cNames$ = 20						; size = 4
_lcid$ = 24						; size = 4
_rgdispid$ = 28						; size = 4
?GetIDsOfNames@CBaseBasicVideo@@UAGJABU_GUID@@PAPA_WIKPAJ@Z PROC ; CBaseBasicVideo::GetIDsOfNames, COMDAT
; Line 1702
	push	ebp
	mov	ebp, esp
; Line 1708
	mov	eax, DWORD PTR _rgdispid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lcid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cNames$[ebp]
	push	edx
	mov	eax, DWORD PTR _rgszNames$[ebp]
	push	eax
	push	OFFSET _IID_IBasicVideo
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	?GetIDsOfNames@CBaseDispatch@@QAGJABU_GUID@@PAPA_WIKPAJ@Z ; CBaseDispatch::GetIDsOfNames
; Line 1709
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	24					; 00000018H
?GetIDsOfNames@CBaseBasicVideo@@UAGJABU_GUID@@PAPA_WIKPAJ@Z ENDP ; CBaseBasicVideo::GetIDsOfNames
_TEXT	ENDS
PUBLIC	?Invoke@CBaseBasicVideo@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ; CBaseBasicVideo::Invoke
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Invoke@CBaseBasicVideo@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
_TEXT	SEGMENT
_hr$ = -16						; size = 4
_pti$ = -8						; size = 4
_this$ = 8						; size = 4
_dispidMember$ = 12					; size = 4
_riid$ = 16						; size = 4
_lcid$ = 20						; size = 4
_wFlags$ = 24						; size = 2
_pdispparams$ = 28					; size = 4
_pvarResult$ = 32					; size = 4
_pexcepinfo$ = 36					; size = 4
_puArgErr$ = 40						; size = 4
?Invoke@CBaseBasicVideo@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z PROC ; CBaseBasicVideo::Invoke, COMDAT
; Line 1722
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1724
	mov	eax, DWORD PTR _riid$[ebp]
	push	eax
	push	OFFSET _GUID_NULL
	call	_!=@8
	test	eax, eax
	je	SHORT $LN2@Invoke@6
; Line 1725
	mov	eax, -2147352575			; 80020001H
	jmp	$LN3@Invoke@6
$LN2@Invoke@6:
; Line 1729
	mov	esi, esp
	lea	ecx, DWORD PTR _pti$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lcid$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1731
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@Invoke@6
; Line 1732
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN3@Invoke@6
$LN1@Invoke@6:
; Line 1742
	mov	esi, esp
	mov	ecx, DWORD PTR _puArgErr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pexcepinfo$[ebp]
	push	edx
	mov	eax, DWORD PTR _pvarResult$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pdispparams$[ebp]
	push	ecx
	movzx	edx, WORD PTR _wFlags$[ebp]
	push	edx
	mov	eax, DWORD PTR _dispidMember$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pti$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pti$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1744
	mov	eax, DWORD PTR _pti$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pti$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1745
	mov	eax, DWORD PTR _hr$[ebp]
$LN3@Invoke@6:
; Line 1746
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Invoke@6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
	npad	2
$LN7@Invoke@6:
	DD	1
	DD	$LN6@Invoke@6
$LN6@Invoke@6:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@Invoke@6
$LN5@Invoke@6:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	0
?Invoke@CBaseBasicVideo@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ENDP ; CBaseBasicVideo::Invoke
_TEXT	ENDS
PUBLIC	??0CDispParams@@QAE@IPAUtagVARIANT@@PAJ@Z	; CDispParams::CDispParams
EXTRN	_memcpy:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0CDispParams@@QAE@IPAUtagVARIANT@@PAJ@Z
_TEXT	SEGMENT
tv163 = -40						; size = 4
$T84672 = -36						; size = 4
$T84671 = -32						; size = 4
_pui$82832 = -28					; size = 4
_pch$82826 = -24					; size = 4
_len$82822 = -20					; size = 2
_pSrc$82805 = -16					; size = 4
_pDest$82804 = -12					; size = 4
_i$82800 = -8						; size = 4
_this$ = -4						; size = 4
_nArgs$ = 8						; size = 4
_pArgs$ = 12						; size = 4
_phr$ = 16						; size = 4
??0CDispParams@@QAE@IPAUtagVARIANT@@PAJ@Z PROC		; CDispParams::CDispParams, COMDAT
; _this$ = ecx
; Line 1753
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 1755
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 1756
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _nArgs$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 1758
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	je	$LN28@CDispParam
; Line 1759
	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, 16					; 00000010H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T84671[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T84671[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1760
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN27@CDispParam
; Line 1761
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1762
	cmp	DWORD PTR _phr$[ebp], 0
	je	SHORT $LN26@CDispParam
; Line 1763
	mov	ecx, DWORD PTR _phr$[ebp]
	mov	DWORD PTR [ecx], -2147024882		; 8007000eH
$LN26@CDispParam:
; Line 1765
	jmp	$LN29@CDispParam
$LN27@CDispParam:
; Line 1768
	mov	DWORD PTR _i$82800[ebp], 0
	jmp	SHORT $LN25@CDispParam
$LN24@CDispParam:
	mov	edx, DWORD PTR _i$82800[ebp]
	add	edx, 1
	mov	DWORD PTR _i$82800[ebp], edx
$LN25@CDispParam:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$82800[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	$LN23@CDispParam
; Line 1770
	mov	edx, DWORD PTR _i$82800[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax]
	mov	DWORD PTR _pDest$82804[ebp], edx
; Line 1771
	mov	ecx, DWORD PTR _i$82800[ebp]
	shl	ecx, 4
	add	ecx, DWORD PTR _pArgs$[ebp]
	mov	DWORD PTR _pSrc$82805[ebp], ecx
; Line 1773
	mov	edx, DWORD PTR _pDest$82804[ebp]
	mov	eax, DWORD PTR _pSrc$82805[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR [edx], cx
; Line 1774
	mov	edx, DWORD PTR _pDest$82804[ebp]
	movzx	eax, WORD PTR [edx]
	mov	DWORD PTR tv163[ebp], eax
	mov	ecx, DWORD PTR tv163[ebp]
	sub	ecx, 2
	mov	DWORD PTR tv163[ebp], ecx
	cmp	DWORD PTR tv163[ebp], 15		; 0000000fH
	ja	$LN3@CDispParam
	mov	edx, DWORD PTR tv163[ebp]
	jmp	DWORD PTR $LN31@CDispParam[edx*4]
$LN20@CDispParam:
; Line 1777
	mov	eax, DWORD PTR _pDest$82804[ebp]
	mov	ecx, DWORD PTR _pSrc$82805[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 1778
	jmp	$LN21@CDispParam
$LN19@CDispParam:
; Line 1781
	mov	eax, DWORD PTR _pDest$82804[ebp]
	mov	ecx, DWORD PTR _pSrc$82805[ebp]
	mov	dl, BYTE PTR [ecx+8]
	mov	BYTE PTR [eax+8], dl
; Line 1782
	jmp	$LN21@CDispParam
$LN18@CDispParam:
; Line 1785
	mov	eax, DWORD PTR _pDest$82804[ebp]
	mov	ecx, DWORD PTR _pSrc$82805[ebp]
	mov	dx, WORD PTR [ecx+8]
	mov	WORD PTR [eax+8], dx
; Line 1786
	jmp	$LN21@CDispParam
$LN17@CDispParam:
; Line 1789
	mov	eax, DWORD PTR _pDest$82804[ebp]
	mov	ecx, DWORD PTR _pSrc$82805[ebp]
	fld	DWORD PTR [ecx+8]
	fstp	DWORD PTR [eax+8]
; Line 1790
	jmp	$LN21@CDispParam
$LN16@CDispParam:
; Line 1793
	mov	edx, DWORD PTR _pDest$82804[ebp]
	mov	eax, DWORD PTR _pSrc$82805[ebp]
	fld	QWORD PTR [eax+8]
	fstp	QWORD PTR [edx+8]
; Line 1794
	jmp	$LN21@CDispParam
$LN15@CDispParam:
; Line 1797
	mov	ecx, DWORD PTR _pDest$82804[ebp]
	mov	edx, DWORD PTR _pSrc$82805[ebp]
	mov	ax, WORD PTR [edx+8]
	mov	WORD PTR [ecx+8], ax
; Line 1798
	jmp	$LN21@CDispParam
$LN14@CDispParam:
; Line 1801
	mov	ecx, DWORD PTR _pDest$82804[ebp]
	mov	edx, DWORD PTR _pSrc$82805[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
; Line 1802
	jmp	$LN21@CDispParam
$LN13@CDispParam:
; Line 1805
	mov	ecx, DWORD PTR _pSrc$82805[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR _pDest$82804[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	DWORD PTR [ecx+12], eax
; Line 1806
	jmp	$LN21@CDispParam
$LN12@CDispParam:
; Line 1809
	mov	edx, DWORD PTR _pDest$82804[ebp]
	mov	eax, DWORD PTR _pSrc$82805[ebp]
	fld	QWORD PTR [eax+8]
	fstp	QWORD PTR [edx+8]
; Line 1810
	jmp	$LN21@CDispParam
$LN11@CDispParam:
; Line 1813
	mov	ecx, DWORD PTR _pSrc$82805[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jne	SHORT $LN10@CDispParam
; Line 1814
	mov	edx, DWORD PTR _pDest$82804[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 1815
	jmp	$LN6@CDispParam
$LN10@CDispParam:
; Line 1820
	mov	eax, DWORD PTR _pSrc$82805[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	dx, WORD PTR [ecx-2]
	mov	WORD PTR _len$82822[ebp], dx
; Line 1821
	movzx	eax, WORD PTR _len$82822[ebp]
	add	eax, 1
	xor	ecx, ecx
	mov	edx, 2
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T84672[ebp], eax
	mov	eax, DWORD PTR $T84672[ebp]
	mov	DWORD PTR _pch$82826[ebp], eax
; Line 1822
	cmp	DWORD PTR _pch$82826[ebp], 0
	je	SHORT $LN8@CDispParam
; Line 1823
	mov	ecx, DWORD PTR _pch$82826[ebp]
	mov	DWORD PTR _pui$82832[ebp], ecx
; Line 1824
	mov	edx, DWORD PTR _pui$82832[ebp]
	mov	ax, WORD PTR _len$82822[ebp]
	mov	WORD PTR [edx], ax
; Line 1825
	mov	ecx, DWORD PTR _pch$82826[ebp]
	add	ecx, 2
	mov	edx, DWORD PTR _pDest$82804[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 1826
	movzx	eax, WORD PTR _len$82822[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pSrc$82805[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _pDest$82804[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1827
	jmp	SHORT $LN6@CDispParam
$LN8@CDispParam:
; Line 1828
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _i$82800[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 1829
	cmp	DWORD PTR _phr$[ebp], 0
	je	SHORT $LN6@CDispParam
; Line 1830
	mov	ecx, DWORD PTR _phr$[ebp]
	mov	DWORD PTR [ecx], -2147024882		; 8007000eH
$LN6@CDispParam:
; Line 1834
	mov	edx, DWORD PTR _pDest$82804[ebp]
	mov	eax, DWORD PTR _pSrc$82805[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
; Line 1835
	jmp	SHORT $LN21@CDispParam
$LN5@CDispParam:
; Line 1838
	mov	edx, DWORD PTR _pDest$82804[ebp]
	mov	eax, DWORD PTR _pSrc$82805[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
; Line 1839
	mov	edx, DWORD PTR _pDest$82804[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _pDest$82804[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1840
	jmp	SHORT $LN21@CDispParam
$LN4@CDispParam:
; Line 1843
	mov	edx, DWORD PTR _pDest$82804[ebp]
	mov	eax, DWORD PTR _pSrc$82805[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
; Line 1844
	mov	edx, DWORD PTR _pDest$82804[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _pDest$82804[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1845
	jmp	SHORT $LN21@CDispParam
$LN3@CDispParam:
; Line 1849
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN2@CDispParam
	push	1849					; 00000739H
	push	OFFSET $SG82844
	push	OFFSET $SG82845
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@CDispParam:
$LN21@CDispParam:
; Line 1852
	jmp	$LN24@CDispParam
$LN23@CDispParam:
	jmp	SHORT $LN1@CDispParam
$LN28@CDispParam:
; Line 1855
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN1@CDispParam:
$LN29@CDispParam:
; Line 1858
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN31@CDispParam:
	DD	$LN18@CDispParam
	DD	$LN20@CDispParam
	DD	$LN17@CDispParam
	DD	$LN16@CDispParam
	DD	$LN13@CDispParam
	DD	$LN12@CDispParam
	DD	$LN11@CDispParam
	DD	$LN4@CDispParam
	DD	$LN14@CDispParam
	DD	$LN15@CDispParam
	DD	$LN3@CDispParam
	DD	$LN5@CDispParam
	DD	$LN3@CDispParam
	DD	$LN3@CDispParam
	DD	$LN3@CDispParam
	DD	$LN19@CDispParam
??0CDispParams@@QAE@IPAUtagVARIANT@@PAJ@Z ENDP		; CDispParams::CDispParams
_TEXT	ENDS
PUBLIC	??1CDispParams@@QAE@XZ				; CDispParams::~CDispParams
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1CDispParams@@QAE@XZ
_TEXT	SEGMENT
tv79 = -24						; size = 4
$T84677 = -20						; size = 4
$T84676 = -16						; size = 4
_pch$82860 = -12					; size = 4
_i$82850 = -8						; size = 4
_this$ = -4						; size = 4
??1CDispParams@@QAE@XZ PROC				; CDispParams::~CDispParams, COMDAT
; _this$ = ecx
; Line 1862
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1863
	mov	DWORD PTR _i$82850[ebp], 0
	jmp	SHORT $LN9@CDispParam@2
$LN8@CDispParam@2:
	mov	eax, DWORD PTR _i$82850[ebp]
	add	eax, 1
	mov	DWORD PTR _i$82850[ebp], eax
$LN9@CDispParam@2:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$82850[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jae	$LN7@CDispParam@2
; Line 1864
	mov	eax, DWORD PTR _i$82850[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	movzx	eax, WORD PTR [edx+eax]
	mov	DWORD PTR tv79[ebp], eax
	cmp	DWORD PTR tv79[ebp], 8
	je	SHORT $LN4@CDispParam@2
	cmp	DWORD PTR tv79[ebp], 9
	je	SHORT $LN1@CDispParam@2
	cmp	DWORD PTR tv79[ebp], 13			; 0000000dH
	je	SHORT $LN2@CDispParam@2
	jmp	$LN5@CDispParam@2
$LN4@CDispParam@2:
; Line 1866
	mov	ecx, DWORD PTR _i$82850[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	DWORD PTR [eax+ecx+8], 0
	je	SHORT $LN3@CDispParam@2
; Line 1867
	mov	ecx, DWORD PTR _i$82850[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+ecx+8]
	sub	ecx, 2
	mov	DWORD PTR _pch$82860[ebp], ecx
; Line 1868
	mov	edx, DWORD PTR _pch$82860[ebp]
	mov	DWORD PTR $T84676[ebp], edx
	mov	eax, DWORD PTR $T84676[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN3@CDispParam@2:
; Line 1870
	jmp	SHORT $LN5@CDispParam@2
$LN2@CDispParam@2:
; Line 1873
	mov	ecx, DWORD PTR _i$82850[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+ecx+8]
	mov	edx, DWORD PTR _i$82850[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+edx+8]
	mov	eax, DWORD PTR [ecx]
	mov	esi, esp
	push	edx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1874
	jmp	SHORT $LN5@CDispParam@2
$LN1@CDispParam@2:
; Line 1877
	mov	edx, DWORD PTR _i$82850[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+edx+8]
	mov	eax, DWORD PTR _i$82850[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+eax+8]
	mov	ecx, DWORD PTR [edx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@CDispParam@2:
; Line 1880
	jmp	$LN8@CDispParam@2
$LN7@CDispParam@2:
; Line 1881
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T84677[ebp], ecx
	mov	edx, DWORD PTR $T84677[ebp]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 1882
	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CDispParams@@QAE@XZ ENDP				; CDispParams::~CDispParams
_TEXT	ENDS
PUBLIC	?GetIID@CDeferredCommand@@QAEABU_GUID@@XZ	; CDeferredCommand::GetIID
PUBLIC	??BCOARefTime@@QAE_JXZ				; COARefTime::operator __int64
PUBLIC	??0COARefTime@@QAE@N@Z				; COARefTime::COARefTime
PUBLIC	??_7CDeferredCommand@@6BIDeferredCommand@@@	; CDeferredCommand::`vftable'
PUBLIC	??_7CDeferredCommand@@6BCUnknown@@@		; CDeferredCommand::`vftable'
PUBLIC	??0IDeferredCommand@@QAE@XZ			; IDeferredCommand::IDeferredCommand
PUBLIC	??0CDeferredCommand@@QAE@PAVCCmdQueue@@PAUIUnknown@@PAJ1NPAU_GUID@@JFJPAUtagVARIANT@@4PAFH@Z ; CDeferredCommand::CDeferredCommand
PUBLIC	??_R4CDeferredCommand@@6BCUnknown@@@		; CDeferredCommand::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCDeferredCommand@@@8			; CDeferredCommand `RTTI Type Descriptor'
PUBLIC	??_R3CDeferredCommand@@8			; CDeferredCommand::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CDeferredCommand@@8			; CDeferredCommand::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CDeferredCommand@@8		; CDeferredCommand::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BA@?0A@EA@IDeferredCommand@@8		; IDeferredCommand::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AUIDeferredCommand@@@8			; IDeferredCommand `RTTI Type Descriptor'
PUBLIC	??_R3IDeferredCommand@@8			; IDeferredCommand::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IDeferredCommand@@8			; IDeferredCommand::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IDeferredCommand@@8		; IDeferredCommand::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1BA@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	?NonDelegatingQueryInterface@CDeferredCommand@@UAGJABU_GUID@@PAPAX@Z ; CDeferredCommand::NonDelegatingQueryInterface
PUBLIC	??_R4CDeferredCommand@@6BIDeferredCommand@@@	; CDeferredCommand::`RTTI Complete Object Locator'
PUBLIC	?QueryInterface@CDeferredCommand@@UAGJABU_GUID@@PAPAX@Z ; CDeferredCommand::QueryInterface
PUBLIC	?AddRef@CDeferredCommand@@UAGKXZ		; CDeferredCommand::AddRef
PUBLIC	?Release@CDeferredCommand@@UAGKXZ		; CDeferredCommand::Release
PUBLIC	?Cancel@CDeferredCommand@@UAGJXZ		; CDeferredCommand::Cancel
PUBLIC	?Confidence@CDeferredCommand@@UAGJPAJ@Z		; CDeferredCommand::Confidence
PUBLIC	?Postpone@CDeferredCommand@@UAGJN@Z		; CDeferredCommand::Postpone
PUBLIC	?GetHResult@CDeferredCommand@@UAGJPAJ@Z		; CDeferredCommand::GetHResult
EXTRN	??_ECDeferredCommand@@UAEPAXI@Z:PROC		; CDeferredCommand::`vector deleting destructor'
;	COMDAT ??_R4CDeferredCommand@@6BIDeferredCommand@@@
rdata$r	SEGMENT
??_R4CDeferredCommand@@6BIDeferredCommand@@@ DD 00H	; CDeferredCommand::`RTTI Complete Object Locator'
	DD	010H
	DD	00H
	DD	FLAT:??_R0?AVCDeferredCommand@@@8
	DD	FLAT:??_R3CDeferredCommand@@8
rdata$r	ENDS
;	COMDAT ??_R1BA@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	00H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IDeferredCommand@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IDeferredCommand@@8 DD FLAT:??_R0?AUIDeferredCommand@@@8 ; IDeferredCommand::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDeferredCommand@@8
rdata$r	ENDS
;	COMDAT ??_R2IDeferredCommand@@8
rdata$r	SEGMENT
??_R2IDeferredCommand@@8 DD FLAT:??_R1A@?0A@EA@IDeferredCommand@@8 ; IDeferredCommand::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IDeferredCommand@@8
rdata$r	SEGMENT
??_R3IDeferredCommand@@8 DD 00H				; IDeferredCommand::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IDeferredCommand@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIDeferredCommand@@@8
_DATA	SEGMENT
??_R0?AUIDeferredCommand@@@8 DD FLAT:??_7type_info@@6B@	; IDeferredCommand `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIDeferredCommand@@', 00H
_DATA	ENDS
;	COMDAT ??_R1BA@?0A@EA@IDeferredCommand@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@IDeferredCommand@@8 DD FLAT:??_R0?AUIDeferredCommand@@@8 ; IDeferredCommand::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	01H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDeferredCommand@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CDeferredCommand@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CDeferredCommand@@8 DD FLAT:??_R0?AVCDeferredCommand@@@8 ; CDeferredCommand::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CDeferredCommand@@8
rdata$r	ENDS
;	COMDAT ??_R2CDeferredCommand@@8
rdata$r	SEGMENT
??_R2CDeferredCommand@@8 DD FLAT:??_R1A@?0A@EA@CDeferredCommand@@8 ; CDeferredCommand::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CUnknown@@8
	DD	FLAT:??_R1A@?0A@EA@INonDelegatingUnknown@@8
	DD	FLAT:??_R13?0A@EA@CBaseObject@@8
	DD	FLAT:??_R1BA@?0A@EA@IDeferredCommand@@8
	DD	FLAT:??_R1BA@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CDeferredCommand@@8
rdata$r	SEGMENT
??_R3CDeferredCommand@@8 DD 00H				; CDeferredCommand::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	FLAT:??_R2CDeferredCommand@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCDeferredCommand@@@8
_DATA	SEGMENT
??_R0?AVCDeferredCommand@@@8 DD FLAT:??_7type_info@@6B@	; CDeferredCommand `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCDeferredCommand@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CDeferredCommand@@6BCUnknown@@@
rdata$r	SEGMENT
??_R4CDeferredCommand@@6BCUnknown@@@ DD 00H		; CDeferredCommand::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCDeferredCommand@@@8
	DD	FLAT:??_R3CDeferredCommand@@8
rdata$r	ENDS
;	COMDAT ??_7CDeferredCommand@@6BIDeferredCommand@@@
CONST	SEGMENT
??_7CDeferredCommand@@6BIDeferredCommand@@@ DD FLAT:??_R4CDeferredCommand@@6BIDeferredCommand@@@ ; CDeferredCommand::`vftable'
	DD	FLAT:?QueryInterface@CDeferredCommand@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CDeferredCommand@@UAGKXZ
	DD	FLAT:?Release@CDeferredCommand@@UAGKXZ
	DD	FLAT:?Cancel@CDeferredCommand@@UAGJXZ
	DD	FLAT:?Confidence@CDeferredCommand@@UAGJPAJ@Z
	DD	FLAT:?Postpone@CDeferredCommand@@UAGJN@Z
	DD	FLAT:?GetHResult@CDeferredCommand@@UAGJPAJ@Z
CONST	ENDS
;	COMDAT ??_7CDeferredCommand@@6BCUnknown@@@
CONST	SEGMENT
??_7CDeferredCommand@@6BCUnknown@@@ DD FLAT:??_R4CDeferredCommand@@6BCUnknown@@@ ; CDeferredCommand::`vftable'
	DD	FLAT:?NonDelegatingQueryInterface@CDeferredCommand@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?NonDelegatingAddRef@CUnknown@@UAGKXZ
	DD	FLAT:?NonDelegatingRelease@CUnknown@@UAGKXZ
	DD	FLAT:??_ECDeferredCommand@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0CDeferredCommand@@QAE@PAVCCmdQueue@@PAUIUnknown@@PAJ1NPAU_GUID@@JFJPAUtagVARIANT@@4PAFH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CDeferredCommand@@QAE@PAVCCmdQueue@@PAUIUnknown@@PAJ1NPAU_GUID@@JFJPAUtagVARIANT@@4PAFH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CDeferredCommand@@QAE@PAVCCmdQueue@@PAUIUnknown@@PAJ1NPAU_GUID@@JFJPAUtagVARIANT@@4PAFH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CDeferredCommand@@QAE@PAVCCmdQueue@@PAUIUnknown@@PAJ1NPAU_GUID@@JFJPAUtagVARIANT@@4PAFH@Z$2
__ehfuncinfo$??0CDeferredCommand@@QAE@PAVCCmdQueue@@PAUIUnknown@@PAJ1NPAU_GUID@@JFJPAUtagVARIANT@@4PAFH@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0CDeferredCommand@@QAE@PAVCCmdQueue@@PAUIUnknown@@PAJ1NPAU_GUID@@JFJPAUtagVARIANT@@4PAFH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CDeferredCommand@@QAE@PAVCCmdQueue@@PAUIUnknown@@PAJ1NPAU_GUID@@JFJPAUtagVARIANT@@4PAFH@Z
_TEXT	SEGMENT
_pti$ = -56						; size = 4
_hr$ = -48						; size = 4
_pInterface$ = -40					; size = 4
_convertor$ = -28					; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pQ$ = 8						; size = 4
_pUnk$ = 12						; size = 4
_phr$ = 16						; size = 4
_pUnkExecutor$ = 20					; size = 4
_time$ = 24						; size = 8
_iid$ = 32						; size = 4
_dispidMethod$ = 36					; size = 4
_wFlags$ = 40						; size = 2
_nArgs$ = 44						; size = 4
_pDispParams$ = 48					; size = 4
_pvarResult$ = 52					; size = 4
_puArgErr$ = 56						; size = 4
_bStream$ = 60						; size = 4
??0CDeferredCommand@@QAE@PAVCCmdQueue@@PAUIUnknown@@PAJ1NPAU_GUID@@JFJPAUtagVARIANT@@4PAFH@Z PROC ; CDeferredCommand::CDeferredCommand, COMDAT
; _this$ = ecx
; Line 1913
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CDeferredCommand@@QAE@PAVCCmdQueue@@PAUIUnknown@@PAJ1NPAU_GUID@@JFJPAUtagVARIANT@@4PAFH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pUnk$[ebp]
	push	eax
	push	OFFSET $SG82884
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CUnknown@@QAE@PB_WPAUIUnknown@@@Z	; CUnknown::CUnknown
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0IDeferredCommand@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7CDeferredCommand@@6BCUnknown@@@
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], OFFSET ??_7CDeferredCommand@@6BIDeferredCommand@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pQ$[ebp]
	mov	DWORD PTR [eax+20], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pUnkExecutor$[ebp]
	mov	DWORD PTR [edx+24], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _iid$[ebp]
	mov	DWORD PTR [ecx+40], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _dispidMethod$[ebp]
	mov	DWORD PTR [eax+44], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR _wFlags$[ebp]
	mov	WORD PTR [edx+48], ax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pvarResult$[ebp]
	mov	DWORD PTR [ecx+52], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bStream$[ebp]
	mov	DWORD PTR [eax+56], ecx
	mov	edx, DWORD PTR _phr$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDispParams$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nArgs$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0CDispParams@@QAE@IPAUtagVARIANT@@PAJ@Z ; CDispParams::CDispParams
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??0CBaseDispatch@@QAE@XZ		; CBaseDispatch::CBaseDispatch
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+84], -2147467260		; 80004004H
; Line 1915
	sub	esp, 8
	fld	QWORD PTR _time$[ebp]
	fstp	QWORD PTR [esp]
	lea	ecx, DWORD PTR _convertor$[ebp]
	call	??0COARefTime@@QAE@N@Z			; COARefTime::COARefTime
; Line 1916
	lea	ecx, DWORD PTR _convertor$[ebp]
	call	??BCOARefTime@@QAE_JXZ			; COARefTime::operator __int64
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax
	mov	DWORD PTR [ecx+36], edx
; Line 1923
	mov	esi, esp
	lea	edx, DWORD PTR _pInterface$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIID@CDeferredCommand@@QAEABU_GUID@@XZ ; CDeferredCommand::GetIID
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1924
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN4@CDeferredC
; Line 1925
	mov	eax, DWORD PTR _phr$[ebp]
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1926
	jmp	$LN5@CDeferredC
$LN4@CDeferredC:
; Line 1928
	mov	edx, DWORD PTR _pInterface$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pInterface$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1933
	lea	eax, DWORD PTR _pti$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 80					; 00000050H
	push	edx
	call	?GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z ; CBaseDispatch::GetTypeInfo
	mov	DWORD PTR _hr$[ebp], eax
; Line 1934
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@CDeferredC
; Line 1935
	mov	eax, DWORD PTR _phr$[ebp]
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1936
	jmp	SHORT $LN5@CDeferredC
$LN3@CDeferredC:
; Line 1939
	mov	edx, DWORD PTR _pti$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pti$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1943
	movsx	eax, WORD PTR _wFlags$[ebp]
	cmp	eax, 4
	jne	SHORT $LN2@CDeferredC
; Line 1944
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+72], 1
; Line 1945
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+76], -3			; fffffffdH
; Line 1946
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 76					; 0000004cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+64], eax
$LN2@CDeferredC:
; Line 1950
	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _pQ$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pQ$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 1951
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@CDeferredC
; Line 1952
	mov	ecx, DWORD PTR _phr$[ebp]
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR [ecx], edx
$LN1@CDeferredC:
$LN5@CDeferredC:
; Line 1954
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@CDeferredC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	56					; 00000038H
$LN15@CDeferredC:
	DD	3
	DD	$LN14@CDeferredC
$LN14@CDeferredC:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN10@CDeferredC
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN11@CDeferredC
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN12@CDeferredC
$LN12@CDeferredC:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	0
$LN11@CDeferredC:
	DB	112					; 00000070H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	102					; 00000066H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
$LN10@CDeferredC:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CDeferredCommand@@QAE@PAVCCmdQueue@@PAUIUnknown@@PAJ1NPAU_GUID@@JFJPAUtagVARIANT@@4PAFH@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CUnknown@@UAE@XZ			; CUnknown::~CUnknown
__unwindfunclet$??0CDeferredCommand@@QAE@PAVCCmdQueue@@PAUIUnknown@@PAJ1NPAU_GUID@@JFJPAUtagVARIANT@@4PAFH@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1CDispParams@@QAE@XZ			; CDispParams::~CDispParams
__unwindfunclet$??0CDeferredCommand@@QAE@PAVCCmdQueue@@PAUIUnknown@@PAJ1NPAU_GUID@@JFJPAUtagVARIANT@@4PAFH@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	jmp	??1CBaseDispatch@@QAE@XZ		; CBaseDispatch::~CBaseDispatch
__ehhandler$??0CDeferredCommand@@QAE@PAVCCmdQueue@@PAUIUnknown@@PAJ1NPAU_GUID@@JFJPAUtagVARIANT@@4PAFH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CDeferredCommand@@QAE@PAVCCmdQueue@@PAUIUnknown@@PAJ1NPAU_GUID@@JFJPAUtagVARIANT@@4PAFH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CDeferredCommand@@QAE@PAVCCmdQueue@@PAUIUnknown@@PAJ1NPAU_GUID@@JFJPAUtagVARIANT@@4PAFH@Z ENDP ; CDeferredCommand::CDeferredCommand
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0COARefTime@@QAE@N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_d$ = 8							; size = 8
??0COARefTime@@QAE@N@Z PROC				; COARefTime::COARefTime, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.h
; Line 202
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CRefTime@@QAE@XZ			; CRefTime::CRefTime
; Line 203
	fld	QWORD PTR _d$[ebp]
	fmul	QWORD PTR __real@416312d000000000
	call	__ftol2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
; Line 204
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0COARefTime@@QAE@N@Z ENDP				; COARefTime::COARefTime
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BCOARefTime@@QAE_JXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCOARefTime@@QAE_JXZ PROC				; COARefTime::operator __int64, COMDAT
; _this$ = ecx
; Line 210
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 211
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
; Line 212
	mov	esp, ebp
	pop	ebp
	ret	0
??BCOARefTime@@QAE_JXZ ENDP				; COARefTime::operator __int64
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CDeferredCommand@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv72 = -4						; size = 4
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?QueryInterface@CDeferredCommand@@UAGJABU_GUID@@PAPAX@Z PROC ; CDeferredCommand::QueryInterface, COMDAT
; Line 686
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@CDeferredCommand@@UAGJABU_GUID@@PAPAX@Z ENDP ; CDeferredCommand::QueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CDeferredCommand@@UAGKXZ
_TEXT	SEGMENT
tv72 = -4						; size = 4
_this$ = 8						; size = 4
?AddRef@CDeferredCommand@@UAGKXZ PROC			; CDeferredCommand::AddRef, COMDAT
; Line 686
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv72[ebp], eax
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@CDeferredCommand@@UAGKXZ ENDP			; CDeferredCommand::AddRef
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Release@CDeferredCommand@@UAGKXZ
_TEXT	SEGMENT
tv72 = -4						; size = 4
_this$ = 8						; size = 4
?Release@CDeferredCommand@@UAGKXZ PROC			; CDeferredCommand::Release, COMDAT
; Line 686
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?GetOwner@CUnknown@@QBEPAUIUnknown@@XZ	; CUnknown::GetOwner
	mov	DWORD PTR tv72[ebp], eax
	mov	eax, DWORD PTR tv72[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@CDeferredCommand@@UAGKXZ ENDP			; CDeferredCommand::Release
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetIID@CDeferredCommand@@QAEABU_GUID@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetIID@CDeferredCommand@@QAEABU_GUID@@XZ PROC		; CDeferredCommand::GetIID, COMDAT
; _this$ = ecx
; Line 715
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 716
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+40]
; Line 717
	mov	esp, ebp
	pop	ebp
	ret	0
?GetIID@CDeferredCommand@@QAEABU_GUID@@XZ ENDP		; CDeferredCommand::GetIID
_TEXT	ENDS
PUBLIC	??1CDeferredCommand@@UAE@XZ			; CDeferredCommand::~CDeferredCommand
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCDeferredCommand@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCDeferredCommand@@UAEPAXI@Z PROC			; CDeferredCommand::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDeferredCommand@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCDeferredCommand@@UAEPAXI@Z ENDP			; CDeferredCommand::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??0IDeferredCommand@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IDeferredCommand@@QAE@XZ PROC			; IDeferredCommand::IDeferredCommand, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IDeferredCommand@@QAE@XZ ENDP			; IDeferredCommand::IDeferredCommand
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CDeferredCommand@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CDeferredCommand@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CDeferredCommand@@UAE@XZ$1
__ehfuncinfo$??1CDeferredCommand@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1CDeferredCommand@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CDeferredCommand@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDeferredCommand@@UAE@XZ PROC			; CDeferredCommand::~CDeferredCommand, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CDeferredCommand@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??1CBaseDispatch@@QAE@XZ		; CBaseDispatch::~CBaseDispatch
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??1CDispParams@@QAE@XZ			; CDispParams::~CDispParams
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CUnknown@@UAE@XZ			; CUnknown::~CUnknown
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CDeferredCommand@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CUnknown@@UAE@XZ			; CUnknown::~CUnknown
__unwindfunclet$??1CDeferredCommand@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1CDispParams@@QAE@XZ			; CDispParams::~CDispParams
__ehhandler$??1CDeferredCommand@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CDeferredCommand@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CDeferredCommand@@UAE@XZ ENDP			; CDeferredCommand::~CDeferredCommand
EXTRN	_IID_IDeferredCommand:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?NonDelegatingQueryInterface@CDeferredCommand@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
tv91 = -4						; size = 4
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppv$ = 16						; size = 4
?NonDelegatingQueryInterface@CDeferredCommand@@UAGJABU_GUID@@PAPAX@Z PROC ; CDeferredCommand::NonDelegatingQueryInterface, COMDAT
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.cpp
; Line 1985
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1986
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN4@NonDelegat@9
	push	1986					; 000007c2H
	push	OFFSET $SG82913
	push	OFFSET $SG82914
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN4@NonDelegat@9:
	mov	esi, esp
	push	4
	mov	ecx, DWORD PTR _ppv$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsBadWritePtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@NonDelegat@9
	push	1986					; 000007c2H
	push	OFFSET $SG82918
	push	OFFSET $SG82919
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN3@NonDelegat@9:
; Line 1987
	push	OFFSET _IID_IDeferredCommand
	mov	edx, DWORD PTR _riid$[ebp]
	push	edx
	call	_==@8
	test	eax, eax
	je	SHORT $LN2@NonDelegat@9
; Line 1988
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN7@NonDelegat@9
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN8@NonDelegat@9
$LN7@NonDelegat@9:
	mov	DWORD PTR tv91[ebp], 0
$LN8@NonDelegat@9:
	mov	ecx, DWORD PTR _ppv$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv91[ebp]
	push	edx
	call	_GetInterface@8
	jmp	SHORT $LN5@NonDelegat@9
; Line 1989
	jmp	SHORT $LN5@NonDelegat@9
$LN2@NonDelegat@9:
; Line 1990
	mov	eax, DWORD PTR _ppv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?NonDelegatingQueryInterface@CUnknown@@UAGJABU_GUID@@PAPAX@Z ; CUnknown::NonDelegatingQueryInterface
$LN5@NonDelegat@9:
; Line 1992
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?NonDelegatingQueryInterface@CDeferredCommand@@UAGJABU_GUID@@PAPAX@Z ENDP ; CDeferredCommand::NonDelegatingQueryInterface
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Cancel@CDeferredCommand@@UAGJXZ
_TEXT	SEGMENT
_hr$ = -4						; size = 4
_this$ = 8						; size = 4
?Cancel@CDeferredCommand@@UAGJXZ PROC			; CDeferredCommand::Cancel, COMDAT
; Line 2001
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2002
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN2@Cancel
; Line 2003
	mov	eax, -2147220940			; 80040234H
	jmp	SHORT $LN3@Cancel
$LN2@Cancel:
; Line 2006
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 2007
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@Cancel
; Line 2008
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN3@Cancel
$LN1@Cancel:
; Line 2011
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 2012
	xor	eax, eax
$LN3@Cancel:
; Line 2013
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Cancel@CDeferredCommand@@UAGJXZ ENDP			; CDeferredCommand::Cancel
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?Confidence@CDeferredCommand@@UAGJPAJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pConfidence$ = 12					; size = 4
?Confidence@CDeferredCommand@@UAGJPAJ@Z PROC		; CDeferredCommand::Confidence, COMDAT
; Line 2018
	push	ebp
	mov	ebp, esp
; Line 2019
	mov	eax, -2147467263			; 80004001H
; Line 2020
	pop	ebp
	ret	8
?Confidence@CDeferredCommand@@UAGJPAJ@Z ENDP		; CDeferredCommand::Confidence
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetHResult@CDeferredCommand@@UAGJPAJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_phrResult$ = 12					; size = 4
?GetHResult@CDeferredCommand@@UAGJPAJ@Z PROC		; CDeferredCommand::GetHResult, COMDAT
; Line 2025
	push	ebp
	mov	ebp, esp
	push	esi
; Line 2026
	cmp	DWORD PTR _phrResult$[ebp], 0
	jne	SHORT $LN4@GetHResult
	mov	eax, -2147467261			; 80004003H
	jmp	SHORT $LN5@GetHResult
$LN4@GetHResult:
; Line 2027
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR _phrResult$[ebp]
	push	eax
	call	DWORD PTR __imp__IsBadReadPtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN3@GetHResult
	push	2027					; 000007ebH
	push	OFFSET $SG82946
	push	OFFSET $SG82947
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN3@GetHResult:
	mov	esi, esp
	push	4
	mov	ecx, DWORD PTR _phrResult$[ebp]
	push	ecx
	call	DWORD PTR __imp__IsBadWritePtr@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN2@GetHResult
	push	2027					; 000007ebH
	push	OFFSET $SG82951
	push	OFFSET $SG82952
	call	?DbgBreakPoint@@YGXPB_W0H@Z		; DbgBreakPoint
$LN2@GetHResult:
; Line 2029
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	SHORT $LN1@GetHResult
; Line 2030
	mov	eax, -2147467260			; 80004004H
	jmp	SHORT $LN5@GetHResult
$LN1@GetHResult:
; Line 2032
	mov	eax, DWORD PTR _phrResult$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	DWORD PTR [eax], edx
; Line 2033
	xor	eax, eax
$LN5@GetHResult:
; Line 2034
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	8
?GetHResult@CDeferredCommand@@UAGJPAJ@Z ENDP		; CDeferredCommand::GetHResult
_TEXT	ENDS
PUBLIC	?CheckTime@CCmdQueue@@QAEHVCRefTime@@H@Z	; CCmdQueue::CheckTime
PUBLIC	?IsStreamTime@CDeferredCommand@@QAEHXZ		; CDeferredCommand::IsStreamTime
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Postpone@CDeferredCommand@@UAGJN@Z
_TEXT	SEGMENT
$T84733 = -28						; size = 8
_hr$ = -20						; size = 4
_convertor$ = -12					; size = 8
_this$ = 8						; size = 4
_newtime$ = 12						; size = 8
?Postpone@CDeferredCommand@@UAGJN@Z PROC		; CDeferredCommand::Postpone, COMDAT
; Line 2042
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 2046
	sub	esp, 8
	fld	QWORD PTR _newtime$[ebp]
	fstp	QWORD PTR [esp]
	lea	ecx, DWORD PTR _convertor$[ebp]
	call	??0COARefTime@@QAE@N@Z			; COARefTime::COARefTime
; Line 2049
	mov	eax, DWORD PTR _convertor$[ebp]
	mov	DWORD PTR $T84733[ebp], eax
	mov	ecx, DWORD PTR _convertor$[ebp+4]
	mov	DWORD PTR $T84733[ebp+4], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 16					; 00000010H
	call	?IsStreamTime@CDeferredCommand@@QAEHXZ	; CDeferredCommand::IsStreamTime
	push	eax
	mov	edx, DWORD PTR $T84733[ebp+4]
	push	edx
	mov	eax, DWORD PTR $T84733[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?CheckTime@CCmdQueue@@QAEHVCRefTime@@H@Z ; CCmdQueue::CheckTime
	test	eax, eax
	je	SHORT $LN2@Postpone
; Line 2050
	mov	eax, -2147220941			; 80040233H
	jmp	SHORT $LN3@Postpone
$LN2@Postpone:
; Line 2054
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 16					; 00000010H
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 2055
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@Postpone
; Line 2056
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	SHORT $LN3@Postpone
$LN1@Postpone:
; Line 2060
	lea	ecx, DWORD PTR _convertor$[ebp]
	call	??BCOARefTime@@QAE_JXZ			; COARefTime::operator __int64
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], edx
; Line 2063
	mov	edx, DWORD PTR _this$[ebp]
	sub	edx, 16					; 00000010H
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 2065
	mov	eax, DWORD PTR _hr$[ebp]
$LN3@Postpone:
; Line 2066
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Postpone
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN7@Postpone:
	DD	1
	DD	$LN6@Postpone
$LN6@Postpone:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN5@Postpone
$LN5@Postpone:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
?Postpone@CDeferredCommand@@UAGJN@Z ENDP		; CDeferredCommand::Postpone
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?IsStreamTime@CDeferredCommand@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsStreamTime@CDeferredCommand@@QAEHXZ PROC		; CDeferredCommand::IsStreamTime, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.h
; Line 707
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 708
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+56]
; Line 709
	mov	esp, ebp
	pop	ebp
	ret	0
?IsStreamTime@CDeferredCommand@@QAEHXZ ENDP		; CDeferredCommand::IsStreamTime
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?CheckTime@CCmdQueue@@QAEHVCRefTime@@H@Z
_TEXT	SEGMENT
tv86 = -40						; size = 4
tv144 = -36						; size = 8
tv141 = -28						; size = 8
_Now$ = -16						; size = 8
_this$ = -4						; size = 4
_time$ = 8						; size = 8
_bStream$ = 16						; size = 4
?CheckTime@CCmdQueue@@QAEHVCRefTime@@H@Z PROC		; CCmdQueue::CheckTime, COMDAT
; _this$ = ecx
; Line 863
	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 866
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], 0
	jne	SHORT $LN3@CheckTime
; Line 867
	xor	eax, eax
	jmp	$LN4@CheckTime
$LN3@CheckTime:
; Line 871
	cmp	DWORD PTR _bStream$[ebp], 0
	je	SHORT $LN2@CheckTime
; Line 874
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+124], 0
	jne	SHORT $LN1@CheckTime
; Line 875
	xor	eax, eax
	jmp	$LN4@CheckTime
$LN1@CheckTime:
; Line 878
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 128				; 00000080H
	push	edx
	lea	ecx, DWORD PTR _time$[ebp]
	call	??YCRefTime@@QAEAAV0@ABV0@@Z		; CRefTime::operator+=
$LN2@CheckTime:
; Line 881
	lea	ecx, DWORD PTR _Now$[ebp]
	call	??0CRefTime@@QAE@XZ			; CRefTime::CRefTime
; Line 882
	mov	esi, esp
	lea	eax, DWORD PTR _Now$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 883
	lea	ecx, DWORD PTR _time$[ebp]
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	esi, eax
	mov	edi, edx
	lea	ecx, DWORD PTR _Now$[ebp]
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	DWORD PTR tv141[ebp], esi
	mov	DWORD PTR tv141[ebp+4], edi
	mov	DWORD PTR tv144[ebp], eax
	mov	DWORD PTR tv144[ebp+4], edx
	mov	ecx, DWORD PTR tv141[ebp+4]
	cmp	ecx, DWORD PTR tv144[ebp+4]
	jg	SHORT $LN6@CheckTime
	jl	SHORT $LN8@CheckTime
	mov	edx, DWORD PTR tv141[ebp]
	cmp	edx, DWORD PTR tv144[ebp]
	ja	SHORT $LN6@CheckTime
$LN8@CheckTime:
	mov	DWORD PTR tv86[ebp], 1
	jmp	SHORT $LN7@CheckTime
$LN6@CheckTime:
	mov	DWORD PTR tv86[ebp], 0
$LN7@CheckTime:
	mov	eax, DWORD PTR tv86[ebp]
$LN4@CheckTime:
; Line 884
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@CheckTime
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN11@CheckTime:
	DD	1
	DD	$LN10@CheckTime
$LN10@CheckTime:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN9@CheckTime
$LN9@CheckTime:
	DB	78					; 0000004eH
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
?CheckTime@CCmdQueue@@QAEHVCRefTime@@H@Z ENDP		; CCmdQueue::CheckTime
_TEXT	ENDS
PUBLIC	?GetMethod@CDeferredCommand@@QAEJXZ		; CDeferredCommand::GetMethod
PUBLIC	?GetFlags@CDeferredCommand@@QAEFXZ		; CDeferredCommand::GetFlags
PUBLIC	?GetParams@CDeferredCommand@@QAEPAUtagDISPPARAMS@@XZ ; CDeferredCommand::GetParams
PUBLIC	?GetResult@CDeferredCommand@@QAEPAUtagVARIANT@@XZ ; CDeferredCommand::GetResult
PUBLIC	?Invoke@CDeferredCommand@@QAEJXZ		; CDeferredCommand::Invoke
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Invoke@CDeferredCommand@@QAEJXZ
_TEXT	SEGMENT
_uArgErr$ = -80						; size = 4
_expinfo$ = -68						; size = 32
_pInterface$ = -28					; size = 4
_hr$ = -20						; size = 4
_pti$ = -12						; size = 4
_this$ = -4						; size = 4
?Invoke@CDeferredCommand@@QAEJXZ PROC			; CDeferredCommand::Invoke, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.cpp
; Line 2071
	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-84]
	mov	ecx, 21					; 00000015H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2073
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN3@Invoke@7
; Line 2074
	mov	eax, -2147220940			; 80040234H
	jmp	$LN4@Invoke@7
$LN3@Invoke@7:
; Line 2079
	lea	ecx, DWORD PTR _pti$[ebp]
	push	ecx
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIID@CDeferredCommand@@QAEABU_GUID@@XZ ; CDeferredCommand::GetIID
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 80					; 00000050H
	push	edx
	call	?GetTypeInfo@CBaseDispatch@@QAGJABU_GUID@@IKPAPAUITypeInfo@@@Z ; CBaseDispatch::GetTypeInfo
	mov	DWORD PTR _hr$[ebp], eax
; Line 2080
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@Invoke@7
; Line 2081
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN4@Invoke@7
$LN2@Invoke@7:
; Line 2088
	mov	esi, esp
	lea	eax, DWORD PTR _pInterface$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetIID@CDeferredCommand@@QAEABU_GUID@@XZ ; CDeferredCommand::GetIID
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 2089
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@Invoke@7
; Line 2090
	mov	ecx, DWORD PTR _pti$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pti$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2091
	mov	eax, DWORD PTR _hr$[ebp]
	jmp	$LN4@Invoke@7
$LN1@Invoke@7:
; Line 2103
	mov	esi, esp
	lea	edx, DWORD PTR _uArgErr$[ebp]
	push	edx
	lea	eax, DWORD PTR _expinfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetResult@CDeferredCommand@@QAEPAUtagVARIANT@@XZ ; CDeferredCommand::GetResult
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetParams@CDeferredCommand@@QAEPAUtagDISPPARAMS@@XZ ; CDeferredCommand::GetParams
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFlags@CDeferredCommand@@QAEFXZ	; CDeferredCommand::GetFlags
	movzx	ecx, ax
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetMethod@CDeferredCommand@@QAEJXZ	; CDeferredCommand::GetMethod
	push	eax
	mov	edx, DWORD PTR _pInterface$[ebp]
	push	edx
	mov	eax, DWORD PTR _pti$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pti$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], eax
; Line 2106
	mov	edx, DWORD PTR _pInterface$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pInterface$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2107
	mov	eax, DWORD PTR _pti$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _pti$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2112
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+20]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 2113
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0
; Line 2114
	mov	eax, DWORD PTR _hr$[ebp]
$LN4@Invoke@7:
; Line 2115
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@Invoke@7
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 84					; 00000054H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@Invoke@7:
	DD	4
	DD	$LN10@Invoke@7
$LN10@Invoke@7:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN6@Invoke@7
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN7@Invoke@7
	DD	-68					; ffffffbcH
	DD	32					; 00000020H
	DD	$LN8@Invoke@7
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN9@Invoke@7
$LN9@Invoke@7:
	DB	117					; 00000075H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	0
$LN8@Invoke@7:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN7@Invoke@7:
	DB	112					; 00000070H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	102					; 00000066H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
$LN6@Invoke@7:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	0
?Invoke@CDeferredCommand@@QAEJXZ ENDP			; CDeferredCommand::Invoke
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetMethod@CDeferredCommand@@QAEJXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetMethod@CDeferredCommand@@QAEJXZ PROC		; CDeferredCommand::GetMethod, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.h
; Line 719
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 720
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+44]
; Line 721
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMethod@CDeferredCommand@@QAEJXZ ENDP		; CDeferredCommand::GetMethod
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetFlags@CDeferredCommand@@QAEFXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFlags@CDeferredCommand@@QAEFXZ PROC			; CDeferredCommand::GetFlags, COMDAT
; _this$ = ecx
; Line 723
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 724
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+48]
; Line 725
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFlags@CDeferredCommand@@QAEFXZ ENDP			; CDeferredCommand::GetFlags
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetParams@CDeferredCommand@@QAEPAUtagDISPPARAMS@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetParams@CDeferredCommand@@QAEPAUtagDISPPARAMS@@XZ PROC ; CDeferredCommand::GetParams, COMDAT
; _this$ = ecx
; Line 727
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 728
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 60					; 0000003cH
; Line 729
	mov	esp, ebp
	pop	ebp
	ret	0
?GetParams@CDeferredCommand@@QAEPAUtagDISPPARAMS@@XZ ENDP ; CDeferredCommand::GetParams
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetResult@CDeferredCommand@@QAEPAUtagVARIANT@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetResult@CDeferredCommand@@QAEPAUtagVARIANT@@XZ PROC	; CDeferredCommand::GetResult, COMDAT
; _this$ = ecx
; Line 731
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 732
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+52]
; Line 733
	mov	esp, ebp
	pop	ebp
	ret	0
?GetResult@CDeferredCommand@@QAEPAUtagVARIANT@@XZ ENDP	; CDeferredCommand::GetResult
_TEXT	ENDS
PUBLIC	??1?$CGenericList@VCDeferredCommand@@@@QAE@XZ	; CGenericList<CDeferredCommand>::~CGenericList<CDeferredCommand>
PUBLIC	??0?$CGenericList@VCDeferredCommand@@@@QAE@PA_W@Z ; CGenericList<CDeferredCommand>::CGenericList<CDeferredCommand>
PUBLIC	??0CCmdQueue@@QAE@XZ				; CCmdQueue::CCmdQueue
EXTRN	??1CAMEvent@@QAE@XZ:PROC			; CAMEvent::~CAMEvent
EXTRN	??1CCritSec@@QAE@XZ:PROC			; CCritSec::~CCritSec
EXTRN	??0CAMEvent@@QAE@H@Z:PROC			; CAMEvent::CAMEvent
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.cpp
xdata$x	SEGMENT
__unwindtable$??0CCmdQueue@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CCmdQueue@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0CCmdQueue@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0CCmdQueue@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0CCmdQueue@@QAE@XZ$3
__ehfuncinfo$??0CCmdQueue@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0CCmdQueue@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??0CCmdQueue@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CCmdQueue@@QAE@XZ PROC				; CCmdQueue::CCmdQueue, COMDAT
; _this$ = ecx
; Line 2129
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CCmdQueue@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0CCritSec@@QAE@XZ			; CCritSec::CCritSec
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET $SG82985
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0?$CGenericList@VCDeferredCommand@@@@QAE@PA_W@Z ; CGenericList<CDeferredCommand>::CGenericList<CDeferredCommand>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	OFFSET $SG82986
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??0?$CGenericList@VCDeferredCommand@@@@QAE@PA_W@Z ; CGenericList<CDeferredCommand>::CGenericList<CDeferredCommand>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??0CAMEvent@@QAE@H@Z			; CAMEvent::CAMEvent
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??0CRefTime@@QAE@XZ			; CRefTime::CRefTime
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+120], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+124], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??0CRefTime@@QAE@XZ			; CRefTime::CRefTime
; Line 2130
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CCmdQueue@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
__unwindfunclet$??0CCmdQueue@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1?$CGenericList@VCDeferredCommand@@@@QAE@XZ
__unwindfunclet$??0CCmdQueue@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	jmp	??1?$CGenericList@VCDeferredCommand@@@@QAE@XZ
__unwindfunclet$??0CCmdQueue@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	jmp	??1CAMEvent@@QAE@XZ			; CAMEvent::~CAMEvent
__ehhandler$??0CCmdQueue@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CCmdQueue@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CCmdQueue@@QAE@XZ ENDP				; CCmdQueue::CCmdQueue
EXTRN	??1CBaseList@@QAE@XZ:PROC			; CBaseList::~CBaseList
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$CGenericList@VCDeferredCommand@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$CGenericList@VCDeferredCommand@@@@QAE@XZ PROC	; CGenericList<CDeferredCommand>::~CGenericList<CDeferredCommand>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBaseList@@QAE@XZ			; CBaseList::~CBaseList
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$CGenericList@VCDeferredCommand@@@@QAE@XZ ENDP	; CGenericList<CDeferredCommand>::~CGenericList<CDeferredCommand>
_TEXT	ENDS
PUBLIC	?GetNext@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@AAPAU__POSITION@@@Z ; CGenericList<CDeferredCommand>::GetNext
PUBLIC	?GetHeadPosition@?$CGenericList@VCDeferredCommand@@@@QBEPAU__POSITION@@XZ ; CGenericList<CDeferredCommand>::GetHeadPosition
PUBLIC	??1CCmdQueue@@UAE@XZ				; CCmdQueue::~CCmdQueue
EXTRN	?RemoveAll@CBaseList@@QAEXXZ:PROC		; CBaseList::RemoveAll
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CCmdQueue@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CCmdQueue@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1CCmdQueue@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1CCmdQueue@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1CCmdQueue@@UAE@XZ$3
__ehfuncinfo$??1CCmdQueue@@UAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??1CCmdQueue@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CCmdQueue@@UAE@XZ
_TEXT	SEGMENT
_pCmd$83004 = -36					; size = 4
_pCmd$83000 = -32					; size = 4
_pos$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CCmdQueue@@UAE@XZ PROC				; CCmdQueue::~CCmdQueue, COMDAT
; _this$ = ecx
; Line 2134
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CCmdQueue@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 2139
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?GetHeadPosition@?$CGenericList@VCDeferredCommand@@@@QBEPAU__POSITION@@XZ ; CGenericList<CDeferredCommand>::GetHeadPosition
	mov	DWORD PTR _pos$[ebp], eax
$LN6@CCmdQueue:
; Line 2141
	cmp	DWORD PTR _pos$[ebp], 0
	je	SHORT $LN5@CCmdQueue
; Line 2142
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?GetNext@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@AAPAU__POSITION@@@Z ; CGenericList<CDeferredCommand>::GetNext
	mov	DWORD PTR _pCmd$83000[ebp], eax
; Line 2143
	mov	ecx, DWORD PTR _pCmd$83000[ebp]
	add	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _pCmd$83000[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	esi, esp
	push	ecx
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2144
	jmp	SHORT $LN6@CCmdQueue
$LN5@CCmdQueue:
; Line 2145
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?RemoveAll@CBaseList@@QAEXXZ		; CBaseList::RemoveAll
; Line 2147
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?GetHeadPosition@?$CGenericList@VCDeferredCommand@@@@QBEPAU__POSITION@@XZ ; CGenericList<CDeferredCommand>::GetHeadPosition
	mov	DWORD PTR _pos$[ebp], eax
$LN4@CCmdQueue:
; Line 2149
	cmp	DWORD PTR _pos$[ebp], 0
	je	SHORT $LN3@CCmdQueue
; Line 2150
	lea	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?GetNext@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@AAPAU__POSITION@@@Z ; CGenericList<CDeferredCommand>::GetNext
	mov	DWORD PTR _pCmd$83004[ebp], eax
; Line 2151
	mov	eax, DWORD PTR _pCmd$83004[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pCmd$83004[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2152
	jmp	SHORT $LN4@CCmdQueue
$LN3@CCmdQueue:
; Line 2153
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?RemoveAll@CBaseList@@QAEXXZ		; CBaseList::RemoveAll
; Line 2155
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+120], 0
	je	SHORT $LN7@CCmdQueue
; Line 2156
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+104], 0
	je	SHORT $LN1@CCmdQueue
; Line 2157
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2158
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+104], 0
$LN1@CCmdQueue:
; Line 2160
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@CCmdQueue:
; Line 2162
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??1CAMEvent@@QAE@XZ			; CAMEvent::~CAMEvent
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??1?$CGenericList@VCDeferredCommand@@@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??1?$CGenericList@VCDeferredCommand@@@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@CCmdQueue
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN16@CCmdQueue:
	DD	1
	DD	$LN15@CCmdQueue
$LN15@CCmdQueue:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN13@CCmdQueue
$LN13@CCmdQueue:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CCmdQueue@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
__unwindfunclet$??1CCmdQueue@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1?$CGenericList@VCDeferredCommand@@@@QAE@XZ
__unwindfunclet$??1CCmdQueue@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	jmp	??1?$CGenericList@VCDeferredCommand@@@@QAE@XZ
__unwindfunclet$??1CCmdQueue@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	jmp	??1CAMEvent@@QAE@XZ			; CAMEvent::~CAMEvent
__ehhandler$??1CCmdQueue@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CCmdQueue@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CCmdQueue@@UAE@XZ ENDP				; CCmdQueue::~CCmdQueue
PUBLIC	?New@CCmdQueue@@UAEJPAPAVCDeferredCommand@@PAUIUnknown@@NPAU_GUID@@JFJPAUtagVARIANT@@3PAFH@Z ; CCmdQueue::New
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?New@CCmdQueue@@UAEJPAPAVCDeferredCommand@@PAUIUnknown@@NPAU_GUID@@JFJPAUtagVARIANT@@3PAFH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?New@CCmdQueue@@UAEJPAPAVCDeferredCommand@@PAUIUnknown@@NPAU_GUID@@JFJPAUtagVARIANT@@3PAFH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?New@CCmdQueue@@UAEJPAPAVCDeferredCommand@@PAUIUnknown@@NPAU_GUID@@JFJPAUtagVARIANT@@3PAFH@Z$1
__ehfuncinfo$?New@CCmdQueue@@UAEJPAPAVCDeferredCommand@@PAUIUnknown@@NPAU_GUID@@JFJPAUtagVARIANT@@3PAFH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?New@CCmdQueue@@UAEJPAPAVCDeferredCommand@@PAUIUnknown@@NPAU_GUID@@JFJPAUtagVARIANT@@3PAFH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?New@CCmdQueue@@UAEJPAPAVCDeferredCommand@@PAUIUnknown@@NPAU_GUID@@JFJPAUtagVARIANT@@3PAFH@Z
_TEXT	SEGMENT
tv89 = -60						; size = 4
$T84799 = -56						; size = 4
$T84796 = -52						; size = 4
$T84795 = -48						; size = 4
_pCmd$ = -44						; size = 4
_hr$ = -36						; size = 4
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ppCmd$ = 8						; size = 4
_pUnk$ = 12						; size = 4
_time$ = 16						; size = 8
_iid$ = 24						; size = 4
_dispidMethod$ = 28					; size = 4
_wFlags$ = 32						; size = 2
_cArgs$ = 36						; size = 4
_pDispParams$ = 40					; size = 4
_pvarResult$ = 44					; size = 4
_puArgErr$ = 48						; size = 4
_bStream$ = 52						; size = 4
?New@CCmdQueue@@UAEJPAPAVCDeferredCommand@@PAUIUnknown@@NPAU_GUID@@JFJPAUtagVARIANT@@3PAFH@Z PROC ; CCmdQueue::New, COMDAT
; _this$ = ecx
; Line 2184
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?New@CCmdQueue@@UAEJPAPAVCDeferredCommand@@PAUIUnknown@@NPAU_GUID@@JFJPAUtagVARIANT@@3PAFH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2185
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2187
	mov	DWORD PTR _hr$[ebp], 0
; Line 2188
	mov	ecx, DWORD PTR _ppCmd$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 2204
	push	88					; 00000058H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T84796[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T84796[ebp], 0
	je	SHORT $LN5@New
	mov	edx, DWORD PTR _bStream$[ebp]
	push	edx
	mov	eax, DWORD PTR _puArgErr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pvarResult$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDispParams$[ebp]
	push	edx
	mov	eax, DWORD PTR _cArgs$[ebp]
	push	eax
	movzx	ecx, WORD PTR _wFlags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dispidMethod$[ebp]
	push	edx
	mov	eax, DWORD PTR _iid$[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR _time$[ebp]
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _pUnk$[ebp]
	push	ecx
	lea	edx, DWORD PTR _hr$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T84796[ebp]
	call	??0CDeferredCommand@@QAE@PAVCCmdQueue@@PAUIUnknown@@PAJ1NPAU_GUID@@JFJPAUtagVARIANT@@4PAFH@Z ; CDeferredCommand::CDeferredCommand
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN6@New
$LN5@New:
	mov	DWORD PTR tv89[ebp], 0
$LN6@New:
	mov	ecx, DWORD PTR tv89[ebp]
	mov	DWORD PTR $T84795[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T84795[ebp]
	mov	DWORD PTR _pCmd$[ebp], edx
; Line 2206
	cmp	DWORD PTR _pCmd$[ebp], 0
	jne	SHORT $LN2@New
; Line 2207
	mov	DWORD PTR _hr$[ebp], -2147024882	; 8007000eH
; Line 2208
	jmp	SHORT $LN1@New
$LN2@New:
; Line 2209
	mov	eax, DWORD PTR _ppCmd$[ebp]
	mov	ecx, DWORD PTR _pCmd$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@New:
; Line 2211
	mov	edx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T84799[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84799[ebp]
; Line 2212
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@New
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	48					; 00000030H
	npad	1
$LN13@New:
	DD	2
	DD	$LN12@New
$LN12@New:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN9@New
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN10@New
$LN10@New:
	DB	104					; 00000068H
	DB	114					; 00000072H
	DB	0
$LN9@New:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?New@CCmdQueue@@UAEJPAPAVCDeferredCommand@@PAUIUnknown@@NPAU_GUID@@JFJPAUtagVARIANT@@3PAFH@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__unwindfunclet$?New@CCmdQueue@@UAEJPAPAVCDeferredCommand@@PAUIUnknown@@NPAU_GUID@@JFJPAUtagVARIANT@@3PAFH@Z$1:
	mov	eax, DWORD PTR $T84796[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?New@CCmdQueue@@UAEJPAPAVCDeferredCommand@@PAUIUnknown@@NPAU_GUID@@JFJPAUtagVARIANT@@3PAFH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?New@CCmdQueue@@UAEJPAPAVCDeferredCommand@@PAUIUnknown@@NPAU_GUID@@JFJPAUtagVARIANT@@3PAFH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?New@CCmdQueue@@UAEJPAPAVCDeferredCommand@@PAUIUnknown@@NPAU_GUID@@JFJPAUtagVARIANT@@3PAFH@Z ENDP ; CCmdQueue::New
PUBLIC	?SetTimeAdvise@CCmdQueue@@IAEXXZ		; CCmdQueue::SetTimeAdvise
PUBLIC	?AddBefore@?$CGenericList@VCDeferredCommand@@@@QAEPAU__POSITION@@PAU2@PAVCDeferredCommand@@@Z ; CGenericList<CDeferredCommand>::AddBefore
PUBLIC	?AddTail@?$CGenericList@VCDeferredCommand@@@@QAEPAU__POSITION@@PAVCDeferredCommand@@@Z ; CGenericList<CDeferredCommand>::AddTail
PUBLIC	?GetTime@CDeferredCommand@@QAE?AVCRefTime@@XZ	; CDeferredCommand::GetTime
PUBLIC	?Get@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@PAU__POSITION@@@Z ; CGenericList<CDeferredCommand>::Get
PUBLIC	?Insert@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z	; CCmdQueue::Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Insert@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Insert@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z$0
__ehfuncinfo$?Insert@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Insert@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Insert@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z
_TEXT	SEGMENT
tv171 = -80						; size = 8
tv168 = -72						; size = 8
$T84816 = -64						; size = 4
$T84815 = -60						; size = 8
$T84814 = -52						; size = 8
_pos$ = -40						; size = 4
_pList$ = -32						; size = 4
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pCmd$ = 8						; size = 4
?Insert@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z PROC	; CCmdQueue::Insert, COMDAT
; _this$ = ecx
; Line 2217
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Insert@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-80]
	mov	ecx, 17					; 00000011H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2218
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2221
	mov	ecx, DWORD PTR _pCmd$[ebp]
	add	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _pCmd$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	esi, esp
	push	ecx
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2224
	mov	ecx, DWORD PTR _pCmd$[ebp]
	call	?IsStreamTime@CDeferredCommand@@QAEHXZ	; CDeferredCommand::IsStreamTime
	test	eax, eax
	je	SHORT $LN6@Insert
; Line 2225
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 72					; 00000048H
	mov	DWORD PTR _pList$[ebp], edx
; Line 2226
	jmp	SHORT $LN5@Insert
$LN6@Insert:
; Line 2227
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	mov	DWORD PTR _pList$[ebp], eax
$LN5@Insert:
; Line 2229
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?GetHeadPosition@?$CGenericList@VCDeferredCommand@@@@QBEPAU__POSITION@@XZ ; CGenericList<CDeferredCommand>::GetHeadPosition
	mov	DWORD PTR _pos$[ebp], eax
$LN4@Insert:
; Line 2233
	cmp	DWORD PTR _pos$[ebp], 0
	je	SHORT $LN3@Insert
	lea	ecx, DWORD PTR $T84814[ebp]
	push	ecx
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?Get@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@PAU__POSITION@@@Z ; CGenericList<CDeferredCommand>::Get
	mov	ecx, eax
	call	?GetTime@CDeferredCommand@@QAE?AVCRefTime@@XZ ; CDeferredCommand::GetTime
	mov	ecx, eax
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	esi, eax
	mov	edi, edx
	lea	eax, DWORD PTR $T84815[ebp]
	push	eax
	mov	ecx, DWORD PTR _pCmd$[ebp]
	call	?GetTime@CDeferredCommand@@QAE?AVCRefTime@@XZ ; CDeferredCommand::GetTime
	mov	ecx, eax
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	DWORD PTR tv168[ebp], esi
	mov	DWORD PTR tv168[ebp+4], edi
	mov	DWORD PTR tv171[ebp], eax
	mov	DWORD PTR tv171[ebp+4], edx
	mov	ecx, DWORD PTR tv168[ebp+4]
	cmp	ecx, DWORD PTR tv171[ebp+4]
	jg	SHORT $LN3@Insert
	jl	SHORT $LN10@Insert
	mov	edx, DWORD PTR tv168[ebp]
	cmp	edx, DWORD PTR tv171[ebp]
	ja	SHORT $LN3@Insert
$LN10@Insert:
; Line 2235
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?GetNext@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@AAPAU__POSITION@@@Z ; CGenericList<CDeferredCommand>::GetNext
; Line 2236
	jmp	SHORT $LN4@Insert
$LN3@Insert:
; Line 2239
	cmp	DWORD PTR _pos$[ebp], 0
	jne	SHORT $LN2@Insert
; Line 2240
	mov	ecx, DWORD PTR _pCmd$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?AddTail@?$CGenericList@VCDeferredCommand@@@@QAEPAU__POSITION@@PAVCDeferredCommand@@@Z ; CGenericList<CDeferredCommand>::AddTail
; Line 2241
	jmp	SHORT $LN1@Insert
$LN2@Insert:
; Line 2242
	mov	edx, DWORD PTR _pCmd$[ebp]
	push	edx
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?AddBefore@?$CGenericList@VCDeferredCommand@@@@QAEPAU__POSITION@@PAU2@PAVCDeferredCommand@@@Z ; CGenericList<CDeferredCommand>::AddBefore
$LN1@Insert:
; Line 2245
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTimeAdvise@CCmdQueue@@IAEXXZ	; CCmdQueue::SetTimeAdvise
; Line 2246
	mov	DWORD PTR $T84816[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84816[ebp]
; Line 2247
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@Insert
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 80					; 00000050H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN15@Insert:
	DD	2
	DD	$LN14@Insert
$LN14@Insert:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN11@Insert
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN12@Insert
$LN12@Insert:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN11@Insert:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Insert@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?Insert@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Insert@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Insert@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z ENDP	; CCmdQueue::Insert
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetTime@CDeferredCommand@@QAE?AVCRefTime@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetTime@CDeferredCommand@@QAE?AVCRefTime@@XZ PROC	; CDeferredCommand::GetTime, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.h
; Line 711
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 712
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR [eax+32]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0CRefTime@@QAE@_J@Z			; CRefTime::CRefTime
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 713
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetTime@CDeferredCommand@@QAE?AVCRefTime@@XZ ENDP	; CDeferredCommand::GetTime
_TEXT	ENDS
PUBLIC	?Remove@?$CGenericList@VCDeferredCommand@@@@QAEPAVCDeferredCommand@@PAU__POSITION@@@Z ; CGenericList<CDeferredCommand>::Remove
PUBLIC	?Remove@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z	; CCmdQueue::Remove
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.cpp
xdata$x	SEGMENT
__unwindtable$?Remove@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Remove@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z$0
__ehfuncinfo$?Remove@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Remove@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Remove@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z
_TEXT	SEGMENT
$T84833 = -52						; size = 4
_pos$ = -44						; size = 4
_pList$ = -36						; size = 4
_hr$ = -32						; size = 4
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pCmd$ = 8						; size = 4
?Remove@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z PROC	; CCmdQueue::Remove, COMDAT
; _this$ = ecx
; Line 2252
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Remove@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2253
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2254
	mov	DWORD PTR _hr$[ebp], 0
; Line 2257
	mov	ecx, DWORD PTR _pCmd$[ebp]
	call	?IsStreamTime@CDeferredCommand@@QAEHXZ	; CDeferredCommand::IsStreamTime
	test	eax, eax
	je	SHORT $LN6@Remove
; Line 2258
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	mov	DWORD PTR _pList$[ebp], ecx
; Line 2259
	jmp	SHORT $LN5@Remove
$LN6@Remove:
; Line 2260
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 44					; 0000002cH
	mov	DWORD PTR _pList$[ebp], edx
$LN5@Remove:
; Line 2262
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?GetHeadPosition@?$CGenericList@VCDeferredCommand@@@@QBEPAU__POSITION@@XZ ; CGenericList<CDeferredCommand>::GetHeadPosition
	mov	DWORD PTR _pos$[ebp], eax
$LN4@Remove:
; Line 2265
	cmp	DWORD PTR _pos$[ebp], 0
	je	SHORT $LN3@Remove
	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?Get@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@PAU__POSITION@@@Z ; CGenericList<CDeferredCommand>::Get
	cmp	eax, DWORD PTR _pCmd$[ebp]
	je	SHORT $LN3@Remove
; Line 2266
	lea	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?GetNext@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@AAPAU__POSITION@@@Z ; CGenericList<CDeferredCommand>::GetNext
; Line 2267
	jmp	SHORT $LN4@Remove
$LN3@Remove:
; Line 2270
	cmp	DWORD PTR _pos$[ebp], 0
	jne	SHORT $LN2@Remove
; Line 2271
	mov	DWORD PTR _hr$[ebp], -2147220970	; 80040216H
; Line 2272
	jmp	SHORT $LN1@Remove
$LN2@Remove:
; Line 2275
	mov	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pList$[ebp]
	call	?Remove@?$CGenericList@VCDeferredCommand@@@@QAEPAVCDeferredCommand@@PAU__POSITION@@@Z ; CGenericList<CDeferredCommand>::Remove
; Line 2278
	mov	eax, DWORD PTR _pCmd$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pCmd$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2281
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTimeAdvise@CCmdQueue@@IAEXXZ	; CCmdQueue::SetTimeAdvise
$LN1@Remove:
; Line 2283
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR $T84833[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84833[ebp]
; Line 2284
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@Remove
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN14@Remove:
	DD	2
	DD	$LN13@Remove
$LN13@Remove:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@Remove
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN11@Remove
$LN11@Remove:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN10@Remove:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Remove@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?Remove@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Remove@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Remove@CCmdQueue@@UAEJPAVCDeferredCommand@@@Z ENDP	; CCmdQueue::Remove
PUBLIC	?SetSyncSource@CCmdQueue@@UAEJPAUIReferenceClock@@@Z ; CCmdQueue::SetSyncSource
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetSyncSource@CCmdQueue@@UAEJPAUIReferenceClock@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetSyncSource@CCmdQueue@@UAEJPAUIReferenceClock@@@Z$0
__ehfuncinfo$?SetSyncSource@CCmdQueue@@UAEJPAUIReferenceClock@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetSyncSource@CCmdQueue@@UAEJPAUIReferenceClock@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?SetSyncSource@CCmdQueue@@UAEJPAUIReferenceClock@@@Z
_TEXT	SEGMENT
$T84847 = -32						; size = 4
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pClock$ = 8						; size = 4
?SetSyncSource@CCmdQueue@@UAEJPAUIReferenceClock@@@Z PROC ; CCmdQueue::SetSyncSource, COMDAT
; _this$ = ecx
; Line 2291
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetSyncSource@CCmdQueue@@UAEJPAUIReferenceClock@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2292
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2295
	cmp	DWORD PTR _pClock$[ebp], 0
	je	SHORT $LN3@SetSyncSou
; Line 2296
	mov	ecx, DWORD PTR _pClock$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pClock$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+4]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@SetSyncSou:
; Line 2300
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+120], 0
	je	SHORT $LN2@SetSyncSou
; Line 2301
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+104], 0
	je	SHORT $LN1@SetSyncSou
; Line 2302
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2303
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+104], 0
$LN1@SetSyncSou:
; Line 2305
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	edx, DWORD PTR [edx]
	mov	esi, esp
	push	ecx
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@SetSyncSou:
; Line 2307
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pClock$[ebp]
	mov	DWORD PTR [ecx+120], edx
; Line 2310
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTimeAdvise@CCmdQueue@@IAEXXZ	; CCmdQueue::SetTimeAdvise
; Line 2311
	mov	DWORD PTR $T84847[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84847[ebp]
; Line 2312
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@SetSyncSou
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN10@SetSyncSou:
	DD	1
	DD	$LN9@SetSyncSou
$LN9@SetSyncSou:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN7@SetSyncSou
$LN7@SetSyncSou:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetSyncSource@CCmdQueue@@UAEJPAUIReferenceClock@@@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?SetSyncSource@CCmdQueue@@UAEJPAUIReferenceClock@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetSyncSource@CCmdQueue@@UAEJPAUIReferenceClock@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetSyncSource@CCmdQueue@@UAEJPAUIReferenceClock@@@Z ENDP ; CCmdQueue::SetSyncSource
PUBLIC	??BCAMEvent@@QBEPAXXZ				; CAMEvent::operator void *
PUBLIC	?GetCount@?$CGenericList@VCDeferredCommand@@@@QBEHXZ ; CGenericList<CDeferredCommand>::GetCount
PUBLIC	?Reset@CAMEvent@@QAEXXZ				; CAMEvent::Reset
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetTimeAdvise@CCmdQueue@@IAEXXZ
_TEXT	SEGMENT
tv276 = -112						; size = 8
tv273 = -104						; size = 8
tv257 = -96						; size = 8
tv244 = -88						; size = 8
tv241 = -80						; size = 8
tv225 = -72						; size = 8
$T84861 = -64						; size = 8
$T84860 = -56						; size = 8
_hr$83099 = -48						; size = 4
_pos$83093 = -44					; size = 4
_t$83091 = -36						; size = 8
_pos$83088 = -24					; size = 4
_current$ = -16						; size = 8
_this$ = -4						; size = 4
?SetTimeAdvise@CCmdQueue@@IAEXXZ PROC			; CCmdQueue::SetTimeAdvise, COMDAT
; _this$ = ecx
; Line 2319
	push	ebp
	mov	ebp, esp
	sub	esp, 112				; 00000070H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-112]
	mov	ecx, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2321
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], 0
	jne	SHORT $LN9@SetTimeAdv
; Line 2322
	jmp	$LN10@SetTimeAdv
$LN9@SetTimeAdv:
; Line 2326
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?Reset@CAMEvent@@QAEXXZ			; CAMEvent::Reset
; Line 2329
	lea	ecx, DWORD PTR _current$[ebp]
	call	??0CRefTime@@QAE@XZ			; CRefTime::CRefTime
; Line 2332
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?GetCount@?$CGenericList@VCDeferredCommand@@@@QBEHXZ ; CGenericList<CDeferredCommand>::GetCount
	test	eax, eax
	jle	SHORT $LN8@SetTimeAdv
; Line 2334
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?GetHeadPosition@?$CGenericList@VCDeferredCommand@@@@QBEPAU__POSITION@@XZ ; CGenericList<CDeferredCommand>::GetHeadPosition
	mov	DWORD PTR _pos$83088[ebp], eax
; Line 2335
	lea	ecx, DWORD PTR $T84860[ebp]
	push	ecx
	mov	edx, DWORD PTR _pos$83088[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Get@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@PAU__POSITION@@@Z ; CGenericList<CDeferredCommand>::Get
	mov	ecx, eax
	call	?GetTime@CDeferredCommand@@QAE?AVCRefTime@@XZ ; CDeferredCommand::GetTime
	push	eax
	lea	ecx, DWORD PTR _current$[ebp]
	call	??4CRefTime@@QAEAAV0@ABV0@@Z		; CRefTime::operator=
$LN8@SetTimeAdv:
; Line 2339
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+124], 0
	je	$LN7@SetTimeAdv
; Line 2341
	lea	ecx, DWORD PTR _t$83091[ebp]
	call	??0CRefTime@@QAE@XZ			; CRefTime::CRefTime
; Line 2343
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?GetCount@?$CGenericList@VCDeferredCommand@@@@QBEHXZ ; CGenericList<CDeferredCommand>::GetCount
	test	eax, eax
	jle	$LN7@SetTimeAdv
; Line 2345
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?GetHeadPosition@?$CGenericList@VCDeferredCommand@@@@QBEPAU__POSITION@@XZ ; CGenericList<CDeferredCommand>::GetHeadPosition
	mov	DWORD PTR _pos$83093[ebp], eax
; Line 2346
	lea	ecx, DWORD PTR $T84861[ebp]
	push	ecx
	mov	edx, DWORD PTR _pos$83093[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Get@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@PAU__POSITION@@@Z ; CGenericList<CDeferredCommand>::Get
	mov	ecx, eax
	call	?GetTime@CDeferredCommand@@QAE?AVCRefTime@@XZ ; CDeferredCommand::GetTime
	push	eax
	lea	ecx, DWORD PTR _t$83091[ebp]
	call	??4CRefTime@@QAEAAV0@ABV0@@Z		; CRefTime::operator=
; Line 2349
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 128				; 00000080H
	push	eax
	lea	ecx, DWORD PTR _t$83091[ebp]
	call	??YCRefTime@@QAEAAV0@ABV0@@Z		; CRefTime::operator+=
; Line 2352
	lea	ecx, DWORD PTR _current$[ebp]
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	DWORD PTR tv225[ebp], eax
	mov	DWORD PTR tv225[ebp+4], edx
	mov	ecx, DWORD PTR tv225[ebp]
	or	ecx, DWORD PTR tv225[ebp+4]
	je	SHORT $LN4@SetTimeAdv
	lea	ecx, DWORD PTR _t$83091[ebp]
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	esi, eax
	mov	edi, edx
	lea	ecx, DWORD PTR _current$[ebp]
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	DWORD PTR tv241[ebp], esi
	mov	DWORD PTR tv241[ebp+4], edi
	mov	DWORD PTR tv244[ebp], eax
	mov	DWORD PTR tv244[ebp+4], edx
	mov	edx, DWORD PTR tv241[ebp+4]
	cmp	edx, DWORD PTR tv244[ebp+4]
	jg	SHORT $LN7@SetTimeAdv
	jl	SHORT $LN4@SetTimeAdv
	mov	eax, DWORD PTR tv241[ebp]
	cmp	eax, DWORD PTR tv244[ebp]
	jae	SHORT $LN7@SetTimeAdv
$LN4@SetTimeAdv:
; Line 2353
	lea	ecx, DWORD PTR _t$83091[ebp]
	push	ecx
	lea	ecx, DWORD PTR _current$[ebp]
	call	??4CRefTime@@QAEAAV0@ABV0@@Z		; CRefTime::operator=
$LN7@SetTimeAdv:
; Line 2359
	lea	ecx, DWORD PTR _current$[ebp]
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	DWORD PTR tv257[ebp], eax
	mov	DWORD PTR tv257[ebp+4], edx
	cmp	DWORD PTR tv257[ebp+4], 0
	jl	$LN10@SetTimeAdv
	jg	SHORT $LN13@SetTimeAdv
	cmp	DWORD PTR tv257[ebp], 0
	jbe	$LN10@SetTimeAdv
$LN13@SetTimeAdv:
	lea	ecx, DWORD PTR _current$[ebp]
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	esi, eax
	mov	edi, edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	DWORD PTR tv273[ebp], esi
	mov	DWORD PTR tv273[ebp+4], edi
	mov	DWORD PTR tv276[ebp], eax
	mov	DWORD PTR tv276[ebp+4], edx
	mov	edx, DWORD PTR tv273[ebp]
	cmp	edx, DWORD PTR tv276[ebp]
	jne	SHORT $LN14@SetTimeAdv
	mov	eax, DWORD PTR tv273[ebp+4]
	cmp	eax, DWORD PTR tv276[ebp+4]
	je	$LN10@SetTimeAdv
$LN14@SetTimeAdv:
; Line 2360
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+104], 0
	je	SHORT $LN2@SetTimeAdv
; Line 2361
	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2363
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	?Reset@CAMEvent@@QAEXXZ			; CAMEvent::Reset
$LN2@SetTimeAdv:
; Line 2373
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??BCAMEvent@@QBEPAXXZ			; CAMEvent::operator void *
	push	eax
	push	0
	push	0
	lea	ecx, DWORD PTR _current$[ebp]
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	push	edx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$83099[ebp], eax
; Line 2375
	cmp	DWORD PTR _hr$83099[ebp], 0
	jge	SHORT $LN1@SetTimeAdv
	push	2375					; 00000947H
	push	OFFSET $SG83104
	push	OFFSET $SG83105
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@SetTimeAdv:
; Line 2376
	lea	edx, DWORD PTR _current$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??4CRefTime@@QAEAAV0@ABV0@@Z		; CRefTime::operator=
$LN10@SetTimeAdv:
; Line 2378
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@SetTimeAdv
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 112				; 00000070H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN18@SetTimeAdv:
	DD	2
	DD	$LN17@SetTimeAdv
$LN17@SetTimeAdv:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN15@SetTimeAdv
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN16@SetTimeAdv
$LN16@SetTimeAdv:
	DB	116					; 00000074H
	DB	0
$LN15@SetTimeAdv:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
?SetTimeAdvise@CCmdQueue@@IAEXXZ ENDP			; CCmdQueue::SetTimeAdvise
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??BCAMEvent@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BCAMEvent@@QBEPAXXZ PROC				; CAMEvent::operator void *, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxutil.h
; Line 123
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BCAMEvent@@QBEPAXXZ ENDP				; CAMEvent::operator void *
_TEXT	ENDS
EXTRN	__imp__ResetEvent@4:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Reset@CAMEvent@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Reset@CAMEvent@@QAEXXZ PROC				; CAMEvent::Reset, COMDAT
; _this$ = ecx
; Line 129
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__ResetEvent@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@CAMEvent@@QAEXXZ ENDP				; CAMEvent::Reset
_TEXT	ENDS
PUBLIC	?Run@CCmdQueue@@UAEJ_J@Z			; CCmdQueue::Run
;	COMDAT xdata$x
; File c:\downloads\mediapoint\src\filters\baseclasses\ctlutil.cpp
xdata$x	SEGMENT
__unwindtable$?Run@CCmdQueue@@UAEJ_J@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Run@CCmdQueue@@UAEJ_J@Z$0
__ehfuncinfo$?Run@CCmdQueue@@UAEJ_J@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Run@CCmdQueue@@UAEJ_J@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?Run@CCmdQueue@@UAEJ_J@Z
_TEXT	SEGMENT
$T84875 = -32						; size = 4
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_tStreamTimeOffset$ = 8					; size = 8
?Run@CCmdQueue@@UAEJ_J@Z PROC				; CCmdQueue::Run, COMDAT
; _this$ = ecx
; Line 2385
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Run@CCmdQueue@@UAEJ_J@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2386
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2388
	mov	ecx, DWORD PTR _tStreamTimeOffset$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _tStreamTimeOffset$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??4CRefTime@@QAEAAV0@_J@Z		; CRefTime::operator=
; Line 2389
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+124], 1
; Line 2392
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTimeAdvise@CCmdQueue@@IAEXXZ	; CCmdQueue::SetTimeAdvise
; Line 2393
	mov	DWORD PTR $T84875[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84875[ebp]
; Line 2394
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Run
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN7@Run:
	DD	1
	DD	$LN6@Run
$LN6@Run:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@Run
$LN4@Run:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Run@CCmdQueue@@UAEJ_J@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?Run@CCmdQueue@@UAEJ_J@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Run@CCmdQueue@@UAEJ_J@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Run@CCmdQueue@@UAEJ_J@Z ENDP				; CCmdQueue::Run
PUBLIC	?EndRun@CCmdQueue@@UAEJXZ			; CCmdQueue::EndRun
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?EndRun@CCmdQueue@@UAEJXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?EndRun@CCmdQueue@@UAEJXZ$0
__ehfuncinfo$?EndRun@CCmdQueue@@UAEJXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?EndRun@CCmdQueue@@UAEJXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?EndRun@CCmdQueue@@UAEJXZ
_TEXT	SEGMENT
$T84888 = -32						; size = 4
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?EndRun@CCmdQueue@@UAEJXZ PROC				; CCmdQueue::EndRun, COMDAT
; _this$ = ecx
; Line 2401
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?EndRun@CCmdQueue@@UAEJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2402
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2404
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+124], 0
; Line 2407
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetTimeAdvise@CCmdQueue@@IAEXXZ	; CCmdQueue::SetTimeAdvise
; Line 2408
	mov	DWORD PTR $T84888[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84888[ebp]
; Line 2409
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@EndRun
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@EndRun:
	DD	1
	DD	$LN6@EndRun
$LN6@EndRun:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@EndRun
$LN4@EndRun:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?EndRun@CCmdQueue@@UAEJXZ$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?EndRun@CCmdQueue@@UAEJXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?EndRun@CCmdQueue@@UAEJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?EndRun@CCmdQueue@@UAEJXZ ENDP				; CCmdQueue::EndRun
PUBLIC	?GetDueCommand@CCmdQueue@@UAEJPAPAVCDeferredCommand@@J@Z ; CCmdQueue::GetDueCommand
EXTRN	__imp__WaitForSingleObject@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetDueCommand@CCmdQueue@@UAEJPAPAVCDeferredCommand@@J@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetDueCommand@CCmdQueue@@UAEJPAPAVCDeferredCommand@@J@Z$0
__ehfuncinfo$?GetDueCommand@CCmdQueue@@UAEJPAPAVCDeferredCommand@@J@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetDueCommand@CCmdQueue@@UAEJPAPAVCDeferredCommand@@J@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?GetDueCommand@CCmdQueue@@UAEJPAPAVCDeferredCommand@@J@Z
_TEXT	SEGMENT
tv222 = -104						; size = 8
tv219 = -96						; size = 8
$T84904 = -88						; size = 4
$T84903 = -84						; size = 8
$T84902 = -76						; size = 8
$T84901 = -68						; size = 8
_t$83134 = -56						; size = 8
_pStrm$83133 = -44					; size = 4
_pos$83132 = -40					; size = 4
_pos$83130 = -36					; size = 4
_pCmd$83128 = -32					; size = 4
_lock$83127 = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_ppCmd$ = 8						; size = 4
_msTimeout$ = 12					; size = 4
?GetDueCommand@CCmdQueue@@UAEJPAPAVCDeferredCommand@@J@Z PROC ; CCmdQueue::GetDueCommand, COMDAT
; _this$ = ecx
; Line 2422
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetDueCommand@CCmdQueue@@UAEJPAPAVCDeferredCommand@@J@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 92					; 0000005cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-104]
	mov	ecx, 23					; 00000017H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
$LN9@GetDueComm:
; Line 2427
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _lock$83127[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2431
	mov	DWORD PTR _pCmd$83128[ebp], 0
; Line 2436
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?GetCount@?$CGenericList@VCDeferredCommand@@@@QBEHXZ ; CGenericList<CDeferredCommand>::GetCount
	test	eax, eax
	jle	SHORT $LN7@GetDueComm
; Line 2437
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?GetHeadPosition@?$CGenericList@VCDeferredCommand@@@@QBEPAU__POSITION@@XZ ; CGenericList<CDeferredCommand>::GetHeadPosition
	mov	DWORD PTR _pos$83130[ebp], eax
; Line 2438
	mov	ecx, DWORD PTR _pos$83130[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Get@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@PAU__POSITION@@@Z ; CGenericList<CDeferredCommand>::Get
	mov	DWORD PTR _pCmd$83128[ebp], eax
$LN7@GetDueComm:
; Line 2441
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+124], 0
	je	$LN6@GetDueComm
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?GetCount@?$CGenericList@VCDeferredCommand@@@@QBEHXZ ; CGenericList<CDeferredCommand>::GetCount
	test	eax, eax
	jle	$LN6@GetDueComm
; Line 2442
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?GetHeadPosition@?$CGenericList@VCDeferredCommand@@@@QBEPAU__POSITION@@XZ ; CGenericList<CDeferredCommand>::GetHeadPosition
	mov	DWORD PTR _pos$83132[ebp], eax
; Line 2443
	mov	eax, DWORD PTR _pos$83132[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Get@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@PAU__POSITION@@@Z ; CGenericList<CDeferredCommand>::Get
	mov	DWORD PTR _pStrm$83133[ebp], eax
; Line 2445
	lea	ecx, DWORD PTR $T84901[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pStrm$83133[ebp]
	call	?GetTime@CDeferredCommand@@QAE?AVCRefTime@@XZ ; CDeferredCommand::GetTime
	mov	ecx, eax
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	esi, eax
	mov	edi, edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	add	esi, eax
	adc	edi, edx
	push	edi
	push	esi
	lea	ecx, DWORD PTR _t$83134[ebp]
	call	??0CRefTime@@QAE@_J@Z			; CRefTime::CRefTime
; Line 2446
	cmp	DWORD PTR _pCmd$83128[ebp], 0
	je	SHORT $LN4@GetDueComm
	lea	ecx, DWORD PTR _t$83134[ebp]
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	esi, eax
	mov	edi, edx
	lea	edx, DWORD PTR $T84902[ebp]
	push	edx
	mov	ecx, DWORD PTR _pCmd$83128[ebp]
	call	?GetTime@CDeferredCommand@@QAE?AVCRefTime@@XZ ; CDeferredCommand::GetTime
	mov	ecx, eax
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	DWORD PTR tv219[ebp], esi
	mov	DWORD PTR tv219[ebp+4], edi
	mov	DWORD PTR tv222[ebp], eax
	mov	DWORD PTR tv222[ebp+4], edx
	mov	eax, DWORD PTR tv219[ebp+4]
	cmp	eax, DWORD PTR tv222[ebp+4]
	jg	SHORT $LN6@GetDueComm
	jl	SHORT $LN4@GetDueComm
	mov	ecx, DWORD PTR tv219[ebp]
	cmp	ecx, DWORD PTR tv222[ebp]
	jae	SHORT $LN6@GetDueComm
$LN4@GetDueComm:
; Line 2447
	mov	edx, DWORD PTR _pStrm$83133[ebp]
	mov	DWORD PTR _pCmd$83128[ebp], edx
$LN6@GetDueComm:
; Line 2452
	cmp	DWORD PTR _pCmd$83128[ebp], 0
	je	SHORT $LN3@GetDueComm
; Line 2453
	mov	ecx, DWORD PTR _pCmd$83128[ebp]
	call	?IsStreamTime@CDeferredCommand@@QAEHXZ	; CDeferredCommand::IsStreamTime
	push	eax
	lea	eax, DWORD PTR $T84903[ebp]
	push	eax
	mov	ecx, DWORD PTR _pCmd$83128[ebp]
	call	?GetTime@CDeferredCommand@@QAE?AVCRefTime@@XZ ; CDeferredCommand::GetTime
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CheckTime@CCmdQueue@@QAEHVCRefTime@@H@Z ; CCmdQueue::CheckTime
	test	eax, eax
	je	SHORT $LN3@GetDueComm
; Line 2456
	mov	eax, DWORD PTR _pCmd$83128[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pCmd$83128[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2457
	mov	ecx, DWORD PTR _ppCmd$[ebp]
	mov	edx, DWORD PTR _pCmd$83128[ebp]
	mov	DWORD PTR [ecx], edx
; Line 2458
	mov	DWORD PTR $T84904[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$83127[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84904[ebp]
	jmp	SHORT $LN10@GetDueComm
$LN3@GetDueComm:
; Line 2461
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$83127[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
; Line 2464
	mov	esi, esp
	mov	eax, DWORD PTR _msTimeout$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??BCAMEvent@@QBEPAXXZ			; CAMEvent::operator void *
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@GetDueComm
; Line 2465
	mov	eax, -2147467260			; 80004004H
	jmp	SHORT $LN10@GetDueComm
$LN1@GetDueComm:
; Line 2467
	jmp	$LN9@GetDueComm
$LN10@GetDueComm:
; Line 2468
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@GetDueComm
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 104				; 00000068H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN18@GetDueComm:
	DD	2
	DD	$LN17@GetDueComm
$LN17@GetDueComm:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN14@GetDueComm
	DD	-56					; ffffffc8H
	DD	8
	DD	$LN15@GetDueComm
$LN15@GetDueComm:
	DB	116					; 00000074H
	DB	0
$LN14@GetDueComm:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetDueCommand@CCmdQueue@@UAEJPAPAVCDeferredCommand@@J@Z$0:
	lea	ecx, DWORD PTR _lock$83127[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?GetDueCommand@CCmdQueue@@UAEJPAPAVCDeferredCommand@@J@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetDueCommand@CCmdQueue@@UAEJPAPAVCDeferredCommand@@J@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetDueCommand@CCmdQueue@@UAEJPAPAVCDeferredCommand@@J@Z ENDP ; CCmdQueue::GetDueCommand
PUBLIC	?GetCommandDueFor@CCmdQueue@@UAEJ_JPAPAVCDeferredCommand@@@Z ; CCmdQueue::GetCommandDueFor
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?GetCommandDueFor@CCmdQueue@@UAEJ_JPAPAVCDeferredCommand@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetCommandDueFor@CCmdQueue@@UAEJ_JPAPAVCDeferredCommand@@@Z$0
__ehfuncinfo$?GetCommandDueFor@CCmdQueue@@UAEJ_JPAPAVCDeferredCommand@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetCommandDueFor@CCmdQueue@@UAEJ_JPAPAVCDeferredCommand@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ?GetCommandDueFor@CCmdQueue@@UAEJ_JPAPAVCDeferredCommand@@@Z
_TEXT	SEGMENT
tv261 = -132						; size = 8
tv258 = -124						; size = 8
tv229 = -116						; size = 8
tv226 = -108						; size = 8
$T84925 = -100						; size = 4
$T84924 = -96						; size = 4
$T84923 = -92						; size = 8
$T84922 = -84						; size = 4
$T84921 = -80						; size = 8
$T84920 = -72						; size = 4
$T84919 = -68						; size = 8
_pos$83159 = -60					; size = 4
_pPresent$ = -56					; size = 4
_pos$83156 = -52					; size = 4
_pStream$ = -48						; size = 4
_tStream$ = -40						; size = 8
_lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_rtStream$ = 8						; size = 8
_ppCmd$ = 16						; size = 4
?GetCommandDueFor@CCmdQueue@@UAEJ_JPAPAVCDeferredCommand@@@Z PROC ; CCmdQueue::GetCommandDueFor, COMDAT
; _this$ = ecx
; Line 2482
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetCommandDueFor@CCmdQueue@@UAEJ_JPAPAVCDeferredCommand@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 120				; 00000078H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-132]
	mov	ecx, 30					; 0000001eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 2483
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??0CAutoLock@@QAE@PAVCCritSec@@@Z	; CAutoLock::CAutoLock
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2485
	mov	ecx, DWORD PTR _rtStream$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _rtStream$[ebp]
	push	edx
	lea	ecx, DWORD PTR _tStream$[ebp]
	call	??0CRefTime@@QAE@_J@Z			; CRefTime::CRefTime
; Line 2488
	mov	DWORD PTR _pStream$[ebp], 0
; Line 2489
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?GetCount@?$CGenericList@VCDeferredCommand@@@@QBEHXZ ; CGenericList<CDeferredCommand>::GetCount
	test	eax, eax
	jle	SHORT $LN6@GetCommand
; Line 2490
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?GetHeadPosition@?$CGenericList@VCDeferredCommand@@@@QBEPAU__POSITION@@XZ ; CGenericList<CDeferredCommand>::GetHeadPosition
	mov	DWORD PTR _pos$83156[ebp], eax
; Line 2491
	mov	eax, DWORD PTR _pos$83156[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	?Get@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@PAU__POSITION@@@Z ; CGenericList<CDeferredCommand>::Get
	mov	DWORD PTR _pStream$[ebp], eax
$LN6@GetCommand:
; Line 2493
	mov	DWORD PTR _pPresent$[ebp], 0
; Line 2494
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?GetCount@?$CGenericList@VCDeferredCommand@@@@QBEHXZ ; CGenericList<CDeferredCommand>::GetCount
	test	eax, eax
	jle	SHORT $LN5@GetCommand
; Line 2495
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?GetHeadPosition@?$CGenericList@VCDeferredCommand@@@@QBEPAU__POSITION@@XZ ; CGenericList<CDeferredCommand>::GetHeadPosition
	mov	DWORD PTR _pos$83159[ebp], eax
; Line 2496
	mov	ecx, DWORD PTR _pos$83159[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Get@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@PAU__POSITION@@@Z ; CGenericList<CDeferredCommand>::Get
	mov	DWORD PTR _pPresent$[ebp], eax
$LN5@GetCommand:
; Line 2500
	cmp	DWORD PTR _pPresent$[ebp], 0
	je	SHORT $LN4@GetCommand
	push	0
	lea	edx, DWORD PTR $T84919[ebp]
	push	edx
	mov	ecx, DWORD PTR _pPresent$[ebp]
	call	?GetTime@CDeferredCommand@@QAE?AVCRefTime@@XZ ; CDeferredCommand::GetTime
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CheckTime@CCmdQueue@@QAEHVCRefTime@@H@Z ; CCmdQueue::CheckTime
	test	eax, eax
	je	SHORT $LN4@GetCommand
; Line 2501
	mov	eax, DWORD PTR _pPresent$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pPresent$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2502
	mov	ecx, DWORD PTR _ppCmd$[ebp]
	mov	edx, DWORD PTR _pPresent$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 2503
	mov	DWORD PTR $T84920[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84920[ebp]
	jmp	$LN7@GetCommand
$LN4@GetCommand:
; Line 2507
	cmp	DWORD PTR _pStream$[ebp], 0
	je	SHORT $LN3@GetCommand
	lea	eax, DWORD PTR $T84921[ebp]
	push	eax
	mov	ecx, DWORD PTR _pStream$[ebp]
	call	?GetTime@CDeferredCommand@@QAE?AVCRefTime@@XZ ; CDeferredCommand::GetTime
	mov	ecx, eax
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	esi, eax
	mov	edi, edx
	lea	ecx, DWORD PTR _tStream$[ebp]
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	DWORD PTR tv226[ebp], esi
	mov	DWORD PTR tv226[ebp+4], edi
	mov	DWORD PTR tv229[ebp], eax
	mov	DWORD PTR tv229[ebp+4], edx
	mov	ecx, DWORD PTR tv226[ebp+4]
	cmp	ecx, DWORD PTR tv229[ebp+4]
	jg	SHORT $LN3@GetCommand
	jl	SHORT $LN10@GetCommand
	mov	edx, DWORD PTR tv226[ebp]
	cmp	edx, DWORD PTR tv229[ebp]
	ja	SHORT $LN3@GetCommand
$LN10@GetCommand:
; Line 2508
	mov	eax, DWORD PTR _pPresent$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pPresent$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2509
	mov	ecx, DWORD PTR _ppCmd$[ebp]
	mov	edx, DWORD PTR _pStream$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 2510
	mov	DWORD PTR $T84922[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84922[ebp]
	jmp	$LN7@GetCommand
$LN3@GetCommand:
; Line 2516
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+124], 0
	je	SHORT $LN2@GetCommand
	cmp	DWORD PTR _pPresent$[ebp], 0
	je	SHORT $LN2@GetCommand
; Line 2519
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	push	ecx
	lea	ecx, DWORD PTR _tStream$[ebp]
	call	??YCRefTime@@QAEAAV0@ABV0@@Z		; CRefTime::operator+=
; Line 2522
	lea	edx, DWORD PTR $T84923[ebp]
	push	edx
	mov	ecx, DWORD PTR _pPresent$[ebp]
	call	?GetTime@CDeferredCommand@@QAE?AVCRefTime@@XZ ; CDeferredCommand::GetTime
	mov	ecx, eax
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	esi, eax
	mov	edi, edx
	lea	ecx, DWORD PTR _tStream$[ebp]
	call	??BCRefTime@@QBE_JXZ			; CRefTime::operator __int64
	mov	DWORD PTR tv258[ebp], esi
	mov	DWORD PTR tv258[ebp+4], edi
	mov	DWORD PTR tv261[ebp], eax
	mov	DWORD PTR tv261[ebp+4], edx
	mov	eax, DWORD PTR tv258[ebp+4]
	cmp	eax, DWORD PTR tv261[ebp+4]
	jg	SHORT $LN2@GetCommand
	jl	SHORT $LN11@GetCommand
	mov	ecx, DWORD PTR tv258[ebp]
	cmp	ecx, DWORD PTR tv261[ebp]
	ja	SHORT $LN2@GetCommand
$LN11@GetCommand:
; Line 2523
	mov	edx, DWORD PTR _ppCmd$[ebp]
	mov	eax, DWORD PTR _pPresent$[ebp]
	mov	DWORD PTR [edx], eax
; Line 2524
	mov	DWORD PTR $T84924[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84924[ebp]
	jmp	SHORT $LN7@GetCommand
$LN2@GetCommand:
; Line 2529
	mov	DWORD PTR $T84925[ebp], -2147220970	; 80040216H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lock$[ebp]
	call	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
	mov	eax, DWORD PTR $T84925[ebp]
$LN7@GetCommand:
; Line 2530
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@GetCommand
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 132				; 00000084H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN16@GetCommand:
	DD	2
	DD	$LN15@GetCommand
$LN15@GetCommand:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN12@GetCommand
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN13@GetCommand
$LN13@GetCommand:
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN12@GetCommand:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?GetCommandDueFor@CCmdQueue@@UAEJ_JPAPAVCDeferredCommand@@@Z$0:
	lea	ecx, DWORD PTR _lock$[ebp]
	jmp	??1CAutoLock@@QAE@XZ			; CAutoLock::~CAutoLock
__ehhandler$?GetCommandDueFor@CCmdQueue@@UAEJ_JPAPAVCDeferredCommand@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetCommandDueFor@CCmdQueue@@UAEJ_JPAPAVCDeferredCommand@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetCommandDueFor@CCmdQueue@@UAEJ_JPAPAVCDeferredCommand@@@Z ENDP ; CCmdQueue::GetCommandDueFor
EXTRN	??0CBaseList@@QAE@PA_W@Z:PROC			; CBaseList::CBaseList
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$CGenericList@VCDeferredCommand@@@@QAE@PA_W@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pName$ = 8						; size = 4
??0?$CGenericList@VCDeferredCommand@@@@QAE@PA_W@Z PROC	; CGenericList<CDeferredCommand>::CGenericList<CDeferredCommand>, COMDAT
; _this$ = ecx
; File c:\downloads\mediapoint\src\filters\baseclasses\wxlist.h
; Line 505
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseList@@QAE@PA_W@Z		; CBaseList::CBaseList
; Line 506
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CGenericList@VCDeferredCommand@@@@QAE@PA_W@Z ENDP	; CGenericList<CDeferredCommand>::CGenericList<CDeferredCommand>
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetHeadPosition@?$CGenericList@VCDeferredCommand@@@@QBEPAU__POSITION@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHeadPosition@?$CGenericList@VCDeferredCommand@@@@QBEPAU__POSITION@@XZ PROC ; CGenericList<CDeferredCommand>::GetHeadPosition, COMDAT
; _this$ = ecx
; Line 508
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetHeadPosition@?$CGenericList@VCDeferredCommand@@@@QBEPAU__POSITION@@XZ ENDP ; CGenericList<CDeferredCommand>::GetHeadPosition
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?GetCount@?$CGenericList@VCDeferredCommand@@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetCount@?$CGenericList@VCDeferredCommand@@@@QBEHXZ PROC ; CGenericList<CDeferredCommand>::GetCount, COMDAT
; _this$ = ecx
; Line 510
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCount@?$CGenericList@VCDeferredCommand@@@@QBEHXZ ENDP ; CGenericList<CDeferredCommand>::GetCount
_TEXT	ENDS
EXTRN	?GetNextI@CBaseList@@IBEPAXAAPAU__POSITION@@@Z:PROC ; CBaseList::GetNextI
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetNext@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@AAPAU__POSITION@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rp$ = 8						; size = 4
?GetNext@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@AAPAU__POSITION@@@Z PROC ; CGenericList<CDeferredCommand>::GetNext, COMDAT
; _this$ = ecx
; Line 512
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _rp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNextI@CBaseList@@IBEPAXAAPAU__POSITION@@@Z ; CBaseList::GetNextI
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetNext@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@AAPAU__POSITION@@@Z ENDP ; CGenericList<CDeferredCommand>::GetNext
_TEXT	ENDS
EXTRN	?GetI@CBaseList@@IBEPAXPAU__POSITION@@@Z:PROC	; CBaseList::GetI
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Get@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@PAU__POSITION@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
?Get@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@PAU__POSITION@@@Z PROC ; CGenericList<CDeferredCommand>::Get, COMDAT
; _this$ = ecx
; Line 514
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetI@CBaseList@@IBEPAXPAU__POSITION@@@Z ; CBaseList::GetI
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Get@?$CGenericList@VCDeferredCommand@@@@QBEPAVCDeferredCommand@@PAU__POSITION@@@Z ENDP ; CGenericList<CDeferredCommand>::Get
_TEXT	ENDS
EXTRN	?RemoveI@CBaseList@@IAEPAXPAU__POSITION@@@Z:PROC ; CBaseList::RemoveI
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Remove@?$CGenericList@VCDeferredCommand@@@@QAEPAVCDeferredCommand@@PAU__POSITION@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
?Remove@?$CGenericList@VCDeferredCommand@@@@QAEPAVCDeferredCommand@@PAU__POSITION@@@Z PROC ; CGenericList<CDeferredCommand>::Remove, COMDAT
; _this$ = ecx
; Line 521
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveI@CBaseList@@IAEPAXPAU__POSITION@@@Z ; CBaseList::RemoveI
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Remove@?$CGenericList@VCDeferredCommand@@@@QAEPAVCDeferredCommand@@PAU__POSITION@@@Z ENDP ; CGenericList<CDeferredCommand>::Remove
_TEXT	ENDS
EXTRN	?AddBeforeI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z:PROC ; CBaseList::AddBeforeI
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddBefore@?$CGenericList@VCDeferredCommand@@@@QAEPAU__POSITION@@PAU2@PAVCDeferredCommand@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
_pObj$ = 12						; size = 4
?AddBefore@?$CGenericList@VCDeferredCommand@@@@QAEPAU__POSITION@@PAU2@PAVCDeferredCommand@@@Z PROC ; CGenericList<CDeferredCommand>::AddBefore, COMDAT
; _this$ = ecx
; Line 522
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddBeforeI@CBaseList@@IAEPAU__POSITION@@PAU2@PAX@Z ; CBaseList::AddBeforeI
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?AddBefore@?$CGenericList@VCDeferredCommand@@@@QAEPAU__POSITION@@PAU2@PAVCDeferredCommand@@@Z ENDP ; CGenericList<CDeferredCommand>::AddBefore
_TEXT	ENDS
EXTRN	?AddTailI@CBaseList@@IAEPAU__POSITION@@PAX@Z:PROC ; CBaseList::AddTailI
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddTail@?$CGenericList@VCDeferredCommand@@@@QAEPAU__POSITION@@PAVCDeferredCommand@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pObj$ = 8						; size = 4
?AddTail@?$CGenericList@VCDeferredCommand@@@@QAEPAU__POSITION@@PAVCDeferredCommand@@@Z PROC ; CGenericList<CDeferredCommand>::AddTail, COMDAT
; _this$ = ecx
; Line 525
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AddTailI@CBaseList@@IAEPAU__POSITION@@PAX@Z ; CBaseList::AddTailI
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddTail@?$CGenericList@VCDeferredCommand@@@@QAEPAU__POSITION@@PAVCDeferredCommand@@@Z ENDP ; CGenericList<CDeferredCommand>::AddTail
_TEXT	ENDS
EXTRN	??_ECRendererPosPassThru@@UAEPAXI@Z:PROC	; CRendererPosPassThru::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_ECRendererPosPassThru@@W7AEPAXI@Z
_TEXT	SEGMENT
??_ECRendererPosPassThru@@W7AEPAXI@Z PROC		; [thunk]:CRendererPosPassThru::`vector deleting destructor', COMDAT
	sub	ecx, 8
	jmp	??_ECRendererPosPassThru@@UAEPAXI@Z
??_ECRendererPosPassThru@@W7AEPAXI@Z ENDP		; [thunk]:CRendererPosPassThru::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??1CRendererPosPassThru@@UAE@XZ			; CRendererPosPassThru::~CRendererPosPassThru
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCRendererPosPassThru@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCRendererPosPassThru@@UAEPAXI@Z PROC		; CRendererPosPassThru::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CRendererPosPassThru@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCRendererPosPassThru@@UAEPAXI@Z ENDP		; CRendererPosPassThru::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1CRendererPosPassThru@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1CRendererPosPassThru@@UAE@XZ$0
__ehfuncinfo$??1CRendererPosPassThru@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1CRendererPosPassThru@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu
xdata$x	ENDS
;	COMDAT ??1CRendererPosPassThru@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CRendererPosPassThru@@UAE@XZ PROC			; CRendererPosPassThru::~CRendererPosPassThru, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CRendererPosPassThru@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1CCritSec@@QAE@XZ			; CCritSec::~CCritSec
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CPosPassThru@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1CRendererPosPassThru@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1CPosPassThru@@UAE@XZ
__ehhandler$??1CRendererPosPassThru@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CRendererPosPassThru@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CRendererPosPassThru@@UAE@XZ ENDP			; CRendererPosPassThru::~CRendererPosPassThru
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@CPosPassThru@@W3AGKXZ
_TEXT	SEGMENT
?Release@CPosPassThru@@W3AGKXZ PROC			; [thunk]:CPosPassThru::Release`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?Release@CPosPassThru@@UAGKXZ		; CPosPassThru::Release
?Release@CPosPassThru@@W3AGKXZ ENDP			; [thunk]:CPosPassThru::Release`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_9IMediaSeeking@@$BCI@AG
_TEXT	SEGMENT
??_9IMediaSeeking@@$BCI@AG PROC				; IMediaSeeking::`vcall'{40}', COMDAT
	mov	eax, DWORD PTR [esp+4]
	mov	eax, DWORD PTR [eax]
	jmp	DWORD PTR [eax+40]
??_9IMediaSeeking@@$BCI@AG ENDP				; IMediaSeeking::`vcall'{40}'
_TEXT	ENDS
EXTRN	??_ECPosPassThru@@UAEPAXI@Z:PROC		; CPosPassThru::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_ECPosPassThru@@W7AEPAXI@Z
_TEXT	SEGMENT
??_ECPosPassThru@@W7AEPAXI@Z PROC			; [thunk]:CPosPassThru::`vector deleting destructor', COMDAT
	sub	ecx, 8
	jmp	??_ECPosPassThru@@UAEPAXI@Z
??_ECPosPassThru@@W7AEPAXI@Z ENDP			; [thunk]:CPosPassThru::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_GCPosPassThru@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GCPosPassThru@@UAEPAXI@Z PROC			; CPosPassThru::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CPosPassThru@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCPosPassThru@@UAEPAXI@Z ENDP			; CPosPassThru::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?AddRef@CPosPassThru@@W3AGKXZ
_TEXT	SEGMENT
?AddRef@CPosPassThru@@W3AGKXZ PROC			; [thunk]:CPosPassThru::AddRef`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?AddRef@CPosPassThru@@UAGKXZ		; CPosPassThru::AddRef
?AddRef@CPosPassThru@@W3AGKXZ ENDP			; [thunk]:CPosPassThru::AddRef`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_9IMediaSeeking@@$BCM@AG
_TEXT	SEGMENT
??_9IMediaSeeking@@$BCM@AG PROC				; IMediaSeeking::`vcall'{44}', COMDAT
	mov	eax, DWORD PTR [esp+4]
	mov	eax, DWORD PTR [eax]
	jmp	DWORD PTR [eax+44]
??_9IMediaSeeking@@$BCM@AG ENDP				; IMediaSeeking::`vcall'{44}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_9IMediaSeeking@@$BEM@AG
_TEXT	SEGMENT
??_9IMediaSeeking@@$BEM@AG PROC				; IMediaSeeking::`vcall'{76}', COMDAT
	mov	eax, DWORD PTR [esp+4]
	mov	eax, DWORD PTR [eax]
	jmp	DWORD PTR [eax+76]
??_9IMediaSeeking@@$BEM@AG ENDP				; IMediaSeeking::`vcall'{76}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ?QueryInterface@CPosPassThru@@W3AGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
?QueryInterface@CPosPassThru@@W3AGJABU_GUID@@PAPAX@Z PROC ; [thunk]:CPosPassThru::QueryInterface`adjustor{4}', COMDAT
	sub	DWORD PTR [esp+4], 4
	jmp	?QueryInterface@CPosPassThru@@UAGJABU_GUID@@PAPAX@Z ; CPosPassThru::QueryInterface
?QueryInterface@CPosPassThru@@W3AGJABU_GUID@@PAPAX@Z ENDP ; [thunk]:CPosPassThru::QueryInterface`adjustor{4}'
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT ??_9IMediaSeeking@@$BDA@AG
_TEXT	SEGMENT
??_9IMediaSeeking@@$BDA@AG PROC				; IMediaSeeking::`vcall'{48}', COMDAT
	mov	eax, DWORD PTR [esp+4]
	mov	eax, DWORD PTR [eax]
	jmp	DWORD PTR [eax+48]
??_9IMediaSeeking@@$BDA@AG ENDP				; IMediaSeeking::`vcall'{48}'
_TEXT	ENDS
END
