; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Downloads\MediaPoint\src\filters\BaseClasses\dllsetup.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_IID_IAMFilterGraphCallback
CONST	SEGMENT
$SG81566 DB	'.', 00H, '.', 00H, '\', 00H, 'd', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'p', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81567 DB	'l', 00H, 'r', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'r', 00H
	DB	'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'E', 00H, 'R'
	DB	00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'S', 00H, 'U', 00H
	DB	'C', 00H, 'C', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ' ', 00H, '|'
	DB	00H, '|', 00H, ' ', 00H, 'l', 00H, 'r', 00H, 'e', 00H, 't', 00H
	DB	'u', 00H, 'r', 00H, 'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'E', 00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H
	DB	'F', 00H, 'I', 00H, 'L', 00H, 'E', 00H, '_', 00H, 'N', 00H, 'O'
	DB	00H, 'T', 00H, '_', 00H, 'F', 00H, 'O', 00H, 'U', 00H, 'N', 00H
	DB	'D', 00H, ' ', 00H, '|', 00H, '|', 00H, ' ', 00H, 'l', 00H, 'r'
	DB	00H, 'e', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'n', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'E', 00H, 'R', 00H, 'R', 00H, 'O'
	DB	00H, 'R', 00H, '_', 00H, 'I', 00H, 'N', 00H, 'V', 00H, 'A', 00H
	DB	'L', 00H, 'I', 00H, 'D', 00H, '_', 00H, 'H', 00H, 'A', 00H, 'N'
	DB	00H, 'D', 00H, 'L', 00H, 'E', 00H, 00H, 00H
	ORG $+2
$SG81576 DB	'.', 00H, '.', 00H, '\', 00H, 'd', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'p', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81577 DB	'l', 00H, 'r', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'r', 00H
	DB	'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'E', 00H, 'R'
	DB	00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H, 'S', 00H, 'U', 00H
	DB	'C', 00H, 'C', 00H, 'E', 00H, 'S', 00H, 'S', 00H, ' ', 00H, '|'
	DB	00H, '|', 00H, ' ', 00H, 'l', 00H, 'r', 00H, 'e', 00H, 't', 00H
	DB	'u', 00H, 'r', 00H, 'n', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'E', 00H, 'R', 00H, 'R', 00H, 'O', 00H, 'R', 00H, '_', 00H
	DB	'N', 00H, 'O', 00H, '_', 00H, 'M', 00H, 'O', 00H, 'R', 00H, 'E'
	DB	00H, '_', 00H, 'I', 00H, 'T', 00H, 'E', 00H, 'M', 00H, 'S', 00H
	DB	00H, 00H
	ORG $+2
$SG81592 DB	'.', 00H, '.', 00H, '\', 00H, 'd', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'p', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81593 DB	'S', 00H, 'U', 00H, 'C', 00H, 'C', 00H, 'E', 00H, 'E', 00H
	DB	'D', 00H, 'E', 00H, 'D', 00H, '(', 00H, 'h', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG81595 DB	'C', 00H, 'L', 00H, 'S', 00H, 'I', 00H, 'D', 00H, '\', 00H
	DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG81606 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG81614 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG81620 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG81629 DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG81632 DB	'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e'
	DB	00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG81640 DB	'.', 00H, '.', 00H, '\', 00H, 'd', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'p', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81641 DB	'S', 00H, 'U', 00H, 'C', 00H, 'C', 00H, 'E', 00H, 'E', 00H
	DB	'D', 00H, 'E', 00H, 'D', 00H, '(', 00H, 'h', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG81643 DB	'C', 00H, 'L', 00H, 'S', 00H, 'I', 00H, 'D', 00H, '\', 00H
	DB	'%', 00H, 'l', 00H, 's', 00H, 00H, 00H
$SG81649 DB	'.', 00H, '.', 00H, '\', 00H, 'd', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'p', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81650 DB	'S', 00H, 'U', 00H, 'C', 00H, 'C', 00H, 'E', 00H, 'E', 00H
	DB	'D', 00H, 'E', 00H, 'D', 00H, '(', 00H, 'h', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG81656 DB	'=', 00H, ' ', 00H, 'A', 00H, 'M', 00H, 'o', 00H, 'v', 00H
	DB	'i', 00H, 'e', 00H, 'S', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'p'
	DB	00H, 'R', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 00H, 00H
$SG81659 DB	'=', 00H, ' ', 00H, '=', 00H, ' ', 00H, 'u', 00H, 'n', 00H
	DB	'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 00H, 00H
$SG81663 DB	'=', 00H, ' ', 00H, '=', 00H, ' ', 00H, 'r', 00H, 'e', 00H
	DB	'g', 00H, 'i', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, 'f', 00H, 'i', 00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H
$SG81677 DB	'-', 00H, ' ', 00H, '-', 00H, ' ', 00H, 'r', 00H, 'e', 00H
	DB	'g', 00H, 'i', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, '%', 00H, 'l', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG81680 DB	'I', 00H, 'n', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'c', 00H
	DB	'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'e', 00H, 'r', 00H, '3'
	DB	00H, '2', 00H, 00H, 00H
	ORG $+2
$SG81681 DB	'B', 00H, 'o', 00H, 't', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG81689 DB	'A', 00H, 'M', 00H, 'o', 00H, 'v', 00H, 'i', 00H, 'e', 00H
	DB	'D', 00H, 'l', 00H, 'l', 00H, 'R', 00H, 'e', 00H, 'g', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 'e', 00H
	DB	'r', 00H, 'v', 00H, 'e', 00H, 'r', 00H, '2', 00H, '(', 00H, ')'
	DB	00H, 00H, 00H
	ORG $+2
$SG81692 DB	'-', 00H, ' ', 00H, 'g', 00H, 'e', 00H, 't', 00H, ' ', 00H
	DB	'm', 00H, 'o', 00H, 'd', 00H, 'u', 00H, 'l', 00H, 'e', 00H, ' '
	DB	00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'n', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG81694 DB	'.', 00H, '.', 00H, '\', 00H, 'd', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'p', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81695 DB	'g', 00H, '_', 00H, 'h', 00H, 'I', 00H, 'n', 00H, 's', 00H
	DB	't', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H
	ORG $+2
$SG81703 DB	'-', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H
	DB	's', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'O', 00H, 'L'
	DB	00H, 'E', 00H, ' ', 00H, 'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG81706 DB	'-', 00H, ' ', 00H, 'C', 00H, 'o', 00H, 'I', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG81710 DB	'.', 00H, '.', 00H, '\', 00H, 'd', 00H, 'l', 00H, 'l', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'p', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG81711 DB	'S', 00H, 'U', 00H, 'C', 00H, 'C', 00H, 'E', 00H, 'E', 00H
	DB	'D', 00H, 'E', 00H, 'D', 00H, '(', 00H, 'h', 00H, 'r', 00H, ')'
	DB	00H, 00H, 00H
$SG81712 DB	'-', 00H, ' ', 00H, 'o', 00H, 'b', 00H, 't', 00H, 'a', 00H
	DB	'i', 00H, 'n', 00H, ' ', 00H, 'I', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'M', 00H, 'a', 00H, 'p', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, '2', 00H, 00H, 00H
$SG81718 DB	'-', 00H, ' ', 00H, 't', 00H, 'r', 00H, 'y', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, 'I', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'M', 00H, 'a', 00H, 'p', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 's'
	DB	00H, 't', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG81722 DB	'-', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H
	DB	's', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 't', 00H, 'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG81730 DB	'-', 00H, ' ', 00H, '-', 00H, ' ', 00H, 'r', 00H, 'e', 00H
	DB	'g', 00H, 'i', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, '%', 00H, 'l', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG81739 DB	'-', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'g', 00H, 'i', 00H
	DB	's', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'O', 00H, 'L'
	DB	00H, 'E', 00H, ' ', 00H, 'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG81740 DB	'-', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 't', 00H, 'u', 00H
	DB	'r', 00H, 'n', 00H, ' ', 00H, '%', 00H, '0', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+2
$SG81759 DB	'I', 00H, 'n', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'c', 00H
	DB	'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'e', 00H, 'r', 00H, '3'
	DB	00H, '2', 00H, 00H, 00H
	ORG $+2
$SG81760 DB	'B', 00H, 'o', 00H, 't', 00H, 'h', 00H, 00H, 00H
CONST	ENDS
;	COMDAT _IID_IAMFilterGraphCallback
CONST	SEGMENT
_IID_IAMFilterGraphCallback DD 056a868fdH
	DW	0ad4H
	DW	011ceH
	DB	0b0H
	DB	0a3H
	DB	00H
	DB	020H
	DB	0afH
	DB	0bH
	DB	0a7H
	DB	070H
CONST	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_EliminateSubKey@8
EXTRN	__imp__RegDeleteKeyW@8:PROC
EXTRN	__imp__RegCloseKey@4:PROC
EXTRN	__imp__RegEnumKeyExW@32:PROC
EXTRN	?DbgAssert@@YGXPB_W0H@Z:PROC			; DbgAssert
EXTRN	__imp__RegOpenKeyExW@20:PROC
EXTRN	__imp__lstrlenW@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\downloads\mediapoint\src\filters\baseclasses\dllsetup.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
;	COMDAT _EliminateSubKey@8
_TEXT	SEGMENT
_ft$81574 = -572					; size = 8
_dw$81573 = -556					; size = 4
_Buffer$81572 = -544					; size = 520
_lreturn$ = -20						; size = 4
_hk$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hkey$ = 8						; size = 4
_strSubKey$ = 12					; size = 4
_EliminateSubKey@8 PROC					; COMDAT
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 576				; 00000240H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-576]
	mov	ecx, 144				; 00000090H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 42
	mov	esi, esp
	mov	eax, DWORD PTR _strSubKey$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN8@EliminateS
; Line 44
	mov	eax, -2147467259			; 80004005H
	jmp	$LN9@EliminateS
$LN8@EliminateS:
; Line 51
	mov	esi, esp
	lea	ecx, DWORD PTR _hk$[ebp]
	push	ecx
	push	33554432				; 02000000H
	push	0
	mov	edx, DWORD PTR _strSubKey$[ebp]
	push	edx
	mov	eax, DWORD PTR _hkey$[ebp]
	push	eax
	call	DWORD PTR __imp__RegOpenKeyExW@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lreturn$[ebp], eax
; Line 55
	cmp	DWORD PTR _lreturn$[ebp], 0
	je	SHORT $LN7@EliminateS
	cmp	DWORD PTR _lreturn$[ebp], 2
	je	SHORT $LN7@EliminateS
	cmp	DWORD PTR _lreturn$[ebp], 6
	je	SHORT $LN7@EliminateS
	push	55					; 00000037H
	push	OFFSET $SG81566
	push	OFFSET $SG81567
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN7@EliminateS:
; Line 57
	cmp	DWORD PTR _lreturn$[ebp], 0
	jne	$LN6@EliminateS
$LN5@EliminateS:
; Line 65
	mov	DWORD PTR _dw$81573[ebp], 260		; 00000104H
; Line 75
	mov	esi, esp
	lea	ecx, DWORD PTR _ft$81574[ebp]
	push	ecx
	push	0
	push	0
	push	0
	lea	edx, DWORD PTR _dw$81573[ebp]
	push	edx
	lea	eax, DWORD PTR _Buffer$81572[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _hk$[ebp]
	push	ecx
	call	DWORD PTR __imp__RegEnumKeyExW@32
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lreturn$[ebp], eax
; Line 78
	cmp	DWORD PTR _lreturn$[ebp], 0
	je	SHORT $LN3@EliminateS
	cmp	DWORD PTR _lreturn$[ebp], 259		; 00000103H
	je	SHORT $LN3@EliminateS
	push	78					; 0000004eH
	push	OFFSET $SG81576
	push	OFFSET $SG81577
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN3@EliminateS:
; Line 80
	cmp	DWORD PTR _lreturn$[ebp], 0
	jne	SHORT $LN2@EliminateS
; Line 82
	lea	edx, DWORD PTR _Buffer$81572[ebp]
	push	edx
	mov	eax, DWORD PTR _hk$[ebp]
	push	eax
	call	_EliminateSubKey@8
; Line 84
	jmp	SHORT $LN1@EliminateS
$LN2@EliminateS:
; Line 86
	jmp	SHORT $LN4@EliminateS
$LN1@EliminateS:
; Line 88
	jmp	SHORT $LN5@EliminateS
$LN4@EliminateS:
; Line 90
	mov	esi, esp
	mov	ecx, DWORD PTR _hk$[ebp]
	push	ecx
	call	DWORD PTR __imp__RegCloseKey@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 91
	mov	esi, esp
	mov	edx, DWORD PTR _strSubKey$[ebp]
	push	edx
	mov	eax, DWORD PTR _hkey$[ebp]
	push	eax
	call	DWORD PTR __imp__RegDeleteKeyW@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@EliminateS:
; Line 94
	xor	eax, eax
$LN9@EliminateS:
; Line 95
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@EliminateS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 576				; 00000240H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN16@EliminateS:
	DD	4
	DD	$LN15@EliminateS
$LN15@EliminateS:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN11@EliminateS
	DD	-544					; fffffde0H
	DD	520					; 00000208H
	DD	$LN12@EliminateS
	DD	-556					; fffffdd4H
	DD	4
	DD	$LN13@EliminateS
	DD	-572					; fffffdc4H
	DD	8
	DD	$LN14@EliminateS
$LN14@EliminateS:
	DB	102					; 00000066H
	DB	116					; 00000074H
	DB	0
$LN13@EliminateS:
	DB	100					; 00000064H
	DB	119					; 00000077H
	DB	0
$LN12@EliminateS:
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN11@EliminateS:
	DB	104					; 00000068H
	DB	107					; 0000006bH
	DB	0
_EliminateSubKey@8 ENDP
_TEXT	ENDS
PUBLIC	_HRESULT_FROM_WIN32@4
PUBLIC	__$ArrayPad$
PUBLIC	_AMovieSetupRegisterServer@32
EXTRN	__imp__RegSetValueExW@24:PROC
EXTRN	__imp__RegSetValueW@20:PROC
EXTRN	__imp__RegCreateKeyW@12:PROC
EXTRN	__imp__wsprintfW:PROC
EXTRN	__imp__StringFromGUID2@12:PROC
; Function compile flags: /Odtp /RTCsu
;	COMDAT _AMovieSetupRegisterServer@32
_TEXT	SEGMENT
_hsubkey$ = -648					; size = 4
_lreturn$ = -640					; size = 4
_hkey$ = -632						; size = 4
_hr$ = -624						; size = 4
_szCLSID$ = -616					; size = 78
_achTemp$ = -528					; size = 520
__$ArrayPad$ = -4					; size = 4
_clsServer$ = 8						; size = 16
_szDescription$ = 24					; size = 4
_szFileName$ = 28					; size = 4
_szThreadingModel$ = 32					; size = 4
_szServerType$ = 36					; size = 4
_AMovieSetupRegisterServer@32 PROC			; COMDAT
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 652				; 0000028cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-652]
	mov	ecx, 163				; 000000a3H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 126
	mov	esi, esp
	push	39					; 00000027H
	lea	eax, DWORD PTR _szCLSID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _clsServer$[ebp]
	push	ecx
	call	DWORD PTR __imp__StringFromGUID2@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 127
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN5@AMovieSetu
	push	127					; 0000007fH
	push	OFFSET $SG81592
	push	OFFSET $SG81593
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN5@AMovieSetu:
; Line 132
	mov	esi, esp
	lea	edx, DWORD PTR _szCLSID$[ebp]
	push	edx
	push	OFFSET $SG81595
	lea	eax, DWORD PTR _achTemp$[ebp]
	push	eax
	call	DWORD PTR __imp__wsprintfW
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 135
	mov	esi, esp
	lea	ecx, DWORD PTR _hkey$[ebp]
	push	ecx
	lea	edx, DWORD PTR _achTemp$[ebp]
	push	edx
	push	-2147483648				; 80000000H
	call	DWORD PTR __imp__RegCreateKeyW@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lreturn$[ebp], eax
; Line 136
	cmp	DWORD PTR _lreturn$[ebp], 0
	je	SHORT $LN4@AMovieSetu
; Line 138
	mov	eax, DWORD PTR _lreturn$[ebp]
	or	eax, -2147024896			; 80070000H
	jmp	$LN6@AMovieSetu
$LN4@AMovieSetu:
; Line 144
	mov	esi, esp
	mov	eax, DWORD PTR _szDescription$[ebp]
	push	eax
	push	OFFSET $SG81606
	lea	ecx, DWORD PTR _achTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__wsprintfW
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 149
	mov	esi, esp
	push	520					; 00000208H
	lea	edx, DWORD PTR _achTemp$[ebp]
	push	edx
	push	1
	push	0
	mov	eax, DWORD PTR _hkey$[ebp]
	push	eax
	call	DWORD PTR __imp__RegSetValueW@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lreturn$[ebp], eax
; Line 150
	cmp	DWORD PTR _lreturn$[ebp], 0
	je	SHORT $LN3@AMovieSetu
; Line 152
	mov	esi, esp
	mov	ecx, DWORD PTR _hkey$[ebp]
	push	ecx
	call	DWORD PTR __imp__RegCloseKey@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 153
	mov	eax, DWORD PTR _lreturn$[ebp]
	or	eax, -2147024896			; 80070000H
	jmp	$LN6@AMovieSetu
$LN3@AMovieSetu:
; Line 162
	mov	esi, esp
	mov	edx, DWORD PTR _szServerType$[ebp]
	push	edx
	push	OFFSET $SG81614
	lea	eax, DWORD PTR _achTemp$[ebp]
	push	eax
	call	DWORD PTR __imp__wsprintfW
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 165
	mov	esi, esp
	lea	ecx, DWORD PTR _hsubkey$[ebp]
	push	ecx
	lea	edx, DWORD PTR _achTemp$[ebp]
	push	edx
	mov	eax, DWORD PTR _hkey$[ebp]
	push	eax
	call	DWORD PTR __imp__RegCreateKeyW@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lreturn$[ebp], eax
; Line 166
	cmp	DWORD PTR _lreturn$[ebp], 0
	je	SHORT $LN2@AMovieSetu
; Line 168
	mov	esi, esp
	mov	ecx, DWORD PTR _hkey$[ebp]
	push	ecx
	call	DWORD PTR __imp__RegCloseKey@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 169
	mov	eax, DWORD PTR _lreturn$[ebp]
	or	eax, -2147024896			; 80070000H
	jmp	$LN6@AMovieSetu
$LN2@AMovieSetu:
; Line 174
	mov	esi, esp
	mov	edx, DWORD PTR _szFileName$[ebp]
	push	edx
	push	OFFSET $SG81620
	lea	eax, DWORD PTR _achTemp$[ebp]
	push	eax
	call	DWORD PTR __imp__wsprintfW
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 179
	mov	esi, esp
	lea	ecx, DWORD PTR _achTemp$[ebp]
	push	ecx
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	edx, DWORD PTR [eax+eax+2]
	mov	esi, esp
	push	edx
	lea	eax, DWORD PTR _achTemp$[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _hsubkey$[ebp]
	push	ecx
	call	DWORD PTR __imp__RegSetValueW@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lreturn$[ebp], eax
; Line 180
	cmp	DWORD PTR _lreturn$[ebp], 0
	je	SHORT $LN1@AMovieSetu
; Line 182
	mov	esi, esp
	mov	edx, DWORD PTR _hkey$[ebp]
	push	edx
	call	DWORD PTR __imp__RegCloseKey@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 183
	mov	esi, esp
	mov	eax, DWORD PTR _hsubkey$[ebp]
	push	eax
	call	DWORD PTR __imp__RegCloseKey@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 184
	mov	eax, DWORD PTR _lreturn$[ebp]
	or	eax, -2147024896			; 80070000H
	jmp	$LN6@AMovieSetu
$LN1@AMovieSetu:
; Line 187
	mov	esi, esp
	mov	ecx, DWORD PTR _szThreadingModel$[ebp]
	push	ecx
	push	OFFSET $SG81629
	lea	edx, DWORD PTR _achTemp$[ebp]
	push	edx
	call	DWORD PTR __imp__wsprintfW
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 193
	mov	esi, esp
	lea	eax, DWORD PTR _achTemp$[ebp]
	push	eax
	call	DWORD PTR __imp__lstrlenW@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	lea	ecx, DWORD PTR [eax+eax+2]
	mov	esi, esp
	push	ecx
	lea	edx, DWORD PTR _achTemp$[ebp]
	push	edx
	push	1
	push	0
	push	OFFSET $SG81632
	mov	eax, DWORD PTR _hsubkey$[ebp]
	push	eax
	call	DWORD PTR __imp__RegSetValueExW@24
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lreturn$[ebp], eax
; Line 197
	mov	esi, esp
	mov	ecx, DWORD PTR _hkey$[ebp]
	push	ecx
	call	DWORD PTR __imp__RegCloseKey@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 198
	mov	esi, esp
	mov	edx, DWORD PTR _hsubkey$[ebp]
	push	edx
	call	DWORD PTR __imp__RegCloseKey@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 202
	mov	eax, DWORD PTR _lreturn$[ebp]
	push	eax
	call	_HRESULT_FROM_WIN32@4
$LN6@AMovieSetu:
; Line 204
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@AMovieSetu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 652				; 0000028cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
	npad	1
$LN13@AMovieSetu:
	DD	4
	DD	$LN12@AMovieSetu
$LN12@AMovieSetu:
	DD	-528					; fffffdf0H
	DD	520					; 00000208H
	DD	$LN8@AMovieSetu
	DD	-616					; fffffd98H
	DD	78					; 0000004eH
	DD	$LN9@AMovieSetu
	DD	-632					; fffffd88H
	DD	4
	DD	$LN10@AMovieSetu
	DD	-648					; fffffd78H
	DD	4
	DD	$LN11@AMovieSetu
$LN11@AMovieSetu:
	DB	104					; 00000068H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN10@AMovieSetu:
	DB	104					; 00000068H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN9@AMovieSetu:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	67					; 00000043H
	DB	76					; 0000004cH
	DB	83					; 00000053H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN8@AMovieSetu:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_AMovieSetupRegisterServer@32 ENDP
; Function compile flags: /Odtp /RTCsu
_TEXT	ENDS
;	COMDAT _HRESULT_FROM_WIN32@4
_TEXT	SEGMENT
tv68 = -4						; size = 4
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32@4 PROC				; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\winerror.h
; Line 23841
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	cmp	DWORD PTR _x$[ebp], 0
	jg	SHORT $LN3@HRESULT_FR
	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
	mov	ecx, DWORD PTR _x$[ebp]
	and	ecx, 65535				; 0000ffffH
	or	ecx, 458752				; 00070000H
	or	ecx, -2147483648			; 80000000H
	mov	DWORD PTR tv68[ebp], ecx
$LN4@HRESULT_FR:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
_HRESULT_FROM_WIN32@4 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_AMovieSetupUnregisterServer@16
; Function compile flags: /Odtp /RTCsu
;	COMDAT _AMovieSetupUnregisterServer@16
_TEXT	SEGMENT
_achBuffer$ = -620					; size = 520
_hr$ = -96						; size = 4
_szCLSID$ = -88						; size = 78
__$ArrayPad$ = -4					; size = 4
_clsServer$ = 8						; size = 16
_AMovieSetupUnregisterServer@16 PROC			; COMDAT
; File c:\downloads\mediapoint\src\filters\baseclasses\dllsetup.cpp
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 624				; 00000270H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-624]
	mov	ecx, 156				; 0000009cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 226
	mov	esi, esp
	push	39					; 00000027H
	lea	eax, DWORD PTR _szCLSID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _clsServer$[ebp]
	push	ecx
	call	DWORD PTR __imp__StringFromGUID2@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 227
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@AMovieSetu@2
	push	227					; 000000e3H
	push	OFFSET $SG81640
	push	OFFSET $SG81641
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN2@AMovieSetu@2:
; Line 230
	mov	esi, esp
	lea	edx, DWORD PTR _szCLSID$[ebp]
	push	edx
	push	OFFSET $SG81643
	lea	eax, DWORD PTR _achBuffer$[ebp]
	push	eax
	call	DWORD PTR __imp__wsprintfW
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 235
	lea	ecx, DWORD PTR _achBuffer$[ebp]
	push	ecx
	push	-2147483648				; 80000000H
	call	_EliminateSubKey@8
	mov	DWORD PTR _hr$[ebp], eax
; Line 236
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@AMovieSetu@2
	push	236					; 000000ecH
	push	OFFSET $SG81649
	push	OFFSET $SG81650
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN1@AMovieSetu@2:
; Line 240
	xor	eax, eax
; Line 241
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@AMovieSetu@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 624				; 00000270H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN8@AMovieSetu@2:
	DD	2
	DD	$LN7@AMovieSetu@2
$LN7@AMovieSetu@2:
	DD	-88					; ffffffa8H
	DD	78					; 0000004eH
	DD	$LN5@AMovieSetu@2
	DD	-620					; fffffd94H
	DD	520					; 00000208H
	DD	$LN6@AMovieSetu@2
$LN6@AMovieSetu@2:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN5@AMovieSetu@2:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	67					; 00000043H
	DB	76					; 0000004cH
	DB	83					; 00000053H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
_AMovieSetupUnregisterServer@16 ENDP
_TEXT	ENDS
PUBLIC	_AMovieSetupRegisterFilter2@12
EXTRN	?DbgLogInfo@@YAXKKPB_WZZ:PROC			; DbgLogInfo
; Function compile flags: /Odtp /RTCsu
;	COMDAT _AMovieSetupRegisterFilter2@12
_TEXT	SEGMENT
_rf2$81662 = -24					; size = 16
_hr$ = -4						; size = 4
_psetupdata$ = 8					; size = 4
_pIFM2$ = 12						; size = 4
_bRegister$ = 16					; size = 4
_AMovieSetupRegisterFilter2@12 PROC			; COMDAT
; Line 254
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 255
	push	OFFSET $SG81656
	push	3
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 259
	cmp	DWORD PTR _psetupdata$[ebp], 0
	jne	SHORT $LN4@AMovieSetu@3
	mov	eax, 1
	jmp	$LN5@AMovieSetu@3
$LN4@AMovieSetu@3:
; Line 266
	push	OFFSET $SG81659
	push	3
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 270
	mov	esi, esp
	mov	eax, DWORD PTR _psetupdata$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	0
	push	0
	mov	edx, DWORD PTR _pIFM2$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pIFM2$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 273
	cmp	DWORD PTR _bRegister$[ebp], 0
	je	SHORT $LN3@AMovieSetu@3
; Line 276
	mov	DWORD PTR _rf2$81662[ebp], 1
; Line 277
	mov	eax, DWORD PTR _psetupdata$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _rf2$81662[ebp+4], ecx
; Line 278
	mov	edx, DWORD PTR _psetupdata$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _rf2$81662[ebp+8], eax
; Line 279
	mov	ecx, DWORD PTR _psetupdata$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _rf2$81662[ebp+12], edx
; Line 283
	push	OFFSET $SG81663
	push	3
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 289
	mov	esi, esp
	lea	eax, DWORD PTR _rf2$81662[ebp]
	push	eax
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _psetupdata$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _psetupdata$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pIFM2$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pIFM2$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$LN3@AMovieSetu@3:
; Line 297
	cmp	DWORD PTR _hr$[ebp], -2147024894	; 80070002H
	jne	SHORT $LN2@AMovieSetu@3
; Line 298
	xor	eax, eax
	jmp	SHORT $LN5@AMovieSetu@3
; Line 299
	jmp	SHORT $LN5@AMovieSetu@3
$LN2@AMovieSetu@3:
; Line 300
	mov	eax, DWORD PTR _hr$[ebp]
$LN5@AMovieSetu@3:
; Line 301
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@AMovieSetu@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN9@AMovieSetu@3:
	DD	1
	DD	$LN8@AMovieSetu@3
$LN8@AMovieSetu@3:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN7@AMovieSetu@3
$LN7@AMovieSetu@3:
	DB	114					; 00000072H
	DB	102					; 00000066H
	DB	50					; 00000032H
	DB	0
_AMovieSetupRegisterFilter2@12 ENDP
_TEXT	ENDS
PUBLIC	_RegisterAllServers@8
EXTRN	?g_Templates@@3PAVCFactoryTemplate@@A:BYTE	; g_Templates
EXTRN	?g_cTemplates@@3HA:DWORD			; g_cTemplates
; Function compile flags: /Odtp /RTCsu
;	COMDAT _RegisterAllServers@8
_TEXT	SEGMENT
_pT$81675 = -12						; size = 4
_i$81671 = -8						; size = 4
_hr$ = -4						; size = 4
_szFileName$ = 8					; size = 4
_bRegister$ = 12					; size = 4
_RegisterAllServers@8 PROC				; COMDAT
; Line 312
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 313
	mov	DWORD PTR _hr$[ebp], 0
; Line 315
	mov	DWORD PTR _i$81671[ebp], 0
	jmp	SHORT $LN6@RegisterAl
$LN5@RegisterAl:
	mov	eax, DWORD PTR _i$81671[ebp]
	add	eax, 1
	mov	DWORD PTR _i$81671[ebp], eax
$LN6@RegisterAl:
	mov	ecx, DWORD PTR _i$81671[ebp]
	cmp	ecx, DWORD PTR ?g_cTemplates@@3HA	; g_cTemplates
	jge	$LN4@RegisterAl
; Line 319
	mov	edx, DWORD PTR _i$81671[ebp]
	imul	edx, 20					; 00000014H
	add	edx, OFFSET ?g_Templates@@3PAVCFactoryTemplate@@A ; g_Templates
	mov	DWORD PTR _pT$81675[ebp], edx
; Line 322
	mov	eax, DWORD PTR _pT$81675[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET $SG81677
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 326
	cmp	DWORD PTR _bRegister$[ebp], 0
	je	SHORT $LN3@RegisterAl
; Line 330
	push	OFFSET $SG81680
	push	OFFSET $SG81681
	mov	edx, DWORD PTR _szFileName$[ebp]
	push	edx
	mov	eax, DWORD PTR _pT$81675[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pT$81675[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	call	_AMovieSetupRegisterServer@32
	mov	DWORD PTR _hr$[ebp], eax
; Line 332
	jmp	SHORT $LN2@RegisterAl
$LN3@RegisterAl:
; Line 334
	mov	ecx, DWORD PTR _pT$81675[ebp]
	mov	edx, DWORD PTR [ecx+4]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+12], edx
	call	_AMovieSetupUnregisterServer@16
	mov	DWORD PTR _hr$[ebp], eax
$LN2@RegisterAl:
; Line 340
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@RegisterAl
; Line 341
	jmp	SHORT $LN4@RegisterAl
$LN1@RegisterAl:
; Line 342
	jmp	$LN5@RegisterAl
$LN4@RegisterAl:
; Line 344
	mov	eax, DWORD PTR _hr$[ebp]
; Line 345
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_RegisterAllServers@8 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_AMovieDllRegisterServer2@4
EXTRN	__imp__CoUninitialize@0:PROC
EXTRN	__imp__CoFreeUnusedLibraries@0:PROC
EXTRN	_AMovieSetupRegisterFilter@12:PROC
EXTRN	_CLSID_FilterMapper:BYTE
EXTRN	_IID_IFilterMapper:BYTE
EXTRN	__imp__CoCreateInstance@20:PROC
EXTRN	_CLSID_FilterMapper2:BYTE
EXTRN	_IID_IFilterMapper2:BYTE
EXTRN	__imp__CoInitialize@4:PROC
EXTRN	__imp__MultiByteToWideChar@24:PROC
EXTRN	__imp__lstrlenA@4:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__GetModuleFileNameA@12:PROC
EXTRN	?g_hInst@@3PAUHINSTANCE__@@A:DWORD		; g_hInst
; Function compile flags: /Odtp /RTCsu
;	COMDAT _AMovieDllRegisterServer2@4
_TEXT	SEGMENT
_pT$81727 = -840					; size = 4
_i$81723 = -836						; size = 4
_pIFM$81714 = -828					; size = 4
_pIFM2$81713 = -816					; size = 4
_dwerr$81697 = -808					; size = 4
_achTemp$81691 = -800					; size = 260
_achFileName$ = -532					; size = 520
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_bRegister$ = 8						; size = 4
_AMovieDllRegisterServer2@4 PROC			; COMDAT
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 840				; 00000348H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-840]
	mov	ecx, 210				; 000000d2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 369
	mov	DWORD PTR _hr$[ebp], 0
; Line 371
	push	OFFSET $SG81689
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 383
	push	OFFSET $SG81692
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 387
	cmp	DWORD PTR ?g_hInst@@3PAUHINSTANCE__@@A, 0 ; g_hInst
	jne	SHORT $LN17@AMovieDllR
	push	387					; 00000183H
	push	OFFSET $SG81694
	push	OFFSET $SG81695
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN17@AMovieDllR:
; Line 391
	mov	esi, esp
	push	260					; 00000104H
	lea	eax, DWORD PTR _achTemp$81691[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_hInst@@3PAUHINSTANCE__@@A ; g_hInst
	push	ecx
	call	DWORD PTR __imp__GetModuleFileNameA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN16@AMovieDllR
; Line 394
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwerr$81697[ebp], eax
; Line 395
	mov	eax, DWORD PTR _dwerr$81697[ebp]
	or	eax, -2147024896			; 80070000H
	jmp	$LN18@AMovieDllR
$LN16@AMovieDllR:
; Line 403
	mov	esi, esp
	push	260					; 00000104H
	lea	edx, DWORD PTR _achFileName$[ebp]
	push	edx
	mov	edi, esp
	lea	eax, DWORD PTR _achTemp$81691[ebp]
	push	eax
	call	DWORD PTR __imp__lstrlenA@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR _achTemp$81691[ebp]
	push	ecx
	push	0
	push	0
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 409
	cmp	DWORD PTR _bRegister$[ebp], 0
	je	SHORT $LN15@AMovieDllR
; Line 411
	push	OFFSET $SG81703
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 412
	push	1
	lea	edx, DWORD PTR _achFileName$[ebp]
	push	edx
	call	_RegisterAllServers@8
	mov	DWORD PTR _hr$[ebp], eax
$LN15@AMovieDllR:
; Line 419
	cmp	DWORD PTR _hr$[ebp], 0
	jl	$LN14@AMovieDllR
; Line 424
	push	OFFSET $SG81706
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 425
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__CoInitialize@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 426
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN13@AMovieDllR
	push	426					; 000001aaH
	push	OFFSET $SG81710
	push	OFFSET $SG81711
	call	?DbgAssert@@YGXPB_W0H@Z			; DbgAssert
$LN13@AMovieDllR:
; Line 430
	push	OFFSET $SG81712
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 431
	mov	DWORD PTR _pIFM2$81713[ebp], 0
; Line 432
	mov	DWORD PTR _pIFM$81714[ebp], 0
; Line 437
	mov	esi, esp
	lea	eax, DWORD PTR _pIFM2$81713[ebp]
	push	eax
	push	OFFSET _IID_IFilterMapper2
	push	1
	push	0
	push	OFFSET _CLSID_FilterMapper2
	call	DWORD PTR __imp__CoCreateInstance@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 438
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN12@AMovieDllR
; Line 440
	push	OFFSET $SG81718
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 447
	mov	esi, esp
	lea	ecx, DWORD PTR _pIFM$81714[ebp]
	push	ecx
	push	OFFSET _IID_IFilterMapper
	push	1
	push	0
	push	OFFSET _CLSID_FilterMapper
	call	DWORD PTR __imp__CoCreateInstance@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$LN12@AMovieDllR:
; Line 449
	cmp	DWORD PTR _hr$[ebp], 0
	jl	$LN11@AMovieDllR
; Line 454
	push	OFFSET $SG81722
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 455
	mov	DWORD PTR _i$81723[ebp], 0
	jmp	SHORT $LN10@AMovieDllR
$LN9@AMovieDllR:
	mov	edx, DWORD PTR _i$81723[ebp]
	add	edx, 1
	mov	DWORD PTR _i$81723[ebp], edx
$LN10@AMovieDllR:
	mov	eax, DWORD PTR _i$81723[ebp]
	cmp	eax, DWORD PTR ?g_cTemplates@@3HA	; g_cTemplates
	jge	$LN8@AMovieDllR
; Line 459
	mov	ecx, DWORD PTR _i$81723[ebp]
	imul	ecx, 20					; 00000014H
	add	ecx, OFFSET ?g_Templates@@3PAVCFactoryTemplate@@A ; g_Templates
	mov	DWORD PTR _pT$81727[ebp], ecx
; Line 461
	mov	edx, DWORD PTR _pT$81727[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN7@AMovieDllR
; Line 463
	mov	eax, DWORD PTR _pT$81727[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET $SG81730
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 465
	cmp	DWORD PTR _pIFM2$81713[ebp], 0
	je	SHORT $LN6@AMovieDllR
; Line 467
	mov	edx, DWORD PTR _bRegister$[ebp]
	push	edx
	mov	eax, DWORD PTR _pIFM2$81713[ebp]
	push	eax
	mov	ecx, DWORD PTR _pT$81727[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_AMovieSetupRegisterFilter2@12
	mov	DWORD PTR _hr$[ebp], eax
; Line 469
	jmp	SHORT $LN7@AMovieDllR
$LN6@AMovieDllR:
; Line 471
	mov	eax, DWORD PTR _bRegister$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pIFM$81714[ebp]
	push	ecx
	mov	edx, DWORD PTR _pT$81727[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	_AMovieSetupRegisterFilter@12
	mov	DWORD PTR _hr$[ebp], eax
$LN7@AMovieDllR:
; Line 478
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN4@AMovieDllR
; Line 479
	jmp	SHORT $LN8@AMovieDllR
$LN4@AMovieDllR:
; Line 480
	jmp	$LN9@AMovieDllR
$LN8@AMovieDllR:
; Line 484
	cmp	DWORD PTR _pIFM2$81713[ebp], 0
	je	SHORT $LN3@AMovieDllR
; Line 485
	mov	ecx, DWORD PTR _pIFM2$81713[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _pIFM2$81713[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 486
	jmp	SHORT $LN11@AMovieDllR
$LN3@AMovieDllR:
; Line 487
	mov	edx, DWORD PTR _pIFM$81714[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _pIFM$81714[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@AMovieDllR:
; Line 493
	mov	esi, esp
	call	DWORD PTR __imp__CoFreeUnusedLibraries@0
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 494
	mov	esi, esp
	call	DWORD PTR __imp__CoUninitialize@0
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@AMovieDllR:
; Line 500
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN1@AMovieDllR
	cmp	DWORD PTR _bRegister$[ebp], 0
	jne	SHORT $LN1@AMovieDllR
; Line 502
	push	OFFSET $SG81739
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 12					; 0000000cH
; Line 503
	push	0
	lea	eax, DWORD PTR _achFileName$[ebp]
	push	eax
	call	_RegisterAllServers@8
	mov	DWORD PTR _hr$[ebp], eax
$LN1@AMovieDllR:
; Line 506
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	OFFSET $SG81740
	push	2
	push	2
	call	?DbgLogInfo@@YAXKKPB_WZZ		; DbgLogInfo
	add	esp, 16					; 00000010H
; Line 507
	mov	eax, DWORD PTR _hr$[ebp]
$LN18@AMovieDllR:
; Line 508
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@AMovieDllR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 840				; 00000348H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN25@AMovieDllR:
	DD	4
	DD	$LN24@AMovieDllR
$LN24@AMovieDllR:
	DD	-532					; fffffdecH
	DD	520					; 00000208H
	DD	$LN20@AMovieDllR
	DD	-800					; fffffce0H
	DD	260					; 00000104H
	DD	$LN21@AMovieDllR
	DD	-816					; fffffcd0H
	DD	4
	DD	$LN22@AMovieDllR
	DD	-828					; fffffcc4H
	DD	4
	DD	$LN23@AMovieDllR
$LN23@AMovieDllR:
	DB	112					; 00000070H
	DB	73					; 00000049H
	DB	70					; 00000046H
	DB	77					; 0000004dH
	DB	0
$LN22@AMovieDllR:
	DB	112					; 00000070H
	DB	73					; 00000049H
	DB	70					; 00000046H
	DB	77					; 0000004dH
	DB	50					; 00000032H
	DB	0
$LN21@AMovieDllR:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN20@AMovieDllR:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_AMovieDllRegisterServer2@4 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_AMovieDllRegisterServer@0
EXTRN	_IID_IAMovieSetup:BYTE
; Function compile flags: /Odtp /RTCsu
;	COMDAT _AMovieDllRegisterServer@0
_TEXT	SEGMENT
_psetup$81763 = -824					; size = 4
_pT$81757 = -816					; size = 4
_i$81753 = -812						; size = 4
_dwerr$81748 = -808					; size = 4
_achTemp$81746 = -800					; size = 260
_achFileName$ = -532					; size = 520
_hr$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_AMovieDllRegisterServer@0 PROC				; COMDAT
; Line 532
	push	ebp
	mov	ebp, esp
	sub	esp, 828				; 0000033cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-828]
	mov	ecx, 207				; 000000cfH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 533
	mov	DWORD PTR _hr$[ebp], 0
; Line 547
	mov	esi, esp
	push	260					; 00000104H
	lea	eax, DWORD PTR _achTemp$81746[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_hInst@@3PAUHINSTANCE__@@A ; g_hInst
	push	ecx
	call	DWORD PTR __imp__GetModuleFileNameA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN11@AMovieDllR@2
; Line 550
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwerr$81748[ebp], eax
; Line 551
	mov	eax, DWORD PTR _dwerr$81748[ebp]
	or	eax, -2147024896			; 80070000H
	jmp	$LN12@AMovieDllR@2
$LN11@AMovieDllR@2:
; Line 559
	mov	esi, esp
	push	260					; 00000104H
	lea	edx, DWORD PTR _achFileName$[ebp]
	push	edx
	mov	edi, esp
	lea	eax, DWORD PTR _achTemp$81746[ebp]
	push	eax
	call	DWORD PTR __imp__lstrlenA@4
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR _achTemp$81746[ebp]
	push	ecx
	push	0
	push	0
	call	DWORD PTR __imp__MultiByteToWideChar@24
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 565
	mov	DWORD PTR _i$81753[ebp], 0
	jmp	SHORT $LN10@AMovieDllR@2
$LN9@AMovieDllR@2:
	mov	edx, DWORD PTR _i$81753[ebp]
	add	edx, 1
	mov	DWORD PTR _i$81753[ebp], edx
$LN10@AMovieDllR@2:
	mov	eax, DWORD PTR _i$81753[ebp]
	cmp	eax, DWORD PTR ?g_cTemplates@@3HA	; g_cTemplates
	jge	$LN8@AMovieDllR@2
; Line 569
	mov	ecx, DWORD PTR _i$81753[ebp]
	imul	ecx, 20					; 00000014H
	add	ecx, OFFSET ?g_Templates@@3PAVCFactoryTemplate@@A ; g_Templates
	mov	DWORD PTR _pT$81757[ebp], ecx
; Line 575
	push	OFFSET $SG81759
	push	OFFSET $SG81760
	lea	edx, DWORD PTR _achFileName$[ebp]
	push	edx
	mov	eax, DWORD PTR _pT$81757[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pT$81757[ebp]
	mov	eax, DWORD PTR [edx+4]
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	call	_AMovieSetupRegisterServer@32
	mov	DWORD PTR _hr$[ebp], eax
; Line 581
	cmp	DWORD PTR _hr$[ebp], 0
	jl	$LN7@AMovieDllR@2
	mov	ecx, DWORD PTR _pT$81757[ebp]
	cmp	DWORD PTR [ecx+8], 0
	je	$LN7@AMovieDllR@2
; Line 590
	mov	esi, esp
	lea	edx, DWORD PTR _psetup$81763[ebp]
	push	edx
	push	OFFSET _IID_IAMovieSetup
	push	1
	push	0
	mov	eax, DWORD PTR _pT$81757[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__CoCreateInstance@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 591
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN6@AMovieDllR@2
; Line 593
	mov	edx, DWORD PTR _psetup$81763[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _psetup$81763[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 594
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN5@AMovieDllR@2
; Line 595
	mov	eax, DWORD PTR _psetup$81763[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _psetup$81763[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
$LN5@AMovieDllR@2:
; Line 596
	mov	ecx, DWORD PTR _psetup$81763[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	eax, DWORD PTR _psetup$81763[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 598
	jmp	SHORT $LN7@AMovieDllR@2
$LN6@AMovieDllR@2:
; Line 601
	cmp	DWORD PTR _hr$[ebp], -2147467262	; 80004002H
	je	SHORT $LN2@AMovieDllR@2
	cmp	DWORD PTR _hr$[ebp], -2147220990	; 80040202H
	jne	SHORT $LN7@AMovieDllR@2
$LN2@AMovieDllR@2:
; Line 602
	mov	DWORD PTR _hr$[ebp], 0
$LN7@AMovieDllR@2:
; Line 609
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@AMovieDllR@2
; Line 610
	jmp	SHORT $LN8@AMovieDllR@2
$LN1@AMovieDllR@2:
; Line 612
	jmp	$LN9@AMovieDllR@2
$LN8@AMovieDllR@2:
; Line 614
	mov	eax, DWORD PTR _hr$[ebp]
$LN12@AMovieDllR@2:
; Line 615
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@AMovieDllR@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 828				; 0000033cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN18@AMovieDllR@2:
	DD	3
	DD	$LN17@AMovieDllR@2
$LN17@AMovieDllR@2:
	DD	-532					; fffffdecH
	DD	520					; 00000208H
	DD	$LN14@AMovieDllR@2
	DD	-800					; fffffce0H
	DD	260					; 00000104H
	DD	$LN15@AMovieDllR@2
	DD	-824					; fffffcc8H
	DD	4
	DD	$LN16@AMovieDllR@2
$LN16@AMovieDllR@2:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	0
$LN15@AMovieDllR@2:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN14@AMovieDllR@2:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_AMovieDllRegisterServer@0 ENDP
_TEXT	ENDS
PUBLIC	_AMovieDllUnregisterServer@0
; Function compile flags: /Odtp /RTCsu
;	COMDAT _AMovieDllUnregisterServer@0
_TEXT	SEGMENT
tv65 = -28						; size = 4
_psetup$81785 = -20					; size = 4
_pT$81783 = -12						; size = 4
_i$81779 = -8						; size = 4
_hr$ = -4						; size = 4
_AMovieDllUnregisterServer@0 PROC			; COMDAT
; Line 638
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 641
	mov	DWORD PTR _hr$[ebp], 0
; Line 646
	mov	eax, DWORD PTR ?g_cTemplates@@3HA	; g_cTemplates
	mov	DWORD PTR _i$81779[ebp], eax
$LN9@AMovieDllU:
	mov	ecx, DWORD PTR _i$81779[ebp]
	mov	DWORD PTR tv65[ebp], ecx
	mov	edx, DWORD PTR _i$81779[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$81779[ebp], edx
	cmp	DWORD PTR tv65[ebp], 0
	je	$LN8@AMovieDllU
; Line 650
	mov	eax, DWORD PTR _i$81779[ebp]
	imul	eax, 20					; 00000014H
	add	eax, OFFSET ?g_Templates@@3PAVCFactoryTemplate@@A ; g_Templates
	mov	DWORD PTR _pT$81783[ebp], eax
; Line 654
	mov	ecx, DWORD PTR _pT$81783[ebp]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $LN7@AMovieDllU
; Line 663
	mov	esi, esp
	lea	edx, DWORD PTR _psetup$81785[ebp]
	push	edx
	push	OFFSET _IID_IAMovieSetup
	push	1
	push	0
	mov	eax, DWORD PTR _pT$81783[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__CoCreateInstance@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 664
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN6@AMovieDllU
; Line 666
	mov	edx, DWORD PTR _psetup$81785[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _psetup$81785[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
; Line 667
	mov	eax, DWORD PTR _psetup$81785[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _psetup$81785[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 669
	jmp	SHORT $LN7@AMovieDllU
$LN6@AMovieDllU:
; Line 672
	cmp	DWORD PTR _hr$[ebp], -2147467262	; 80004002H
	je	SHORT $LN3@AMovieDllU
	cmp	DWORD PTR _hr$[ebp], -2147220990	; 80040202H
	jne	SHORT $LN7@AMovieDllU
$LN3@AMovieDllU:
; Line 673
	mov	DWORD PTR _hr$[ebp], 0
$LN7@AMovieDllU:
; Line 679
	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN2@AMovieDllU
; Line 681
	mov	ecx, DWORD PTR _pT$81783[ebp]
	mov	edx, DWORD PTR [ecx+4]
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+12], edx
	call	_AMovieSetupUnregisterServer@16
	mov	DWORD PTR _hr$[ebp], eax
$LN2@AMovieDllU:
; Line 687
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN1@AMovieDllU
; Line 688
	jmp	SHORT $LN8@AMovieDllU
$LN1@AMovieDllU:
; Line 689
	jmp	$LN9@AMovieDllU
$LN8@AMovieDllU:
; Line 691
	mov	eax, DWORD PTR _hr$[ebp]
; Line 692
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@AMovieDllU
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN14@AMovieDllU:
	DD	1
	DD	$LN13@AMovieDllU
$LN13@AMovieDllU:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN12@AMovieDllU
$LN12@AMovieDllU:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	0
_AMovieDllUnregisterServer@0 ENDP
_TEXT	ENDS
END
