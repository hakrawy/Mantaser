<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:Controls="clr-namespace:MediaPoint.Controls;assembly=MediaPoint.Controls"
		xmlns:Converters="clr-namespace:MediaPoint.Converters;assembly=MediaPoint"
		xmlns:Resources="clr-namespace:MediaPoint.App.Resources;assembly=MediaPoint"
		xmlns:xceed="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
		xmlns:i="http://schemas.microsoft.com/expression/2009/interactivity"
		xmlns:WPFSpark="clr-namespace:WPFSpark;assembly=WPFSpark"
		xmlns:Behaviors="clr-namespace:MediaPoint.App.Behaviors;assembly=MediaPoint"
		xmlns:LayoutBehaviors="clr-namespace:Microsoft.Expression.Interactivity.Layout;assembly=Microsoft.Expression.Interactions"
		xmlns:Effects="clr-namespace:MediaPoint.App.Effects;assembly=MediaPoint"
		xmlns:ShaderEffects="clr-namespace:ShaderEffectLibrary;assembly=ShaderEffectLibrary"
		xmlns:Attached="clr-namespace:MediaPoint.App.AttachedProperties;assembly=MediaPoint"
		xmlns:visualisations="clr-namespace:WPFSoundVisualizationLib;assembly=WPFSoundVisualizationLib"
		xmlns:Subtitles="clr-namespace:MediaPoint.Subtitles;assembly=MediaPoint.Common"
		xmlns:vm="clr-namespace:MediaPoint.VM;assembly=MediaPoint.ViewModels"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
		xmlns:Interactivity="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity">
    <TextBlock x:Key="Theme">MediaPoint</TextBlock>

    <Converters:PlayingToVisibilityConverter x:Key="stoppedToVis" />
    <Converters:FullscreenPaddingConverter x:Key="FullscreenPaddingConverter"/>

    <Color x:Key="MainColor">#FF595959</Color>
    <Color x:Key="HoverColor">#FF393939</Color>
    <Color x:Key="DefaultColor">#FF9BB1C5</Color>
    <SolidColorBrush x:Key="LightBrush" Color="#FF333333" />
    <SolidColorBrush x:Key="ShadeBrush" Color="#FF434343" />

    <Color x:Key="TopGradientSelectColor">#FFFFFFFF</Color>
    <Color x:Key="BottomGradientSelectColor">#FF737373</Color>

    <Color x:Key="BlackColor">#FF000000</Color>
    <Color x:Key="WhiteColor">#FFFFFFFF</Color>

    <SolidColorBrush x:Key="NormalBrush" Color="{StaticResource MainColor}" />
    <SolidColorBrush x:Key="GlyphBrush" Color="#FFD1D1D1" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#FF333333" />
    <SolidColorBrush x:Key="HoverBrush" Color="{StaticResource HoverColor}" />
    <SolidColorBrush x:Key="TextBrush" Color="#FFFFFFFF" />

    <LinearGradientBrush x:Key="ShineBrush" EndPoint="0.5,0.971" StartPoint="0.5,0.042">
        <GradientStop Color="#59FFFFFF" Offset="0" />
        <GradientStop Color="#10FFFFFF" Offset="1" />
        <GradientStop Color="#26FFFFFF" Offset="0.467" />
        <GradientStop Color="#10FFFFFF" Offset="0.475" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MediaButtonBorder" EndPoint="0.5,0.971" StartPoint="0.5,0.042">
        <GradientStop Color="#4CFFFFFF" Offset="0" />
        <GradientStop Color="#26FFFFFF" Offset="1" />
        <GradientStop Color="#26FFFFFF" Offset="0.467" />
        <GradientStop Color="#10FFFFFF" Offset="0.475" />
        <GradientStop Color="#10FFFFFF" Offset="0.856" />
    </LinearGradientBrush>
    
    <LinearGradientBrush x:Key="ShineBrushReverse" EndPoint="0.5,0.971" StartPoint="0.5,0.042">
        <GradientStop Color="#10FFFFFF" Offset="0" />
        <GradientStop Color="#26FFFFFF" Offset="1" />
        <GradientStop Color="#10FFFFFF" Offset="0.467" />
        <GradientStop Color="#59FFFFFF" Offset="0.475" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HoverShineBrush" EndPoint="0.5,0.971" StartPoint="0.5,0.042">
        <GradientStop Color="#4CFFFFFF" Offset="0" />
        <GradientStop Color="#26FFFFFF" Offset="1" />
        <GradientStop Color="#26FFFFFF" Offset="0.467" />
        <GradientStop Color="#10FFFFFF" Offset="0.475" />
        <GradientStop Color="#10FFFFFF" Offset="0.856" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBrush" EndPoint="0.5,0.971" StartPoint="0.5,0.042">
        <GradientStop Color="#4C000000" Offset="0" />
        <GradientStop Color="#26FFFFFF" Offset="1" />
        <GradientStop Color="#4C000000" Offset="0.467" />
        <GradientStop Color="#26FFFFFF" Offset="0.479" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PressedBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#444" Offset="0.0" />
        <GradientStop Color="#888" Offset="1.0" />
    </LinearGradientBrush>

    <ControlTemplate x:Key="RevealExpanderTemp" TargetType="{x:Type Expander}">
        <!-- (other stuff here...) -->
        <StackPanel x:Name="ExpanderContentScrollView">
            <!-- ** BEGIN IMPORTANT PART #1 ...  -->
            <StackPanel.Tag>
                <sys:Double>0.0</sys:Double>
            </StackPanel.Tag>
            <StackPanel.Height>
                <MultiBinding Converter="{StaticResource MultiplyConverter}">
                    <Binding Path="ActualHeight" ElementName="ExpanderContent"/>
                    <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </StackPanel.Height>
            <!-- ...end important part #1.  -->
            <ContentPresenter x:Name="ExpanderContent" ContentSource="Content"/>

        </StackPanel>

        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard HandoffBehavior="SnapshotAndReplace">
                        <Storyboard>
                            <!-- ** BEGIN IMPORTANT PART #2 (make TargetProperty 'Tag') ...  -->
                            <DoubleAnimation Storyboard.TargetName="ExpanderContentScrollView"
                         Storyboard.TargetProperty="Tag"
                         To="1"
                         Duration="0:0:0.4"/>
                            <!-- ...end important part #2 -->
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard HandoffBehavior="SnapshotAndReplace">
                        <Storyboard>
                            <!-- ** BEGIN IMPORTANT PART #2 (make TargetProperty 'Tag') ...  -->
                            <DoubleAnimation Storyboard.TargetName="ExpanderContentScrollView"
                         Storyboard.TargetProperty="Tag"
                         To="0"
                         Duration="0:0:0.4"/>
                            <!-- ...end important part #2 -->
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
        
    <Style x:Key="Heading" TargetType="{x:Type GroupBox}">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="2,2,2,5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Tag" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Border CornerRadius="3" Background="#00000000" BorderBrush="{DynamicResource HoverShineBrush}" BorderThickness="2">
                        <StackPanel Orientation="Vertical">
                            <CheckBox Name="chk" Padding="0" IsChecked="{TemplateBinding Tag, Converter={StaticResource StringToBooleanConverter}}">
                                <CheckBox.Template>
                                    <ControlTemplate TargetType="{x:Type CheckBox}">
                                        <ContentPresenter/>
                                    </ControlTemplate>
                                </CheckBox.Template>
                                <TextBlock Margin="0" Padding="2" Foreground="White" Background="{DynamicResource ShineBrush}" HorizontalAlignment="Stretch" Text="{TemplateBinding Header}"/>
                            </CheckBox>
                            <Expander Template="{StaticResource RevealExpanderTemp}" IsExpanded="{Binding IsChecked, ElementName=chk}">
                                <ContentPresenter Margin="5,10,5,5">
                                </ContentPresenter>
                            </Expander>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LinkText" TargetType="{x:Type Label}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Background" Value="#00000000"/>
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type WPFSpark:PivotHeaderControl}}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border CornerRadius="3" Padding="{TemplateBinding Padding}"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}">
                        <TextBlock Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter/>
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Foreground" Value="White">
                <Setter Property="Background" Value="{DynamicResource ShineBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource HoverShineBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="dockButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle"	Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ToolTip" Value="Undock"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Image Source="/Themes/Default/Images/mini.png" Name="img"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="img" Property="Source" Value="/Themes/Default/Images/dock.png"/>
                            <Setter Property="ToolTip" Value="Dock"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle"	Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="Border" CornerRadius="2" BorderBrush="Transparent" BorderThickness="1">
                        <StackPanel Orientation="Horizontal">
                            <Grid>
                                <Border Height="12" Width="12" Margin="2" VerticalAlignment="Center" Opacity="0.9" CornerRadius="3" BorderBrush="Black" BorderThickness="1" Background="#FFFFFFFF" Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}"/>
                                <Border Height="12" Width="12" Margin="2" VerticalAlignment="Center" Opacity="0.5" CornerRadius="3" BorderBrush="Black" BorderThickness="1" Background="DarkGray" Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ExtraBoolToVisibilityConverter}, ConverterParameter=True}"/>
                            </Grid>
                            <ContentPresenter TextBlock.Foreground="DarkGray"
								    Margin="4,0,0,0" x:Name="presenter"
								    VerticalAlignment="Center"
								    HorizontalAlignment="Stretch"
								    RecognizesAccessKey="True"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ShineBrush}"/>
                            <!--<Setter TargetName="Border" Property="BorderThickness" Value="1"/>-->
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ShineBrush}" />
                            <Setter TargetName="presenter" Property="TextBlock.Foreground" Value="#FFFFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter TargetName="presenter" Property="TextBlock.Foreground" Value="#80000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NuclearScrollRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Opacity="1" />
                        <ContentPresenter HorizontalAlignment="Center" x:Name="ContentPresenter" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Opacity="0.3" Height="Auto" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="ContentPresenter" Value="0.1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NuclearThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Margin="0,0,0,0" x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" x:Name="HoverRectangle" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="3" RadiusY="4" Stroke="{x:Null}" Margin="4.5,-2,4.5,-2" Opacity="0.3" MinHeight="10">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle HorizontalAlignment="Stretch" x:Name="PressedRectangle" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="3" RadiusY="4" Stroke="{x:Null}" Margin="4.5,-2,4.5,-2" Opacity="0.3" MinHeight="10">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" >
                            <Setter Property="Opacity" TargetName="Grid" Value="0.1"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="18" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="18" />
                        </Grid.RowDefinitions>
                        <RepeatButton x:Name="DecreaseRepeat" Command="ScrollBar.LineUpCommand" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}">
                            <Grid Margin="0,0,0,0">
                                <Path Margin="4.742,3.997,4.946,5.327" VerticalAlignment="Stretch" Height="Auto" Fill="{DynamicResource GlyphBrush}" Stretch="Fill" Stroke="{DynamicResource GlyphBrush}" StrokeThickness="1" Data="M5.2422477,11.132184 L11.5544,11.132184 8.6412958,4.4969033 z" x:Name="DecreaseArrow" />
                            </Grid>
                        </RepeatButton>
                        <Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource NuclearThumbStyle}" Background="{x:Null}" Foreground="{x:Null}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageDownCommand" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageUpCommand" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                        <RepeatButton Grid.Row="2" x:Name="IncreaseRepeat" Command="ScrollBar.LineDownCommand">
                            <Grid>
                                <Path Margin="4.742,3.997,4.946,5.327" x:Name="IncreaseArrow" VerticalAlignment="Stretch" Height="Auto" Fill="{DynamicResource GlyphBrush}" Stretch="Fill" Stroke="{DynamicResource GlyphBrush}" StrokeThickness="1" Data="M5.2422477,11.132184 L11.5544,11.132184 8.6412958,4.4969033 z" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform Angle="180" />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="LayoutTransform" TargetName="GridRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical" />
                            <Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeat" />
                            <Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeat" />
                            <Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageDown" />
                            <Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageUp" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NuclearSliderThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Height" Value="14" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">

                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="HoverOff">

                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="PressedOn">

                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="PressedOff">

                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
                        <Border x:Name="HoverBorder" Opacity="0" Background="{StaticResource HoverBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
                        <Border x:Name="HoverShineBorder" Opacity="0" Background="{StaticResource HoverShineBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
                        <Border x:Name="PressedBorder" Opacity="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Background="{StaticResource PressedBrush}" />
                        <Border x:Name="ShineBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Background="{StaticResource ShineBrush}" Opacity="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
    </Style>
    <Style TargetType="{x:Type Slider}">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid x:Name="GridRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TickBar Visibility="Collapsed" x:Name="TopTick" Height="4" SnapsToDevicePixels="True" Placement="Top" Fill="{DynamicResource GlyphBrush}" />
                        <Border Grid.Row="1" Margin="0" x:Name="Border" Height="4" CornerRadius="2" Background="{DynamicResource LightBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1" />
                        <Track Grid.Row="1" x:Name="PART_Track">
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource NuclearSliderThumb}" Background="{DynamicResource NormalBrush}" Foreground="{x:Null}" Width="20" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="Slider.IncreaseLarge" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="Slider.DecreaseLarge" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                        <TickBar Visibility="Collapsed" Grid.Row="2" x:Name="BottomTick" Height="4" SnapsToDevicePixels="True" Placement="Bottom" Fill="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Visibility" Value="Visible" TargetName="TopTick" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" Value="Visible" TargetName="BottomTick" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" Value="Visible" TargetName="TopTick" />
                            <Setter Property="Visibility" Value="Visible" TargetName="BottomTick" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="GridRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ImageButton" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="0" Padding="0" BorderBrush="DarkGray" CornerRadius="0" Background="{TemplateBinding Background}">
                        <Grid>
                            <Image Source="{Binding Path=(Behaviors:Buttons.Image), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="DarkGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Controls:Visualizations" x:Key="Visualizations">
        <Style.Resources>
            <ResourceDictionary>
                <DoubleAnimation x:Key="FadeIn" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:1"/>
                <DoubleAnimation x:Key="FadeOut" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:1"/>
                <ObjectAnimationUsingKeyFrames x:Key="FadeInVisibility" BeginTime="0:0:0"
						Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames x:Key="FadeOutVisibility" BeginTime="0:0:1"
						Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
            </ResourceDictionary>
        </Style.Resources>
        <!--<Setter Property="Behaviors:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Behaviors:StylizedBehaviorCollection>
                    <LayoutBehaviors:MouseDragElementBehavior/>
                </Behaviors:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>-->
        <Setter Property="Panel.ZIndex" Value="1299"/>
        <!--<Setter Property="Attached:PanelBringToFrontOnClick.IsEnabled" Value="True" />-->
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Controls:Visualizations">
                    <!--<Border Background="#bb444444" CornerRadius="7">
                        <Border Background="#bb000000" Style="{DynamicResource MenuOuterBorder}" Margin="1">
                            <Border Style="{DynamicResource MenuInnerBorder}">-->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <visualisations:SpectrumAnalyzer Opacity="0.5" Focusable="False" Grid.Row="0" x:Name="spectrumAnalyzer" Margin="5" BarCount="10" Background="Transparent"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Panel.ZIndex="3003" />
                    </Grid>
                    <!--</Border>
                        </Border>
                    </Border>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource BooleanAndConverter}">
                        <Binding Path="ShowVisualizations"/>
                    </MultiBinding>
                </DataTrigger.Binding>
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeIn"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeInVisibility"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeOut"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeOutVisibility"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ContextMenu" x:Key="ContextMenuStyle">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Foreground" Value="DarkGray"/>
        <Setter Property="FontFamily" Value="Segoe UI Mono"/>
        <Setter Property="FontSize" Value="9"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border 
							Name="Border"
							Background="#ff222222"
							BorderBrush="#ffaaaaaa"
							BorderThickness="1" >
                        <StackPanel IsItemsHost="True"
								KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Padding" Value="5,8,5,8"/>
                            <Setter TargetName="Border" Property="CornerRadius" Value="8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type MenuItem}" x:Key="MenuItemStyle">
        <Setter Property="Background" Value="#88222222"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="Opacity" Value="0.75"/>
        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="#88999999"/>
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#44999999"/>
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ContextMenu x:Key="TrayContextMenu" Style="{DynamicResource ContextMenuStyle}">
        <MenuItem Style="{DynamicResource MenuItemStyle}" Header="About MediaPoint" Command="{Binding AboutCommand}"/>
        <Rectangle Height="3" Fill="LightGray" HorizontalAlignment="Stretch" Margin="-5,0,-25,0" />
        <MenuItem Style="{DynamicResource MenuItemStyle}" Header="Show player" Visibility="{Binding IsHidden, Converter={StaticResource Boolean2VisibilityConverter}}" Command="{Binding RestoreCommand}"/>
        <MenuItem Style="{DynamicResource MenuItemStyle}" Header="Hide player" Visibility="{Binding IsHidden, Converter={StaticResource ExtraBoolToVisibilityConverter}, ConverterParameter=True}" Command="{Binding MinimizeCommand}"/>
        <MenuItem Style="{DynamicResource MenuItemStyle}" Header="Exit MediaPoint" Command="{Binding ExitCommand}"/>
    </ContextMenu>

    <Style TargetType="Window" x:Key="WindowStyle">
        <Setter Property="Width" Value="820"/>
        <Setter Property="Height" Value="500"/>
        <!--<Setter Property="MinHeight" Value="500"/>
        <Setter Property="MinWidth" Value="820"/>-->
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Behaviors:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Behaviors:StylizedBehaviorCollection>
                    <Behaviors:WindowStateBehavior />
                </Behaviors:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <!--<Setter Property="Padding" Value="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FullscreenPaddingConverter}}" />-->
            </Trigger>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Window}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <AdornerDecorator>
                                        <ContentPresenter/>
                                    </AdornerDecorator>
                                    <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" VerticalAlignment="Bottom" IsTabStop="false" Visibility="Collapsed" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                                        <Condition Property="WindowState" Value="Normal"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="VideoContainer" TargetType="Grid">
        <!--<Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>-->
    </Style>

    <Style x:Key="DefaultFontStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="DarkGray"/>
        <Setter Property="FontFamily" Value="Segoe UI Mono"/>
        <Setter Property="FontSize" Value="9"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="HighlightFontStyle" BasedOn="{StaticResource DefaultFontStyle}"  TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FFAAAAFF"/>
    </Style>

    <Style x:Key="StatusText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="DarkGray"/>
        <Setter Property="FontFamily" Value="Segoe UI Mono"/>
        <Setter Property="FontSize" Value="9"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style TargetType="Controls:MainWindowContent" x:Key="MainWindowContent">
        <Setter Property="Background" Value="#ff000000"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Behaviors:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Behaviors:StylizedBehaviorCollection>
                    <Behaviors:FullScreenBehavior FullScreenOnDoubleClick="True" RestoreOnEscape="True" FullScreenOnMaximize="True" />
                    <Behaviors:DraggableBehavior IsDraggable="True" />
                </Behaviors:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:MainWindowContent}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid Visibility="{Binding Player.HasVideo, Converter={StaticResource ExtraBoolToVisibilityConverter}, ConverterParameter=True}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width=".1*"/>
                                <ColumnDefinition Width=".3*"/>
                                <ColumnDefinition Width=".4*"/>
                                <ColumnDefinition Width=".2*"/>
                            </Grid.ColumnDefinitions>
                            <Viewbox Stretch="Uniform" RenderTransformOrigin="0.5,0.5"  Panel.ZIndex="1000" Name="vb" Grid.Column="1" Grid.ColumnSpan="1">
                                <Viewbox.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform x:Name="rt" Angle="-10"/>
                                        <ScaleTransform x:Name="st" ScaleX="1" ScaleY="1"/>
                                        <TranslateTransform x:Name="tt" Y="{Binding ActualHeight, ElementName=vb}"/>
                                    </TransformGroup>
                                </Viewbox.RenderTransform>
                                <StackPanel>
                                    <StackPanel.Effect>
                                        <!--<DropShadowEffect Color="LightBlue" ShadowDepth="0" Direction="120" BlurRadius="10" ></DropShadowEffect>-->
                                        <ShaderEffects:LightStreakEffect Scale="0.3" x:Name="zb" />
                                    </StackPanel.Effect>
                                    <TextBlock  xml:space="preserve" FontSize="20" FontFamily="{Binding Path=[0], Source={x:Static Resources:EmbeddedFonts.Fonts}}"><Run Foreground="#3A7CFF">M</Run><Run Foreground="#35B1FF">edia</Run> <Run Foreground="#3A7CFF">P</Run><Run Foreground="#35B1FF">oint</Run></TextBlock>
                                    <TextBlock FontSize="10" FontFamily="{Binding Path=[0], Source={x:Static Resources:EmbeddedFonts.Fonts}}" Foreground="DarkGray" Text="{Binding Path=Properties[Version], Source={x:Static Application.Current}}">
                                    </TextBlock>
                                    <StackPanel.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation DecelerationRatio="1" Storyboard.TargetName="zb" Storyboard.TargetProperty="Scale" To="0.1" Duration="0:0:2" AutoReverse="True" RepeatBehavior="Forever" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation DecelerationRatio="1" Storyboard.TargetName="tt" Storyboard.TargetProperty="Y" To="{Binding ActualHeight, ElementName=vb, Converter={StaticResource MultiplyWithConverter}, ConverterParameter=-1}" Duration="0:0:2" AutoReverse="True" RepeatBehavior="Forever" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <!--<DoubleAnimation DecelerationRatio="1" Storyboard.TargetName="st" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:2" AutoReverse="True" RepeatBehavior="Forever" ></DoubleAnimation>-->
                                                        <DoubleAnimation Storyboard.TargetName="st" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:2" AutoReverse="True" RepeatBehavior="Forever" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="rt" Storyboard.TargetProperty="Angle" To="10" Duration="0:0:3" AutoReverse="True" RepeatBehavior="Forever" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </StackPanel.Triggers>
                                </StackPanel>
                            </Viewbox>
                            <Grid Grid.ColumnSpan="4" RenderTransformOrigin="0.5,0.5" >
                                <Grid.RenderTransform>
                                    <ScaleTransform ScaleX="2" ScaleY="2"/>
                                </Grid.RenderTransform>
                                <Grid.Effect>
                                    <Effects:WaterEffect/>
                                </Grid.Effect>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width=".05*"/>
                                    <ColumnDefinition Width=".05*"/>
                                    <ColumnDefinition Width=".7*"/>
                                    <ColumnDefinition Width=".2*"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="2" Grid.ColumnSpan="2" Panel.ZIndex="0" Margin="30" RenderTransformOrigin="0.5,0.5" Source="/Themes/default/Images/background.png" Stretch="Uniform">
                                    <Image.RenderTransform>
                                        <RotateTransform/>
                                    </Image.RenderTransform>
                                    <Image.Triggers>
                                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle" To="360" Duration="0:0:20" RepeatBehavior="Forever" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </Image.Triggers>
                                </Image>
                            </Grid>
                        </Grid>
                        <Grid Panel.ZIndex="99">
                            <Grid Background="{DynamicResource Glassage}" Visibility="{Binding Player.IsStopped, Converter={StaticResource stoppedToVis}}"/>
                            <ContentPresenter />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Controls:MediaControls" x:Key="MediaControls">
        <Style.Resources>
            <ResourceDictionary>
                <DoubleAnimation x:Key="FadeIn" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:1"/>
                <DoubleAnimation x:Key="FadeOut" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:1"/>
                <ObjectAnimationUsingKeyFrames x:Key="FadeInVisibility" BeginTime="0:0:0"
						Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames x:Key="FadeOutVisibility" BeginTime="0:0:1"
						Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <Storyboard x:Key="FadeInSB">
                    <TimelineCollection>
                        <StaticResource ResourceKey="FadeIn"/>
                    </TimelineCollection>
                </Storyboard>
                <Storyboard x:Key="FadeOutSB">
                    <TimelineCollection>
                        <StaticResource ResourceKey="FadeOut"/>
                    </TimelineCollection>
                </Storyboard>
                <Storyboard x:Key="FadeInVisibilitySB">
                    <TimelineCollection>
                        <StaticResource ResourceKey="FadeInVisibility"/>
                    </TimelineCollection>
                </Storyboard>
                <Storyboard x:Key="FadeOutVisibilitySB">
                    <TimelineCollection>
                        <StaticResource ResourceKey="FadeOutVisibility"/>
                    </TimelineCollection>
                </Storyboard>
            </ResourceDictionary>
        </Style.Resources>
        <Setter Property="Margin" Value="0"/>
        <!--<Setter Property="Height" Value="160"/>-->
        <Setter Property="Width" Value="560"/>
        <Setter Property="Height" Value="160"/>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="Panel.ZIndex" Value="2003"/>
        <Setter Property="Attached:PanelBringToFrontOnClick.IsEnabled" Value="True" />
        <!--<Setter Property="VerticalAlignment" Value="Bottom"/>-->
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Behaviors:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Behaviors:StylizedBehaviorCollection>
                    <Behaviors:DraggableBehavior IsDraggable="True" />
                    <Behaviors:PopupInWindow IsAutomatic="True" />
                    <Behaviors:MouseDragElementBehavior/>
                </Behaviors:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:MediaControls}">
                    <Grid>
                        <Viewbox Style="{DynamicResource ControlsViewbox}">
                            <Border Background="#bb444444" CornerRadius="2">
                                <Grid Style="{DynamicResource ControlsContainer}" >
                                    <Border Background="#bb000000" Style="{DynamicResource ControlsOuterBorder}" Margin="1">
                                        <Border Style="{DynamicResource ControlsInnerBorder}" ClipToBounds="True">
                                            <Grid VerticalAlignment="Bottom" Height="32">
                                                <StackPanel Orientation="Vertical" Margin="0,-53,0,0" VerticalAlignment="Top">
                                                    <Slider Attached:ThreatAsInputControl.Treat="false" Focusable="False" Margin="0,-40,3,0" Height="48" MinHeight="48" Style="{DynamicResource MediaTimeSliderStyle}" IsMoveToPointEnabled="True"
															Minimum="0" Name="position" Visibility="{Binding Player.IsStopped, Converter={StaticResource ExtraBoolToVisibilityConverter}, ConverterParameter=True}"
															Value="{Binding Path=Player.MediaPosition, Mode=TwoWay}" Attached:TrackbarSlider.DragScroll="True"
															Maximum="{Binding Path=Player.MediaDuration, Mode=OneWay}">
                                                        <Interactivity:Interaction.Behaviors>
                                                            <Behaviors:MonitorMouseLeaveBehavior />
                                                        </Interactivity:Interaction.Behaviors>
                                                    </Slider>
                                                </StackPanel>
                                                <Border VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Margin="20,0,20,0">
                                                    <Grid Margin="0,-20,0,10">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <StackPanel Orientation="Horizontal" Height="26" DockPanel.Dock="Left">
                                                            <ToggleButton Margin="0,0,3,0"
																	IsChecked="{Binding IsOptionsVisible, Mode=OneWay}"
																	Style="{DynamicResource ShowImdbButtonToggle}"
																	Width="28"
																	Height="14" ToolTip="Show settings"
																	Command="{Binding OptionsCommand}">
                                                                <Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="13" RenderOptions.BitmapScalingMode="HighQuality" Source="/Themes/default/Images/settings.png"/>
                                                            </ToggleButton>
                                                            <ToggleButton Margin="0,0,3,0"
																	IsChecked="{Binding ShowPlaylist, Mode=OneWay}"
																	Style="{DynamicResource ShowImdbButtonToggle}"
																	Width="28"
																	Height="14" ToolTip="Show playlist"
																	Command="{Binding ShowPlaylistCommand}">
                                                                <Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="13" RenderOptions.BitmapScalingMode="HighQuality" Source="/Themes/default/Images/playlist.png"/>
                                                            </ToggleButton>
                                                            <ToggleButton Margin="0,0,3,0" Visibility="{Binding Player.IMDb, Converter={StaticResource NotNullToVisibility}}"
                                                                    IsChecked="{Binding Player.ShowIMdb, Mode=OneWay}"
																	Style="{DynamicResource ShowImdbButtonToggle}"
																	Width="28"
																	Height="14" ToolTip="Show movie info"
																	Command="{Binding Player.ShowImdbCommand}">
                                                                <!--<Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="8" RenderOptions.BitmapScalingMode="HighQuality" Source="/Images/imdb.png"></Image>-->
                                                                <TextBlock Margin="0,2,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource DefaultFontStyle}" FontSize="6" Foreground="White" >INFO</TextBlock>
                                                            </ToggleButton>
                                                            <ToggleButton Margin="0,0,3,0"
																	IsChecked="{Binding ShowVisualizations, Mode=OneWay}"
																	Style="{DynamicResource ShowImdbButtonToggle}"
																	Width="28"
																	Height="14" ToolTip="Show visualizations"
																	Command="{Binding ShowVisualizationsCommand}">
                                                                <!--<Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="8" RenderOptions.BitmapScalingMode="HighQuality" Source="/Images/imdb.png"></Image>-->
                                                                <TextBlock Margin="0,2,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource DefaultFontStyle}" FontSize="6" Foreground="White" >VIS</TextBlock>
                                                            </ToggleButton>
                                                            <ToggleButton Margin="0,0,3,0"
																	IsChecked="{Binding ShowEqualizer, Mode=OneWay}"
																	Style="{DynamicResource ShowImdbButtonToggle}"
																	Width="28"
																	Height="14" ToolTip="Show equalizer"
																	Command="{Binding ShowEqualizerCommand}">
                                                                <!--<Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="8" RenderOptions.BitmapScalingMode="HighQuality" Source="/Images/imdb.png"></Image>-->
                                                                <TextBlock Margin="0,2,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource DefaultFontStyle}" FontSize="6" Foreground="White" >EQ</TextBlock>
                                                            </ToggleButton>
                                                        </StackPanel>
                                                        <StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal" Height="26" DockPanel.Dock="Right">
                                                            <ToggleButton Name="subsBtn" Margin="0,0,3,0" Visibility="{Binding Player.HasVideo, Converter={StaticResource Boolean2VisibilityConverter}}"
																	IsChecked="{Binding Player.ShowOnlineSubtitles, Mode=OneWay}"
																	Style="{DynamicResource ShowImdbButtonToggle}"
																	Width="28"
																	Height="14" ToolTip="Select active subtitle">
                                                                <!--<Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="8" RenderOptions.BitmapScalingMode="HighQuality" Source="/Images/imdb.png"></Image>-->
                                                                <TextBlock Margin="0,2,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource DefaultFontStyle}" FontSize="6" Foreground="White" >SUBS</TextBlock>
                                                                <Interactivity:Interaction.Triggers>
                                                                    <Interactivity:EventTrigger EventName="Click" >
                                                                        <Behaviors:SetterAction Popup="{Binding ElementName=substreamsPopup}" Property="Popup.IsOpen" Value="True"/>
                                                                    </Interactivity:EventTrigger>
                                                                </Interactivity:Interaction.Triggers>
                                                            </ToggleButton>
                                                            <ToggleButton Style="{DynamicResource dockButton}"  Grid.Column="0" 
																	Margin="10,10,-10,0" Width="15" Height="15"
																	HorizontalAlignment="Right"
																	VerticalAlignment="Top" IsChecked="{Binding Path=(Behaviors:PopupInWindow.IsAutomatic), Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type Controls:MediaControls}}}" />
                                                        </StackPanel>
                                                    </Grid>
                                                </Border>
                                                <Popup MaxWidth="350" MaxHeight="250" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}" Name="substreamsPopup" StaysOpen="False" PlacementTarget="{Binding ElementName=subsBtn}" Placement="Top"  AllowsTransparency="True">
                                                    <ContentControl Style="{DynamicResource Popup}">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <Button Grid.Row="1" Margin="2" HorizontalAlignment="Right" Style="{DynamicResource ShowImdbButton}" Command="{Binding Player.ShowOnlineSubtitlesCommand}">
                                                                <Interactivity:Interaction.Triggers>
                                                                    <Interactivity:EventTrigger EventName="Click" >
                                                                        <Behaviors:SetterAction Popup="{Binding RelativeSource={RelativeSource AncestorType=Popup}}" Property="Popup.IsOpen" Value="False"/>
                                                                    </Interactivity:EventTrigger>
                                                                </Interactivity:Interaction.Triggers>
                                                                <TextBlock Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource DefaultFontStyle}" FontSize="9" Foreground="White" >Find Subtitles Online</TextBlock>
                                                            </Button>
                                                            <ListBox Grid.Row="0" ScrollViewer.HorizontalScrollBarVisibility="Disabled"  BorderThickness="0" BorderBrush="#00000000" Background="Transparent" ItemsSource="{Binding Player.SubtitleStreams}" SelectedItem="{Binding Player.SelectedSubtitle}">
                                                                <ListBox.Resources>
                                                                    <Style TargetType="{x:Type ListBoxItem}">
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                                    <ContentPresenter />
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </ListBox.Resources>
                                                                <ListBox.ItemTemplate>
                                                                    <DataTemplate DataType="{x:Type Subtitles:SubtitleItem}">
                                                                        <RadioButton GroupName="substreams" Padding="3"  Margin="3" Foreground="White" Background="Black" BorderBrush="Transparent" BorderThickness="0" Content="{Binding DisplayName}">
                                                                            <RadioButton.IsChecked>
                                                                                <Binding Path="IsSelected" RelativeSource="{RelativeSource AncestorType=ListBoxItem}" Mode="TwoWay" />
                                                                            </RadioButton.IsChecked>
                                                                            <Interactivity:Interaction.Triggers>
                                                                                <Interactivity:EventTrigger EventName="Click" >
                                                                                    <Behaviors:SetterAction Popup="{Binding RelativeSource={RelativeSource AncestorType=Popup}}" Property="Popup.IsOpen" Value="False"/>
                                                                                </Interactivity:EventTrigger>
                                                                            </Interactivity:Interaction.Triggers>
                                                                        </RadioButton>
                                                                    </DataTemplate>
                                                                </ListBox.ItemTemplate>
                                                            </ListBox>
                                                        </Grid>
                                                    </ContentControl>
                                                </Popup>
                                            </Grid>
                                        </Border>
                                    </Border>
                                    <Canvas Margin="0,-15,0,0" Width="319"
											Height="41">

                                        <Path Stretch="Fill"
												StrokeLineJoin="Round"
												StrokeThickness="1.2"
												Width="318"
												Height="45.678"
												Canvas.Top="-1.095"
												Data="M109.24504,0.5 C114.03861,0.49999881 118.43511,2.2003291 121.86445,5.0306299 L122.51595,5.5949948 205.5,5.5949948 C212.12742,5.5949938 217.5,10.967577 217.5,17.594993 L217.5,22.594993 C217.5,29.222412 212.12742,34.594995 205.5,34.594995 L123.03446,34.594995 122.5843,35.024179 C119.06116,38.226331 114.38101,40.177999 109.24504,40.177999 104.10908,40.177999 99.428704,38.226331 95.905301,35.024179 L95.455114,34.594995 12.5,34.594995 C5.8725815,34.594995 0.5,29.222412 0.5,22.594993 L0.5,17.594993 C0.5,10.967577 5.8725815,5.5949938 12.5,5.5949948 L95.973664,5.5949948 96.6252,5.0306299 C100.05478,2.2003291 104.45148,0.49999881 109.24504,0.5 z"
												Opacity="1"
												Stroke="{x:Null}">
                                            <Path.Fill>
                                                <LinearGradientBrush EndPoint="0.5,1"
														StartPoint="0.5,0"
														MappingMode="RelativeToBoundingBox">
                                                    <GradientStop Color="#8A000000"
															Offset="0" />
                                                    <GradientStop Color="#8A000000"
															Offset="1" />
                                                </LinearGradientBrush>
                                            </Path.Fill>
                                        </Path>
                                        <Path Stretch="Fill"
												StrokeLineJoin="Round"
												StrokeThickness="1.2"
												Width="318"
												Height="45.678"
												Canvas.Top="-1.095"
												Data="M109.24504,0.5 C114.03861,0.49999881 118.43511,2.2003291 121.86445,5.0306299 L122.51595,5.5949948 205.5,5.5949948 C212.12742,5.5949938 217.5,10.967577 217.5,17.594993 L217.5,22.594993 C217.5,29.222412 212.12742,34.594995 205.5,34.594995 L123.03446,34.594995 122.5843,35.024179 C119.06116,38.226331 114.38101,40.177999 109.24504,40.177999 104.10908,40.177999 99.428704,38.226331 95.905301,35.024179 L95.455114,34.594995 12.5,34.594995 C5.8725815,34.594995 0.5,29.222412 0.5,22.594993 L0.5,17.594993 C0.5,10.967577 5.8725815,5.5949938 12.5,5.5949948 L95.973664,5.5949948 96.6252,5.0306299 C100.05478,2.2003291 104.45148,0.49999881 109.24504,0.5 z"
												Opacity="1"
												Fill="{DynamicResource Glassage}">
                                            <Path.Stroke>
                                                <LinearGradientBrush EndPoint="0.5,1"
														StartPoint="0.5,0">
                                                    <GradientStop Color="#FF000000"
															Offset="1" />
                                                    <GradientStop Color="#FFC1C1C1"
															Offset="0" />
                                                </LinearGradientBrush>
                                            </Path.Stroke>
                                        </Path>
                                        <Canvas HorizontalAlignment="Center"
												Margin="0,0,0,0"
												VerticalAlignment="Center"
												Width="132"
												Height="40"
												Canvas.Left="43.833"
												Canvas.Top="-0.084">
                                            <Button Focusable="False" Style="{DynamicResource PreviousButton}"
													Content="Button"
													Canvas.Left="3" 
													Canvas.Top="8" Command="{Binding Playlist.PreviousCommand}" />
                                            <Button Focusable="False" Style="{DynamicResource FastBackButton}"
													Content="Button"
													Canvas.Left="50" 
													Canvas.Top="8" Command="{Binding Player.DecreaseRateCommand}"/>
                                            <Button Focusable="False" Content="Button" 
													Style="{DynamicResource FastForwardStyle}"
													Canvas.Left="133"  Command="{Binding Player.IncreaseRateCommand}"
													Canvas.Top="8"/>
                                            <Button Focusable="False" Content="Button" Command="{Binding Playlist.NextCommand}" 
													Style="{DynamicResource NextButtonStyle}"
													Canvas.Left="180"
													Canvas.Top="8" />
                                            <ToggleButton Focusable="False" Style="{DynamicResource MediaPlayPauseToggleStyle}"
													Width="36.626"
													Height="38.666"
													Content="ToggleButton"
													Canvas.Left="96.738"
													Canvas.Top="2"
													Command="{Binding Player.PlayCommand}"
													Attached:CheckExtender.IsChecked="{Binding Path=Player.IsPaused, Mode=OneWay}"/>
                                        </Canvas>
                                        <Button Focusable="False" Content="Button" Name="stopButton"
                                                Visibility="{Binding Player.Source, Converter={StaticResource NotNullToVisibility}}"
												Canvas.Top="11"
												Canvas.Left="15"
												Style="{DynamicResource StopMediaButton}"
												Width="20"
												Height="20"
												Command="{Binding Player.StopCommand}"/>
                                        <Button Focusable="False" Content="Button"
                                                Visibility="{Binding Player.Source, Converter={StaticResource NotNullToVisibility}, ConverterParameter=true}"
												Canvas.Top="11"
												Canvas.Left="15"
												Style="{DynamicResource OpenMediaButton}"
												Width="20"
												Height="20"
												Command="{Binding OpenCommand}"/>
                                        <Slider Canvas.Top="16.842" Focusable="False" 
												Canvas.Left="275.833"
												Width="34.167"
												Style="{DynamicResource AudioSliderStyle}"
												Minimum="0"
												LargeChange="0.1"
												SmallChange="0.02"
												Maximum="1"
												Value="{Binding Path=Player.Volume}" />
                                    </Canvas>
                                </Grid>
                            </Border>
                        </Viewbox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource BooleanAndConverter}">
                        <Binding Path="IsControlsVisible" RelativeSource="{RelativeSource AncestorType=Window}" />
                    </MultiBinding>
                </DataTrigger.Binding>
                <DataTrigger.EnterActions>
                    <BeginStoryboard HandoffBehavior="SnapshotAndReplace">
                        <StaticResource ResourceKey="FadeInSB"/>
                    </BeginStoryboard>
                    <BeginStoryboard HandoffBehavior="SnapshotAndReplace">
                        <StaticResource ResourceKey="FadeInVisibilitySB"/>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard HandoffBehavior="SnapshotAndReplace">
                        <StaticResource ResourceKey="FadeOutSB"/>
                    </BeginStoryboard>
                    <BeginStoryboard HandoffBehavior="SnapshotAndReplace">
                        <StaticResource ResourceKey="FadeOutVisibilitySB"/>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Viewbox" x:Key="ControlsViewbox">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <!--<Setter Property="Margin" Value="0,0,0,20"/>-->
        <Setter Property="Stretch" Value="Uniform"/>
    </Style>

    <Style TargetType="Grid" x:Key="ControlsContainer">
        <!--<Setter Property="Effect">
            <Setter.Value>
                    <DropShadowEffect ShadowDepth="4"
                                              BlurRadius="12"
                                              Direction="295" />
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style TargetType="Controls:OnlineSubs" x:Key="OnlineSubs">
        <Style.Resources>
            <ResourceDictionary>
                <DoubleAnimation x:Key="FadeIn" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:1"/>
                <DoubleAnimation x:Key="FadeOut" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:1"/>
                <ObjectAnimationUsingKeyFrames x:Key="FadeInVisibility" BeginTime="0:0:0"
						Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames x:Key="FadeOutVisibility" BeginTime="0:0:1"
						Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
            </ResourceDictionary>
        </Style.Resources>
        <Setter Property="Behaviors:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Behaviors:StylizedBehaviorCollection>
                    <LayoutBehaviors:MouseDragElementBehavior/>
                </Behaviors:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Panel.ZIndex" Value="2001"/>
        <Setter Property="Attached:PanelBringToFrontOnClick.IsEnabled" Value="True" />
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="Width" Value="500"/>
        <Setter Property="Height" Value="245"/>
        <Setter Property="Margin" Value="50"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Controls:OnlineSubs">
                    <Border Background="#bb444444" CornerRadius="7">
                        <Border Background="#bb000000" Style="{DynamicResource MenuOuterBorder}" Margin="1">
                            <Border Style="{DynamicResource MenuInnerBorder}">
                                <Grid>
                                    <Grid.Resources>
                                        <!-- hack to get the datacontext in mouse bindings since they are not part of the visual tree -->
                                        <FrameworkElement x:Key="ProxyElement" DataContext="{Binding}"/>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition MaxHeight="300" Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Padding="2" Height="25"  Text=" Subtitles" Foreground="White"  Background="{DynamicResource ShineBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="-5"/>
                                    <Button Grid.Column="0"
											Margin="0"
											HorizontalAlignment="Right"
											VerticalAlignment="Top"
											Padding="2"
											Command="{Binding Player.ShowOnlineSubtitlesCommand}" CommandParameter="hide"  Width="15" Height="15"
											Style="{StaticResource ImageButton}" ToolTip="Close"
											Behaviors:Buttons.Image="/Themes/default/Images/close.png"
											Behaviors:Buttons.NormalImage="/Themes/default/Images/close.png"
											Behaviors:Buttons.HoverImage="/Themes/default/Images/close_hover.png"/>
                                    <ContentControl Visibility="Collapsed" Content="{StaticResource ProxyElement}"/>
                                    <Image Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center"  RenderTransformOrigin="0.5,0.5"  Source="/Themes/default/Images/loading.png" Height="100" Width="100" RenderOptions.BitmapScalingMode="HighQuality"  Margin="30" Visibility="{Binding Player.IsSubtitleSearchInProgress, Converter={StaticResource ExtraBoolToVisibilityConverter}, ConverterParameter=false}">
                                        <Image.RenderTransform>
                                            <TransformGroup>
                                                <RotateTransform x:Name="rt" Angle="0"/>
                                            </TransformGroup>
                                        </Image.RenderTransform>
                                        <Image.Triggers>
                                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                                <EventTrigger.Actions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="rt" Storyboard.TargetProperty="Angle" To="360" Duration="0:0:5" RepeatBehavior="Forever" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger.Actions>
                                            </EventTrigger>
                                        </Image.Triggers>
                                    </Image>
                                    <ListBox Focusable="False" Grid.Row="2" ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderThickness="0" ItemsSource="{Binding Player.OnlineSubtitleChoices}" Margin="10" Background="Transparent"
											Attached:ItemsControlDoubleClickMouseInputBinding.Enabled="true"  Visibility="{Binding Player.IsSubtitleSearchInProgress, Converter={StaticResource ExtraBoolToVisibilityConverter}, ConverterParameter=true}" 
											SelectedValue="{Binding Player.SelectedOnlineSubtitle}">
                                        <ListBox.InputBindings>
                                            <MouseBinding MouseAction="LeftDoubleClick" Attached:InputBindingCommandSetter.Command="{Binding DataContext.Player.LoadSelectedOnlineSubtitleCommand, Source={StaticResource ProxyElement}}"/>
                                        </ListBox.InputBindings>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid TextBlock.Foreground="White" IsSharedSizeScope="True" Margin="1" Background="#00000000">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="20" SharedSizeGroup="groupName" />
                                                        <ColumnDefinition Width="30" SharedSizeGroup="groupName1" />
                                                        <ColumnDefinition Width="*" SharedSizeGroup="groupName2" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.ToolTip>
                                                        <ToolTip ToolTipService.ShowDuration="12000" Background="Transparent" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                                            <Border TextBlock.Foreground="White" CornerRadius="7" Background="#77000000">
                                                                <StackPanel Margin="5">
                                                                    <TextBlock Text="{Binding Service, StringFormat='Service: {0}'}"/>
                                                                    <TextBlock Text="{Binding MatchedBy, StringFormat='Matched by keywords: [{0}]'}"/>
                                                                    <TextBlock Text="{Binding Score, StringFormat='Match score: {0}'}"/>
                                                                    <TextBlock Text="{Binding Language, StringFormat='Language: {0}'}"/>
                                                                    <StackPanel Margin="5">
                                                                        <TextBlock Text="Fits to following releases:"/>
                                                                        <ItemsControl ItemsSource="{Binding Releases}">
                                                                        </ItemsControl>
                                                                    </StackPanel>
                                                                </StackPanel>
                                                            </Border>
                                                        </ToolTip>
                                                    </Grid.ToolTip>
                                                    <Image Height="11" Width="16" Margin="2" Source="{Binding Language, Converter={StaticResource LanguageToFlagConverter}}" VerticalAlignment="Center" />
                                                    <TextBlock Margin="2" Width="26" Grid.Column="1" HorizontalAlignment="Left" Foreground="White" Text="{Binding Score}" VerticalAlignment="Center"/>
                                                    <TextBlock Margin="2" Grid.Column="2" HorizontalAlignment="Left" Foreground="White" Text="{Binding MatchRelease}" VerticalAlignment="Center"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <Grid Grid.Row="3">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Margin="2" Foreground="White" Text="Keywords: " VerticalAlignment="Center"/>
                                        <TextBox Grid.Column="1" Margin="2" BorderBrush="#dd777777" BorderThickness="1" Background="Transparent" Foreground="White" Text="{Binding Player.SubtitleDefaultSearchText, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                                        <Button Grid.Column="2" Margin="2" TextBlock.Foreground="White" Style="{DynamicResource ShowImdbButton}" Command="{Binding Player.NeedSubtitlesCommand}" CommandParameter="online" HorizontalAlignment="Left" VerticalAlignment="Center">
                                            <TextBlock Margin="4" HorizontalAlignment="Center" Foreground="White" Text="Search" VerticalAlignment="Center"/>
                                        </Button>
                                        <Button Grid.Column="3" Margin="2" TextBlock.Foreground="White" Style="{DynamicResource ShowImdbButton}" Command="{Binding Player.LoadSelectedOnlineSubtitleCommand}" HorizontalAlignment="Right">
                                            <TextBlock Margin="4" HorizontalAlignment="Center" Foreground="White" Text="Download" VerticalAlignment="Center"/>
                                        </Button>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource BooleanAndConverter}">
                        <Binding Path="Player.ShowOnlineSubtitles"/>
                        <Binding Path="IsUiVisible" RelativeSource="{RelativeSource AncestorType=Window}" />
                    </MultiBinding>
                </DataTrigger.Binding>
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeIn"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeInVisibility"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeOut"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeOutVisibility"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Controls:Playlist" x:Key="Playlist">
        <Style.Resources>
            <ResourceDictionary>
                <DoubleAnimation x:Key="FadeIn" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:1"/>
                <DoubleAnimation x:Key="FadeOut" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:1"/>
                <ObjectAnimationUsingKeyFrames x:Key="FadeInVisibility" BeginTime="0:0:0"
						Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames x:Key="FadeOutVisibility" BeginTime="0:0:1"
						Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <Storyboard x:Key="FadeInSB">
                    <TimelineCollection>
                        <StaticResource ResourceKey="FadeIn"/>
                    </TimelineCollection>
                </Storyboard>
                <Storyboard x:Key="FadeOutSB">
                    <TimelineCollection>
                        <StaticResource ResourceKey="FadeOut"/>
                    </TimelineCollection>
                </Storyboard>
                <Storyboard x:Key="FadeInVisibilitySB">
                    <TimelineCollection>
                        <StaticResource ResourceKey="FadeInVisibility"/>
                    </TimelineCollection>
                </Storyboard>
                <Storyboard x:Key="FadeOutVisibilitySB">
                    <TimelineCollection>
                        <StaticResource ResourceKey="FadeOutVisibility"/>
                    </TimelineCollection>
                </Storyboard>
            </ResourceDictionary>
        </Style.Resources>
        <Setter Property="Panel.ZIndex" Value="2001"/>
        <Setter Property="Attached:PanelBringToFrontOnClick.IsEnabled" Value="True" />
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="Width" Value="500"/>
        <Setter Property="Height" Value="245"/>
        <!--<Setter Property="Margin" Value="50"/>-->
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Attached:ThreatAsInputControl.Treat" Value="True"/>
        <Setter Property="Behaviors:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Behaviors:StylizedBehaviorCollection>
                    <Behaviors:DraggableBehavior IsDraggable="True" />
                    <Behaviors:PopupInWindow IsAutomatic="True" />
                    <Behaviors:MouseDragElementBehavior/>
                </Behaviors:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Controls:Playlist">
                    <Border Background="#bb444444" CornerRadius="7">
                        <Border Background="#bb000000" Style="{DynamicResource MenuOuterBorder}" Margin="1">
                            <Border Style="{DynamicResource MenuInnerBorder}">
                                <Grid>
                                    <Grid.Resources>
                                        <!-- hack to get the datacontext in mouse bindings since they are not part of the visual tree -->
                                        <FrameworkElement x:Key="ProxyElement" DataContext="{Binding}"/>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition MaxHeight="300" Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Padding="2" Height="25"  Text=" Playlist" Foreground="White"  Background="{DynamicResource ShineBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="-5,-5,-5,5"/>
                                    <Button Grid.Column="0"
											Margin="0"
											HorizontalAlignment="Right"
											VerticalAlignment="Top"
											Padding="2"
											Command="{Binding ShowPlaylistCommand}" CommandParameter="hide"  Width="15" Height="15"
											Style="{StaticResource ImageButton}" ToolTip="Close"
											Behaviors:Buttons.Image="/Themes/default/Images/close.png"
											Behaviors:Buttons.NormalImage="/Themes/default/Images/close.png"
											Behaviors:Buttons.HoverImage="/Themes/default/Images/close_hover.png"/>
                                    <ToggleButton Style="{DynamicResource dockButton}"  Grid.Column="0" 
											Margin="0,0,25,0" Width="15" Height="15"
											HorizontalAlignment="Right"
											VerticalAlignment="Top" IsChecked="{Binding Path=(Behaviors:PopupInWindow.IsAutomatic), Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type Controls:Playlist}}}" />

                                    <ContentControl Visibility="Collapsed" Content="{StaticResource ProxyElement}"/>
                                    <ListBox Grid.Row="1" SelectionMode="Extended" ScrollViewer.HorizontalScrollBarVisibility="Disabled"  BorderThickness="0" BorderBrush="#00000000" Background="Transparent" ItemsSource="{Binding Playlist.Tracks}" SelectedItem="{Binding Playlist.SelectedTrack}"
											Attached:ItemsControlDoubleClickMouseInputBinding.Enabled="true">
                                        <ListBox.InputBindings>
                                            <MouseBinding MouseAction="LeftDoubleClick" Attached:InputBindingCommandSetter.Command="{Binding DataContext.Playlist.PlayCommand, Source={StaticResource ProxyElement}}"/>
                                        </ListBox.InputBindings>
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type vm:Track}">
                                                <Grid TextBlock.Foreground="White" IsSharedSizeScope="True" Margin="1" Background="#00000000">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="20" SharedSizeGroup="groupName" />
                                                        <ColumnDefinition Width="*" SharedSizeGroup="groupName2" />
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Margin="2" Width="18" Grid.Column="0" HorizontalAlignment="Left" Foreground="White" Text="{Binding Position}" VerticalAlignment="Center"/>
                                                    <TextBlock Margin="2" Name="title"  Grid.Column="1" HorizontalAlignment="Stretch" Foreground="White" Text="{Binding Title}" VerticalAlignment="Center"/>
                                                </Grid>
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding Path=IsPlaying}" Value="True">
                                                        <DataTrigger.Setters>
                                                            <Setter Property="FontWeight" Value="Bold" TargetName="title" />
                                                            <Setter Property="TextDecorations" Value="Underline" TargetName="title" />
                                                        </DataTrigger.Setters>
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <Grid Grid.Row="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Button Grid.Column="1" Margin="2" TextBlock.Foreground="White" Style="{DynamicResource ShowImdbButton}" Command="{Binding Playlist.MoveUpCommand}" HorizontalAlignment="Left" VerticalAlignment="Center">
                                            <TextBlock Margin="4" HorizontalAlignment="Center" Foreground="White" Text="Move up" VerticalAlignment="Center"/>
                                        </Button>
                                        <Button Grid.Column="2" Margin="2" TextBlock.Foreground="White" Style="{DynamicResource ShowImdbButton}" Command="{Binding Playlist.MoveDownCommand}" HorizontalAlignment="Left" VerticalAlignment="Center">
                                            <TextBlock Margin="4" HorizontalAlignment="Center" Foreground="White" Text="Move down" VerticalAlignment="Center"/>
                                        </Button>
                                        <Button Grid.Column="3" Margin="2" TextBlock.Foreground="White" Style="{DynamicResource ShowImdbButton}" Command="{Binding Playlist.RemoveFromPlaylistCommand}" HorizontalAlignment="Left" VerticalAlignment="Center">
                                            <TextBlock Margin="4" HorizontalAlignment="Center" Foreground="White" Text="Remove" VerticalAlignment="Center"/>
                                        </Button>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource BooleanAndConverter}">
                        <Binding Path="ShowPlaylist"/>
                        <Binding Path="IsUiVisible" RelativeSource="{RelativeSource AncestorType=Window}" />
                    </MultiBinding>
                </DataTrigger.Binding>
                <DataTrigger.EnterActions>
                    <BeginStoryboard HandoffBehavior="SnapshotAndReplace">
                        <StaticResource ResourceKey="FadeInSB"/>
                    </BeginStoryboard>
                    <BeginStoryboard HandoffBehavior="SnapshotAndReplace">
                        <StaticResource ResourceKey="FadeInVisibilitySB"/>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard HandoffBehavior="SnapshotAndReplace">
                        <StaticResource ResourceKey="FadeOutSB"/>
                    </BeginStoryboard>
                    <BeginStoryboard HandoffBehavior="SnapshotAndReplace">
                        <StaticResource ResourceKey="FadeOutVisibilitySB"/>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Controls:Equalizer" x:Key="Equalizer">
        <Style.Resources>
            <ResourceDictionary>
                <DoubleAnimation x:Key="FadeIn" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:1"/>
                <DoubleAnimation x:Key="FadeOut" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:1"/>
                <ObjectAnimationUsingKeyFrames x:Key="FadeInVisibility" BeginTime="0:0:0"
						Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames x:Key="FadeOutVisibility" BeginTime="0:0:1"
						Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
            </ResourceDictionary>
        </Style.Resources>
        <Setter Property="Behaviors:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Behaviors:StylizedBehaviorCollection>
                    <Behaviors:DraggableBehavior IsDraggable="True" />
                    <Behaviors:PopupInWindow IsAutomatic="True" />
                    <Behaviors:MouseDragElementBehavior/>
                </Behaviors:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Panel.ZIndex" Value="2002"/>
        <Setter Property="Attached:PanelBringToFrontOnClick.IsEnabled" Value="True" />
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="Height" Value="250"/>
        <!--<Setter Property="Margin" Value="50"/>-->
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Controls:Equalizer">
                    <Border Background="#bb444444" CornerRadius="7">
                        <Border Background="#bb000000" Style="{DynamicResource MenuOuterBorder}" Margin="1">
                            <Border Style="{DynamicResource MenuInnerBorder}">
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.Resources>
                                        <!-- hack to get the datacontext in mouse bindings since they are not part of the visual tree -->
                                        <FrameworkElement x:Key="ProxyElement" DataContext="{Binding}"/>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="0.1*"/>
                                        <ColumnDefinition Width="0.1*"/>
                                        <ColumnDefinition Width="0.1*"/>
                                        <ColumnDefinition Width="0.1*"/>
                                        <ColumnDefinition Width="0.1*"/>
                                        <ColumnDefinition Width="0.1*"/>
                                        <ColumnDefinition Width="0.1*"/>
                                        <ColumnDefinition Width="0.1*"/>
                                        <ColumnDefinition Width="0.1*"/>
                                        <ColumnDefinition Width="0.1*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Padding="2" Height="25" Grid.ColumnSpan="12" Text=" Equalizer &amp; Audio Effects" Foreground="White"  Background="{DynamicResource ShineBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="-5,-5,-5,5"/>
                                    <Button Grid.Column="0" Grid.ColumnSpan="12"
											Margin="0"
											HorizontalAlignment="Right"
											VerticalAlignment="Top"
											Padding="2"
											Command="{Binding ShowEqualizerCommand}" CommandParameter="hide"  Width="15" Height="15"
											Style="{StaticResource ImageButton}" ToolTip="Close"
											Behaviors:Buttons.Image="/Themes/default/Images/close.png"
											Behaviors:Buttons.NormalImage="/Themes/default/Images/close.png"
											Behaviors:Buttons.HoverImage="/Themes/default/Images/close_hover.png"/>
                                    <ToggleButton Style="{DynamicResource dockButton}" Grid.ColumnSpan="12" Grid.Column="0" 
											Margin="0,0,25,0" Width="15" Height="15"
											HorizontalAlignment="Right"
											VerticalAlignment="Top" IsChecked="{Binding Path=(Behaviors:PopupInWindow.IsAutomatic), Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type Controls:Equalizer}}}" />
                                    <Slider Grid.Row="1" Orientation="Vertical" Height="150" Minimum="-60" Maximum="60" Value="{Binding Equalizer[0]}" Grid.Column="1" />
                                    <Slider Grid.Row="1" Orientation="Vertical" Height="150" Minimum="-60" Maximum="60" Value="{Binding Equalizer[1]}" Grid.Column="2" />
                                    <Slider Grid.Row="1" Orientation="Vertical" Height="150" Minimum="-60" Maximum="60" Value="{Binding Equalizer[2]}" Grid.Column="3" />
                                    <Slider Grid.Row="1" Orientation="Vertical" Height="150" Minimum="-60" Maximum="60" Value="{Binding Equalizer[3]}" Grid.Column="4" />
                                    <Slider Grid.Row="1" Orientation="Vertical" Height="150" Minimum="-60" Maximum="60" Value="{Binding Equalizer[4]}" Grid.Column="5" />
                                    <Slider Grid.Row="1" Orientation="Vertical" Height="150" Minimum="-60" Maximum="60" Value="{Binding Equalizer[5]}" Grid.Column="6" />
                                    <Slider Grid.Row="1" Orientation="Vertical" Height="150" Minimum="-60" Maximum="60" Value="{Binding Equalizer[6]}" Grid.Column="7" />
                                    <Slider Grid.Row="1" Orientation="Vertical" Height="150" Minimum="-60" Maximum="60" Value="{Binding Equalizer[7]}" Grid.Column="8" />
                                    <Slider Grid.Row="1" Orientation="Vertical" Height="150" Minimum="-60" Maximum="60" Value="{Binding Equalizer[8]}" Grid.Column="9" />
                                    <Slider Grid.Row="1" Orientation="Vertical" Height="150" Minimum="-60" Maximum="60" Value="{Binding Equalizer[9]}" Grid.Column="10" />
                                    <Grid Grid.Column="1" Grid.ColumnSpan="9" Grid.Row="2">
                                        <CheckBox IsEnabled="False">
                                            <TextBlock TextWrapping="Wrap">Downmix or Upmix audio to speaker configuration</TextBlock>
                                        </CheckBox>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource BooleanAndConverter}">
                        <Binding Path="ShowEqualizer"/>
                        <Binding Path="IsUiVisible" RelativeSource="{RelativeSource AncestorType=Window}" />
                    </MultiBinding>
                </DataTrigger.Binding>
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeIn"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeInVisibility"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeOut"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeOutVisibility"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Controls:OSD" x:Key="OSD">
        <Style.Resources>
            <ResourceDictionary>
                <DoubleAnimation x:Key="FadeIn" Storyboard.TargetProperty="Opacity" To="0.7" Duration="0:0:0.3"/>
                <DoubleAnimation x:Key="FadeOut" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5"/>
                <ObjectAnimationUsingKeyFrames x:Key="FadeInVisibility" BeginTime="0:0:0"
						Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames x:Key="FadeOutVisibility" BeginTime="0:0:1"
						Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
            </ResourceDictionary>
        </Style.Resources>
        <Setter Property="Panel.ZIndex" Value="2002"/>
        <Setter Property="Attached:PanelBringToFrontOnClick.IsEnabled" Value="True" />
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="Margin" Value="20,40,20,20"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Controls:OSD">
                    <Border Background="#bb444444" CornerRadius="7">
                        <Border Background="#bb000000" Style="{DynamicResource MenuOuterBorder}" Margin="1">
                            <Border Style="{DynamicResource MenuInnerBorder}">
                                <TextBlock FontSize="18" Style="{DynamicResource HighlightFontStyle}" Text="{Binding OSDMessage, Converter={StaticResource LastStringIfNull}}"/>
                            </Border>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding OSDMessage, Converter={StaticResource NotNullToVisibility}}" Value="Visible">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeIn"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeInVisibility"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeOut"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeOutVisibility"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Controls:IMDbOverlay" x:Key="IMDbOverlay">
        <Style.Resources>
            <ResourceDictionary>
                <DoubleAnimation x:Key="FadeIn" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:1"/>
                <DoubleAnimation x:Key="FadeOut" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:1"/>
                <ObjectAnimationUsingKeyFrames x:Key="FadeInVisibility" BeginTime="0:0:0"
						Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames x:Key="FadeOutVisibility" BeginTime="0:0:1"
						Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
            </ResourceDictionary>
        </Style.Resources>
        <!--<Setter Property="Behaviors:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Behaviors:StylizedBehaviorCollection>
                    <LayoutBehaviors:MouseDragElementBehavior/>
                </Behaviors:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>-->
        <Setter Property="Panel.ZIndex" Value="1300"/>
        <!--<Setter Property="Attached:PanelBringToFrontOnClick.IsEnabled" Value="True" />-->
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Controls:IMDbOverlay">
                    <!--<Border Background="#bb444444" CornerRadius="7" Visibility="{Binding Player.IMDb, Converter={StaticResource NotNullToVisibility}}">
                  <Border Background="#bb000000" Style="{DynamicResource MenuOuterBorder}" Margin="1">-->
                    <ContentControl Style="{DynamicResource ImdbBorder}">
                        <Grid HorizontalAlignment="Stretch" Margin="0,20,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <!--<Button Grid.Column="2" Grid.Row="1" 
                            Margin="15"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Padding="2"
                            Command="{Binding Player.ShowImdbCommand}" CommandParameter="hide"  Width="15" Height="15"
                            Style="{StaticResource ImageButton}"
                            Behaviors:Buttons.Image="/Themes/default/Images/close.png"
                            Behaviors:Buttons.NormalImage="/Themes/default/Images/close.png"
                            Behaviors:Buttons.HoverImage="/Themes/default/Images/close_hover.png"/>-->
                            <Border Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.0,1" StartPoint="0,0">
                                        <GradientStop Color="#ee000000" Offset="0" />
                                        <GradientStop Color="#aa000000" Offset="0.6" />
                                        <GradientStop Color="#77000000" Offset="0.8" />
                                        <GradientStop Color="#00000000" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border Grid.Column="0" Grid.Row="1" Margin="10,20,0,10" HorizontalAlignment="Center" VerticalAlignment="Top">
                                <StackPanel Orientation="Horizontal" Margin="0">
                                    <StackPanel>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Image Margin="10" Source="{Binding Player.IMDb.Poster}" HorizontalAlignment="Center" VerticalAlignment="Top" MaxHeight="120"/>
                                            <StackPanel Grid.Column="1" Margin="10" MaxWidth="400" HorizontalAlignment="Center"  VerticalAlignment="Top">
                                                <!--<StackPanel Margin="0,5,0,0" Orientation="Horizontal" HorizontalAlignment="Center">-->
                                                <TextBlock TextWrapping="Wrap" TextAlignment="Center">
													<Hyperlink Focusable="False" NavigateUri="{Binding Player.IMDb.ImdbURL}" Cursor="Hand">
														<Interactivity:Interaction.Triggers>
															<Interactivity:EventTrigger EventName="RequestNavigate" >
																<Behaviors:HyperlinkOpenAction/>
															</Interactivity:EventTrigger>
														</Interactivity:Interaction.Triggers>
														<TextBlock Style="{DynamicResource DefaultFontStyle}" Foreground="#59C2FF" FontSize="18" Text="{Binding Player.IMDb.DisplayTitle}"/>
														<TextBlock Style="{DynamicResource DefaultFontStyle}" Foreground="#59C2FF" FontSize="14" Text="{Binding Player.IMDb.Year, StringFormat=' ({0})'}"/>
													</Hyperlink>
												</TextBlock>
                                                <!--</StackPanel>-->
                                                <TextBlock HorizontalAlignment="Center" Style="{DynamicResource DefaultFontStyle}" FontSize="14" Visibility="{Binding Player.IMDb.DisplaySubTitle, Converter={StaticResource StringNotEmptyToVisibilityConverter}}" TextAlignment="Center" Text="{Binding Player.IMDb.DisplaySubTitle}"/>
                                                <TextBlock HorizontalAlignment="Center" Style="{DynamicResource DefaultFontStyle}" Foreground="White" FontSize="14" Text="{Binding Player.IMDb.GenresString}"/>
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                    <TextBlock Style="{DynamicResource DefaultFontStyle}" FontSize="14" FontWeight="Bold" Margin="0,0,5,0" >Rating:</TextBlock>
                                                    <TextBlock Style="{DynamicResource DefaultFontStyle}" FontSize="14" Foreground="White" Text="{Binding Player.IMDb.Rating}"/>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                    <TextBlock Style="{DynamicResource DefaultFontStyle}" FontSize="14" FontWeight="Bold" Margin="0,0,5,0" >Duration:</TextBlock>
                                                    <TextBlock Style="{DynamicResource DefaultFontStyle}" FontSize="14" Foreground="White" Text="{Binding Player.Duration}"/>
                                                </StackPanel>
                                            </StackPanel>
                                        </Grid>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                            <Grid Grid.Column="1" Margin="10,30,10,10" Grid.Row="0" Grid.RowSpan="3" VerticalAlignment="Top">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <StackPanel Grid.Row="0">
                                    <Grid HorizontalAlignment="Stretch" Margin="3">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Style="{DynamicResource DefaultFontStyle}" FontSize="12" FontWeight="Bold" Margin="0,0,5,0" >Directors:</TextBlock>
                                        <TextBlock TextWrapping="Wrap" Grid.Column="1" Style="{DynamicResource DefaultFontStyle}" FontSize="14" Foreground="White" Text="{Binding Player.IMDb.DirectorsString}"/>
                                    </Grid>
                                    <Grid HorizontalAlignment="Stretch" Margin="3">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Style="{DynamicResource DefaultFontStyle}" FontSize="12" FontWeight="Bold" Margin="0,0,5,0" >Cast:</TextBlock>
                                        <TextBlock TextWrapping="Wrap" Grid.Column="1" Style="{DynamicResource DefaultFontStyle}" FontSize="14" Foreground="White" Text="{Binding Player.IMDb.CastString}"/>
                                    </Grid>
                                    <Grid HorizontalAlignment="Stretch" Margin="3">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock  Style="{DynamicResource DefaultFontStyle}" FontSize="12" FontWeight="Bold" Margin="0,0,5,0" >Plot:</TextBlock>
                                        <TextBlock TextWrapping="Wrap" Grid.Column="1" Style="{DynamicResource DefaultFontStyle}" FontSize="14" Foreground="White" Text="{Binding Player.IMDb.Plot}"/>
                                    </Grid>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </ContentControl>
                    <!--</Border>
                  </Border>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource BooleanAndConverter}">
                        <Binding Path="Player.ShowIMdb"/>
                        <Binding Path="IsUiVisible" RelativeSource="{RelativeSource AncestorType=Window}" />
                    </MultiBinding>
                </DataTrigger.Binding>
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeIn"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeInVisibility"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeOut"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeOutVisibility"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Controls:Options" x:Key="Options">
        <Style.Resources>
            <ResourceDictionary>
                <DoubleAnimation x:Key="FadeIn" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:1"/>
                <DoubleAnimation x:Key="FadeOut" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:1"/>
                <ObjectAnimationUsingKeyFrames x:Key="FadeInVisibility" BeginTime="0:0:0"
						Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames x:Key="FadeOutVisibility" BeginTime="0:0:1"
						Storyboard.TargetProperty="Visibility">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
            </ResourceDictionary>
        </Style.Resources>
        <Setter Property="Behaviors:StylizedBehaviors.Behaviors">
            <Setter.Value>
                <Behaviors:StylizedBehaviorCollection>
                    <Behaviors:DraggableBehavior IsDraggable="True" />
                    <Behaviors:PopupInWindow IsAutomatic="True" />
                    <Behaviors:MouseDragElementBehavior/>
                </Behaviors:StylizedBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Panel.ZIndex" Value="3000"/>
        <Setter Property="Attached:PanelBringToFrontOnClick.IsEnabled" Value="True" />
        <Setter Property="ClipToBounds" Value="False"/>
        <!--<Setter Property="Margin" Value="10,20,10,80"/>-->
        <Setter Property="MinWidth" Value="550"/>
        <!--<Setter Property="MaxWidth" Value="550"/>-->
        <Setter Property="MinHeight" Value="350"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Controls:Options">
                    <Border x:Name="settings">
                        <Border Background="#bb444444" CornerRadius="7">
                            <Border Background="#bb000000" Style="{DynamicResource MenuOuterBorder}" Margin="1">
                                <Border Style="{DynamicResource MenuInnerBorder}">
                                    <Grid Margin="0,0,0,0">
                                        <TextBlock Padding="2" Height="25"  Text=" Options" Foreground="White"  Background="{DynamicResource ShineBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="-5,-5,-5,5"/>
                                        <Button Grid.Column="0"
												Margin="0"
												HorizontalAlignment="Right"
												VerticalAlignment="Top"
												Padding="2" ToolTip="Close"
												Command="{Binding OptionsCommand}" Width="15" Height="15"
												Style="{StaticResource ImageButton}"
												Behaviors:Buttons.Image="/Themes/default/Images/close.png"
												Behaviors:Buttons.NormalImage="/Themes/default/Images/close.png"
												Behaviors:Buttons.HoverImage="/Themes/default/Images/close_hover.png">
                                        </Button>
                                        <ToggleButton Style="{DynamicResource dockButton}"  Grid.Column="0" 
												Margin="0,0,25,0" Width="15" Height="15"
												HorizontalAlignment="Right"
												VerticalAlignment="Top" IsChecked="{Binding Path=(Behaviors:PopupInWindow.IsAutomatic), Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type Controls:Options}}}" />
                                        <WPFSpark:PivotPanel ClipToBounds="True"  Margin="1,25,1,5" HeaderHeight="27" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.IsSharedSizeScope="True">
                                            <WPFSpark:PivotItem>
                                                <WPFSpark:PivotItem.PivotHeader>
                                                    <WPFSpark:PivotHeaderControl Focusable="False" ActiveForeground="White" InactiveForeground="DarkGray">
                                                        <Label Style="{DynamicResource LinkText}" Margin="4">Video settings</Label>
                                                    </WPFSpark:PivotHeaderControl>
                                                </WPFSpark:PivotItem.PivotHeader>
                                                <WPFSpark:PivotItem.PivotContent>
                                                    <WPFSpark:PivotContentControl Focusable="False" AnimateContent="True">
                                                        <Border CornerRadius="2" Padding="5,5,0,5" BorderBrush="{DynamicResource HoverShineBrush}" BorderThickness="2">
                                                            <ScrollViewer Padding="0,0,5,0" VerticalAlignment="Stretch" Focusable="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                                                <StackPanel>
                                                                    <StackPanel.Resources>
                                                                        <!-- hack to get the datacontext in mouse bindings since they are not part of the visual tree -->
                                                                        <FrameworkElement x:Key="ProxyElement" DataContext="{Binding}"/>
                                                                    </StackPanel.Resources>
                                                                    <GroupBox Header="Video effects" Style="{DynamicResource Heading}" Tag="True">
                                                                        <StackPanel Orientation="Vertical">
                                                                            <CheckBox IsChecked="{Binding Player.IsDeeperColor}" Margin="5">
                                                                                <TextBlock Margin="0,3,0,0" VerticalAlignment="Center" FontFamily="Segoe UI Mono" FontWeight="Bold" FontSize="10" Foreground="DarkGray">OUTPUT COLOR RANGE 16-236 (DEEPER COLOR)</TextBlock>
                                                                            </CheckBox>
                                                                        </StackPanel>
                                                                    </GroupBox>
                                                                </StackPanel>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </WPFSpark:PivotContentControl>
                                                </WPFSpark:PivotItem.PivotContent>
                                            </WPFSpark:PivotItem>
                                            <WPFSpark:PivotItem>
                                                <WPFSpark:PivotItem.PivotHeader>
                                                    <WPFSpark:PivotHeaderControl Focusable="False" ActiveForeground="White" InactiveForeground="DarkGray">
                                                        <Label Style="{DynamicResource LinkText}" Margin="4">Audio settings</Label>
                                                    </WPFSpark:PivotHeaderControl>
                                                </WPFSpark:PivotItem.PivotHeader>
                                                <WPFSpark:PivotItem.PivotContent>
                                                    <WPFSpark:PivotContentControl Focusable="False" AnimateContent="True">
                                                        <Border CornerRadius="2" Padding="5,5,0,5" BorderBrush="{DynamicResource HoverShineBrush}" BorderThickness="2">
                                                            <ScrollViewer Padding="0,0,5,0" VerticalAlignment="Stretch" Focusable="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                                                <StackPanel>
                                                                    <StackPanel.Resources>
                                                                        <!-- hack to get the datacontext in mouse bindings since they are not part of the visual tree -->
                                                                        <FrameworkElement x:Key="ProxyElement" DataContext="{Binding}"/>
                                                                    </StackPanel.Resources>
                                                                    <GroupBox Header="Output device" Style="{DynamicResource Heading}" Tag="True">
                                                                        <StackPanel Orientation="Vertical">
                                                                            <ItemsControl Name="audiodevices" Focusable="False" ItemsSource="{Binding AudioRenderers}">
                                                                                <ItemsControl.ItemTemplate>
                                                                                    <DataTemplate>
                                                                                        <RadioButton GroupName="audiodevices" Padding="3"  Margin="3" Foreground="White" Background="Black" BorderBrush="Transparent" BorderThickness="0" Content="{Binding .}" Command="{Binding Path=DataContext.SetAudioRendererCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding .}"/>
                                                                                    </DataTemplate>
                                                                                </ItemsControl.ItemTemplate>
                                                                            </ItemsControl>
                                                                        </StackPanel>
                                                                    </GroupBox>
                                                                </StackPanel>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </WPFSpark:PivotContentControl>
                                                </WPFSpark:PivotItem.PivotContent>
                                            </WPFSpark:PivotItem>
                                            <WPFSpark:PivotItem>
                                                <WPFSpark:PivotItem.PivotHeader>
                                                    <WPFSpark:PivotHeaderControl Focusable="False" ActiveForeground="White" InactiveForeground="DarkGray">
                                                        <Label Style="{DynamicResource LinkText}" Margin="4">Subtitles</Label>
                                                    </WPFSpark:PivotHeaderControl>
                                                </WPFSpark:PivotItem.PivotHeader>
                                                <WPFSpark:PivotItem.PivotContent>
                                                    <WPFSpark:PivotContentControl Focusable="False" AnimateContent="True">
                                                        <Border CornerRadius="2" Padding="5,5,0,5" BorderBrush="{DynamicResource HoverShineBrush}" BorderThickness="2">
                                                            <ScrollViewer Padding="0,0,5,0" Focusable="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                                                <StackPanel>
                                                                    <StackPanel.Resources>
                                                                        <!-- hack to get the datacontext in mouse bindings since they are not part of the visual tree -->
                                                                        <FrameworkElement x:Key="ProxyElement" DataContext="{Binding}"/>
                                                                    </StackPanel.Resources>
                                                                    <ContentControl Visibility="Collapsed" Content="{StaticResource ProxyElement}"/>
                                                                    <StackPanel Orientation="Vertical">
                                                                        <GroupBox Header="Downloader" Style="{DynamicResource Heading}" Tag="True">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Grid>
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="Auto" SharedSizeGroup="SubtitlesColumn1" />
                                                                                        <ColumnDefinition Width="5"/>
                                                                                        <ColumnDefinition Name="lC"  Width="*" />
                                                                                    </Grid.ColumnDefinitions>
                                                                                    <Grid.RowDefinitions>
                                                                                        <RowDefinition MinHeight="28" />
                                                                                        <RowDefinition MinHeight="28" />
                                                                                        <RowDefinition MinHeight="28" />
                                                                                        <RowDefinition MinHeight="28" />
                                                                                    </Grid.RowDefinitions>
                                                                                    <TextBlock VerticalAlignment="Center" Foreground="DarkGray">Automatically Download Missing:</TextBlock>
                                                                                    <CheckBox Margin="0" VerticalAlignment="Center" Grid.Column="2" Name="chkSubDwn"  IsChecked="{Binding AutoLoadSubtitles}"></CheckBox>
                                                                                    <TextBlock VerticalAlignment="Center" Grid.Row="1" Foreground="DarkGray">Prefer Matching by File Hash:</TextBlock>
                                                                                    <CheckBox Margin="0" VerticalAlignment="Center" Grid.Row="1" Grid.Column="2" IsEnabled="{Binding Path=IsChecked, ElementName=chkSubDwn}"  IsChecked="{Binding PreferenceToHashMatchedSubtitle}"></CheckBox>
                                                                                    <TextBlock VerticalAlignment="Center" Grid.Row="2" Grid.Column="0" Margin="0,0,5,0" Foreground="DarkGray">Language Importance Order:</TextBlock>
                                                                                    <Controls:EvernoteTagControl Margin="0,1,0,1" Background="Black" BorderBrush="{DynamicResource ShineBrush}" BorderThickness="1"  VerticalAlignment="Stretch" Grid.Row="2" Grid.Column="2" SelectedTags="{Binding SubtitleLanguages}" AllTags="{Binding AllLanguages}"
                                                                                                             ConverterType="MediaPoint.Converters.LanguageToFlagConverter">
                                                                                    </Controls:EvernoteTagControl>
                                                                                    <TextBlock VerticalAlignment="Center" Grid.Row="3" Grid.Column="0" Margin="0,0,5,0" Foreground="DarkGray">Service Importance Order:</TextBlock>
                                                                                    <Controls:EvernoteTagControl Margin="0,1,0,1" Background="Black" BorderBrush="{DynamicResource ShineBrush}" BorderThickness="1" VerticalAlignment="Stretch" Grid.Row="3" Grid.Column="2" SelectedTags="{Binding SubtitleServices}" AllTags="{Binding AllSubtitleServices}" />
                                                                                </Grid>
                                                                            </StackPanel>
                                                                        </GroupBox>
                                                                        <GroupBox Header="Font" Style="{DynamicResource Heading}">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Grid>
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="Auto" SharedSizeGroup="SubtitlesColumn1" />
                                                                                        <ColumnDefinition Width="5"/>
                                                                                        <ColumnDefinition Name="lC2"  Width="*" />
                                                                                    </Grid.ColumnDefinitions>
                                                                                    <Grid.RowDefinitions>
                                                                                        <RowDefinition MinHeight="28" />
                                                                                        <RowDefinition MinHeight="28" />
                                                                                        <RowDefinition MinHeight="28" />
                                                                                        <RowDefinition MinHeight="28" />
                                                                                        <RowDefinition MinHeight="28" />
                                                                                    </Grid.RowDefinitions>
                                                                                    <TextBlock VerticalAlignment="Center" Grid.Row="0" Grid.Column="0" Margin="0,0,5,0" Foreground="DarkGray">Subtitle Font:</TextBlock>
                                                                                    <ComboBox VerticalAlignment="Center" Grid.Row="0" Grid.Column="2" x:Name="fontCombo" HorizontalAlignment="Stretch" Margin="0" SelectedValue="{Binding SubtitleFont}" Background="Black" Behaviors:ComboBoxBehaviors.ItemsSource="{Binding AllFonts}">
                                                                                        <ComboBox.ItemsPanel>
                                                                                            <ItemsPanelTemplate>
                                                                                                <VirtualizingStackPanel Width="175" />
                                                                                            </ItemsPanelTemplate>
                                                                                        </ComboBox.ItemsPanel>
                                                                                        <ComboBox.ItemTemplate>
                                                                                            <DataTemplate>
                                                                                                <Grid Background="#00000000" HorizontalAlignment="Stretch" Height="16">
                                                                                                    <ContentPresenter VerticalAlignment="Center">
                                                                                                        <ContentPresenter.Content>
                                                                                                            <PriorityBinding>
                                                                                                                <Binding Path="BuildStyledFontName" />
                                                                                                                <!--<Binding Path="BuildTextBlock" />-->
                                                                                                            </PriorityBinding>
                                                                                                        </ContentPresenter.Content>
                                                                                                    </ContentPresenter>
                                                                                                </Grid>
                                                                                            </DataTemplate>
                                                                                        </ComboBox.ItemTemplate>
                                                                                    </ComboBox>
                                                                                    <TextBlock VerticalAlignment="Center" Grid.Row="1" Grid.Column="0" Margin="0,0,5,0" Foreground="DarkGray">Subtitle Encoding:</TextBlock>
                                                                                    <ComboBox Background="Black" VerticalAlignment="Center" Grid.Row="1" Grid.Column="2" x:Name="encodingCombo" Text="Western" HorizontalAlignment="Stretch" Margin="0" Behaviors:ComboBoxBehaviors.ItemsSource="{Binding FontScripts}" SelectedValue="{Binding FontScript, Mode=TwoWay}">
                                                                                        <ComboBox.ItemsPanel>
                                                                                            <ItemsPanelTemplate>
                                                                                                <VirtualizingStackPanel Width="175" />
                                                                                            </ItemsPanelTemplate>
                                                                                        </ComboBox.ItemsPanel>
                                                                                        <ComboBox.ItemTemplate>
                                                                                            <DataTemplate>
                                                                                                <Grid Background="#00000000" HorizontalAlignment="Stretch" Height="16">
                                                                                                    <ContentPresenter VerticalAlignment="Center">
                                                                                                        <ContentPresenter.Content>
                                                                                                            <PriorityBinding>
                                                                                                                <Binding Path="."/>
                                                                                                                <!--<Binding Path="BuildTextBlock" />-->
                                                                                                            </PriorityBinding>
                                                                                                        </ContentPresenter.Content>
                                                                                                    </ContentPresenter>
                                                                                                </Grid>
                                                                                            </DataTemplate>
                                                                                        </ComboBox.ItemTemplate>
                                                                                    </ComboBox>
                                                                                    <TextBlock  VerticalAlignment="Center" Grid.Row="2" Grid.Column="0" Margin="0,0,5,0" Foreground="DarkGray">Subtitle Size:</TextBlock>
                                                                                    <TextBox  VerticalAlignment="Center" Grid.Row="2" Grid.Column="2" Text="{Binding SubtitleSize}" Margin="0" BorderBrush="{DynamicResource HoverShineBrush}" BorderThickness="1" Background="Black" Foreground="White"/>
                                                                                    <TextBlock VerticalAlignment="Center" Grid.Row="3" Grid.Column="0" Foreground="DarkGray">Bold Text:</TextBlock>
                                                                                    <CheckBox VerticalAlignment="Center" Grid.Row="3" Grid.Column="2" Name="chkSubBold" Margin="0" IsChecked="{Binding SubtitleBold}"></CheckBox>
                                                                                    <TextBlock  VerticalAlignment="Center" Grid.Row="4" Grid.Column="0" Margin="0,0,5,0" Foreground="DarkGray">Subtitle Color:</TextBlock>
                                                                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Grid.Row="4" Grid.Column="2" >
                                                                                        <Button ClickMode="Release" Width="15" Height="15">
                                                                                            <Button.Style>
                                                                                                <Style TargetType="Button">
                                                                                                    <Setter Property="Cursor" Value="Hand"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate>
                                                                                                                <Border Padding="1" BorderThickness="1" BorderBrush="{DynamicResource HoverShineBrush}">
                                                                                                                    <Rectangle Fill="{TemplateBinding Background}" />
                                                                                                                </Border>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Button.Style>
                                                                                            <Button.Background>
                                                                                                <SolidColorBrush Color="{Binding DataContext.SubtitleColor, Source={StaticResource ProxyElement}}">
                                                                                                </SolidColorBrush>
                                                                                            </Button.Background>
                                                                                            <Interactivity:Interaction.Triggers>
                                                                                                <Interactivity:EventTrigger EventName="Click" >
                                                                                                    <Behaviors:SetterAction Popup="{Binding ElementName=colorPopup}" Property="Popup.IsOpen" Value="True"/>
                                                                                                </Interactivity:EventTrigger>
                                                                                            </Interactivity:Interaction.Triggers>
                                                                                        </Button>
                                                                                        <Popup x:Name="colorPopup" StaysOpen="False" Placement="Mouse" AllowsTransparency="True">
                                                                                            <ContentControl Style="{DynamicResource Popup}" Focusable="True">
                                                                                                <xceed:ColorCanvas Focusable="True" Background="Transparent"  SelectedColor="{Binding SubtitleColor}" TextBlock.Foreground="White" Foreground="White" BorderThickness="0">
                                                                                                    <Interactivity:Interaction.Triggers>
                                                                                                        <Interactivity:EventTrigger EventName="MouseLeftButtonDown" >
                                                                                                            <Behaviors:SetterAction Popup="{Binding ElementName=colorPopup}" Property="Popup.IsOpen" Value="False"/>
                                                                                                        </Interactivity:EventTrigger>
                                                                                                    </Interactivity:Interaction.Triggers>
                                                                                                </xceed:ColorCanvas>
                                                                                            </ContentControl>
                                                                                        </Popup>
                                                                                        <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Foreground="DarkGray" Text="{Binding SubtitleColor}"/>
                                                                                    </StackPanel>
                                                                                </Grid>
                                                                            </StackPanel>
                                                                        </GroupBox>
                                                                        <GroupBox Header="Synchronization" Style="{DynamicResource Heading}">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Grid>
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="Auto" SharedSizeGroup="SubtitlesColumn1" />
                                                                                        <ColumnDefinition Width="5"/>
                                                                                        <ColumnDefinition Name="lC3"  Width="*" />
                                                                                    </Grid.ColumnDefinitions>
                                                                                    <Grid.RowDefinitions>
                                                                                        <RowDefinition MinHeight="28" />
                                                                                    </Grid.RowDefinitions>
                                                                                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center" Foreground="DarkGray">Subtitle Delay (+/-):</TextBlock>
                                                                                    <TextBox Text="{Binding SubtitleDelay}" Grid.Column="2"  VerticalAlignment="Center" Margin="0" BorderBrush="{DynamicResource HoverShineBrush}" BorderThickness="1" Background="Black" Foreground="White"/>
                                                                                </Grid>
                                                                            </StackPanel>
                                                                        </GroupBox>
                                                                    </StackPanel>
                                                                </StackPanel>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </WPFSpark:PivotContentControl>
                                                </WPFSpark:PivotItem.PivotContent>
                                            </WPFSpark:PivotItem>
                                            <WPFSpark:PivotItem>
                                                <WPFSpark:PivotItem.PivotHeader>
                                                    <WPFSpark:PivotHeaderControl Focusable="False" ActiveForeground="White" InactiveForeground="DarkGray">
                                                        <Label Style="{DynamicResource LinkText}" Margin="4">Theme</Label>
                                                    </WPFSpark:PivotHeaderControl>
                                                </WPFSpark:PivotItem.PivotHeader>
                                                <WPFSpark:PivotItem.PivotContent>
                                                    <WPFSpark:PivotContentControl Focusable="False" AnimateContent="True">
                                                        <Border CornerRadius="2" Padding="5,5,0,5" BorderBrush="{DynamicResource HoverShineBrush}" BorderThickness="2">
                                                            <ScrollViewer Padding="0,0,5,0" VerticalAlignment="Stretch" Focusable="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                                                <StackPanel>
                                                                    <StackPanel.Resources>
                                                                        <!-- hack to get the datacontext in mouse bindings since they are not part of the visual tree -->
                                                                        <FrameworkElement x:Key="ProxyElement" DataContext="{Binding}"/>
                                                                    </StackPanel.Resources>
                                                                    <GroupBox Header="Skin" Style="{DynamicResource Heading}" Tag="True">
                                                                        <StackPanel Orientation="Vertical">
                                                                            <ComboBox x:Name="themeCombo" Background="Black" VerticalAlignment="Stretch" SelectedValue="{Binding CurrentTheme}" Behaviors:ComboBoxBehaviors.ItemsSource="{Binding Themes}">
                                                                                <ComboBox.ItemTemplate>
                                                                                    <DataTemplate>
                                                                                        <TextBlock Text="{Binding Name}" FontSize="15" Height="20"/>
                                                                                    </DataTemplate>
                                                                                </ComboBox.ItemTemplate>
                                                                            </ComboBox>
                                                                        </StackPanel>
                                                                    </GroupBox>
                                                                </StackPanel>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </WPFSpark:PivotContentControl>
                                                </WPFSpark:PivotItem.PivotContent>
                                            </WPFSpark:PivotItem>
                                            <WPFSpark:PivotItem>
                                                <WPFSpark:PivotItem.PivotHeader>
                                                    <WPFSpark:PivotHeaderControl Focusable="False" ActiveForeground="White" InactiveForeground="DarkGray">
                                                        <Label Style="{DynamicResource LinkText}" Margin="4">Current media info</Label>
                                                    </WPFSpark:PivotHeaderControl>
                                                </WPFSpark:PivotItem.PivotHeader>
                                                <WPFSpark:PivotItem.PivotContent>
                                                    <WPFSpark:PivotContentControl Focusable="False" AnimateContent="True">
                                                        <Border CornerRadius="2" Padding="5,5,0,5"  BorderBrush="{DynamicResource HoverShineBrush}" BorderThickness="2">
                                                            <ScrollViewer Padding="0,0,5,0"  Focusable="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                                                <TextBlock FontFamily="Consolas" FontWeight="Bold" FontSize="10" Foreground="DarkGray" Text="{Binding Player.MediaInfo}" TextWrapping="Wrap"/>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </WPFSpark:PivotContentControl>
                                                </WPFSpark:PivotItem.PivotContent>
                                            </WPFSpark:PivotItem>
                                            <WPFSpark:PivotItem>
                                                <WPFSpark:PivotItem.PivotHeader>
                                                    <WPFSpark:PivotHeaderControl Focusable="False" ActiveForeground="White" InactiveForeground="DarkGray">
                                                        <Label Style="{DynamicResource LinkText}" Margin="4">Keys</Label>
                                                    </WPFSpark:PivotHeaderControl>
                                                </WPFSpark:PivotItem.PivotHeader>
                                                <WPFSpark:PivotItem.PivotContent>
                                                    <WPFSpark:PivotContentControl Focusable="False" AnimateContent="True">
                                                        <Border CornerRadius="2" Padding="5,5,0,5"  BorderBrush="{DynamicResource HoverShineBrush}" BorderThickness="2">
                                                            <ScrollViewer Padding="0,0,5,0" Focusable="False" VerticalScrollBarVisibility="Auto"  HorizontalAlignment="Stretch" HorizontalScrollBarVisibility="Disabled">
                                                                <ItemsControl ItemsSource="{Binding PlayerActions}" HorizontalAlignment="Stretch" Grid.IsSharedSizeScope="True">
                                                                    <ItemsControl.ItemTemplate>
                                                                        <DataTemplate>
                                                                            <Grid>
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Keys1" />
                                                                                    <ColumnDefinition Width="Auto"  SharedSizeGroup="Keys2" />
                                                                                    <ColumnDefinition Width="Auto"  SharedSizeGroup="Keys3" />
                                                                                    <ColumnDefinition Width="*" />
                                                                                </Grid.ColumnDefinitions>
                                                                                <TextBlock Text="{Binding ActionId}" FontSize="15" TextAlignment="Left" Foreground="DarkGray" Width="200"  Height="20"/>
                                                                                <TextBlock Grid.Column="1" Text="{Binding Shortcut.AsString}" Foreground="DarkGray" TextAlignment="Left" FontSize="12" Height="20" Margin="10,0,10,0"/>
                                                                                <TextBlock Grid.Column="2" Text="{Binding SystemShortcut.AsString}" Foreground="DarkGray" TextAlignment="Left" FontSize="12" Height="20" Margin="10,0,10,0"/>
                                                                            </Grid>
                                                                        </DataTemplate>
                                                                    </ItemsControl.ItemTemplate>
                                                                </ItemsControl>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </WPFSpark:PivotContentControl>
                                                </WPFSpark:PivotItem.PivotContent>
                                            </WPFSpark:PivotItem>
                                        </WPFSpark:PivotPanel>
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource BooleanAndConverter}">
                        <Binding Path="IsOptionsVisible"/>
                        <Binding Path="IsUiVisible" RelativeSource="{RelativeSource AncestorType=Window}" />
                    </MultiBinding>
                </DataTrigger.Binding>
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeIn"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeInVisibility"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeOut"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <TimelineCollection>
                                <StaticResource ResourceKey="FadeOutVisibility"/>
                            </TimelineCollection>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Controls:HidingOverlay" x:Key="HidingOverlay">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Controls:HidingOverlay">
                    <Border Background="#bb444444" CornerRadius="7" Margin="5">
                        <Border Background="#bb000000" Margin="1" Style="{DynamicResource MenuOuterBorder}">
                            <Border Style="{DynamicResource MenuInnerBorder}" Background="{DynamicResource ShineBrush}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Button Grid.Column="0"
												HorizontalAlignment="Right"
												VerticalAlignment="Center"
												Padding="2"
												Command="{Binding OptionsCommand}" Width="15" Height="15"
												Style="{StaticResource ImageButton}"
												Behaviors:Buttons.Image="/Themes/default/Images/settings.png"
												Behaviors:Buttons.NormalImage="/Themes/default/Images/settings.png"
												Behaviors:Buttons.HoverImage="/Themes/default/Images/settings_hover.png">
                                        </Button>
                                        <TextBlock Grid.Column="1" Margin="8,-4,10,-3" VerticalAlignment="Center" HorizontalAlignment="Left" Style="{DynamicResource DefaultFontStyle}">MEDIAPOINT <TextBlock Text="{Binding Path=Properties[VersionShort], Source={x:Static Application.Current}}"></TextBlock></TextBlock>
                                        <TextBlock TextAlignment="Right" Grid.Column="2" Margin="8,-4,15,-3" VerticalAlignment="Center" HorizontalAlignment="Right" Style="{DynamicResource DefaultFontStyle}" Text="{Binding Player.SourceFileName}"/>
                                        <TextBlock Grid.Column="3" Margin="8,-4,15,-3" VerticalAlignment="Center" Style="{DynamicResource DefaultFontStyle}" Text="{Binding Time, StringFormat='Time: {0}'}"/>
                                    </Grid>
                                    <StackPanel Grid.Column="1" Orientation="Horizontal">
                                        <Button
												HorizontalAlignment="Right"
												VerticalAlignment="Center"
												Padding="2"
												Command="{Binding MiniPlayerCommand}" Width="15" Height="15"
												Style="{StaticResource ImageButton}" ToolTip="Tiny"
												Behaviors:Buttons.Image="/Themes/default/Images/mini.png"
												Behaviors:Buttons.NormalImage="/Themes/default/Images/mini.png"
												Behaviors:Buttons.HoverImage="/Themes/default/Images/mini_hover.png">
                                        </Button>
                                        <Button
												HorizontalAlignment="Right"
												VerticalAlignment="Center"
												Padding="2"
												Command="{Binding MinimizeCommand}" Width="15" Height="15"
												Style="{StaticResource ImageButton}" ToolTip="Minimize"
												Behaviors:Buttons.Image="/Themes/default/Images/min.png"
												Behaviors:Buttons.NormalImage="/Themes/default/Images/min.png"
												Behaviors:Buttons.HoverImage="/Themes/default/Images/min_hover.png">
                                        </Button>
                                        <Button
												HorizontalAlignment="Right"
												VerticalAlignment="Center"
												Padding="2"
												Command="{Binding WindowStateCommand}" Width="15" Height="15"
												Style="{StaticResource ImageButton}" ToolTip="Maximize"
												Behaviors:Buttons.Image="/Themes/default/Images/max.png"
												Behaviors:Buttons.NormalImage="/Themes/default/Images/max.png"
												Behaviors:Buttons.HoverImage="/Themes/default/Images/max_hover.png">
                                        </Button>
                                        <Button
												HorizontalAlignment="Right"
												VerticalAlignment="Center"
												Padding="2"
												Command="{Binding ExitCommand}" Width="15" Height="15"
												Style="{StaticResource ImageButton}" ToolTip="Exit"
												Behaviors:Buttons.Image="/Themes/default/Images/close.png"
												Behaviors:Buttons.NormalImage="/Themes/default/Images/close.png"
												Behaviors:Buttons.HoverImage="/Themes/default/Images/close_hover.png">
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ToolTip}"
			TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle"
				Value="true" />
        <Setter Property="HasDropShadow"
				Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border" Background="#bb444444" CornerRadius="7">
                        <Border Background="#bb000000" Style="{DynamicResource MenuOuterBorder}" Margin="1">
                            <Border Style="{DynamicResource MenuInnerBorder}">
                                <ContentPresenter Margin="4" TextBlock.Foreground="White"
										HorizontalAlignment="Left"
										VerticalAlignment="Top" />
                            </Border>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
								Value="true">
                            <Setter TargetName="Border"
									Property="SnapsToDevicePixels"
									Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Popup"
			TargetType="ContentControl">
        <Setter Property="OverridesDefaultStyle"
				Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border Name="Border" Background="#bb444444" CornerRadius="7">
                        <Border Background="#bb000000" Style="{DynamicResource MenuOuterBorder}" Margin="1">
                            <Border Style="{DynamicResource MenuInnerBorder}">
                                <ContentPresenter Margin="4" TextBlock.Foreground="White"
										HorizontalAlignment="Left"
										VerticalAlignment="Top" />
                            </Border>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Border" x:Key="MenuOuterBorder">
        <Setter Property="CornerRadius" Value="7"/>
        <Setter Property="Background" Value="#99000000"/>
        <Setter Property="Margin" Value="10"/>
    </Style>
    <Style TargetType="ContentControl" x:Key="ImdbBorder">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border Name="Border">
                        <Border>
                            <ContentPresenter/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Border" x:Key="MenuInnerBorder">
        <Setter Property="CornerRadius" Value="7"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{DynamicResource Glassage}"/>
    </Style>
    <Style TargetType="Border" x:Key="ControlsOuterBorder">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Background" Value="#99000000"/>
        <Setter Property="Width" Value="388"/>
        <Setter Property="Height" Value="110"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <Style TargetType="Border" x:Key="ControlsInnerBorder">
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Background" Value="{DynamicResource Glassage}"/>
    </Style>
    <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackgroundInverted"
			EndPoint="0,0"
			StartPoint="0,1">
        <GradientStop Color="white"
				Offset="0" />
        <GradientStop Color="#B8E2F9"
				Offset="0.5" />
        <GradientStop Color="#B0DFF8"
				Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="HorizontalSliderThumbHoverBorder"
			Color="#3C7FB1" />
    <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackgroundInverted"
			EndPoint="0,0"
			StartPoint="0,1">
        <GradientStop Color="#B8E4FA"
				Offset="0.25" />
        <GradientStop Color="#5EB4E3"
				Offset="0.5" />
        <GradientStop Color="#4C8BB4"
				Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="HorizontalSliderThumbPressedBorder"
			Color="#2C628B" />
    <Geometry x:Key="SliderThumbDisabledGeometry">M -5,-10.5 L 5,-10.5 L 5,10.5 L -5,10.5 Z</Geometry>
    <Geometry x:Key="SliderPointedThumbDisabledGeometry">M 4.5,-8.5 L -4.5,-8.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
    <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackgroundInverted"
			EndPoint="0,0"
			StartPoint="0,1">
        <GradientStop Color="White"
				Offset="0" />
        <GradientStop Color="#F0EFEF"
				Offset="0.4" />
        <GradientStop Color="#D6D5D5"
				Offset=".8" />
    </LinearGradientBrush>
    <Geometry x:Key="SliderPointedThumbOuterBorderGeometry">M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
    <Geometry x:Key="SliderPointedThumbMiddleBorderGeometry">M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z</Geometry>
    <Style x:Key="HorizontalSliderUpThumbStyle"
			TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
				Value="false" />
        <Setter Property="OverridesDefaultStyle"
				Value="true" />
        <Setter Property="Height"
				Value="18" />
        <Setter Property="Width"
				Value="10" />
        <Setter Property="Foreground"
				Value="Gray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="5"
												Y="9" />
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
								Fill="{StaticResource HorizontalSliderThumbNormalBackgroundInverted}"
								Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" />
                        <Path x:Name="InnerBorder"
								Stroke="White"
								StrokeThickness="1"
								Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" />
                        <Path x:Name="OuterBorder"
								Stroke="#FF929292"
								StrokeThickness="1"
								Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" />
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
								Value="true">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="{StaticResource HorizontalSliderThumbHoverBorder}" />
                        </Trigger>
                        <Trigger Property="Foreground"
								Value="Blue">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="{StaticResource HorizontalSliderThumbHoverBorder}" />
                        </Trigger>
                        <Trigger Property="IsDragging"
								Value="true">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="{StaticResource HorizontalSliderThumbPressedBackgroundInverted}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="{StaticResource HorizontalSliderThumbPressedBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
								Value="false">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="#FFF4F4F4" />
                            <Setter Property="Stroke"
									TargetName="InnerBorder"
									Value="{x:Null}" />
                            <Setter Property="Data"
									TargetName="OuterBorder"
									Value="{StaticResource SliderThumbDisabledGeometry}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="#FFAEB1AF" />
                            <Setter Property="Data"
									TargetName="OuterBorder"
									Value="{StaticResource SliderPointedThumbDisabledGeometry}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackground"
			EndPoint="0,1"
			StartPoint="0,0">
        <GradientStop Color="white"
				Offset="0" />
        <GradientStop Color="#B8E2F9"
				Offset="0.5" />
        <GradientStop Color="#B0DFF8"
				Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackground"
			EndPoint="0,1"
			StartPoint="0,0">
        <GradientStop Color="#B8E4FA"
				Offset="0.25" />
        <GradientStop Color="#5EB4E3"
				Offset="0.5" />
        <GradientStop Color="#4C8BB4"
				Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackground"
			EndPoint="0,1"
			StartPoint="0,0">
        <GradientStop Color="White"
				Offset="0" />
        <GradientStop Color="#F0EFEF"
				Offset="0.4" />
        <GradientStop Color="#D6D5D5"
				Offset=".8" />
    </LinearGradientBrush>
    <Style x:Key="HorizontalSliderDownThumbStyle"
			TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
				Value="false" />
        <Setter Property="OverridesDefaultStyle"
				Value="true" />
        <Setter Property="Height"
				Value="18" />
        <Setter Property="Width"
				Value="10" />
        <Setter Property="Foreground"
				Value="Gray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TranslateTransform X="5"
									Y="9" />
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
								Fill="{StaticResource HorizontalSliderThumbNormalBackground}"
								Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" />
                        <Path x:Name="InnerBorder"
								Stroke="White"
								StrokeThickness="1"
								Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" />
                        <Path x:Name="OuterBorder"
								Stroke="#FF929292"
								StrokeThickness="1"
								Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" />
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
								Value="true">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="{StaticResource HorizontalSliderThumbHoverBackground}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="{StaticResource HorizontalSliderThumbHoverBorder}" />
                        </Trigger>
                        <Trigger Property="Foreground"
								Value="Blue">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="{StaticResource HorizontalSliderThumbHoverBackground}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="{StaticResource HorizontalSliderThumbHoverBorder}" />
                        </Trigger>
                        <Trigger Property="IsDragging"
								Value="true">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="{StaticResource HorizontalSliderThumbPressedBackground}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="{StaticResource HorizontalSliderThumbPressedBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
								Value="false">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="#FFF4F4F4" />
                            <Setter Property="Stroke"
									TargetName="InnerBorder"
									Value="{x:Null}" />
                            <Setter Property="Data"
									TargetName="OuterBorder"
									Value="{StaticResource SliderThumbDisabledGeometry}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="#FFAEB1AF" />
                            <Setter Property="Data"
									TargetName="OuterBorder"
									Value="{StaticResource SliderPointedThumbDisabledGeometry}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground"
			Color="#FFE7EAEA" />
    <LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder"
			EndPoint="0,1"
			StartPoint="0,0">
        <GradientStop Color="#FFAEB1AF"
				Offset="0.1" />
        <GradientStop Color="White"
				Offset=".9" />
    </LinearGradientBrush>
    <Style x:Key="SliderRepeatButtonStyle"
			TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
				Value="true" />
        <Setter Property="IsTabStop"
				Value="false" />
        <Setter Property="Focusable"
				Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Height="Auto">
                        <Rectangle RadiusX="0"
								RadiusY="0"
								Margin="0,0,-2,0"
								OpacityMask="{x:Null}">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1"
										StartPoint="0.5,0">
                                    <GradientStop Color="#00A0A0A0"
											Offset="0.086" />
                                    <GradientStop Color="#E5FFFFFF"
											Offset="0.509" />
                                    <GradientStop Color="#00A0A0A0"
											Offset="0.944" />
                                    <GradientStop Color="#C8A0A0A0"
											Offset="0.457" />
                                    <GradientStop Color="#D3A1A1A1"
											Offset="0.573" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Geometry x:Key="SliderThumbOuterBorderGeometry">M -5,-9.5 A 1 1 0 0 1 -4,-10.5 L 4,-10.5 A 1 1 0 0 1 5,-9.5 L 5,9.5 A 1 1 0 0 1 4,10.5 L -4,10.5 A 1 1 0 0 1 -5,9.5 Z</Geometry>
    <Geometry x:Key="SliderThumbMiddleBorderGeometry">M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z</Geometry>
    <Style x:Key="HorizontalSliderThumbStyle"
			TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
				Value="false" />
        <Setter Property="IsHitTestVisible"
				Value="true" />
        <Setter Property="OverridesDefaultStyle"
				Value="true" />
        <Setter Property="Height"
				Value="24" />
        <Setter Property="Width"
				Value="0" />
        <Setter Property="Foreground"
				Value="Gray" />
        <Setter Property="Background"
				Value="{x:Null}" />
        <Setter Property="Attached:MouseDownHelper.IsEnabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Height="Auto">
                        <Rectangle RadiusX="0"
								RadiusY="0"
								Margin="2,0,-2,0"
								OpacityMask="{x:Null}">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1"
										StartPoint="0.5,0">
                                    <GradientStop Color="#00005DFF"
											Offset="0.086" />
                                    <GradientStop Color="#E5FFFFFF"
											Offset="0.509" />
                                    <GradientStop Color="#00005DFF"
											Offset="0.944" />
                                    <GradientStop Color="#C83792E7"
											Offset="0.457" />
                                    <GradientStop Color="#D33A95E6"
											Offset="0.573" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Canvas Margin="0,13,0,0" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center"
								SnapsToDevicePixels="true" Width="58" Height="18.552">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1"
											ScaleY="1" />
                                    <SkewTransform AngleX="0"
											AngleY="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform X="0"
											Y="0" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Path Stretch="Fill"
									StrokeThickness="1"
									StrokeLineJoin="Round"
									Data="F1 M 265.57,406.014C 265.57,408.559 263.507,410.622 260.961,410.622L 254.082,410.622C 251.536,410.622 249.473,408.559 249.473,406.014C 249.473,403.468 251.536,401.404 254.082,401.404L 260.961,401.404C 263.507,401.404 265.57,403.468 265.57,406.014 Z "
									Stroke="{DynamicResource MediaButtonBorder}"
									Canvas.Top="-4.834"
									Height="18.552"
									Canvas.Left="0"
									Width="58">
                                <Path.Fill>
                                    <LinearGradientBrush StartPoint="0.500011,0.0421621"
											EndPoint="0.500011,0.930457">
                                        <GradientStop Color="#FF545454"
												Offset="0" />
                                        <GradientStop Color="#FF474747"
												Offset="0.215" />
                                        <GradientStop Color="#FF313131"
												Offset="0.47" />
                                        <GradientStop Color="#FF000000"
												Offset="0.491" />
                                        <GradientStop Color="#FF1D1D1D"
												Offset="0.938931" />
                                        <GradientStop Color="#FF1D1D1D"
												Offset="1" />
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                            <TextBlock x:Name="txtPosition" Style="{DynamicResource StatusText}" Text="{Binding Player.Position, FallbackValue='00:00:00'}" Width="58" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center">
                            </TextBlock>
                            <Popup PlacementTarget="{Binding ElementName=txtPosition}" VerticalOffset="-50"  Placement="Center" IsHitTestVisible="False" AllowsTransparency="True" x:Name="totalTime" PopupAnimation="Fade" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                <ContentControl Style="{DynamicResource Popup}">
                                    <StackPanel>
                                        <TextBlock Style="{DynamicResource StatusText}" Text="Total length:" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <TextBlock FontSize="10" Style="{DynamicResource StatusText}" Text="{Binding Player.Duration, FallbackValue='00:00:00'}" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <TextBlock Margin="0,3,0,0"  Style="{DynamicResource StatusText}" Text="Remaining time:" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <TextBlock FontSize="10" Style="{DynamicResource StatusText}" Text="{Binding Player.Remaining, FallbackValue='00:00:00'}" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </ContentControl>
                            </Popup>
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="IsOpen" TargetName="totalTime" Value="True"/>
                        </Trigger>
                        <Trigger Property="Attached:MouseDownHelper.IsMouseLeftButtonDown" Value="true">
                            <Setter Property="IsOpen" TargetName="totalTime" Value="False"/>
                        </Trigger>
                        <Trigger Property="Foreground"
								Value="Blue" />
                        <Trigger Property="IsDragging"
								Value="true" />
                        <Trigger Property="IsEnabled"
								Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackground"
			EndPoint="1,0"
			StartPoint="0,0">
        <GradientStop Color="white"
				Offset="0" />
        <GradientStop Color="#B8E2F9"
				Offset="0.5" />
        <GradientStop Color="#B0DFF8"
				Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbPressedBackground"
			EndPoint="1,0"
			StartPoint="0,0">
        <GradientStop Color="#B8E4FA"
				Offset="0.25" />
        <GradientStop Color="#5EB4E3"
				Offset="0.5" />
        <GradientStop Color="#4C8BB4"
				Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackground"
			EndPoint="1,0"
			StartPoint="0,0">
        <GradientStop Color="White"
				Offset="0" />
        <GradientStop Color="#F0EFEF"
				Offset="0.4" />
        <GradientStop Color="#D6D5D5"
				Offset=".8" />
    </LinearGradientBrush>
    <Style x:Key="VerticalSliderLeftThumbStyle"
			TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
				Value="false" />
        <Setter Property="OverridesDefaultStyle"
				Value="true" />
        <Setter Property="Height"
				Value="10" />
        <Setter Property="Width"
				Value="18" />
        <Setter Property="Foreground"
				Value="Gray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform X="9"
												Y="5" />
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
								Fill="{StaticResource VerticalSliderThumbNormalBackground}"
								Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" />
                        <Path x:Name="InnerBorder"
								Stroke="White"
								StrokeThickness="1"
								Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" />
                        <Path x:Name="OuterBorder"
								Stroke="#FF929292"
								StrokeThickness="1"
								Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" />
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
								Value="true">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="{StaticResource VerticalSliderThumbHoverBackground}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="{StaticResource HorizontalSliderThumbHoverBorder}" />
                        </Trigger>
                        <Trigger Property="Foreground"
								Value="Blue">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="{StaticResource VerticalSliderThumbHoverBackground}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="{StaticResource HorizontalSliderThumbHoverBorder}" />
                        </Trigger>
                        <Trigger Property="IsDragging"
								Value="true">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="{StaticResource VerticalSliderThumbPressedBackground}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="{StaticResource HorizontalSliderThumbPressedBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
								Value="false">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="#FFF4F4F4" />
                            <Setter Property="Stroke"
									TargetName="InnerBorder"
									Value="{x:Null}" />
                            <Setter Property="Data"
									TargetName="OuterBorder"
									Value="{StaticResource SliderPointedThumbDisabledGeometry}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="#FFAEB1AF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackgroundInverted"
			EndPoint="0,0"
			StartPoint="1,0">
        <GradientStop Color="white"
				Offset="0" />
        <GradientStop Color="#B8E2F9"
				Offset="0.5" />
        <GradientStop Color="#B0DFF8"
				Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbPressedBackgroundInverted"
			EndPoint="0,0"
			StartPoint="1,0">
        <GradientStop Color="#B8E4FA"
				Offset="0.25" />
        <GradientStop Color="#5EB4E3"
				Offset="0.5" />
        <GradientStop Color="#4C8BB4"
				Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackgroundInverted"
			EndPoint="0,0"
			StartPoint="1,0">
        <GradientStop Color="White"
				Offset="0" />
        <GradientStop Color="#F0EFEF"
				Offset="0.4" />
        <GradientStop Color="#D6D5D5"
				Offset=".8" />
    </LinearGradientBrush>
    <Style x:Key="VerticalSliderRightThumbStyle"
			TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
				Value="false" />
        <Setter Property="OverridesDefaultStyle"
				Value="true" />
        <Setter Property="Height"
				Value="10" />
        <Setter Property="Width"
				Value="18" />
        <Setter Property="Foreground"
				Value="Gray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform X="9"
												Y="5" />
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
								Fill="{StaticResource VerticalSliderThumbNormalBackgroundInverted}"
								Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" />
                        <Path x:Name="InnerBorder"
								Stroke="White"
								StrokeThickness="1"
								Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" />
                        <Path x:Name="OuterBorder"
								Stroke="#FF929292"
								StrokeThickness="1"
								Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" />
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
								Value="true">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="{StaticResource HorizontalSliderThumbHoverBorder}" />
                        </Trigger>
                        <Trigger Property="Foreground"
								Value="Blue">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="{StaticResource HorizontalSliderThumbHoverBorder}" />
                        </Trigger>
                        <Trigger Property="IsDragging"
								Value="true">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="{StaticResource VerticalSliderThumbPressedBackgroundInverted}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="{StaticResource HorizontalSliderThumbPressedBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
								Value="false">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="#FFF4F4F4" />
                            <Setter Property="Stroke"
									TargetName="InnerBorder"
									Value="{x:Null}" />
                            <Setter Property="Data"
									TargetName="OuterBorder"
									Value="{StaticResource SliderPointedThumbDisabledGeometry}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="#FFAEB1AF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="VerticalSliderTrackNormalBorder"
			EndPoint="1,0"
			StartPoint="0,0">
        <GradientStop Color="#FFAEB1AF"
				Offset="0.1" />
        <GradientStop Color="White"
				Offset=".9" />
    </LinearGradientBrush>
    <Style x:Key="VerticalSliderThumbStyle"
			TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
				Value="false" />
        <Setter Property="OverridesDefaultStyle"
				Value="true" />
        <Setter Property="Height"
				Value="11" />
        <Setter Property="Width"
				Value="22" />
        <Setter Property="Foreground"
				Value="Gray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform X="11"
												Y="5.5" />
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
								Fill="{StaticResource VerticalSliderThumbNormalBackground}"
								Data="{StaticResource SliderThumbOuterBorderGeometry}" />
                        <Path x:Name="InnerBorder"
								Stroke="White"
								StrokeThickness="1"
								Data="{StaticResource SliderThumbMiddleBorderGeometry}" />
                        <Path x:Name="OuterBorder"
								Stroke="#FF929292"
								StrokeThickness="1"
								Data="{StaticResource SliderThumbOuterBorderGeometry}" />
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
								Value="true">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="{StaticResource VerticalSliderThumbHoverBackground}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="{StaticResource HorizontalSliderThumbHoverBorder}" />
                        </Trigger>
                        <Trigger Property="Foreground"
								Value="Blue">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="{StaticResource VerticalSliderThumbHoverBackground}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="{StaticResource HorizontalSliderThumbHoverBorder}" />
                        </Trigger>
                        <Trigger Property="IsDragging"
								Value="true">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="{StaticResource VerticalSliderThumbPressedBackground}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="{StaticResource HorizontalSliderThumbPressedBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
								Value="false">
                            <Setter Property="Fill"
									TargetName="Background"
									Value="#FFF4F4F4" />
                            <Setter Property="Stroke"
									TargetName="InnerBorder"
									Value="{x:Null}" />
                            <Setter Property="Data"
									TargetName="OuterBorder"
									Value="{StaticResource SliderThumbDisabledGeometry}" />
                            <Setter Property="Stroke"
									TargetName="OuterBorder"
									Value="#FFAEB1AF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MediaTimeSliderStyle"
			TargetType="{x:Type Slider}">
        <Setter Property="Height"
				Value="20" />
        <Setter Property="HorizontalAlignment"
				Value="Stretch" />
        <Setter Property="VerticalAlignment"
				Value="Bottom" />
        <Setter Property="Margin"
				Value="20,0,20,10" />
        <Setter Property="Stylus.IsPressAndHoldEnabled"
				Value="false" />
        <Setter Property="Background"
				Value="Transparent" />
        <Setter Property="Foreground"
				Value="#FFC4C4C4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border SnapsToDevicePixels="true"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto"
										MinHeight="{TemplateBinding MinHeight}" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick"
									Height="4"
									Visibility="Collapsed"
									Grid.Row="0"
									Fill="{TemplateBinding Foreground}"
									Placement="Top" />
                            <TickBar x:Name="BottomTick"
									Height="4"
									Visibility="Collapsed"
									Grid.Row="2"
									Fill="{TemplateBinding Foreground}"
									Placement="Bottom" />
                            <Border x:Name="TrackBackground"
									Margin="5,0"
									VerticalAlignment="center"
									Height="4.0"
									BorderThickness="1"
									CornerRadius="1"
									Grid.Row="1"
									BorderBrush="#FF2A2A2A">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1"
											StartPoint="0.5,0">
                                        <GradientStop Color="#FF5D2E00"
												Offset="1" />
                                        <GradientStop Color="#FFFF8000"
												Offset="0" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Canvas Margin="-6,-1">
                                    <Rectangle x:Name="PART_SelectionRange"
											Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
											Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
											StrokeThickness="1.0"
											Height="4.0"
											Visibility="Hidden" />
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track"
									Grid.Row="1">
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
											Command="{x:Static Slider.IncreaseLarge}" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{DynamicResource DecreaseRepeatButtonStyle}"
											Command="{x:Static Slider.DecreaseLarge}" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" 
											Style="{StaticResource HorizontalSliderThumbStyle}" Width="0"
											Height="46"
											/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement"
								Value="TopLeft">
                            <Setter Property="Visibility"
									TargetName="TopTick"
									Value="Visible" />
                            <Setter Property="Style"
									TargetName="Thumb"
									Value="{StaticResource HorizontalSliderUpThumbStyle}" />
                            <Setter Property="Margin"
									TargetName="TrackBackground"
									Value="5,2,5,0" />
                        </Trigger>
                        <Trigger Property="TickPlacement"
								Value="BottomRight">
                            <Setter Property="Visibility"
									TargetName="BottomTick"
									Value="Visible" />
                            <Setter Property="Style"
									TargetName="Thumb"
									Value="{StaticResource HorizontalSliderDownThumbStyle}" />
                            <Setter Property="Margin"
									TargetName="TrackBackground"
									Value="5,0,5,2" />
                        </Trigger>
                        <Trigger Property="TickPlacement"
								Value="Both">
                            <Setter Property="Visibility"
									TargetName="TopTick"
									Value="Visible" />
                            <Setter Property="Visibility"
									TargetName="BottomTick"
									Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled"
								Value="true">
                            <Setter Property="Visibility"
									TargetName="PART_SelectionRange"
									Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
								Value="true">
                            <Setter Property="Foreground"
									TargetName="Thumb"
									Value="Blue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
					Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border SnapsToDevicePixels="true"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}"
												Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TickBar x:Name="TopTick"
											Width="4"
											Visibility="Collapsed"
											Grid.Column="0"
											Fill="{TemplateBinding Foreground}"
											Placement="Left" />
                                    <TickBar x:Name="BottomTick"
											Width="4"
											Visibility="Collapsed"
											Grid.Column="2"
											Fill="{TemplateBinding Foreground}"
											Placement="Right" />
                                    <Border x:Name="TrackBackground"
											HorizontalAlignment="center"
											Margin="0,5"
											Width="4.0"
											Background="{StaticResource HorizontalSliderTrackNormalBackground}"
											BorderBrush="{StaticResource VerticalSliderTrackNormalBorder}"
											BorderThickness="1"
											CornerRadius="1"
											Grid.Column="1">
                                        <Canvas Margin="-1,-6">
                                            <Rectangle x:Name="PART_SelectionRange"
													Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
													Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
													StrokeThickness="1.0"
													Width="4.0"
													Visibility="Hidden" />
                                        </Canvas>
                                    </Border>
                                    <Track x:Name="PART_Track"
											Grid.Column="1">
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb"
													Style="{StaticResource VerticalSliderThumbStyle}" />
                                        </Track.Thumb>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
													Command="{x:Static Slider.IncreaseLarge}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
													Command="{x:Static Slider.DecreaseLarge}" />
                                        </Track.DecreaseRepeatButton>
                                    </Track>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement"
										Value="TopLeft">
                                    <Setter Property="Visibility"
											TargetName="TopTick"
											Value="Visible" />
                                    <Setter Property="Style"
											TargetName="Thumb"
											Value="{StaticResource VerticalSliderLeftThumbStyle}" />
                                    <Setter Property="Margin"
											TargetName="TrackBackground"
											Value="2,5,0,5" />
                                </Trigger>
                                <Trigger Property="TickPlacement"
										Value="BottomRight">
                                    <Setter Property="Visibility"
											TargetName="BottomTick"
											Value="Visible" />
                                    <Setter Property="Style"
											TargetName="Thumb"
											Value="{StaticResource VerticalSliderRightThumbStyle}" />
                                    <Setter Property="Margin"
											TargetName="TrackBackground"
											Value="0,5,2,5" />
                                </Trigger>
                                <Trigger Property="TickPlacement"
										Value="Both">
                                    <Setter Property="Visibility"
											TargetName="TopTick"
											Value="Visible" />
                                    <Setter Property="Visibility"
											TargetName="BottomTick"
											Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled"
										Value="true">
                                    <Setter Property="Visibility"
											TargetName="PART_SelectionRange"
											Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
										Value="true">
                                    <Setter Property="Foreground"
											TargetName="Thumb"
											Value="Blue" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="Black"
							StrokeDashArray="1 2"
							StrokeThickness="1"
							Margin="2"
							SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground"
			EndPoint="0,1"
			StartPoint="0,0">
        <GradientStop Color="#F3F3F3"
				Offset="0" />
        <GradientStop Color="#EBEBEB"
				Offset="0.5" />
        <GradientStop Color="#DDDDDD"
				Offset="0.5" />
        <GradientStop Color="#CDCDCD"
				Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder"
			Color="#FF707070" />
    <LinearGradientBrush x:Key="MediaButtonBackground"
			StartPoint="0.500011,0.0421621"
			EndPoint="0.500011,0.930457">
        <GradientStop Color="#B1FFFFFF"
				Offset="0" />
        <GradientStop Color="#B2B8B8B8"
				Offset="0.215" />
        <GradientStop Color="#8C646464"
				Offset="0.47" />
        <GradientStop Color="#3F000000"
				Offset="0.495" />
        <GradientStop Color="#3E000000"
				Offset="1" />
        <GradientStop Color="#00000000"
				Offset="0.736" />
    </LinearGradientBrush>
    <!--<LinearGradientBrush x:Key="MediaButtonBorder"
			EndPoint="0.5,1"
			StartPoint="0.5,0">
        <GradientStop Color="#FFB8B8B8"
				Offset="1" />
        <GradientStop Color="#FFDCDCDC"
				Offset="0" />
        <GradientStop Color="#FF808080"
				Offset="0.523" />
        <GradientStop Color="#FFFFFFFF"
				Offset="0.514" />
    </LinearGradientBrush>-->
    <LinearGradientBrush x:Key="MediaButtonSymbolFill"
			StartPoint="0.500057,0.0153321"
			EndPoint="0.500057,0.980196">
        <GradientStop Color="#B2FFFFFF"
				Offset="0" />
        <GradientStop Color="#B2818181"
				Offset="1" />
        <GradientStop Color="#FFFFFFFF"
				Offset="0.459" />
        <GradientStop Color="#B2787878"
				Offset="0.47" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MediaButtonSymbolStroke"
			EndPoint="0.5,1"
			StartPoint="0.5,0">
        <GradientStop Color="#FF2F2F2F"
				Offset="0" />
        <GradientStop Color="#FF0E0E0E"
				Offset="0.989" />
        <GradientStop Color="#FF3B3B3B"
				Offset="0.411" />
        <GradientStop Color="#FF1F1F1F"
				Offset="0.419" />
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="FollowGradient"
			MappingMode="Absolute"
			Center="0,35"
			GradientOrigin="0,35"
			RadiusX="40"
			RadiusY="35">
        <GradientStop Color="#FF0072FF"
				Offset="0.741" />
        <GradientStop Color="#00FFFFFF"
				Offset="1" />
        <GradientStop Color="#FFEBF4FF"
				Offset="0" />
        <GradientStop Color="#FF2184FF"
				Offset="0.555" />
    </RadialGradientBrush>
    <Style x:Key="PreviousButton"
			TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
				Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background"
				Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush"
				Value="{StaticResource ButtonNormalBorder}" />
        <Setter Property="BorderThickness"
				Value="1" />
        <Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment"
				Value="Center" />
        <Setter Property="VerticalContentAlignment"
				Value="Center" />
        <Setter Property="Padding"
				Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseLeave">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseEnter">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
										Value="0.985" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseDown">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDimmer"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseUp">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDimmer"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Canvas Width="47.738"
							Height="23.646"
							RenderTransformOrigin="0.5,0.5">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1"
										ScaleY="1" />
                                <SkewTransform AngleX="0"
										AngleY="0" />
                                <RotateTransform Angle="0" />
                                <TranslateTransform X="0"
										Y="0" />
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Highlight"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Stroke="{x:Null}"
								Data="F1 M 258.094,443.677C 256.24,440.51 255.171,436.829 255.171,432.894C 255.171,428.642 256.432,424.695 258.57,421.364L 301.576,421.364C 299.445,424.696 298.193,428.646 298.193,432.894C 298.193,436.83 299.272,440.506 301.123,443.677L 258.094,443.677 Z "
								Opacity="0"
								Fill="{DynamicResource FollowGradient}"
								IsHitTestVisible="True">
                            <Interactivity:Interaction.Behaviors>
                                <Behaviors:GradientFollowBehavior />
                            </Interactivity:Interaction.Behaviors>
                        </Path>
                        <Path x:Name="ButtonPath"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Stroke="{DynamicResource MediaButtonBorder}"
								Data="F1 M 258.094,443.677C 256.24,440.51 255.171,436.829 255.171,432.894C 255.171,428.642 256.432,424.695 258.57,421.364L 301.576,421.364C 299.445,424.696 298.193,428.646 298.193,432.894C 298.193,436.83 299.272,440.506 301.123,443.677L 258.094,443.677 Z "
								Fill="{DynamicResource MediaButtonBackground}"
								IsHitTestVisible="False" />
                        <Path x:Name="ButtonDimmer"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Data="F1 M 258.094,443.677C 256.24,440.51 255.171,436.829 255.171,432.894C 255.171,428.642 256.432,424.695 258.57,421.364L 301.576,421.364C 299.445,424.696 298.193,428.646 298.193,432.894C 298.193,436.83 299.272,440.506 301.123,443.677L 258.094,443.677 Z "
								Fill="#99000000"
								IsHitTestVisible="False"
								Stroke="{x:Null}"
								Opacity="0" />
                        <Path Width="9.67438"
								Height="11.1026"
								Canvas.Left="22.227"
								Canvas.Top="6.688"
								Stretch="Fill"
								Data="F1 M 286.387,428.246C 286.387,428.863 286.405,436.411 286.405,437.373C 286.405,438.433 285.896,438.751 285.031,438.268C 284.165,437.788 278.131,434.28 277.361,433.801C 276.591,433.318 276.491,432.39 277.258,431.935C 278.101,431.433 284.315,427.992 285.106,427.556C 285.938,427.102 286.387,427.631 286.387,428.246 Z "
								Fill="{DynamicResource MediaButtonSymbolFill}"
								IsHitTestVisible="False" />
                        <Path Width="11.0077"
								Height="12.4359"
								Canvas.Left="21.563"
								Canvas.Top="6.022"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Stroke="{DynamicResource MediaButtonSymbolStroke}"
								Data="F1 M 286.387,428.246C 286.387,428.863 286.405,436.411 286.405,437.373C 286.405,438.433 285.896,438.751 285.031,438.268C 284.165,437.788 278.131,434.28 277.361,433.801C 276.591,433.318 276.491,432.39 277.258,431.935C 278.101,431.433 284.315,427.992 285.106,427.556C 285.938,427.102 286.387,427.631 286.387,428.246 Z "
								RenderTransformOrigin="0.5,0.5"
								IsHitTestVisible="False">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1"
											ScaleY="1" />
                                    <SkewTransform AngleX="0"
											AngleY="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform X="0"
											Y="0" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path Width="3.53302"
								Height="11.12"
								Canvas.Left="17.042"
								Canvas.Top="6.658"
								Stretch="Fill"
								Data="F1 M 271.546,438.087C 271.546,438.301 271.727,438.475 271.95,438.475L 274.675,438.475C 274.898,438.475 275.079,438.301 275.079,438.087L 275.079,427.743C 275.079,427.529 274.898,427.355 274.675,427.355L 271.95,427.355C 271.727,427.355 271.546,427.529 271.546,427.743L 271.546,438.087 Z "
								Fill="{DynamicResource MediaButtonSymbolFill}"
								IsHitTestVisible="False" />
                        <Path Width="4.86633"
								Height="12.4533"
								Canvas.Left="16.375"
								Canvas.Top="5.991"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Stroke="{DynamicResource MediaButtonSymbolStroke}"
								Data="F1 M 271.546,438.087C 271.546,438.301 271.727,438.475 271.95,438.475L 274.675,438.475C 274.898,438.475 275.079,438.301 275.079,438.087L 275.079,427.743C 275.079,427.529 274.898,427.355 274.675,427.355L 271.95,427.355C 271.727,427.355 271.546,427.529 271.546,427.743L 271.546,438.087 Z "
								RenderTransformOrigin="0.5,0.5"
								IsHitTestVisible="False">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1"
											ScaleY="1" />
                                    <SkewTransform AngleX="0"
											AngleY="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform X="0"
											Y="0" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
								Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="OnMouseUp_BeginStoryboard1"
										Storyboard="{StaticResource OnMouseUp}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="OnMouseDown_BeginStoryboard1"
										Storyboard="{StaticResource OnMouseDown}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <BeginStoryboard x:Name="OnMouseEnter_BeginStoryboard"
									Storyboard="{StaticResource OnMouseEnter}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <BeginStoryboard x:Name="OnMouseLeave_BeginStoryboard"
									Storyboard="{StaticResource OnMouseLeave}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FastBackButton"
			TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
				Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background"
				Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush"
				Value="{StaticResource ButtonNormalBorder}" />
        <Setter Property="BorderThickness"
				Value="1" />
        <Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment"
				Value="Center" />
        <Setter Property="VerticalContentAlignment"
				Value="Center" />
        <Setter Property="Padding"
				Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseLeave">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseEnter">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
										Value="0.985" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseDown">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDimmer"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseUp">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDimmer"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Canvas Width="47.738"
							Height="23.646"
							RenderTransformOrigin="0.5,0.5">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1"
										ScaleY="1" />
                                <SkewTransform AngleX="0"
										AngleY="0" />
                                <RotateTransform Angle="0" />
                                <TranslateTransform X="0"
										Y="0" />
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Highlight"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Stroke="{x:Null}"
								Data="F1 M 258.094,443.677C 256.24,440.51 255.171,436.829 255.171,432.894C 255.171,428.642 256.432,424.695 258.57,421.364L 301.576,421.364C 299.445,424.696 298.193,428.646 298.193,432.894C 298.193,436.83 299.272,440.506 301.123,443.677L 258.094,443.677 Z "
								Opacity="0"
								Fill="{DynamicResource FollowGradient}"
								IsHitTestVisible="True">
                            <Interactivity:Interaction.Behaviors>
                                <Behaviors:GradientFollowBehavior />
                            </Interactivity:Interaction.Behaviors>
                        </Path>
                        <Path x:Name="ButtonPath"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Stroke="{DynamicResource MediaButtonBorder}"
								Data="F1 M 258.094,443.677C 256.24,440.51 255.171,436.829 255.171,432.894C 255.171,428.642 256.432,424.695 258.57,421.364L 301.576,421.364C 299.445,424.696 298.193,428.646 298.193,432.894C 298.193,436.83 299.272,440.506 301.123,443.677L 258.094,443.677 Z "
								Fill="{DynamicResource MediaButtonBackground}"
								IsHitTestVisible="False" />
                        <Path x:Name="ButtonDimmer"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Data="F1 M 258.094,443.677C 256.24,440.51 255.171,436.829 255.171,432.894C 255.171,428.642 256.432,424.695 258.57,421.364L 301.576,421.364C 299.445,424.696 298.193,428.646 298.193,432.894C 298.193,436.83 299.272,440.506 301.123,443.677L 258.094,443.677 Z "
								Fill="#99000000"
								IsHitTestVisible="False"
								Stroke="{x:Null}"
								Opacity="0" />
                        <Path Width="9.67438"
								Height="11.1026"
								Canvas.Left="22.227"
								Canvas.Top="6.688"
								Stretch="Fill"
								Data="F1 M 286.387,428.246C 286.387,428.863 286.405,436.411 286.405,437.373C 286.405,438.433 285.896,438.751 285.031,438.268C 284.165,437.788 278.131,434.28 277.361,433.801C 276.591,433.318 276.491,432.39 277.258,431.935C 278.101,431.433 284.315,427.992 285.106,427.556C 285.938,427.102 286.387,427.631 286.387,428.246 Z "
								Fill="{DynamicResource MediaButtonSymbolFill}"
								IsHitTestVisible="False" />
                        <Path Width="11.0077"
								Height="12.4359"
								Canvas.Left="21.563"
								Canvas.Top="6.022"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Stroke="{DynamicResource MediaButtonSymbolStroke}"
								Data="F1 M 286.387,428.246C 286.387,428.863 286.405,436.411 286.405,437.373C 286.405,438.433 285.896,438.751 285.031,438.268C 284.165,437.788 278.131,434.28 277.361,433.801C 276.591,433.318 276.491,432.39 277.258,431.935C 278.101,431.433 284.315,427.992 285.106,427.556C 285.938,427.102 286.387,427.631 286.387,428.246 Z "
								RenderTransformOrigin="0.5,0.5"
								IsHitTestVisible="False">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1"
											ScaleY="1" />
                                    <SkewTransform AngleX="0"
											AngleY="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform X="0"
											Y="0" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path Width="9.67438"
								Height="11.1026"
								Canvas.Left="11.227"
								Canvas.Top="6.688"
								Stretch="Fill"
								Data="F1 M 286.387,428.246C 286.387,428.863 286.405,436.411 286.405,437.373C 286.405,438.433 285.896,438.751 285.031,438.268C 284.165,437.788 278.131,434.28 277.361,433.801C 276.591,433.318 276.491,432.39 277.258,431.935C 278.101,431.433 284.315,427.992 285.106,427.556C 285.938,427.102 286.387,427.631 286.387,428.246 Z "
								Fill="{DynamicResource MediaButtonSymbolFill}"
								IsHitTestVisible="False" />
                        <Path Width="11.0077"
								Height="12.4359"
								Canvas.Left="10.563"
								Canvas.Top="6.022"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Stroke="{DynamicResource MediaButtonSymbolStroke}"
								Data="F1 M 286.387,428.246C 286.387,428.863 286.405,436.411 286.405,437.373C 286.405,438.433 285.896,438.751 285.031,438.268C 284.165,437.788 278.131,434.28 277.361,433.801C 276.591,433.318 276.491,432.39 277.258,431.935C 278.101,431.433 284.315,427.992 285.106,427.556C 285.938,427.102 286.387,427.631 286.387,428.246 Z "
								RenderTransformOrigin="0.5,0.5"
								IsHitTestVisible="False">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1"
											ScaleY="1" />
                                    <SkewTransform AngleX="0"
											AngleY="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform X="0"
											Y="0" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
								Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="OnMouseUp_BeginStoryboard1"
										Storyboard="{StaticResource OnMouseUp}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="OnMouseDown_BeginStoryboard1"
										Storyboard="{StaticResource OnMouseDown}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <BeginStoryboard x:Name="OnMouseEnter_BeginStoryboard"
									Storyboard="{StaticResource OnMouseEnter}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <BeginStoryboard x:Name="OnMouseLeave_BeginStoryboard"
									Storyboard="{StaticResource OnMouseLeave}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="NextButtonStyle"
			TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
				Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background"
				Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush"
				Value="{StaticResource ButtonNormalBorder}" />
        <Setter Property="BorderThickness"
				Value="1" />
        <Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment"
				Value="Center" />
        <Setter Property="VerticalContentAlignment"
				Value="Center" />
        <Setter Property="Padding"
				Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseLeave">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseEnter">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
										Value="0.985" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseDown">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDim"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseUp">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDim"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Canvas x:Name="NextButton"
							Width="47.738"
							Height="23.646"
							RenderTransformOrigin="0.5,0.5">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1"
										ScaleY="1" />
                                <SkewTransform AngleX="0"
										AngleY="0" />
                                <RotateTransform Angle="0" />
                                <TranslateTransform X="0"
										Y="0" />
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Highlight"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Stroke="{x:Null}"
								Data="F1 M 379.652,443.677C 381.506,440.51 382.575,436.829 382.575,432.894C 382.575,428.642 381.314,424.695 379.176,421.364L 336.17,421.364C 338.301,424.696 339.553,428.646 339.553,432.894C 339.553,436.83 338.474,440.506 336.623,443.677L 379.652,443.677 Z "
								Opacity="0"
								Fill="{DynamicResource FollowGradient}"
								IsHitTestVisible="True">
                            <Interactivity:Interaction.Behaviors>
                                <Behaviors:GradientFollowBehavior />
                            </Interactivity:Interaction.Behaviors>
                        </Path>
                        <Path Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Stroke="{DynamicResource MediaButtonBorder}"
								Data="F1 M 379.652,443.677C 381.506,440.51 382.575,436.829 382.575,432.894C 382.575,428.642 381.314,424.695 379.176,421.364L 336.17,421.364C 338.301,424.696 339.553,428.646 339.553,432.894C 339.553,436.83 338.474,440.506 336.623,443.677L 379.652,443.677 Z "
								Fill="{DynamicResource MediaButtonBackground}"
								IsHitTestVisible="False" />
                        <Path x:Name="ButtonDim"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Stroke="{x:Null}"
								Data="F1 M 379.652,443.677C 381.506,440.51 382.575,436.829 382.575,432.894C 382.575,428.642 381.314,424.695 379.176,421.364L 336.17,421.364C 338.301,424.696 339.553,428.646 339.553,432.894C 339.553,436.83 338.474,440.506 336.623,443.677L 379.652,443.677 Z "
								Fill="#99000000"
								IsHitTestVisible="False"
								Opacity="0" />
                        <Path Width="9.67441"
								Height="11.1026"
								Canvas.Left="15.838"
								Canvas.Top="6.688"
								Stretch="Fill"
								Data="F1 M 351.359,428.246C 351.359,428.863 351.341,436.411 351.341,437.373C 351.341,438.433 351.85,438.751 352.715,438.268C 353.581,437.788 359.615,434.28 360.385,433.801C 361.155,433.318 361.255,432.39 360.488,431.935C 359.646,431.433 353.431,427.992 352.64,427.556C 351.809,427.102 351.359,427.631 351.359,428.246 Z "
								RenderTransformOrigin="0.5,0.5"
								Fill="{DynamicResource MediaButtonSymbolFill}"
								StrokeThickness="1"
								IsHitTestVisible="False">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1"
											ScaleY="1" />
                                    <SkewTransform AngleX="0"
											AngleY="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform X="0"
											Y="0" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path Width="11.0077"
								Height="12.4359"
								Canvas.Left="15.171"
								Canvas.Top="6.022"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Stroke="{DynamicResource MediaButtonSymbolStroke}"
								Data="F1 M 351.359,428.246C 351.359,428.863 351.341,436.411 351.341,437.373C 351.341,438.433 351.85,438.751 352.715,438.268C 353.581,437.788 359.615,434.28 360.385,433.801C 361.155,433.318 361.255,432.39 360.488,431.935C 359.646,431.433 353.431,427.992 352.64,427.556C 351.809,427.102 351.359,427.631 351.359,428.246 Z "
								RenderTransformOrigin="0.5,0.5"
								IsHitTestVisible="False">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1"
											ScaleY="1" />
                                    <SkewTransform AngleX="0"
											AngleY="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform X="0"
											Y="0" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path Width="3.53305"
								Height="11.12"
								Canvas.Left="27.164"
								Canvas.Top="6.658"
								Stretch="Fill"
								Data="F1 M 366.2,438.087C 366.2,438.301 365.796,438.475 365.796,438.475L 363.071,438.475C 362.848,438.475 362.667,438.301 362.667,438.087L 362.667,427.743C 362.667,427.529 362.848,427.355 363.071,427.355L 365.796,427.355C 366.02,427.355 366.2,427.529 366.2,427.743L 366.2,438.087 Z "
								RenderTransformOrigin="0.5,0.5"
								Fill="{DynamicResource MediaButtonSymbolFill}"
								StrokeThickness="1"
								IsHitTestVisible="False">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1"
											ScaleY="1" />
                                    <SkewTransform AngleX="0"
											AngleY="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform X="0"
											Y="0" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path Width="4.86636"
								Height="12.4533"
								Canvas.Left="26.497"
								Canvas.Top="5.991"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Stroke="{DynamicResource MediaButtonSymbolStroke}"
								Data="F1 M 366.2,438.087C 366.2,438.301 365.796,438.475 365.796,438.475L 363.071,438.475C 362.848,438.475 362.667,438.301 362.667,438.087L 362.667,427.743C 362.667,427.529 362.848,427.355 363.071,427.355L 365.796,427.355C 366.02,427.355 366.2,427.529 366.2,427.743L 366.2,438.087 Z "
								RenderTransformOrigin="0.5,0.5"
								IsHitTestVisible="False">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1"
											ScaleY="1" />
                                    <SkewTransform AngleX="0"
											AngleY="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform X="0"
											Y="0" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
								Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="OnMouseUp_BeginStoryboard"
										Storyboard="{StaticResource OnMouseUp}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="OnMouseDown_BeginStoryboard"
										Storyboard="{StaticResource OnMouseDown}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <BeginStoryboard x:Name="OnMouseEnter_BeginStoryboard"
									Storyboard="{StaticResource OnMouseEnter}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <BeginStoryboard x:Name="OnMouseLeave_BeginStoryboard"
									Storyboard="{StaticResource OnMouseLeave}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FastForwardStyle"
			TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
				Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background"
				Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush"
				Value="{StaticResource ButtonNormalBorder}" />
        <Setter Property="BorderThickness"
				Value="1" />
        <Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment"
				Value="Center" />
        <Setter Property="VerticalContentAlignment"
				Value="Center" />
        <Setter Property="Padding"
				Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseLeave">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseEnter">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
										Value="0.985" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseDown">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDim"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseUp">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDim"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Canvas x:Name="NextButton"
							Width="47.738"
							Height="23.646"
							RenderTransformOrigin="0.5,0.5">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1"
										ScaleY="1" />
                                <SkewTransform AngleX="0"
										AngleY="0" />
                                <RotateTransform Angle="0" />
                                <TranslateTransform X="0"
										Y="0" />
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Highlight"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Stroke="{x:Null}"
								Data="F1 M 379.652,443.677C 381.506,440.51 382.575,436.829 382.575,432.894C 382.575,428.642 381.314,424.695 379.176,421.364L 336.17,421.364C 338.301,424.696 339.553,428.646 339.553,432.894C 339.553,436.83 338.474,440.506 336.623,443.677L 379.652,443.677 Z "
								Opacity="0"
								Fill="{DynamicResource FollowGradient}"
								IsHitTestVisible="True">
                            <Interactivity:Interaction.Behaviors>
                                <Behaviors:GradientFollowBehavior />
                            </Interactivity:Interaction.Behaviors>
                        </Path>
                        <Path Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Stroke="{DynamicResource MediaButtonBorder}"
								Data="F1 M 379.652,443.677C 381.506,440.51 382.575,436.829 382.575,432.894C 382.575,428.642 381.314,424.695 379.176,421.364L 336.17,421.364C 338.301,424.696 339.553,428.646 339.553,432.894C 339.553,436.83 338.474,440.506 336.623,443.677L 379.652,443.677 Z "
								Fill="{DynamicResource MediaButtonBackground}"
								IsHitTestVisible="False" />
                        <Path x:Name="ButtonDim"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Stroke="{x:Null}"
								Data="F1 M 379.652,443.677C 381.506,440.51 382.575,436.829 382.575,432.894C 382.575,428.642 381.314,424.695 379.176,421.364L 336.17,421.364C 338.301,424.696 339.553,428.646 339.553,432.894C 339.553,436.83 338.474,440.506 336.623,443.677L 379.652,443.677 Z "
								Fill="#99000000"
								IsHitTestVisible="False"
								Opacity="0" />
                        <Path Width="9.67441"
								Height="11.1026"
								Canvas.Left="15.838"
								Canvas.Top="6.688"
								Stretch="Fill"
								Data="F1 M 351.359,428.246C 351.359,428.863 351.341,436.411 351.341,437.373C 351.341,438.433 351.85,438.751 352.715,438.268C 353.581,437.788 359.615,434.28 360.385,433.801C 361.155,433.318 361.255,432.39 360.488,431.935C 359.646,431.433 353.431,427.992 352.64,427.556C 351.809,427.102 351.359,427.631 351.359,428.246 Z "
								RenderTransformOrigin="0.5,0.5"
								Fill="{DynamicResource MediaButtonSymbolFill}"
								StrokeThickness="1"
								IsHitTestVisible="False">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1"
											ScaleY="1" />
                                    <SkewTransform AngleX="0"
											AngleY="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform X="0"
											Y="0" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path Width="11.0077"
								Height="12.4359"
								Canvas.Left="15.171"
								Canvas.Top="6.022"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Stroke="{DynamicResource MediaButtonSymbolStroke}"
								Data="F1 M 351.359,428.246C 351.359,428.863 351.341,436.411 351.341,437.373C 351.341,438.433 351.85,438.751 352.715,438.268C 353.581,437.788 359.615,434.28 360.385,433.801C 361.155,433.318 361.255,432.39 360.488,431.935C 359.646,431.433 353.431,427.992 352.64,427.556C 351.809,427.102 351.359,427.631 351.359,428.246 Z "
								RenderTransformOrigin="0.5,0.5"
								IsHitTestVisible="False">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1"
											ScaleY="1" />
                                    <SkewTransform AngleX="0"
											AngleY="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform X="0"
											Y="0" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path Width="9.67441"
								Height="11.1026"
								Canvas.Left="26.838"
								Canvas.Top="6.688"
								Stretch="Fill"
								Data="F1 M 351.359,428.246C 351.359,428.863 351.341,436.411 351.341,437.373C 351.341,438.433 351.85,438.751 352.715,438.268C 353.581,437.788 359.615,434.28 360.385,433.801C 361.155,433.318 361.255,432.39 360.488,431.935C 359.646,431.433 353.431,427.992 352.64,427.556C 351.809,427.102 351.359,427.631 351.359,428.246 Z "
								RenderTransformOrigin="0.5,0.5"
								Fill="{DynamicResource MediaButtonSymbolFill}"
								StrokeThickness="1"
								IsHitTestVisible="False">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1"
											ScaleY="1" />
                                    <SkewTransform AngleX="0"
											AngleY="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform X="0"
											Y="0" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path Width="11.0077"
								Height="12.4359"
								Canvas.Left="26.171"
								Canvas.Top="6.022"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Stroke="{DynamicResource MediaButtonSymbolStroke}"
								Data="F1 M 351.359,428.246C 351.359,428.863 351.341,436.411 351.341,437.373C 351.341,438.433 351.85,438.751 352.715,438.268C 353.581,437.788 359.615,434.28 360.385,433.801C 361.155,433.318 361.255,432.39 360.488,431.935C 359.646,431.433 353.431,427.992 352.64,427.556C 351.809,427.102 351.359,427.631 351.359,428.246 Z "
								RenderTransformOrigin="0.5,0.5"
								IsHitTestVisible="False">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1"
											ScaleY="1" />
                                    <SkewTransform AngleX="0"
											AngleY="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform X="0"
											Y="0" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
								Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="OnMouseUp_BeginStoryboard"
										Storyboard="{StaticResource OnMouseUp}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="OnMouseDown_BeginStoryboard"
										Storyboard="{StaticResource OnMouseDown}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <BeginStoryboard x:Name="OnMouseEnter_BeginStoryboard"
									Storyboard="{StaticResource OnMouseEnter}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <BeginStoryboard x:Name="OnMouseLeave_BeginStoryboard"
									Storyboard="{StaticResource OnMouseLeave}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MediaPlayPauseToggleStyle"
			TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle"
				Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background"
				Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush"
				Value="{StaticResource ButtonNormalBorder}" />
        <Setter Property="BorderThickness"
				Value="1" />
        <Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment"
				Value="Center" />
        <Setter Property="VerticalContentAlignment"
				Value="Center" />
        <Setter Property="Padding"
				Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
										Value="0.99" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeave">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseDown">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDim"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseUp">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDim"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PlaySymbolShow">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="PlaySymbol"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="PauseSymbol"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PauseSymbolShow">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="PauseSymbol"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="PlaySymbol"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Canvas x:Name="PlayPauseButton"
							Margin="0,0,26.112,10.113">
                        <Path x:Name="Highlight"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Data="F1 M 336.909,432.795C 336.909,442.751 328.838,450.822 318.882,450.822C 308.926,450.822 300.854,442.751 300.854,432.795C 300.854,422.84 308.926,414.768 318.882,414.768C 328.838,414.768 336.909,422.84 336.909,432.795 Z "
								Stroke="{x:Null}"
								Opacity="0"
								Fill="{DynamicResource FollowGradient}"
								IsHitTestVisible="True">
                            <Interactivity:Interaction.Behaviors>
                                <Behaviors:GradientFollowBehavior />
                            </Interactivity:Interaction.Behaviors>
                        </Path>
                        <Path x:Name="ButtonShape"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Data="F1 M 336.909,432.795C 336.909,442.751 328.838,450.822 318.882,450.822C 308.926,450.822 300.854,442.751 300.854,432.795C 300.854,422.84 308.926,414.768 318.882,414.768C 328.838,414.768 336.909,422.84 336.909,432.795 Z "
								Fill="#00000000"
								Stroke="{DynamicResource MediaButtonBorder}"
								IsHitTestVisible="False" />
                        <Path x:Name="ButtonDim"
								Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Data="F1 M 336.909,432.795C 336.909,442.751 328.838,450.822 318.882,450.822C 308.926,450.822 300.854,442.751 300.854,432.795C 300.854,422.84 308.926,414.768 318.882,414.768C 328.838,414.768 336.909,422.84 336.909,432.795 Z "
								Fill="#99000000"
								Stroke="{x:Null}"
								IsHitTestVisible="False"
								Opacity="0" />
                        <Path Width="35.4033"
								Height="35.2073"
								Canvas.Left="1.014"
								Canvas.Top="1.09"
								Stretch="Fill"
								StrokeThickness="1.33333"
								StrokeLineJoin="Round"
								Stroke="#34000000"
								Data="F1 M 335.938,432.796C 335.938,442.148 328.31,449.732 318.902,449.732C 309.495,449.732 301.868,442.148 301.868,432.796C 301.868,423.442 309.495,415.858 318.902,415.858C 328.31,415.858 335.938,423.442 335.938,432.796 Z "
								IsHitTestVisible="False" />
                        <Canvas x:Name="PauseSymbol"
								Opacity="0"
								Width="35.99"
								Height="27.829"
								Canvas.Left="0"
								Canvas.Top="0.765"
								IsHitTestVisible="False">
                            <Path Width="5.66733"
									Height="19.6623"
									Canvas.Left="12.124"
									Canvas.Top="8.932"
									Stretch="Fill"
									StrokeThickness="1"
									StrokeLineJoin="Round"
									Stroke="{DynamicResource MediaButtonSymbolStroke}"
									Data="F1 M 317.312,440.332C 317.312,441.27 316.342,442.029 315.146,442.029C 313.948,442.029 312.978,441.27 312.978,440.332L 312.978,425.398C 312.978,424.46 313.948,423.7 315.146,423.7C 316.342,423.7 317.312,424.46 317.312,425.398L 317.312,440.332 Z "
									RenderTransformOrigin="0.5,0.5"
									Fill="{DynamicResource MediaButtonSymbolFill}">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1"
												ScaleY="1" />
                                        <SkewTransform AngleX="0"
												AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0"
												Y="0" />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <Path Width="5.66733"
									Height="19.6623"
									Stretch="Fill"
									StrokeThickness="1"
									StrokeLineJoin="Round"
									Stroke="{DynamicResource MediaButtonSymbolStroke}"
									Data="F1 M 317.312,440.332C 317.312,441.27 316.342,442.029 315.146,442.029C 313.948,442.029 312.978,441.27 312.978,440.332L 312.978,425.398C 312.978,424.46 313.948,423.7 315.146,423.7C 316.342,423.7 317.312,424.46 317.312,425.398L 317.312,440.332 Z "
									RenderTransformOrigin="0.5,0.5"
									Canvas.Left="19.728"
									Canvas.Top="8.932"
									Fill="{DynamicResource MediaButtonSymbolFill}">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1"
												ScaleY="1" />
                                        <SkewTransform AngleX="0"
												AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0"
												Y="0" />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Canvas>
                        <Path x:Name="PlaySymbol"
								Width="16.3452"
								Height="18.561"
								Stretch="Fill"
								Data="F1 M 312.65,425.66C 312.65,426.616 312.62,438.328 312.62,439.822C 312.62,441.465 313.408,441.957 314.752,441.211C 316.097,440.465 325.459,435.021 326.655,434.275C 327.85,433.529 328.002,432.087 326.814,431.381C 325.505,430.603 315.863,425.264 314.633,424.589C 313.344,423.882 312.65,424.703 312.65,425.66 Z "
								RenderTransformOrigin="0.5,0.5"
								Canvas.Left="12.5"
								Canvas.Top="9.5"
								Stroke="{DynamicResource MediaButtonSymbolStroke}"
								Fill="{DynamicResource MediaButtonSymbolFill}"
								IsHitTestVisible="False">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1"
											ScaleY="1" />
                                    <SkewTransform AngleX="0"
											AngleY="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform X="0"
											Y="0" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path Width="35.99"
								Height="17.979"
								Canvas.Left="0.7"
								Canvas.Top="0.765"
								Stretch="Fill"
								Data="F1 M 318.882,414.866C 309.142,414.866 301.227,422.598 300.887,432.254C 306.175,434.078 312.304,431.098 318.882,431.098C 325.454,431.098 331.744,433.744 336.877,432.256C 336.538,422.599 328.623,414.866 318.882,414.866 Z "
								IsHitTestVisible="False">
                            <Path.Fill>
                                <LinearGradientBrush EndPoint="0.5,1"
										StartPoint="0.5,0">
                                    <GradientStop Color="#EEFFFFFF"
											Offset="0" />
                                    <GradientStop Color="#00FFFFFF"
											Offset="1" />
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
								Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PauseSymbolShow_BeginStoryboard"
										Storyboard="{StaticResource PauseSymbolShow}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PlaySymbolShow_BeginStoryboard"
										Storyboard="{StaticResource PlaySymbolShow}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed"
								Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="OnMouseUp_BeginStoryboard"
										Storyboard="{StaticResource OnMouseUp}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="OnMouseDown_BeginStoryboard"
										Storyboard="{StaticResource OnMouseDown}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <BeginStoryboard x:Name="OnMouseEnter_BeginStoryboard"
									Storyboard="{StaticResource OnMouseEnter}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <BeginStoryboard x:Name="OnMouseLeave_BeginStoryboard"
									Storyboard="{StaticResource OnMouseLeave}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DecreaseRepeatButtonStyle"
			TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
				Value="true" />
        <Setter Property="IsTabStop"
				Value="false" />
        <Setter Property="Focusable"
				Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Height="Auto">
                        <Rectangle RadiusX="0"
								RadiusY="0"
								Margin="0,0,-2,0"
								OpacityMask="{x:Null}">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1"
										StartPoint="0.5,0">
                                    <GradientStop Color="#00005DFF"
											Offset="0.086" />
                                    <GradientStop Color="#E5FFFFFF"
											Offset="0.509" />
                                    <GradientStop Color="#00005DFF"
											Offset="0.944" />
                                    <GradientStop Color="#C83792E7"
											Offset="0.457" />
                                    <GradientStop Color="#D33A95E6"
											Offset="0.573" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="Glassage"
			EndPoint="0.016,0.35"
			StartPoint="0.738,-2.157">
        <GradientStop Color="#00FFFFFF"
				Offset="0" />
        <GradientStop Color="#27F2F2F2"
				Offset="0.043" />
        <GradientStop Color="#00E4E4E4"
				Offset="0.082" />
        <GradientStop Color="#3AC7C7C7"
				Offset="0.254" />
        <GradientStop Color="#00C3C3C3"
				Offset="0.315" />
        <GradientStop Color="#00A1A1A1"
				Offset="0.466" />
        <GradientStop Color="#6D8D8D8D"
				Offset="0.5" />
        <GradientStop Color="#00848484"
				Offset="0.543" />
        <GradientStop Color="#6E606060"
				Offset="0.759" />
        <GradientStop Color="#1FFFFFFF"
				Offset="0.806" />
        <GradientStop Color="#004E4E4E"
				Offset="0.849" />
        <GradientStop Color="#00DEDEDE"
				Offset="0.112" />
        <GradientStop Color="#1AD1D1D1"
				Offset="0.138" />
        <GradientStop Color="#00FFFFFF"
				Offset="1" />
        <GradientStop Color="#0C9A9A9A"
				Offset="0.922" />
        <GradientStop Color="#2A767676"
				Offset="0.681" />
    </LinearGradientBrush>
    <Style x:Key="StopMediaButton"
			TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
				Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background"
				Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush"
				Value="{StaticResource ButtonNormalBorder}" />
        <Setter Property="BorderThickness"
				Value="1" />
        <Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment"
				Value="Center" />
        <Setter Property="VerticalContentAlignment"
				Value="Center" />
        <Setter Property="Padding"
				Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
										Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeave">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseDown">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDim"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseUp">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDim"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle x:Name="Highlight"
								Width="Auto"
								Height="Auto"
								Fill="{DynamicResource FollowGradient}"
								Stroke="{x:Null}"
								StrokeThickness="1,1,1,1"
								RadiusX="4"
								RadiusY="4"
								Opacity="0"
								IsHitTestVisible="True">
                            <Interactivity:Interaction.Behaviors>
                                <Behaviors:GradientFollowBehavior />
                            </Interactivity:Interaction.Behaviors>
                        </Rectangle>
                        <Border x:Name="ButtonDim"
								Width="Auto"
								Height="Auto"
								Background="#99000000"
								BorderBrush="{x:Null}"
								BorderThickness="1,1,1,1"
								CornerRadius="4,4,4,4"
								Opacity="0"
								IsHitTestVisible="False" />
                        <Border Width="Auto"
								Height="Auto"
								Background="{DynamicResource MediaButtonBackground}"
								BorderBrush="{DynamicResource MediaButtonBorder}"
								BorderThickness="1,1,1,1"
								CornerRadius="4,4,4,4"
								Padding="4"
								IsHitTestVisible="False">
                            <Viewbox HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Canvas HorizontalAlignment="Left" Height="30" Margin="0" VerticalAlignment="Top" Width="31">
                                    <Path Data="M0,0 h 24 v 24 h -24 v -24 z" Fill="#FFF4F4F5" Height="24" Stretch="Fill" Stroke="Black" Width="24" Canvas.Left="3" Canvas.Top="3"/>
                                </Canvas>
                            </Viewbox>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
								Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="OnMouseUp_BeginStoryboard"
										Storyboard="{StaticResource OnMouseUp}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="OnMouseDown_BeginStoryboard"
										Storyboard="{StaticResource OnMouseDown}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <BeginStoryboard x:Name="OnMouseLeave_BeginStoryboard"
									Storyboard="{StaticResource OnMouseLeave}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <BeginStoryboard x:Name="OnMouseEnter_BeginStoryboard"
									Storyboard="{StaticResource OnMouseEnter}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OpenMediaButton"
			TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
				Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background"
				Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush"
				Value="{StaticResource ButtonNormalBorder}" />
        <Setter Property="BorderThickness"
				Value="1" />
        <Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment"
				Value="Center" />
        <Setter Property="VerticalContentAlignment"
				Value="Center" />
        <Setter Property="Padding"
				Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
										Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeave">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseDown">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDim"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseUp">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDim"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle x:Name="Highlight"
								Width="Auto"
								Height="Auto"
								Fill="{DynamicResource FollowGradient}"
								Stroke="{x:Null}"
								StrokeThickness="1,1,1,1"
								RadiusX="4"
								RadiusY="4"
								Opacity="0"
								IsHitTestVisible="True">
                            <Interactivity:Interaction.Behaviors>
                                <Behaviors:GradientFollowBehavior />
                            </Interactivity:Interaction.Behaviors>
                        </Rectangle>
                        <Border x:Name="ButtonDim"
								Width="Auto"
								Height="Auto"
								Background="#99000000"
								BorderBrush="{x:Null}"
								BorderThickness="1,1,1,1"
								CornerRadius="4,4,4,4"
								Opacity="0"
								IsHitTestVisible="False" />
                        <Border Width="Auto"
								Height="Auto"
								Background="{DynamicResource MediaButtonBackground}"
								BorderBrush="{DynamicResource MediaButtonBorder}"
								BorderThickness="1,1,1,1"
								CornerRadius="4,4,4,4"
								Padding="4"
								IsHitTestVisible="False">
                            <Viewbox HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Canvas HorizontalAlignment="Left" Height="30" Margin="0" VerticalAlignment="Top" Width="31">
                                    <Path Data="M50.000004,0.5 L99.500008,61.5 L0.50000024,61.5 z" Fill="#FFF4F4F5" Height="19.31" Stretch="Fill" Stroke="Black" Width="30.845" Canvas.Left="0.077"/>
                                    <Path Data="M0.5,0.5 L99.5,0.5 L99.5,18.5 L0.5,18.5 z" Fill="#FFF4F4F5" Height="5.966" Stretch="Fill" Stroke="Black" Width="31" Canvas.Top="23.784"/>
                                </Canvas>
                            </Viewbox>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
								Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="OnMouseUp_BeginStoryboard"
										Storyboard="{StaticResource OnMouseUp}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="OnMouseDown_BeginStoryboard"
										Storyboard="{StaticResource OnMouseDown}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <BeginStoryboard x:Name="OnMouseLeave_BeginStoryboard"
									Storyboard="{StaticResource OnMouseLeave}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <BeginStoryboard x:Name="OnMouseEnter_BeginStoryboard"
									Storyboard="{StaticResource OnMouseEnter}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ShowImdbButton"
			TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
				Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background"
				Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush"
				Value="{StaticResource ShineBrush}" />
        <Setter Property="BorderThickness"
				Value="1" />
        <Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment"
				Value="Center" />
        <Setter Property="VerticalContentAlignment"
				Value="Center" />
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Padding"
				Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
										Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeave">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseDown">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDim"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseUp">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDim"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle x:Name="Highlight"
								Width="Auto"
								Height="Auto"
								Fill="{DynamicResource FollowGradient}"
								Stroke="{x:Null}"
								StrokeThickness="1,1,1,1"
								RadiusX="4"
								RadiusY="4"
								Opacity="0"
								IsHitTestVisible="True">
                            <Interactivity:Interaction.Behaviors>
                                <Behaviors:GradientFollowBehavior />
                            </Interactivity:Interaction.Behaviors>
                        </Rectangle>
                        <Border x:Name="ButtonDim"
								Width="Auto"
								Height="Auto"
								Background="#99000000"
								BorderBrush="{x:Null}"
								BorderThickness="1,1,1,1"
								CornerRadius="4,4,4,4"
								Opacity="0"
								IsHitTestVisible="False" />
                        <ContentPresenter IsHitTestVisible="False"/>
                        <Border Width="Auto"
								Height="Auto"
								Background="{DynamicResource MediaButtonBackground}"
								BorderBrush="{DynamicResource MediaButtonBorder}"
								BorderThickness="1,1,1,1"
								CornerRadius="4,4,4,4"
								Padding="4"
								IsHitTestVisible="False">
                            <!--<Viewbox HorizontalAlignment="Stretch" VerticalAlignment="Stretch">-->
                            <!--</Viewbox>-->
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
								Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="OnMouseUp_BeginStoryboard"
										Storyboard="{StaticResource OnMouseUp}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="OnMouseDown_BeginStoryboard"
										Storyboard="{StaticResource OnMouseDown}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <BeginStoryboard x:Name="OnMouseLeave_BeginStoryboard"
									Storyboard="{StaticResource OnMouseLeave}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <BeginStoryboard x:Name="OnMouseEnter_BeginStoryboard"
									Storyboard="{StaticResource OnMouseEnter}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ShowImdbButtonToggle"
			TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle"
				Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background"
				Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush"
				Value="{StaticResource ShineBrush}" />
        <Setter Property="BorderThickness"
				Value="1" />
        <Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment"
				Value="Center" />
        <Setter Property="VerticalContentAlignment"
				Value="Center" />
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Padding"
				Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
										Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeave">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseDown">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDim"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseUp">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDim"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border Visibility="Hidden"
                                Name="btn"
                                Width="Auto"
								Height="Auto"
								Background="{DynamicResource FollowGradient}"
								BorderBrush="Transparent"
								BorderThickness="1,1,1,1"
								CornerRadius="4,4,4,4"
								Padding="4"
								IsHitTestVisible="False">
                        </Border>
                        <Rectangle x:Name="Highlight"
								Width="Auto"
								Height="Auto"
								Fill="{DynamicResource FollowGradient}"
								Stroke="{x:Null}"
								StrokeThickness="1,1,1,1"
								RadiusX="4"
								RadiusY="4"
								Opacity="0"
								IsHitTestVisible="True">
                            <Interactivity:Interaction.Behaviors>
                                <Behaviors:GradientFollowBehavior />
                            </Interactivity:Interaction.Behaviors>
                        </Rectangle>
                        <Border x:Name="ButtonDim"
								Width="Auto"
								Height="Auto"
								Background="#99000000"
								BorderBrush="{x:Null}"
								BorderThickness="1,1,1,1"
								CornerRadius="4,4,4,4"
								Opacity="0"
								IsHitTestVisible="False" />
                        <ContentPresenter IsHitTestVisible="False"/>                        
                        <Border 
                                Width="Auto"
								Height="Auto"
								Background="{DynamicResource MediaButtonBackground}"
								BorderBrush="{DynamicResource MediaButtonBorder}"
								BorderThickness="1,1,1,1"
								CornerRadius="4,4,4,4"
								Padding="4"
								IsHitTestVisible="False">
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="btn" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
								Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="OnMouseUp_BeginStoryboard"
										Storyboard="{StaticResource OnMouseUp}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="OnMouseDown_BeginStoryboard"
										Storyboard="{StaticResource OnMouseDown}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <BeginStoryboard x:Name="OnMouseLeave_BeginStoryboard"
									Storyboard="{StaticResource OnMouseLeave}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <BeginStoryboard x:Name="OnMouseEnter_BeginStoryboard"
									Storyboard="{StaticResource OnMouseEnter}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ShowImdbButton}"/>
    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ShowImdbButtonToggle}"/>
        
    <Style x:Key="AudioSliderStyle"
			TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
				Value="false" />
        <Setter Property="Background"
				Value="Transparent" />
        <Setter Property="Foreground"
				Value="#FFC4C4C4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border SnapsToDevicePixels="true"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto"
										MinHeight="{TemplateBinding MinHeight}" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick"
									Height="4"
									Visibility="Collapsed"
									Grid.Row="0"
									Fill="{TemplateBinding Foreground}"
									Placement="Top" />
                            <TickBar x:Name="BottomTick"
									Height="4"
									Visibility="Collapsed"
									Grid.Row="2"
									Fill="{TemplateBinding Foreground}"
									Placement="Bottom" />
                            <Border x:Name="TrackBackground"
									Margin="5,0"
									VerticalAlignment="center"
									Height="4.0"
									BorderThickness="1"
									CornerRadius="1"
									Grid.Row="1"
									BorderBrush="#FF2A2A2A">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1"
											StartPoint="0.5,0">
                                        <GradientStop Color="#FF000000"
												Offset="1" />
                                        <GradientStop Color="#FFFF6700"
												Offset="0" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Canvas Margin="-6,-1">
                                    <Rectangle x:Name="PART_SelectionRange"
											Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
											Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
											StrokeThickness="1.0"
											Height="4.0"
											Visibility="Hidden" />
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track"
									Grid.Row="1">
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
											Command="{x:Static Slider.IncreaseLarge}" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{DynamicResource AudioRepeatButtonStyle}"
											Command="{x:Static Slider.DecreaseLarge}" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb"
											Style="{DynamicResource AudioThumbStyle}"
											Width="10"
											Height="10" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement"
								Value="TopLeft">
                            <Setter Property="Visibility"
									TargetName="TopTick"
									Value="Visible" />
                            <Setter Property="Style"
									TargetName="Thumb"
									Value="{StaticResource HorizontalSliderUpThumbStyle}" />
                            <Setter Property="Margin"
									TargetName="TrackBackground"
									Value="5,2,5,0" />
                        </Trigger>
                        <Trigger Property="TickPlacement"
								Value="BottomRight">
                            <Setter Property="Visibility"
									TargetName="BottomTick"
									Value="Visible" />
                            <Setter Property="Style"
									TargetName="Thumb"
									Value="{StaticResource HorizontalSliderDownThumbStyle}" />
                            <Setter Property="Margin"
									TargetName="TrackBackground"
									Value="5,0,5,2" />
                        </Trigger>
                        <Trigger Property="TickPlacement"
								Value="Both">
                            <Setter Property="Visibility"
									TargetName="TopTick"
									Value="Visible" />
                            <Setter Property="Visibility"
									TargetName="BottomTick"
									Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled"
								Value="true">
                            <Setter Property="Visibility"
									TargetName="PART_SelectionRange"
									Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
								Value="true">
                            <Setter Property="Foreground"
									TargetName="Thumb"
									Value="Blue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
					Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border SnapsToDevicePixels="true"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}"
												Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TickBar x:Name="TopTick"
											Width="4"
											Visibility="Collapsed"
											Grid.Column="0"
											Fill="{TemplateBinding Foreground}"
											Placement="Left" />
                                    <TickBar x:Name="BottomTick"
											Width="4"
											Visibility="Collapsed"
											Grid.Column="2"
											Fill="{TemplateBinding Foreground}"
											Placement="Right" />
                                    <Border x:Name="TrackBackground"
											HorizontalAlignment="center"
											Margin="0,5"
											Width="4.0"
											Background="{StaticResource HorizontalSliderTrackNormalBackground}"
											BorderBrush="{StaticResource VerticalSliderTrackNormalBorder}"
											BorderThickness="1"
											CornerRadius="1"
											Grid.Column="1">
                                        <Canvas Margin="-1,-6">
                                            <Rectangle x:Name="PART_SelectionRange"
													Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
													Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
													StrokeThickness="1.0"
													Width="4.0"
													Visibility="Hidden" />
                                        </Canvas>
                                    </Border>
                                    <Track x:Name="PART_Track"
											Grid.Column="1">
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb"
													Style="{StaticResource VerticalSliderThumbStyle}" />
                                        </Track.Thumb>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
													Command="{x:Static Slider.IncreaseLarge}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
													Command="{x:Static Slider.DecreaseLarge}" />
                                        </Track.DecreaseRepeatButton>
                                    </Track>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement"
										Value="TopLeft">
                                    <Setter Property="Visibility"
											TargetName="TopTick"
											Value="Visible" />
                                    <Setter Property="Style"
											TargetName="Thumb"
											Value="{StaticResource VerticalSliderLeftThumbStyle}" />
                                    <Setter Property="Margin"
											TargetName="TrackBackground"
											Value="2,5,0,5" />
                                </Trigger>
                                <Trigger Property="TickPlacement"
										Value="BottomRight">
                                    <Setter Property="Visibility"
											TargetName="BottomTick"
											Value="Visible" />
                                    <Setter Property="Style"
											TargetName="Thumb"
											Value="{StaticResource VerticalSliderRightThumbStyle}" />
                                    <Setter Property="Margin"
											TargetName="TrackBackground"
											Value="0,5,2,5" />
                                </Trigger>
                                <Trigger Property="TickPlacement"
										Value="Both">
                                    <Setter Property="Visibility"
											TargetName="TopTick"
											Value="Visible" />
                                    <Setter Property="Visibility"
											TargetName="BottomTick"
											Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled"
										Value="true">
                                    <Setter Property="Visibility"
											TargetName="PART_SelectionRange"
											Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
										Value="true">
                                    <Setter Property="Foreground"
											TargetName="Thumb"
											Value="Blue" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="AudioThumbStyle"
			TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
				Value="false" />
        <Setter Property="OverridesDefaultStyle"
				Value="true" />
        <Setter Property="Height"
				Value="22" />
        <Setter Property="Width"
				Value="11" />
        <Setter Property="Foreground"
				Value="Gray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas RenderTransformOrigin="0.5,0.5"
							SnapsToDevicePixels="true"
							Width="10.947"
							HorizontalAlignment="Left">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1"
										ScaleY="1" />
                                <SkewTransform AngleX="0"
										AngleY="0" />
                                <RotateTransform Angle="0" />
                                <TranslateTransform X="0"
										Y="0" />
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path Stretch="Fill"
								StrokeThickness="1"
								StrokeLineJoin="Round"
								Data="F1 M 265.57,406.014C 265.57,408.559 263.507,410.622 260.961,410.622L 254.082,410.622C 251.536,410.622 249.473,408.559 249.473,406.014C 249.473,403.468 251.536,401.404 254.082,401.404L 260.961,401.404C 263.507,401.404 265.57,403.468 265.57,406.014 Z "
								Stroke="{DynamicResource MediaButtonBorder}"
								Canvas.Top="0"
								Height="10"
								Canvas.Left="0"
								Width="10">
                            <Path.Fill>
                                <LinearGradientBrush StartPoint="0.500011,0.0421621"
										EndPoint="0.500011,0.930457">
                                    <GradientStop Color="#FF545454"
											Offset="0" />
                                    <GradientStop Color="#FF474747"
											Offset="0.215" />
                                    <GradientStop Color="#FF313131"
											Offset="0.47" />
                                    <GradientStop Color="#FF000000"
											Offset="0.491" />
                                    <GradientStop Color="#FF1D1D1D"
											Offset="0.938931" />
                                    <GradientStop Color="#FF1D1D1D"
											Offset="1" />
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
								Value="true" />
                        <Trigger Property="Foreground"
								Value="Blue" />
                        <Trigger Property="IsDragging"
								Value="true" />
                        <Trigger Property="IsEnabled"
								Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AudioRepeatButtonStyle"
			TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
				Value="true" />
        <Setter Property="IsTabStop"
				Value="false" />
        <Setter Property="Focusable"
				Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Height="10">
                        <Rectangle RadiusX="0"
								RadiusY="0"
								Margin="0,0,-2,0">
                            <Rectangle.OpacityMask>
                                <LinearGradientBrush EndPoint="0.309,0.5"
										StartPoint="0.691,0.5">
                                    <GradientStop Color="#FF000000"
											Offset="0" />
                                    <GradientStop Color="#00000000"
											Offset="1" />
                                </LinearGradientBrush>
                            </Rectangle.OpacityMask>
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1"
										StartPoint="0.5,0">
                                    <GradientStop Color="#00FF7F00"
											Offset="0" />
                                    <GradientStop Color="#E5FFFFFF"
											Offset="0.524" />
                                    <GradientStop Color="#00FF8B00"
											Offset="1" />
                                    <GradientStop Color="#A6E7BF37"
											Offset="0.373" />
                                    <GradientStop Color="#A5E6BF3A"
											Offset="0.673" />
                                    <GradientStop Color="#DEFFFFFF"
											Offset="0.579" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextMediaButton"
			TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
				Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background"
				Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush"
				Value="{StaticResource ButtonNormalBorder}" />
        <Setter Property="BorderThickness"
				Value="1" />
        <Setter Property="Foreground"
				Value="#EEAAAAAA" />
        <Setter Property="HorizontalContentAlignment"
				Value="Center" />
        <Setter Property="VerticalContentAlignment"
				Value="Center" />
        <Setter Property="Padding"
				Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
										Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeave">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="Highlight"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseDown">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDim"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseUp">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
									Storyboard.TargetName="ButtonDim"
									Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
										Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle x:Name="Highlight"
								Width="Auto"
								Height="Auto"
								Fill="{DynamicResource FollowGradient}"
								Stroke="{x:Null}"
								StrokeThickness="1,1,1,1"
								RadiusX="2"
								RadiusY="2"
								Opacity="0"
								IsHitTestVisible="True">
                            <Interactivity:Interaction.Behaviors>
                                <Behaviors:GradientFollowBehavior />
                            </Interactivity:Interaction.Behaviors>
                        </Rectangle>
                        <Border x:Name="ButtonDim"
								Width="Auto"
								Height="Auto"
								Background="#99000000"
								BorderBrush="{x:Null}"
								BorderThickness="1,1,1,1"
								CornerRadius="4,4,4,4"
								Opacity="0"
								IsHitTestVisible="False" />
                        <Border Width="Auto"
								Height="Auto"
								Background="{DynamicResource MediaButtonBackground}"
								BorderBrush="{DynamicResource MediaButtonBorder}"
								BorderThickness="1,1,1,1"
								CornerRadius="2"
								IsHitTestVisible="False">
                            <ContentControl Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
								Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="OnMouseUp_BeginStoryboard"
										Storyboard="{StaticResource OnMouseUp}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="OnMouseDown_BeginStoryboard"
										Storyboard="{StaticResource OnMouseDown}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <BeginStoryboard x:Name="OnMouseLeave_BeginStoryboard"
									Storyboard="{StaticResource OnMouseLeave}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <BeginStoryboard x:Name="OnMouseEnter_BeginStoryboard"
									Storyboard="{StaticResource OnMouseEnter}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ControlBackgroundBrush" Color="#FF333333" />

    <LinearGradientBrush x:Key="SelectedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource TopGradientSelectColor}" Offset="0" />
        <GradientStop Color="{StaticResource BottomGradientSelectColor}" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#FF787878" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FF595959" />

    <!-- EXPRESSION COMMON VALUES -->

    <SolidColorBrush x:Key="DefaultedBorderBrush" Color="{StaticResource DefaultColor}" />
    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template" Value="{DynamicResource CheckBoxTemplate}" />
    </Style>

    <ControlTemplate x:Key="CheckBoxTemplate" TargetType="{x:Type CheckBox}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="CheckedTrue">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="CheckedFalse">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="IndeterminateOn">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="IndeterminateOff">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocussedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocussedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <BulletDecorator Background="Transparent" x:Name="bulletDecorator">
            <BulletDecorator.Bullet>
                <Grid Width="16" Height="16">
                    <Rectangle Height="14" Margin="1" x:Name="Background" Width="14" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                    <Rectangle Height="14" Margin="1" x:Name="BackgroundOverlay" Width="14" Opacity="0" Fill="{x:Null}" Stroke="{StaticResource HoverBrush}" StrokeThickness="2" />
                    <Rectangle Height="16" x:Name="PressedRectangle" Width="16" IsHitTestVisible="false" Opacity="0" Stroke="{StaticResource HoverBrush}" StrokeThickness="1" />
                    <Path Height="10" Margin="1,1,0,1.5" x:Name="CheckIcon" Width="10.5" Opacity="0" Fill="{StaticResource GlyphBrush}" Stretch="Fill" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z" />
                    <Rectangle Height="8" x:Name="IndeterminateIcon" Width="10" Opacity="0" Fill="{StaticResource GlyphBrush}" />
                    <Rectangle Height="14" x:Name="DisabledVisualElement" Width="14" Opacity="0" Fill="{StaticResource DisabledBackgroundBrush}" />
                    <Rectangle Height="16" x:Name="ContentFocusVisualElement" Width="16" IsHitTestVisible="false" Opacity="0" Stroke="{StaticResource HoverShineBrush}" StrokeThickness="1" />
                    <Rectangle Height="12" x:Name="ShineRectangle" Width="14" IsHitTestVisible="false" Opacity="1" Stroke="{x:Null}" StrokeThickness="1" Fill="{StaticResource ShineBrush}" Margin="2,2,2,2" />
                </Grid>
            </BulletDecorator.Bullet>
            <ContentPresenter RecognizesAccessKey="True" Margin="5,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
        </BulletDecorator>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource FocussedOff}" x:Name="FocussedOff_BeginStoryboard" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource FocussedOn}" x:Name="FocussedOn_BeginStoryboard" />
                </Trigger.EnterActions>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsThreeState" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard x:Name="ThreeStateOn_BeginStoryboard" Storyboard="{StaticResource CheckedFalse}" />
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard x:Name="ThreeStateOff_BeginStoryboard" Storyboard="{StaticResource CheckedTrue}" />
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="{x:Null}" />
                    <Condition Property="IsThreeState" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard x:Name="ThreeStateOn1_BeginStoryboard" Storyboard="{StaticResource IndeterminateOn}" />
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard x:Name="ThreeStateOff1_BeginStoryboard" Storyboard="{StaticResource IndeterminateOff}" />
                </MultiTrigger.ExitActions>
                <Setter Property="Visibility" TargetName="CheckIcon" Value="Hidden" />
            </MultiTrigger>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource CheckedFalse}" x:Name="CheckedTrue_BeginStoryboard" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="CheckedTrue_BeginStoryboard1" Storyboard="{StaticResource CheckedTrue}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Background" />
                <Setter Property="Stroke" Value="{DynamicResource DisabledBorderBrush}" TargetName="Background" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                <Setter Property="Opacity" TargetName="bulletDecorator" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="NuclearScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" />
                        <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" AutomationProperties.AutomationId="HorizontalScrollBar" />
                        <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Orientation="Vertical" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" AutomationProperties.AutomationId="VerticalScrollBar" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{DynamicResource ComboBoxTemplate}" />
    </Style>
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="grid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <!--<Rectangle Grid.ColumnSpan="2" HorizontalAlignment="Stretch" x:Name="Rectangle" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="3" RadiusY="3" Fill="{DynamicResource LightBrush}" Stroke="{DynamicResource NormalBorderBrush}" />-->
            <!--<Rectangle Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="3" RadiusY="3" Fill="{DynamicResource LightBrush}" Stroke="{DynamicResource NormalBorderBrush}" />-->
            <Border Margin="2,2,2,2" Grid.Column="1" Background="{DynamicResource NormalBrush}" CornerRadius="3,3,3,3" x:Name="border" />
            <Border Margin="2,2,2,2" Background="{DynamicResource HoverBrush}" CornerRadius="3,3,3,3" x:Name="HoverBorder" Grid.Column="1" Opacity="0" />
            <Border Margin="2,2,2,2" Background="{DynamicResource HoverShineBrush}" CornerRadius="3,3,3,3" x:Name="HoverShineBorder" Grid.Column="1" Opacity="0" />
            <Path Grid.Column="1" HorizontalAlignment="Center" x:Name="Arrow" VerticalAlignment="Center" Fill="{x:Null}" Data="M0.5,0.5 L3,6.5 5.5,0.5" Stroke="{DynamicResource GlyphBrush}" Margin="5,0,5,0" Height="7" StrokeThickness="2" Stretch="Fill" />
            <Border Margin="2,2,2,2" Background="{DynamicResource ShineBrush}" CornerRadius="3,3,3,3" x:Name="ShineBorder" Grid.Column="1" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsChecked" Value="true" />
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                <Setter Property="Stroke" TargetName="Arrow" Value="{DynamicResource DisabledForegroundBrush}"/>
                <Setter Property="Background" TargetName="border" Value="{DynamicResource DisabledBorderBrush}"/>
                <Setter Property="Opacity" TargetName="grid" Value="0.8"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        <ControlTemplate.Triggers>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="grid">
            <ToggleButton Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
            <Border CornerRadius="2" BorderBrush="{DynamicResource ShineBrush}" BorderThickness="1" Margin="0,0,20,0" Padding="2" Background="{TemplateBinding Background}" >
                <ContentPresenter HorizontalAlignment="Stretch" Margin="0" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="True">
                    <Interactivity:Interaction.Triggers>
                        <Interactivity:EventTrigger EventName="MouseLeftButtonDown">
                            <Behaviors:SetPropertyAction PropertyName="IsDropDownOpen" TargetObject="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}}" PropertyValue="{Binding IsDropDownOpen, RelativeSource={RelativeSource AncestorType=ComboBox}, Converter={StaticResource NotConverter}}"/>
                        </Interactivity:EventTrigger>
                    </Interactivity:Interaction.Triggers>
                </ContentPresenter>
            </Border>
            <TextBox Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="{DynamicResource LightBrush}" IsReadOnly="{TemplateBinding IsReadOnly}" BorderBrush="{DynamicResource NormalBorderBrush}" Foreground="{DynamicResource TextBrush}" />
            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                    <Border x:Name="DropDownBorder" Background="{DynamicResource ControlBackgroundBrush}" CornerRadius="3,3,3,3" />
                    <ScrollViewer Margin="4,6,4,6" Style="{DynamicResource NuclearScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                    </ScrollViewer>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                <Setter Property="Opacity" TargetName="grid" Value="0.5" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
            <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                <Setter Property="Margin" Value="0,2,0,0" TargetName="DropDownBorder" />
            </Trigger>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox" />
                <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">

                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="HoverOff">

                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">

                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">

                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>

                        </Storyboard>

                    </ControlTemplate.Resources>
                    <Grid SnapsToDevicePixels="true" Margin="1,1,1,1">
                        <Rectangle x:Name="Background" IsHitTestVisible="False" Opacity="0.25" Fill="{StaticResource NormalBrush}" RadiusX="1" RadiusY="1" />
                        <Rectangle x:Name="HoverRectangle" IsHitTestVisible="False" Opacity="0" Fill="{DynamicResource HoverShineBrush}" RadiusX="1" RadiusY="1" />
                        <Rectangle x:Name="SelectedRectangle" IsHitTestVisible="False" Opacity="0" Fill="{DynamicResource ShineBrush}" RadiusX="1" RadiusY="1" />
                        <ContentPresenter Margin="5,2,0,2" x:Name="contentPresenter" VerticalAlignment="Center" />
                        <Rectangle x:Name="FocusVisualElement" Visibility="Collapsed" Stroke="{DynamicResource HoverShineBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard"/>
                            </MultiTrigger.ExitActions>
                                <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard"/>
                            </MultiTrigger.EnterActions>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Hyperlink">
        <Setter Property="Foreground" Value="#59C2FF"/>
        <Setter Property="FontFamily" Value="Segoe UI Mono"/>
        <Setter Property="TextDecorations" Value="Underline"/>
    </Style>
    <Style TargetType="{x:Type ListBox}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#EE595959" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey }" Color="#EE595959" />
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0" />
                    <GradientStop Color="#FF8399A9" Offset="0.375" />
                    <GradientStop Color="#FF718597" Offset="0.375" />
                    <GradientStop Color="#FF617584" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Background="Transparent" />
                        <ScrollViewer Margin="1" Style="{DynamicResource NuclearScrollViewer}" Focusable="false" Background="{x:Null}">
                            <StackPanel Margin="1,1,1,1" IsItemsHost="true" />
                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ListViewItem" x:Key="lvi">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <!--<Setter Property="Background" Value="{Binding DataContext.Matches, RelativeSource={RelativeSource Self}, Converter={StaticResource NumToColor}, ConverterParameter='5-10'}"/>-->
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="Black"></Setter>
                <Setter Property="Background" Value="White"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Black"></Setter>
                <Setter Property="Background" Value="Yellow"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Type GridViewColumnHeader}"
       TargetType="GridViewColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground"
          Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <Border Name="HeaderBorder"
            BorderThickness="0,1,0,1"
            BorderBrush="{StaticResource NormalBorderBrush}"
            Background="{StaticResource ShineBrush}"
            Padding="2,0,2,0">
                            <ContentPresenter Name="HeaderContent"
              Margin="0,0,0,1"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              RecognizesAccessKey="True"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="HeaderBorder"
                    Property="Background" Value="{StaticResource NormalBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="HeaderBorder"
                    Property="Background" Value="{StaticResource PressedBrush}"/>
                            <Setter TargetName="HeaderContent"
                    Property="Margin" Value="1,1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.7"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Fill="#60000000"
                Width="{TemplateBinding ActualWidth}"
                Height="{TemplateBinding ActualHeight}"/>
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Border Name="HeaderBorder"
              BorderThickness="0,1,0,1"
              BorderBrush="{StaticResource NormalBorderBrush}"
              Background="{StaticResource ShineBrush}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="NuclearListViewScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <GridViewHeaderRowPresenter DockPanel.Dock="Top" Focusable="False" Margin="2,0,2,0"
                Columns="{Binding Path=TemplatedParent.View.Columns,
                          RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderContainerStyle="{Binding
                             Path=TemplatedParent.View.ColumnHeaderContainerStyle,
                             RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderTemplate="{Binding
                             Path=TemplatedParent.View.ColumnHeaderTemplate,
                             RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderTemplateSelector="{Binding 
                             Path=TemplatedParent.View.ColumnHeaderTemplateSelector,
                             RelativeSource={RelativeSource TemplatedParent}}"
                AllowsColumnReorder="{Binding
                             Path=TemplatedParent.View.AllowsColumnReorder,
                             RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderContextMenu="{Binding
                             Path=TemplatedParent.View.ColumnHeaderContextMenu,
                             RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderToolTip="{Binding
                             Path=TemplatedParent.View.ColumnHeaderToolTip,
                             RelativeSource={RelativeSource TemplatedParent}}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <ScrollContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" />
                        </DockPanel>
                        <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" AutomationProperties.AutomationId="HorizontalScrollBar" />
                        <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Orientation="Vertical" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" AutomationProperties.AutomationId="VerticalScrollBar" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListView}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#EE595959" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey }" Color="#EE595959" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey }" Color="#FFFFFFFF" />
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource lvi}" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0" />
                    <GradientStop Color="#FF8399A9" Offset="0.375" />
                    <GradientStop Color="#FF718597" Offset="0.375" />
                    <GradientStop Color="#FF617584" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Background="Transparent" />
                        <ScrollViewer Margin="1" Style="{DynamicResource NuclearListViewScrollViewer}" Focusable="false" Background="{x:Null}">
                            <StackPanel Margin="1,1,1,1" IsItemsHost="true" />
                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBox" TargetType="{x:Type ListBox}" BasedOn="{StaticResource {x:Type ListBox}}">
    </Style>
    <Style x:Key="ListView" TargetType="{x:Type ListView}" BasedOn="{StaticResource {x:Type ListView}}">
    </Style>
</ResourceDictionary>