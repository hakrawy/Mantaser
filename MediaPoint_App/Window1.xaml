<Window x:Class="MediaPoint.App.Window1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        Title="MediaPoint" Closing="window_Closed"
        Icon="/Images/app.ico" Name="window" 
        Style="{DynamicResource WindowStyle}" Background="Black"
        xmlns:Attached="clr-namespace:MediaPoint.App.AttachedProperties"
        xmlns:Behaviors="clr-namespace:MediaPoint.App.Behaviors"
        xmlns:LayoutBehaviors="clr-namespace:Microsoft.Expression.Interactivity.Layout;assembly=Microsoft.Expression.Interactions"
        xmlns:controls="clr-namespace:MediaPoint.Controls;assembly=MediaPoint.Controls"
        xmlns:effects="clr-namespace:MediaPoint.App.Effects"
        xmlns:tb="clr-namespace:MediaPoint.Common.TaskbarNotification;assembly=MediaPoint.Common"
        MouseLeave="MediaPlayer_MouseLeave" Initialized="Window_Initialized" Loaded="Window_Loaded"
        WindowStartupLocation="CenterScreen" Visibility="Collapsed"
        xmlns:svl="clr-namespace:WPFSoundVisualizationLib;assembly=WPFSoundVisualizationLib"
        PreviewMouseMove="Window_PreviewMouseMove" SizeChanged="Window_SizeChanged"
        Activated="window_Activated" 
        StateChanged="OnStateChanged" IsVisibleChanged="OnIsVisibleChanged">
    <Window.Triggers>
        <EventTrigger
      RoutedEvent="tb:TaskbarIcon.TrayToolTipOpen"
      SourceName="trayIcon">
        </EventTrigger>
    </Window.Triggers>
    <Grid x:Name="Layout" AllowDrop="True">
        <tb:TaskbarIcon
          x:Name="trayIcon"
          VerticalAlignment="Top"
          IconSource="{Binding Path=Icon, ElementName=window, Mode=Default}"
          ContextMenu="{DynamicResource TrayContextMenu}"
          ToolTipText="Test"
          ForcedVisibility="true"
          MenuActivation="RightClick"
          PopupActivation="LeftClick"
          DoubleClickCommand="{Binding RestoreCommand}"
          DoubleClickCommandParameter="{Binding RelativeSource={RelativeSource Self}}"
          >
            <tb:TaskbarIcon.TrayPopup>
                <controls:Popup Style="{DynamicResource TrayPopup}" />
            </tb:TaskbarIcon.TrayPopup>
            <tb:TaskbarIcon.TrayToolTip>
                <controls:ToolTip InfoText="{Binding Player.Status}" Style="{DynamicResource TrayTooltip}"  />
            </tb:TaskbarIcon.TrayToolTip>
        </tb:TaskbarIcon>
        <controls:MainWindowContent Name="mainWindowContent" Focusable="False" Style="{DynamicResource MainWindowContent}">
                <Grid>
                    <controls:HidingOverlay x:Name="windowControls" Style="{DynamicResource HidingOverlay}">
                    </controls:HidingOverlay>

                    <Grid Name="visualContainer" RenderTransformOrigin="0.5,0.5" Style="{DynamicResource VideoContainer}">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform x:Name="scale" ScaleX="1.0" ScaleY="1.0" />
                                <RotateTransform x:Name="rotation" Angle="0" />
                                <SkewTransform CenterX="0.5" CenterY="0.5" AngleX="0" AngleY="0" x:Name="skew"></SkewTransform>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Grid Background="#00000000" x:Name="mediaPlayerContainer" >
                            <controls:MediaUriElement Focusable="False" x:Name="mediaPlayer" DataContext="{Binding Player}"
                                                    DeeperColor="{Binding IsDeeperColor}"
                                                    Stretch="Uniform"
                                                    AudioRenderer="{Binding Main.AudioRenderer}"
                                                    Source="{Binding Source}"
                                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                    VideoRenderer="EnhancedVideoRenderer"
                                                    LoadedBehavior="Manual"
                                                    HasVideo="{Binding HasVideo, Mode=OneWayToSource}"
                                                    SubtitlesStreams="{Binding EmbeddedSubtitleStreams, Mode=OneWayToSource}"
                                                    AudioStreams="{Binding AudioStreams, Mode=OneWayToSource}"
                                                    VideoStreams="{Binding VideoStreams, Mode=OneWayToSource}"
                                                    AudioRenderers="{Binding Main.AudioRenderers, Mode=OneWayToSource}"
                                                    SpeedRatio="{Binding Rate}"
                                                    IsPlaying="{Binding IsPaused, Converter={StaticResource NotConverter}, Mode=TwoWay}"
                                                    MediaOpened="MediaPlayer_MediaOpened"
                                                    MediaClosed="MediaPlayer_MediaClosed"
                                                    MediaEnded="MediaPlayer_MediaEnded"
                                                    MediaFailed="MediaPlayer_MediaFailed"
                                                    Volume="{Binding Volume, Converter={StaticResource LogarithmicConverter}, ConverterParameter=45000}"
                                                    MouseWheel="MediaPlayer_MouseWheel"
                                                    MouseLeftButtonUp="MediaPlayer_MouseLeftButtonUp"
                                                    MouseLeftButtonDown="MediaPlayer_MouseLeftButtonDown"
                                                    MediaPosition="{Binding MediaPosition, Mode=TwoWay}"
                                                    MediaDuration="{Binding MediaDuration, Mode=OneWayToSource}"
                                                    SubtitleFont="{Binding ElementName=mediaPlayerContainer, Path=DataContext.SubtitleFont.Font}"
                                                    SubtitleCharset="{Binding ElementName=mediaPlayerContainer, Path=DataContext.SubEncoding}"
                                                    SubtitleSize="{Binding ElementName=mediaPlayerContainer, Path=DataContext.SubtitleSize}"
                                                    SubtitleColor="{Binding ElementName=mediaPlayerContainer, Path=DataContext.SubtitleColor}"
                                                    SubtitleDelay="{Binding ElementName=mediaPlayerContainer, Path=DataContext.SubtitleDelay}"
                                                    SubtitleBold="{Binding ElementName=mediaPlayerContainer, Path=DataContext.SubtitleBold}"
                                                    Subtitle="{Binding SelectedSubtitle}"
                                                    Loop="{Binding Loop}">
                                <!--<controls:MediaUriElement.Effect>
                                    <effects:WaterEffect></effects:WaterEffect>
                                </controls:MediaUriElement.Effect>-->
                            </controls:MediaUriElement>
                        </Grid>
                        <!--<Canvas Name="canvas">
                            <Rectangle Name="rect" Fill="#33FFFF00" Focusable="False" IsHitTestVisible="False" RenderTransformOrigin="0.5,0.5" Stroke="Red" StrokeThickness="2">
                                <Rectangle.RenderTransform>
                                    <RotateTransform Angle="{Binding PlateAngle}"></RotateTransform>
                                </Rectangle.RenderTransform>
                                <Rectangle.Width>
                                    <MultiBinding Converter="{StaticResource PixelToPointConverter}" ConverterParameter="width">
                                        <Binding Path="PlateWidth"></Binding>
                                        <Binding Path="ActualWidth" ElementName="canvas"></Binding>
                                        <Binding Path="." ElementName="mediaPlayer"></Binding>
                                    </MultiBinding>
                                </Rectangle.Width>
                                <Rectangle.Height>
                                    <MultiBinding Converter="{StaticResource PixelToPointConverter}" ConverterParameter="height">
                                        <Binding Path="PlateHeight"></Binding>
                                        <Binding Path="ActualHeight" ElementName="canvas"></Binding>
                                        <Binding Path="." ElementName="mediaPlayer"></Binding>
                                    </MultiBinding>
                                </Rectangle.Height>
                                <Canvas.Left>
                                    <MultiBinding Converter="{StaticResource PixelToPointConverter}" ConverterParameter="width">
                                        <Binding Path="PlateLeft"></Binding>
                                        <Binding Path="ActualWidth" ElementName="canvas"></Binding>
                                        <Binding Path="." ElementName="mediaPlayer"></Binding>
                                    </MultiBinding>
                                </Canvas.Left>
                                <Canvas.Top>
                                    <MultiBinding Converter="{StaticResource PixelToPointConverter}" ConverterParameter="height">
                                        <Binding Path="PlateTop"></Binding>
                                        <Binding Path="ActualHeight" ElementName="canvas"></Binding>
                                        <Binding Path="." ElementName="mediaPlayer"></Binding>
                                    </MultiBinding>
                                </Canvas.Top>
                                <Rectangle.Style>
                                    <Style TargetType="Rectangle">
                                        <Setter Property="Opacity" Value="0"/>
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Resources>
                                            <ResourceDictionary>
                                                <DoubleAnimation x:Key="FadeIn" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
                                                <DoubleAnimation x:Key="FadeOut" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2"/>
                                                <ObjectAnimationUsingKeyFrames x:Key="FadeInVisibility" BeginTime="0:0:0"
                        Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames x:Key="FadeOutVisibility" BeginTime="0:0:0.2"
                        Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </ResourceDictionary>
                                        </Style.Resources>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ShowPlate}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <StaticResource ResourceKey="FadeIn"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <StaticResource ResourceKey="FadeOut"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                        </Canvas>-->
                    </Grid>

                    <controls:IMDbOverlay Focusable="False" x:Name="imdbOverlay" Style="{DynamicResource IMDbOverlay}">
                    </controls:IMDbOverlay>

                    <controls:OnlineSubs Focusable="False" x:Name="onlineSubs" Style="{DynamicResource OnlineSubs}">
                    </controls:OnlineSubs>

                    <controls:Visualizations Focusable="False" x:Name="visualizations" Style="{DynamicResource Visualizations}">
                    </controls:Visualizations>

                    <controls:Equalizer Focusable="False" x:Name="equalizer" Style="{DynamicResource Equalizer}">
                    </controls:Equalizer>

                    <controls:Playlist Focusable="False" x:Name="playlist" Style="{DynamicResource Playlist}">
                    </controls:Playlist>

                    <controls:Options Focusable="False" x:Name="options" Style="{DynamicResource Options}">
                    </controls:Options>

                    <controls:MediaControls FocusVisualStyle="{x:Null}" Focusable="True" x:Name="mediaControls" Style="{DynamicResource MediaControls}" Visibility="{Binding Player, Converter={StaticResource NotNullToVisibility}}">
                    </controls:MediaControls>

                    <controls:OSD Focusable="False" x:Name="osd" Style="{DynamicResource OSD}">
                    </controls:OSD>
                </Grid>
            </controls:MainWindowContent>

                <!--<Grid Name="plateGrid" HorizontalAlignment="Right" Width="265" VerticalAlignment="Top" MaxHeight="200" Margin="10,60,10,10" Attached:PanelBringToFrontOnClick.IsEnabled="True" >
                    <Behaviors:StylizedBehaviors.Behaviors>
                        <Behaviors:StylizedBehaviorCollection>
                            <Behaviors:DraggableBehavior IsDraggable="True" />
                            <Behaviors:PopupInWindow IsAutomatic="False" />
                            <Behaviors:MouseDragElementBehavior/>
                        </Behaviors:StylizedBehaviorCollection>
                    </Behaviors:StylizedBehaviors.Behaviors>
                    <Border Background="#bb444444" CornerRadius="7">
                        <Border Background="#bb000000" Style="{DynamicResource MenuOuterBorder}" Margin="1">
                            <Border Style="{DynamicResource MenuInnerBorder}">
                                <Grid>
                                    <Grid.Resources>
                                        <FrameworkElement x:Key="ProxyElement" DataContext="{Binding}"/>
                                        <FrameworkElement x:Key="ProxyElement2" DataContext="{Binding ElementName=platesLv}"/>
                                    </Grid.Resources>
                                    <ContentControl Visibility="Collapsed" Content="{StaticResource ProxyElement}"/>
                                    <ContentControl Visibility="Collapsed" Content="{StaticResource ProxyElement2}"/>
                                    <ListView Name="platesLv" Attached:ItemsControlDoubleClickMouseInputBinding.Enabled="true" Margin="3" ItemsSource="{Binding Plates}" Style="{DynamicResource ListView}" Attached:ListBoxBehavior.ScrollOnNewItem="true" SelectedItem="{Binding SelectedPlate}" BorderThickness="0">
                                        <ListView.Resources>
                                            <DataTemplate x:Key="HitCount">
                                                <TextBlock ToolTip="Frame count for this plate" VerticalAlignment="Center" HorizontalAlignment="Center" Text="#" />
                                            </DataTemplate>
                                            <DataTemplate x:Key="Plate">
                                                <TextBlock ToolTip="Plate OCR Text" VerticalAlignment="Center" HorizontalAlignment="Center" Text="Plate" />
                                            </DataTemplate>
                                            <DataTemplate x:Key="Conf">
                                                <TextBlock ToolTip="OCR Confidence" VerticalAlignment="Center" HorizontalAlignment="Center" Text="Conf" />
                                            </DataTemplate>
                                            <DataTemplate x:Key="CC">
                                                <TextBlock ToolTip="Country Code" VerticalAlignment="Center" HorizontalAlignment="Center" Text="CC" />
                                            </DataTemplate>
                                            <DataTemplate x:Key="CConf">
                                                <TextBlock ToolTip="Country confidence" VerticalAlignment="Center" HorizontalAlignment="Center" Text="CConf" />
                                            </DataTemplate>
                                        </ListView.Resources>
                                        <ListBox.InputBindings>
                                            <MouseBinding MouseAction="LeftDoubleClick"
                                                  Attached:InputBindingCommandSetter.Command="{Binding DataContext.SetTimeOnPlate, Source={StaticResource ProxyElement}}"
                                                  Attached:InputBindingCommandSetter.CommandParameter="{Binding DataContext.SelectedItem, Source={StaticResource ProxyElement2}}"/>
                                        </ListBox.InputBindings>
                                        <ListView.View>
                                            <GridView>
                                                <GridViewColumn Width="75" Header="Plate" HeaderTemplate="{StaticResource Plate}" DisplayMemberBinding="{Binding Text}" />
                                                <GridViewColumn Width="40" Header="Conf" HeaderTemplate="{StaticResource Conf}" DisplayMemberBinding="{Binding Confidence}" />
                                                <GridViewColumn Width="30" Header="CC" HeaderTemplate="{StaticResource CC}" DisplayMemberBinding="{Binding Nationality}" />
                                                <GridViewColumn Width="40" Header="CConf" HeaderTemplate="{StaticResource CConf}" DisplayMemberBinding="{Binding NationalityConfidence}" />
                                                <GridViewColumn Width="25" Header="#" HeaderTemplate="{StaticResource HitCount}" DisplayMemberBinding="{Binding Matches}" />
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                    <ToggleButton Style="{DynamicResource dockButton}" Grid.Column="0" 
																	Margin="0,-6,-6,0" Width="12" Height="12"
																	HorizontalAlignment="Right"
																	VerticalAlignment="Top" IsChecked="{Binding Path=(Behaviors:PopupInWindow.IsAutomatic), Mode=TwoWay, ElementName=plateGrid}" />
                                </Grid>
                            </Border>
                        </Border>
                    </Border>
                </Grid>-->

    </Grid>
</Window>
